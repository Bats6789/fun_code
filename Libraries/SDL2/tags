!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3f64f1fc/
ANativeWindow	SDL_syswm.h	/^typedef struct ANativeWindow ANativeWindow;$/;"	kind:t	typeref:struct:ANativeWindow
APIENTRY	SDL_opengl.h	/^#  define APIENTRY /;"	kind:d
APIENTRY	SDL_opengl.h	/^#define APIENTRY /;"	kind:d
APIENTRY	SDL_opengl_glext.h	/^#define APIENTRY$/;"	kind:d
APIENTRY	SDL_opengles.h	/^#define APIENTRY$/;"	kind:d
APIENTRY	SDL_opengles2.h	/^#define APIENTRY /;"	kind:d
APIENTRYP	SDL_opengl.h	/^#define APIENTRYP /;"	kind:d
APIENTRYP	SDL_opengl_glext.h	/^#define APIENTRYP /;"	kind:d
ASSERT_FAIL	SDL_test_assert.h	/^#define ASSERT_FAIL /;"	kind:d
ASSERT_PASS	SDL_test_assert.h	/^#define ASSERT_PASS /;"	kind:d
AUDIO_F32	SDL_audio.h	/^#define AUDIO_F32 /;"	kind:d
AUDIO_F32LSB	SDL_audio.h	/^#define AUDIO_F32LSB /;"	kind:d
AUDIO_F32MSB	SDL_audio.h	/^#define AUDIO_F32MSB /;"	kind:d
AUDIO_F32SYS	SDL_audio.h	/^#define AUDIO_F32SYS /;"	kind:d
AUDIO_S16	SDL_audio.h	/^#define AUDIO_S16 /;"	kind:d
AUDIO_S16LSB	SDL_audio.h	/^#define AUDIO_S16LSB /;"	kind:d
AUDIO_S16MSB	SDL_audio.h	/^#define AUDIO_S16MSB /;"	kind:d
AUDIO_S16SYS	SDL_audio.h	/^#define AUDIO_S16SYS /;"	kind:d
AUDIO_S32	SDL_audio.h	/^#define AUDIO_S32 /;"	kind:d
AUDIO_S32LSB	SDL_audio.h	/^#define AUDIO_S32LSB /;"	kind:d
AUDIO_S32MSB	SDL_audio.h	/^#define AUDIO_S32MSB /;"	kind:d
AUDIO_S32SYS	SDL_audio.h	/^#define AUDIO_S32SYS /;"	kind:d
AUDIO_S8	SDL_audio.h	/^#define AUDIO_S8 /;"	kind:d
AUDIO_U16	SDL_audio.h	/^#define AUDIO_U16 /;"	kind:d
AUDIO_U16LSB	SDL_audio.h	/^#define AUDIO_U16LSB /;"	kind:d
AUDIO_U16MSB	SDL_audio.h	/^#define AUDIO_U16MSB /;"	kind:d
AUDIO_U16SYS	SDL_audio.h	/^#define AUDIO_U16SYS /;"	kind:d
AUDIO_U8	SDL_audio.h	/^#define AUDIO_U8 /;"	kind:d
Aloss	SDL_pixels.h	/^    Uint8 Aloss;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Amask	SDL_pixels.h	/^    Uint32 Amask;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
Ashift	SDL_pixels.h	/^    Uint8 Ashift;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
BitsPerPixel	SDL_pixels.h	/^    Uint8 BitsPerPixel;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Bloss	SDL_pixels.h	/^    Uint8 Bloss;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Bmask	SDL_pixels.h	/^    Uint32 Bmask;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
Bshift	SDL_pixels.h	/^    Uint8 Bshift;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
BytesPerPixel	SDL_pixels.h	/^    Uint8 BytesPerPixel;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
CRC32_POLY	SDL_test_crc32.h	/^ #define CRC32_POLY /;"	kind:d
C_LINKAGE	SDL_main.h	/^#define C_LINKAGE /;"	kind:d
C_LINKAGE	SDL_main.h	/^#define C_LINKAGE$/;"	kind:d
CrcUint32	SDL_test_crc32.h	/^ #define CrcUint32 /;"	kind:d
CrcUint8	SDL_test_crc32.h	/^ #define CrcUint8 /;"	kind:d
Cursor	SDL_syswm.h	/^#define Cursor /;"	kind:d
DECLSPEC	begin_code.h	/^#    define DECLSPEC /;"	kind:d
DECLSPEC	begin_code.h	/^#    define DECLSPEC$/;"	kind:d
DECLSPEC	begin_code.h	/^#   define DECLSPEC /;"	kind:d
DECLSPEC	begin_code.h	/^#   define DECLSPEC$/;"	kind:d
DECLSPEC	begin_code.h	/^#define DECLSPEC$/;"	kind:d
DEFAULT_WINDOW_HEIGHT	SDL_test_common.h	/^#define DEFAULT_WINDOW_HEIGHT /;"	kind:d
DEFAULT_WINDOW_WIDTH	SDL_test_common.h	/^#define DEFAULT_WINDOW_WIDTH /;"	kind:d
DUMMY_ENUM_VALUE	SDL_stdinc.h	/^    DUMMY_ENUM_VALUE$/;"	kind:e	enum:__anon055f46e20203	access:public
DWORD_PTR	SDL_config.h	/^#define DWORD_PTR /;"	kind:d
EGLAPI	SDL_egl.h	/^#define EGLAPI /;"	kind:d
EGLAPIENTRY	SDL_egl.h	/^#define EGLAPIENTRY /;"	kind:d
EGLAPIENTRYP	SDL_egl.h	/^#define EGLAPIENTRYP /;"	kind:d
EGLAttrib	SDL_egl.h	/^typedef intptr_t EGLAttrib;$/;"	kind:t	typeref:typename:intptr_t
EGLAttribKHR	SDL_egl.h	/^typedef intptr_t EGLAttribKHR;$/;"	kind:t	typeref:typename:intptr_t
EGLBoolean	SDL_egl.h	/^typedef unsigned int EGLBoolean;$/;"	kind:t	typeref:typename:unsigned int
EGLClientBuffer	SDL_egl.h	/^typedef void *EGLClientBuffer;$/;"	kind:t	typeref:typename:void *
EGLClientPixmapHI	SDL_egl.h	/^struct EGLClientPixmapHI {$/;"	kind:s
EGLClientPixmapHI::iHeight	SDL_egl.h	/^    EGLint iHeight;$/;"	kind:m	struct:EGLClientPixmapHI	typeref:typename:EGLint	access:public
EGLClientPixmapHI::iStride	SDL_egl.h	/^    EGLint iStride;$/;"	kind:m	struct:EGLClientPixmapHI	typeref:typename:EGLint	access:public
EGLClientPixmapHI::iWidth	SDL_egl.h	/^    EGLint iWidth;$/;"	kind:m	struct:EGLClientPixmapHI	typeref:typename:EGLint	access:public
EGLClientPixmapHI::pData	SDL_egl.h	/^    void  *pData;$/;"	kind:m	struct:EGLClientPixmapHI	typeref:typename:void *	access:public
EGLConfig	SDL_egl.h	/^typedef void *EGLConfig;$/;"	kind:t	typeref:typename:void *
EGLContext	SDL_egl.h	/^typedef void *EGLContext;$/;"	kind:t	typeref:typename:void *
EGLDeviceEXT	SDL_egl.h	/^typedef void *EGLDeviceEXT;$/;"	kind:t	typeref:typename:void *
EGLDisplay	SDL_egl.h	/^typedef void *EGLDisplay;$/;"	kind:t	typeref:typename:void *
EGLGetBlobFuncANDROID	SDL_egl.h	/^typedef EGLsizeiANDROID (*EGLGetBlobFuncANDROID) (const void *key, EGLsizeiANDROID keySize, void/;"	kind:t	typeref:typename:EGLsizeiANDROID (*)(const void * key,EGLsizeiANDROID keySize,void * value,EGLsizeiANDROID valueSize)
EGLImage	SDL_egl.h	/^typedef void *EGLImage;$/;"	kind:t	typeref:typename:void *
EGLImageKHR	SDL_egl.h	/^typedef void *EGLImageKHR;$/;"	kind:t	typeref:typename:void *
EGLNativeDisplayType	SDL_egl.h	/^typedef Display *EGLNativeDisplayType;$/;"	kind:t	typeref:typename:Display *
EGLNativeDisplayType	SDL_egl.h	/^typedef HDC     EGLNativeDisplayType;$/;"	kind:t	typeref:typename:HDC
EGLNativeDisplayType	SDL_egl.h	/^typedef IUnknown * EGLNativeDisplayType;$/;"	kind:t	typeref:typename:IUnknown *
EGLNativeDisplayType	SDL_egl.h	/^typedef MirEGLNativeDisplayType EGLNativeDisplayType;$/;"	kind:t	typeref:typename:MirEGLNativeDisplayType
EGLNativeDisplayType	SDL_egl.h	/^typedef int   EGLNativeDisplayType;$/;"	kind:t	typeref:typename:int
EGLNativeDisplayType	SDL_egl.h	/^typedef struct gbm_device  *EGLNativeDisplayType;$/;"	kind:t	typeref:struct:gbm_device *
EGLNativeDisplayType	SDL_egl.h	/^typedef struct wl_display     *EGLNativeDisplayType;$/;"	kind:t	typeref:struct:wl_display *
EGLNativeDisplayType	SDL_egl.h	/^typedef void                        *EGLNativeDisplayType;$/;"	kind:t	typeref:typename:void *
EGLNativeDisplayType	SDL_egl.h	/^typedef void            *EGLNativeDisplayType;$/;"	kind:t	typeref:typename:void *
EGLNativeFileDescriptorKHR	SDL_egl.h	/^typedef int EGLNativeFileDescriptorKHR;$/;"	kind:t	typeref:typename:int
EGLNativePixmapType	SDL_egl.h	/^typedef HBITMAP EGLNativePixmapType;$/;"	kind:t	typeref:typename:HBITMAP
EGLNativePixmapType	SDL_egl.h	/^typedef IUnknown * EGLNativePixmapType;$/;"	kind:t	typeref:typename:IUnknown *
EGLNativePixmapType	SDL_egl.h	/^typedef Pixmap   EGLNativePixmapType;$/;"	kind:t	typeref:typename:Pixmap
EGLNativePixmapType	SDL_egl.h	/^typedef khronos_uintptr_t EGLNativePixmapType;$/;"	kind:t	typeref:typename:khronos_uintptr_t
EGLNativePixmapType	SDL_egl.h	/^typedef struct egl_native_pixmap_t  *EGLNativePixmapType;$/;"	kind:t	typeref:struct:egl_native_pixmap_t *
EGLNativePixmapType	SDL_egl.h	/^typedef struct gbm_bo      *EGLNativePixmapType;$/;"	kind:t	typeref:struct:gbm_bo *
EGLNativePixmapType	SDL_egl.h	/^typedef struct wl_egl_pixmap  *EGLNativePixmapType;$/;"	kind:t	typeref:struct:wl_egl_pixmap *
EGLNativePixmapType	SDL_egl.h	/^typedef void                   *EGLNativePixmapType;$/;"	kind:t	typeref:typename:void *
EGLNativePixmapType	SDL_egl.h	/^typedef void *EGLNativePixmapType;$/;"	kind:t	typeref:typename:void *
EGLNativeWindowType	SDL_egl.h	/^typedef HWND    EGLNativeWindowType;$/;"	kind:t	typeref:typename:HWND
EGLNativeWindowType	SDL_egl.h	/^typedef IUnknown * EGLNativeWindowType;$/;"	kind:t	typeref:typename:IUnknown *
EGLNativeWindowType	SDL_egl.h	/^typedef MirEGLNativeWindowType  EGLNativeWindowType;$/;"	kind:t	typeref:typename:MirEGLNativeWindowType
EGLNativeWindowType	SDL_egl.h	/^typedef Window   EGLNativeWindowType;$/;"	kind:t	typeref:typename:Window
EGLNativeWindowType	SDL_egl.h	/^typedef khronos_uintptr_t EGLNativeWindowType;$/;"	kind:t	typeref:typename:khronos_uintptr_t
EGLNativeWindowType	SDL_egl.h	/^typedef struct ANativeWindow        *EGLNativeWindowType;$/;"	kind:t	typeref:struct:ANativeWindow *
EGLNativeWindowType	SDL_egl.h	/^typedef struct wl_egl_window  *EGLNativeWindowType;$/;"	kind:t	typeref:struct:wl_egl_window *
EGLNativeWindowType	SDL_egl.h	/^typedef void               *EGLNativeWindowType;$/;"	kind:t	typeref:typename:void *
EGLNativeWindowType	SDL_egl.h	/^typedef void *EGLNativeWindowType;$/;"	kind:t	typeref:typename:void *
EGLOutputLayerEXT	SDL_egl.h	/^typedef void *EGLOutputLayerEXT;$/;"	kind:t	typeref:typename:void *
EGLOutputPortEXT	SDL_egl.h	/^typedef void *EGLOutputPortEXT;$/;"	kind:t	typeref:typename:void *
EGLSetBlobFuncANDROID	SDL_egl.h	/^typedef void (*EGLSetBlobFuncANDROID) (const void *key, EGLsizeiANDROID keySize, const void *val/;"	kind:t	typeref:typename:void (*)(const void * key,EGLsizeiANDROID keySize,const void * value,EGLsizeiANDROID valueSize)
EGLStreamKHR	SDL_egl.h	/^typedef void *EGLStreamKHR;$/;"	kind:t	typeref:typename:void *
EGLSurface	SDL_egl.h	/^typedef void *EGLSurface;$/;"	kind:t	typeref:typename:void *
EGLSurface	SDL_syswm.h	/^typedef void *EGLSurface;$/;"	kind:t	typeref:typename:void *
EGLSync	SDL_egl.h	/^typedef void *EGLSync;$/;"	kind:t	typeref:typename:void *
EGLSyncKHR	SDL_egl.h	/^typedef void *EGLSyncKHR;$/;"	kind:t	typeref:typename:void *
EGLSyncNV	SDL_egl.h	/^typedef void *EGLSyncNV;$/;"	kind:t	typeref:typename:void *
EGLTime	SDL_egl.h	/^typedef khronos_utime_nanoseconds_t EGLTime;$/;"	kind:t	typeref:typename:khronos_utime_nanoseconds_t
EGLTimeKHR	SDL_egl.h	/^typedef khronos_utime_nanoseconds_t EGLTimeKHR;$/;"	kind:t	typeref:typename:khronos_utime_nanoseconds_t
EGLTimeNV	SDL_egl.h	/^typedef khronos_utime_nanoseconds_t EGLTimeNV;$/;"	kind:t	typeref:typename:khronos_utime_nanoseconds_t
EGL_ALPHA_FORMAT	SDL_egl.h	/^#define EGL_ALPHA_FORMAT /;"	kind:d
EGL_ALPHA_FORMAT_NONPRE	SDL_egl.h	/^#define EGL_ALPHA_FORMAT_NONPRE /;"	kind:d
EGL_ALPHA_FORMAT_PRE	SDL_egl.h	/^#define EGL_ALPHA_FORMAT_PRE /;"	kind:d
EGL_ALPHA_MASK_SIZE	SDL_egl.h	/^#define EGL_ALPHA_MASK_SIZE /;"	kind:d
EGL_ALPHA_SIZE	SDL_egl.h	/^#define EGL_ALPHA_SIZE /;"	kind:d
EGL_ALREADY_SIGNALED_NV	SDL_egl.h	/^#define EGL_ALREADY_SIGNALED_NV /;"	kind:d
EGL_ANDROID_blob_cache	SDL_egl.h	/^#define EGL_ANDROID_blob_cache /;"	kind:d
EGL_ANDROID_framebuffer_target	SDL_egl.h	/^#define EGL_ANDROID_framebuffer_target /;"	kind:d
EGL_ANDROID_image_native_buffer	SDL_egl.h	/^#define EGL_ANDROID_image_native_buffer /;"	kind:d
EGL_ANDROID_native_fence_sync	SDL_egl.h	/^#define EGL_ANDROID_native_fence_sync /;"	kind:d
EGL_ANDROID_recordable	SDL_egl.h	/^#define EGL_ANDROID_recordable /;"	kind:d
EGL_ANGLE_d3d_share_handle_client_buffer	SDL_egl.h	/^#define EGL_ANGLE_d3d_share_handle_client_buffer /;"	kind:d
EGL_ANGLE_device_d3d	SDL_egl.h	/^#define EGL_ANGLE_device_d3d /;"	kind:d
EGL_ANGLE_query_surface_pointer	SDL_egl.h	/^#define EGL_ANGLE_query_surface_pointer /;"	kind:d
EGL_ANGLE_surface_d3d_texture_2d_share_handle	SDL_egl.h	/^#define EGL_ANGLE_surface_d3d_texture_2d_share_handle /;"	kind:d
EGL_ANGLE_window_fixed_size	SDL_egl.h	/^#define EGL_ANGLE_window_fixed_size /;"	kind:d
EGL_ARM_pixmap_multisample_discard	SDL_egl.h	/^#define EGL_ARM_pixmap_multisample_discard /;"	kind:d
EGL_AUTO_STEREO_NV	SDL_egl.h	/^#define EGL_AUTO_STEREO_NV /;"	kind:d
EGL_BACK_BUFFER	SDL_egl.h	/^#define EGL_BACK_BUFFER /;"	kind:d
EGL_BAD_ACCESS	SDL_egl.h	/^#define EGL_BAD_ACCESS /;"	kind:d
EGL_BAD_ALLOC	SDL_egl.h	/^#define EGL_BAD_ALLOC /;"	kind:d
EGL_BAD_ATTRIBUTE	SDL_egl.h	/^#define EGL_BAD_ATTRIBUTE /;"	kind:d
EGL_BAD_CONFIG	SDL_egl.h	/^#define EGL_BAD_CONFIG /;"	kind:d
EGL_BAD_CONTEXT	SDL_egl.h	/^#define EGL_BAD_CONTEXT /;"	kind:d
EGL_BAD_CURRENT_SURFACE	SDL_egl.h	/^#define EGL_BAD_CURRENT_SURFACE /;"	kind:d
EGL_BAD_DEVICE_EXT	SDL_egl.h	/^#define EGL_BAD_DEVICE_EXT /;"	kind:d
EGL_BAD_DISPLAY	SDL_egl.h	/^#define EGL_BAD_DISPLAY /;"	kind:d
EGL_BAD_MATCH	SDL_egl.h	/^#define EGL_BAD_MATCH /;"	kind:d
EGL_BAD_NATIVE_PIXMAP	SDL_egl.h	/^#define EGL_BAD_NATIVE_PIXMAP /;"	kind:d
EGL_BAD_NATIVE_WINDOW	SDL_egl.h	/^#define EGL_BAD_NATIVE_WINDOW /;"	kind:d
EGL_BAD_OUTPUT_LAYER_EXT	SDL_egl.h	/^#define EGL_BAD_OUTPUT_LAYER_EXT /;"	kind:d
EGL_BAD_OUTPUT_PORT_EXT	SDL_egl.h	/^#define EGL_BAD_OUTPUT_PORT_EXT /;"	kind:d
EGL_BAD_PARAMETER	SDL_egl.h	/^#define EGL_BAD_PARAMETER /;"	kind:d
EGL_BAD_STATE_KHR	SDL_egl.h	/^#define EGL_BAD_STATE_KHR /;"	kind:d
EGL_BAD_STREAM_KHR	SDL_egl.h	/^#define EGL_BAD_STREAM_KHR /;"	kind:d
EGL_BAD_SURFACE	SDL_egl.h	/^#define EGL_BAD_SURFACE /;"	kind:d
EGL_BIND_TO_TEXTURE_RGB	SDL_egl.h	/^#define EGL_BIND_TO_TEXTURE_RGB /;"	kind:d
EGL_BIND_TO_TEXTURE_RGBA	SDL_egl.h	/^#define EGL_BIND_TO_TEXTURE_RGBA /;"	kind:d
EGL_BITMAP_ORIGIN_KHR	SDL_egl.h	/^#define EGL_BITMAP_ORIGIN_KHR /;"	kind:d
EGL_BITMAP_PITCH_KHR	SDL_egl.h	/^#define EGL_BITMAP_PITCH_KHR /;"	kind:d
EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR	SDL_egl.h	/^#define EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR /;"	kind:d
EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR	SDL_egl.h	/^#define EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR /;"	kind:d
EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR	SDL_egl.h	/^#define EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR /;"	kind:d
EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR	SDL_egl.h	/^#define EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR /;"	kind:d
EGL_BITMAP_PIXEL_RED_OFFSET_KHR	SDL_egl.h	/^#define EGL_BITMAP_PIXEL_RED_OFFSET_KHR /;"	kind:d
EGL_BITMAP_PIXEL_SIZE_KHR	SDL_egl.h	/^#define EGL_BITMAP_PIXEL_SIZE_KHR /;"	kind:d
EGL_BITMAP_POINTER_KHR	SDL_egl.h	/^#define EGL_BITMAP_POINTER_KHR /;"	kind:d
EGL_BLUE_SIZE	SDL_egl.h	/^#define EGL_BLUE_SIZE /;"	kind:d
EGL_BUFFER_AGE_EXT	SDL_egl.h	/^#define EGL_BUFFER_AGE_EXT /;"	kind:d
EGL_BUFFER_AGE_KHR	SDL_egl.h	/^#define EGL_BUFFER_AGE_KHR /;"	kind:d
EGL_BUFFER_DESTROYED	SDL_egl.h	/^#define EGL_BUFFER_DESTROYED /;"	kind:d
EGL_BUFFER_PRESERVED	SDL_egl.h	/^#define EGL_BUFFER_PRESERVED /;"	kind:d
EGL_BUFFER_SIZE	SDL_egl.h	/^#define EGL_BUFFER_SIZE /;"	kind:d
EGL_CLIENT_APIS	SDL_egl.h	/^#define EGL_CLIENT_APIS /;"	kind:d
EGL_CLIENT_PIXMAP_POINTER_HI	SDL_egl.h	/^#define EGL_CLIENT_PIXMAP_POINTER_HI /;"	kind:d
EGL_CL_EVENT_HANDLE	SDL_egl.h	/^#define EGL_CL_EVENT_HANDLE /;"	kind:d
EGL_CL_EVENT_HANDLE_KHR	SDL_egl.h	/^#define EGL_CL_EVENT_HANDLE_KHR /;"	kind:d
EGL_COLORSPACE	SDL_egl.h	/^#define EGL_COLORSPACE /;"	kind:d
EGL_COLORSPACE_LINEAR	SDL_egl.h	/^#define EGL_COLORSPACE_LINEAR /;"	kind:d
EGL_COLORSPACE_sRGB	SDL_egl.h	/^#define EGL_COLORSPACE_sRGB /;"	kind:d
EGL_COLOR_ARGB_HI	SDL_egl.h	/^#define EGL_COLOR_ARGB_HI /;"	kind:d
EGL_COLOR_BUFFER_TYPE	SDL_egl.h	/^#define EGL_COLOR_BUFFER_TYPE /;"	kind:d
EGL_COLOR_FORMAT_HI	SDL_egl.h	/^#define EGL_COLOR_FORMAT_HI /;"	kind:d
EGL_COLOR_RGBA_HI	SDL_egl.h	/^#define EGL_COLOR_RGBA_HI /;"	kind:d
EGL_COLOR_RGB_HI	SDL_egl.h	/^#define EGL_COLOR_RGB_HI /;"	kind:d
EGL_CONDITION_SATISFIED	SDL_egl.h	/^#define EGL_CONDITION_SATISFIED /;"	kind:d
EGL_CONDITION_SATISFIED_KHR	SDL_egl.h	/^#define EGL_CONDITION_SATISFIED_KHR /;"	kind:d
EGL_CONDITION_SATISFIED_NV	SDL_egl.h	/^#define EGL_CONDITION_SATISFIED_NV /;"	kind:d
EGL_CONFIG_CAVEAT	SDL_egl.h	/^#define EGL_CONFIG_CAVEAT /;"	kind:d
EGL_CONFIG_ID	SDL_egl.h	/^#define EGL_CONFIG_ID /;"	kind:d
EGL_CONFORMANT	SDL_egl.h	/^#define EGL_CONFORMANT /;"	kind:d
EGL_CONFORMANT_KHR	SDL_egl.h	/^#define EGL_CONFORMANT_KHR /;"	kind:d
EGL_CONSUMER_ACQUIRE_TIMEOUT_USEC_KHR	SDL_egl.h	/^#define EGL_CONSUMER_ACQUIRE_TIMEOUT_USEC_KHR /;"	kind:d
EGL_CONSUMER_FRAME_KHR	SDL_egl.h	/^#define EGL_CONSUMER_FRAME_KHR /;"	kind:d
EGL_CONSUMER_LATENCY_USEC_KHR	SDL_egl.h	/^#define EGL_CONSUMER_LATENCY_USEC_KHR /;"	kind:d
EGL_CONTEXT_CLIENT_TYPE	SDL_egl.h	/^#define EGL_CONTEXT_CLIENT_TYPE /;"	kind:d
EGL_CONTEXT_CLIENT_VERSION	SDL_egl.h	/^#define EGL_CONTEXT_CLIENT_VERSION /;"	kind:d
EGL_CONTEXT_FLAGS_KHR	SDL_egl.h	/^#define EGL_CONTEXT_FLAGS_KHR /;"	kind:d
EGL_CONTEXT_LOST	SDL_egl.h	/^#define EGL_CONTEXT_LOST /;"	kind:d
EGL_CONTEXT_MAJOR_VERSION	SDL_egl.h	/^#define EGL_CONTEXT_MAJOR_VERSION /;"	kind:d
EGL_CONTEXT_MAJOR_VERSION_KHR	SDL_egl.h	/^#define EGL_CONTEXT_MAJOR_VERSION_KHR /;"	kind:d
EGL_CONTEXT_MINOR_VERSION	SDL_egl.h	/^#define EGL_CONTEXT_MINOR_VERSION /;"	kind:d
EGL_CONTEXT_MINOR_VERSION_KHR	SDL_egl.h	/^#define EGL_CONTEXT_MINOR_VERSION_KHR /;"	kind:d
EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT /;"	kind:d
EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR /;"	kind:d
EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT /;"	kind:d
EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR /;"	kind:d
EGL_CONTEXT_OPENGL_DEBUG	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_DEBUG /;"	kind:d
EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR /;"	kind:d
EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE /;"	kind:d
EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR /;"	kind:d
EGL_CONTEXT_OPENGL_NO_ERROR_KHR	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_NO_ERROR_KHR /;"	kind:d
EGL_CONTEXT_OPENGL_PROFILE_MASK	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_PROFILE_MASK /;"	kind:d
EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR /;"	kind:d
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY /;"	kind:d
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT /;"	kind:d
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR /;"	kind:d
EGL_CONTEXT_OPENGL_ROBUST_ACCESS	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_ROBUST_ACCESS /;"	kind:d
EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR /;"	kind:d
EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT	SDL_egl.h	/^#define EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT /;"	kind:d
EGL_CONTEXT_PRIORITY_HIGH_IMG	SDL_egl.h	/^#define EGL_CONTEXT_PRIORITY_HIGH_IMG /;"	kind:d
EGL_CONTEXT_PRIORITY_LEVEL_IMG	SDL_egl.h	/^#define EGL_CONTEXT_PRIORITY_LEVEL_IMG /;"	kind:d
EGL_CONTEXT_PRIORITY_LOW_IMG	SDL_egl.h	/^#define EGL_CONTEXT_PRIORITY_LOW_IMG /;"	kind:d
EGL_CONTEXT_PRIORITY_MEDIUM_IMG	SDL_egl.h	/^#define EGL_CONTEXT_PRIORITY_MEDIUM_IMG /;"	kind:d
EGL_CORE_NATIVE_ENGINE	SDL_egl.h	/^#define EGL_CORE_NATIVE_ENGINE /;"	kind:d
EGL_COVERAGE_BUFFERS_NV	SDL_egl.h	/^#define EGL_COVERAGE_BUFFERS_NV /;"	kind:d
EGL_COVERAGE_SAMPLES_NV	SDL_egl.h	/^#define EGL_COVERAGE_SAMPLES_NV /;"	kind:d
EGL_COVERAGE_SAMPLE_RESOLVE_DEFAULT_NV	SDL_egl.h	/^#define EGL_COVERAGE_SAMPLE_RESOLVE_DEFAULT_NV /;"	kind:d
EGL_COVERAGE_SAMPLE_RESOLVE_NONE_NV	SDL_egl.h	/^#define EGL_COVERAGE_SAMPLE_RESOLVE_NONE_NV /;"	kind:d
EGL_COVERAGE_SAMPLE_RESOLVE_NV	SDL_egl.h	/^#define EGL_COVERAGE_SAMPLE_RESOLVE_NV /;"	kind:d
EGL_CUDA_DEVICE_NV	SDL_egl.h	/^#define EGL_CUDA_DEVICE_NV /;"	kind:d
EGL_CUDA_EVENT_HANDLE_NV	SDL_egl.h	/^#define EGL_CUDA_EVENT_HANDLE_NV /;"	kind:d
EGL_D3D11_DEVICE_ANGLE	SDL_egl.h	/^#define EGL_D3D11_DEVICE_ANGLE /;"	kind:d
EGL_D3D9_DEVICE_ANGLE	SDL_egl.h	/^#define EGL_D3D9_DEVICE_ANGLE /;"	kind:d
EGL_D3D_TEXTURE_2D_SHARE_HANDLE_ANGLE	SDL_egl.h	/^#define EGL_D3D_TEXTURE_2D_SHARE_HANDLE_ANGLE /;"	kind:d
EGL_DEFAULT_DISPLAY	SDL_egl.h	/^#define EGL_DEFAULT_DISPLAY /;"	kind:d
EGL_DEPTH_ENCODING_NONE_NV	SDL_egl.h	/^#define EGL_DEPTH_ENCODING_NONE_NV /;"	kind:d
EGL_DEPTH_ENCODING_NONLINEAR_NV	SDL_egl.h	/^#define EGL_DEPTH_ENCODING_NONLINEAR_NV /;"	kind:d
EGL_DEPTH_ENCODING_NV	SDL_egl.h	/^#define EGL_DEPTH_ENCODING_NV /;"	kind:d
EGL_DEPTH_SIZE	SDL_egl.h	/^#define EGL_DEPTH_SIZE /;"	kind:d
EGL_DEVICE_EXT	SDL_egl.h	/^#define EGL_DEVICE_EXT /;"	kind:d
EGL_DISCARD_SAMPLES_ARM	SDL_egl.h	/^#define EGL_DISCARD_SAMPLES_ARM /;"	kind:d
EGL_DISPLAY_SCALING	SDL_egl.h	/^#define EGL_DISPLAY_SCALING /;"	kind:d
EGL_DMA_BUF_PLANE0_FD_EXT	SDL_egl.h	/^#define EGL_DMA_BUF_PLANE0_FD_EXT /;"	kind:d
EGL_DMA_BUF_PLANE0_OFFSET_EXT	SDL_egl.h	/^#define EGL_DMA_BUF_PLANE0_OFFSET_EXT /;"	kind:d
EGL_DMA_BUF_PLANE0_PITCH_EXT	SDL_egl.h	/^#define EGL_DMA_BUF_PLANE0_PITCH_EXT /;"	kind:d
EGL_DMA_BUF_PLANE1_FD_EXT	SDL_egl.h	/^#define EGL_DMA_BUF_PLANE1_FD_EXT /;"	kind:d
EGL_DMA_BUF_PLANE1_OFFSET_EXT	SDL_egl.h	/^#define EGL_DMA_BUF_PLANE1_OFFSET_EXT /;"	kind:d
EGL_DMA_BUF_PLANE1_PITCH_EXT	SDL_egl.h	/^#define EGL_DMA_BUF_PLANE1_PITCH_EXT /;"	kind:d
EGL_DMA_BUF_PLANE2_FD_EXT	SDL_egl.h	/^#define EGL_DMA_BUF_PLANE2_FD_EXT /;"	kind:d
EGL_DMA_BUF_PLANE2_OFFSET_EXT	SDL_egl.h	/^#define EGL_DMA_BUF_PLANE2_OFFSET_EXT /;"	kind:d
EGL_DMA_BUF_PLANE2_PITCH_EXT	SDL_egl.h	/^#define EGL_DMA_BUF_PLANE2_PITCH_EXT /;"	kind:d
EGL_DONT_CARE	SDL_egl.h	/^#define EGL_DONT_CARE /;"	kind:d
EGL_DRAW	SDL_egl.h	/^#define EGL_DRAW /;"	kind:d
EGL_DRM_BUFFER_FORMAT_ARGB32_MESA	SDL_egl.h	/^#define EGL_DRM_BUFFER_FORMAT_ARGB32_MESA /;"	kind:d
EGL_DRM_BUFFER_FORMAT_MESA	SDL_egl.h	/^#define EGL_DRM_BUFFER_FORMAT_MESA /;"	kind:d
EGL_DRM_BUFFER_MESA	SDL_egl.h	/^#define EGL_DRM_BUFFER_MESA /;"	kind:d
EGL_DRM_BUFFER_STRIDE_MESA	SDL_egl.h	/^#define EGL_DRM_BUFFER_STRIDE_MESA /;"	kind:d
EGL_DRM_BUFFER_USE_MESA	SDL_egl.h	/^#define EGL_DRM_BUFFER_USE_MESA /;"	kind:d
EGL_DRM_BUFFER_USE_SCANOUT_MESA	SDL_egl.h	/^#define EGL_DRM_BUFFER_USE_SCANOUT_MESA /;"	kind:d
EGL_DRM_BUFFER_USE_SHARE_MESA	SDL_egl.h	/^#define EGL_DRM_BUFFER_USE_SHARE_MESA /;"	kind:d
EGL_DRM_CONNECTOR_EXT	SDL_egl.h	/^#define EGL_DRM_CONNECTOR_EXT /;"	kind:d
EGL_DRM_CRTC_EXT	SDL_egl.h	/^#define EGL_DRM_CRTC_EXT /;"	kind:d
EGL_DRM_DEVICE_FILE_EXT	SDL_egl.h	/^#define EGL_DRM_DEVICE_FILE_EXT /;"	kind:d
EGL_DRM_PLANE_EXT	SDL_egl.h	/^#define EGL_DRM_PLANE_EXT /;"	kind:d
EGL_EGLEXT_VERSION	SDL_egl.h	/^#define EGL_EGLEXT_VERSION /;"	kind:d
EGL_EXTENSIONS	SDL_egl.h	/^#define EGL_EXTENSIONS /;"	kind:d
EGL_EXT_buffer_age	SDL_egl.h	/^#define EGL_EXT_buffer_age /;"	kind:d
EGL_EXT_client_extensions	SDL_egl.h	/^#define EGL_EXT_client_extensions /;"	kind:d
EGL_EXT_create_context_robustness	SDL_egl.h	/^#define EGL_EXT_create_context_robustness /;"	kind:d
EGL_EXT_device_base	SDL_egl.h	/^#define EGL_EXT_device_base /;"	kind:d
EGL_EXT_device_drm	SDL_egl.h	/^#define EGL_EXT_device_drm /;"	kind:d
EGL_EXT_device_enumeration	SDL_egl.h	/^#define EGL_EXT_device_enumeration /;"	kind:d
EGL_EXT_device_openwf	SDL_egl.h	/^#define EGL_EXT_device_openwf /;"	kind:d
EGL_EXT_device_query	SDL_egl.h	/^#define EGL_EXT_device_query /;"	kind:d
EGL_EXT_image_dma_buf_import	SDL_egl.h	/^#define EGL_EXT_image_dma_buf_import /;"	kind:d
EGL_EXT_multiview_window	SDL_egl.h	/^#define EGL_EXT_multiview_window /;"	kind:d
EGL_EXT_output_base	SDL_egl.h	/^#define EGL_EXT_output_base /;"	kind:d
EGL_EXT_output_drm	SDL_egl.h	/^#define EGL_EXT_output_drm /;"	kind:d
EGL_EXT_output_openwf	SDL_egl.h	/^#define EGL_EXT_output_openwf /;"	kind:d
EGL_EXT_platform_base	SDL_egl.h	/^#define EGL_EXT_platform_base /;"	kind:d
EGL_EXT_platform_device	SDL_egl.h	/^#define EGL_EXT_platform_device /;"	kind:d
EGL_EXT_platform_wayland	SDL_egl.h	/^#define EGL_EXT_platform_wayland /;"	kind:d
EGL_EXT_platform_x11	SDL_egl.h	/^#define EGL_EXT_platform_x11 /;"	kind:d
EGL_EXT_protected_surface	SDL_egl.h	/^#define EGL_EXT_protected_surface /;"	kind:d
EGL_EXT_stream_consumer_egloutput	SDL_egl.h	/^#define EGL_EXT_stream_consumer_egloutput /;"	kind:d
EGL_EXT_swap_buffers_with_damage	SDL_egl.h	/^#define EGL_EXT_swap_buffers_with_damage /;"	kind:d
EGL_EXT_yuv_surface	SDL_egl.h	/^#define EGL_EXT_yuv_surface /;"	kind:d
EGL_FALSE	SDL_egl.h	/^#define EGL_FALSE /;"	kind:d
EGL_FIXED_SIZE_ANGLE	SDL_egl.h	/^#define EGL_FIXED_SIZE_ANGLE /;"	kind:d
EGL_FOREVER	SDL_egl.h	/^#define EGL_FOREVER /;"	kind:d
EGL_FOREVER_KHR	SDL_egl.h	/^#define EGL_FOREVER_KHR /;"	kind:d
EGL_FOREVER_NV	SDL_egl.h	/^#define EGL_FOREVER_NV /;"	kind:d
EGL_FORMAT_RGBA_8888_EXACT_KHR	SDL_egl.h	/^#define EGL_FORMAT_RGBA_8888_EXACT_KHR /;"	kind:d
EGL_FORMAT_RGBA_8888_KHR	SDL_egl.h	/^#define EGL_FORMAT_RGBA_8888_KHR /;"	kind:d
EGL_FORMAT_RGB_565_EXACT_KHR	SDL_egl.h	/^#define EGL_FORMAT_RGB_565_EXACT_KHR /;"	kind:d
EGL_FORMAT_RGB_565_KHR	SDL_egl.h	/^#define EGL_FORMAT_RGB_565_KHR /;"	kind:d
EGL_FRAMEBUFFER_TARGET_ANDROID	SDL_egl.h	/^#define EGL_FRAMEBUFFER_TARGET_ANDROID /;"	kind:d
EGL_GL_COLORSPACE	SDL_egl.h	/^#define EGL_GL_COLORSPACE /;"	kind:d
EGL_GL_COLORSPACE_KHR	SDL_egl.h	/^#define EGL_GL_COLORSPACE_KHR /;"	kind:d
EGL_GL_COLORSPACE_LINEAR	SDL_egl.h	/^#define EGL_GL_COLORSPACE_LINEAR /;"	kind:d
EGL_GL_COLORSPACE_LINEAR_KHR	SDL_egl.h	/^#define EGL_GL_COLORSPACE_LINEAR_KHR /;"	kind:d
EGL_GL_COLORSPACE_SRGB	SDL_egl.h	/^#define EGL_GL_COLORSPACE_SRGB /;"	kind:d
EGL_GL_COLORSPACE_SRGB_KHR	SDL_egl.h	/^#define EGL_GL_COLORSPACE_SRGB_KHR /;"	kind:d
EGL_GL_RENDERBUFFER	SDL_egl.h	/^#define EGL_GL_RENDERBUFFER /;"	kind:d
EGL_GL_RENDERBUFFER_KHR	SDL_egl.h	/^#define EGL_GL_RENDERBUFFER_KHR /;"	kind:d
EGL_GL_TEXTURE_2D	SDL_egl.h	/^#define EGL_GL_TEXTURE_2D /;"	kind:d
EGL_GL_TEXTURE_2D_KHR	SDL_egl.h	/^#define EGL_GL_TEXTURE_2D_KHR /;"	kind:d
EGL_GL_TEXTURE_3D	SDL_egl.h	/^#define EGL_GL_TEXTURE_3D /;"	kind:d
EGL_GL_TEXTURE_3D_KHR	SDL_egl.h	/^#define EGL_GL_TEXTURE_3D_KHR /;"	kind:d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X	SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	kind:d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR	SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR /;"	kind:d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	kind:d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR	SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR /;"	kind:d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	kind:d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR	SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR /;"	kind:d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X	SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	kind:d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR	SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR /;"	kind:d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y	SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	kind:d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR	SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR /;"	kind:d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z	SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	kind:d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR	SDL_egl.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR /;"	kind:d
EGL_GL_TEXTURE_LEVEL	SDL_egl.h	/^#define EGL_GL_TEXTURE_LEVEL /;"	kind:d
EGL_GL_TEXTURE_LEVEL_KHR	SDL_egl.h	/^#define EGL_GL_TEXTURE_LEVEL_KHR /;"	kind:d
EGL_GL_TEXTURE_ZOFFSET	SDL_egl.h	/^#define EGL_GL_TEXTURE_ZOFFSET /;"	kind:d
EGL_GL_TEXTURE_ZOFFSET_KHR	SDL_egl.h	/^#define EGL_GL_TEXTURE_ZOFFSET_KHR /;"	kind:d
EGL_GREEN_SIZE	SDL_egl.h	/^#define EGL_GREEN_SIZE /;"	kind:d
EGL_HEIGHT	SDL_egl.h	/^#define EGL_HEIGHT /;"	kind:d
EGL_HI_clientpixmap	SDL_egl.h	/^#define EGL_HI_clientpixmap /;"	kind:d
EGL_HI_colorformats	SDL_egl.h	/^#define EGL_HI_colorformats /;"	kind:d
EGL_HORIZONTAL_RESOLUTION	SDL_egl.h	/^#define EGL_HORIZONTAL_RESOLUTION /;"	kind:d
EGL_IMAGE_PRESERVED	SDL_egl.h	/^#define EGL_IMAGE_PRESERVED /;"	kind:d
EGL_IMAGE_PRESERVED_KHR	SDL_egl.h	/^#define EGL_IMAGE_PRESERVED_KHR /;"	kind:d
EGL_IMG_context_priority	SDL_egl.h	/^#define EGL_IMG_context_priority /;"	kind:d
EGL_ITU_REC2020_EXT	SDL_egl.h	/^#define EGL_ITU_REC2020_EXT /;"	kind:d
EGL_ITU_REC601_EXT	SDL_egl.h	/^#define EGL_ITU_REC601_EXT /;"	kind:d
EGL_ITU_REC709_EXT	SDL_egl.h	/^#define EGL_ITU_REC709_EXT /;"	kind:d
EGL_KHR_cl_event	SDL_egl.h	/^#define EGL_KHR_cl_event /;"	kind:d
EGL_KHR_cl_event2	SDL_egl.h	/^#define EGL_KHR_cl_event2 /;"	kind:d
EGL_KHR_client_get_all_proc_addresses	SDL_egl.h	/^#define EGL_KHR_client_get_all_proc_addresses /;"	kind:d
EGL_KHR_config_attribs	SDL_egl.h	/^#define EGL_KHR_config_attribs /;"	kind:d
EGL_KHR_create_context	SDL_egl.h	/^#define EGL_KHR_create_context /;"	kind:d
EGL_KHR_create_context_no_error	SDL_egl.h	/^#define EGL_KHR_create_context_no_error /;"	kind:d
EGL_KHR_fence_sync	SDL_egl.h	/^#define EGL_KHR_fence_sync /;"	kind:d
EGL_KHR_get_all_proc_addresses	SDL_egl.h	/^#define EGL_KHR_get_all_proc_addresses /;"	kind:d
EGL_KHR_gl_colorspace	SDL_egl.h	/^#define EGL_KHR_gl_colorspace /;"	kind:d
EGL_KHR_gl_renderbuffer_image	SDL_egl.h	/^#define EGL_KHR_gl_renderbuffer_image /;"	kind:d
EGL_KHR_gl_texture_2D_image	SDL_egl.h	/^#define EGL_KHR_gl_texture_2D_image /;"	kind:d
EGL_KHR_gl_texture_3D_image	SDL_egl.h	/^#define EGL_KHR_gl_texture_3D_image /;"	kind:d
EGL_KHR_gl_texture_cubemap_image	SDL_egl.h	/^#define EGL_KHR_gl_texture_cubemap_image /;"	kind:d
EGL_KHR_image	SDL_egl.h	/^#define EGL_KHR_image /;"	kind:d
EGL_KHR_image_base	SDL_egl.h	/^#define EGL_KHR_image_base /;"	kind:d
EGL_KHR_image_pixmap	SDL_egl.h	/^#define EGL_KHR_image_pixmap /;"	kind:d
EGL_KHR_lock_surface	SDL_egl.h	/^#define EGL_KHR_lock_surface /;"	kind:d
EGL_KHR_lock_surface2	SDL_egl.h	/^#define EGL_KHR_lock_surface2 /;"	kind:d
EGL_KHR_lock_surface3	SDL_egl.h	/^#define EGL_KHR_lock_surface3 /;"	kind:d
EGL_KHR_partial_update	SDL_egl.h	/^#define EGL_KHR_partial_update /;"	kind:d
EGL_KHR_platform_android	SDL_egl.h	/^#define EGL_KHR_platform_android /;"	kind:d
EGL_KHR_platform_gbm	SDL_egl.h	/^#define EGL_KHR_platform_gbm /;"	kind:d
EGL_KHR_platform_wayland	SDL_egl.h	/^#define EGL_KHR_platform_wayland /;"	kind:d
EGL_KHR_platform_x11	SDL_egl.h	/^#define EGL_KHR_platform_x11 /;"	kind:d
EGL_KHR_reusable_sync	SDL_egl.h	/^#define EGL_KHR_reusable_sync /;"	kind:d
EGL_KHR_stream	SDL_egl.h	/^#define EGL_KHR_stream /;"	kind:d
EGL_KHR_stream_consumer_gltexture	SDL_egl.h	/^#define EGL_KHR_stream_consumer_gltexture /;"	kind:d
EGL_KHR_stream_cross_process_fd	SDL_egl.h	/^#define EGL_KHR_stream_cross_process_fd /;"	kind:d
EGL_KHR_stream_fifo	SDL_egl.h	/^#define EGL_KHR_stream_fifo /;"	kind:d
EGL_KHR_stream_producer_aldatalocator	SDL_egl.h	/^#define EGL_KHR_stream_producer_aldatalocator /;"	kind:d
EGL_KHR_stream_producer_eglsurface	SDL_egl.h	/^#define EGL_KHR_stream_producer_eglsurface /;"	kind:d
EGL_KHR_surfaceless_context	SDL_egl.h	/^#define EGL_KHR_surfaceless_context /;"	kind:d
EGL_KHR_swap_buffers_with_damage	SDL_egl.h	/^#define EGL_KHR_swap_buffers_with_damage /;"	kind:d
EGL_KHR_vg_parent_image	SDL_egl.h	/^#define EGL_KHR_vg_parent_image /;"	kind:d
EGL_KHR_wait_sync	SDL_egl.h	/^#define EGL_KHR_wait_sync /;"	kind:d
EGL_LARGEST_PBUFFER	SDL_egl.h	/^#define EGL_LARGEST_PBUFFER /;"	kind:d
EGL_LEVEL	SDL_egl.h	/^#define EGL_LEVEL /;"	kind:d
EGL_LINUX_DMA_BUF_EXT	SDL_egl.h	/^#define EGL_LINUX_DMA_BUF_EXT /;"	kind:d
EGL_LINUX_DRM_FOURCC_EXT	SDL_egl.h	/^#define EGL_LINUX_DRM_FOURCC_EXT /;"	kind:d
EGL_LOCK_SURFACE_BIT_KHR	SDL_egl.h	/^#define EGL_LOCK_SURFACE_BIT_KHR /;"	kind:d
EGL_LOCK_USAGE_HINT_KHR	SDL_egl.h	/^#define EGL_LOCK_USAGE_HINT_KHR /;"	kind:d
EGL_LOSE_CONTEXT_ON_RESET	SDL_egl.h	/^#define EGL_LOSE_CONTEXT_ON_RESET /;"	kind:d
EGL_LOSE_CONTEXT_ON_RESET_EXT	SDL_egl.h	/^#define EGL_LOSE_CONTEXT_ON_RESET_EXT /;"	kind:d
EGL_LOSE_CONTEXT_ON_RESET_KHR	SDL_egl.h	/^#define EGL_LOSE_CONTEXT_ON_RESET_KHR /;"	kind:d
EGL_LOWER_LEFT_KHR	SDL_egl.h	/^#define EGL_LOWER_LEFT_KHR /;"	kind:d
EGL_LUMINANCE_BUFFER	SDL_egl.h	/^#define EGL_LUMINANCE_BUFFER /;"	kind:d
EGL_LUMINANCE_SIZE	SDL_egl.h	/^#define EGL_LUMINANCE_SIZE /;"	kind:d
EGL_MAP_PRESERVE_PIXELS_KHR	SDL_egl.h	/^#define EGL_MAP_PRESERVE_PIXELS_KHR /;"	kind:d
EGL_MATCH_FORMAT_KHR	SDL_egl.h	/^#define EGL_MATCH_FORMAT_KHR /;"	kind:d
EGL_MATCH_NATIVE_PIXMAP	SDL_egl.h	/^#define EGL_MATCH_NATIVE_PIXMAP /;"	kind:d
EGL_MAX_PBUFFER_HEIGHT	SDL_egl.h	/^#define EGL_MAX_PBUFFER_HEIGHT /;"	kind:d
EGL_MAX_PBUFFER_PIXELS	SDL_egl.h	/^#define EGL_MAX_PBUFFER_PIXELS /;"	kind:d
EGL_MAX_PBUFFER_WIDTH	SDL_egl.h	/^#define EGL_MAX_PBUFFER_WIDTH /;"	kind:d
EGL_MAX_SWAP_INTERVAL	SDL_egl.h	/^#define EGL_MAX_SWAP_INTERVAL /;"	kind:d
EGL_MESA_drm_image	SDL_egl.h	/^#define EGL_MESA_drm_image /;"	kind:d
EGL_MESA_image_dma_buf_export	SDL_egl.h	/^#define EGL_MESA_image_dma_buf_export /;"	kind:d
EGL_MESA_platform_gbm	SDL_egl.h	/^#define EGL_MESA_platform_gbm /;"	kind:d
EGL_MIN_SWAP_INTERVAL	SDL_egl.h	/^#define EGL_MIN_SWAP_INTERVAL /;"	kind:d
EGL_MIPMAP_LEVEL	SDL_egl.h	/^#define EGL_MIPMAP_LEVEL /;"	kind:d
EGL_MIPMAP_TEXTURE	SDL_egl.h	/^#define EGL_MIPMAP_TEXTURE /;"	kind:d
EGL_MULTISAMPLE_RESOLVE	SDL_egl.h	/^#define EGL_MULTISAMPLE_RESOLVE /;"	kind:d
EGL_MULTISAMPLE_RESOLVE_BOX	SDL_egl.h	/^#define EGL_MULTISAMPLE_RESOLVE_BOX /;"	kind:d
EGL_MULTISAMPLE_RESOLVE_BOX_BIT	SDL_egl.h	/^#define EGL_MULTISAMPLE_RESOLVE_BOX_BIT /;"	kind:d
EGL_MULTISAMPLE_RESOLVE_DEFAULT	SDL_egl.h	/^#define EGL_MULTISAMPLE_RESOLVE_DEFAULT /;"	kind:d
EGL_MULTIVIEW_VIEW_COUNT_EXT	SDL_egl.h	/^#define EGL_MULTIVIEW_VIEW_COUNT_EXT /;"	kind:d
EGL_NATIVE_BUFFER_ANDROID	SDL_egl.h	/^#define EGL_NATIVE_BUFFER_ANDROID /;"	kind:d
EGL_NATIVE_BUFFER_TIZEN	SDL_egl.h	/^#define EGL_NATIVE_BUFFER_TIZEN /;"	kind:d
EGL_NATIVE_PIXMAP_KHR	SDL_egl.h	/^#define EGL_NATIVE_PIXMAP_KHR /;"	kind:d
EGL_NATIVE_RENDERABLE	SDL_egl.h	/^#define EGL_NATIVE_RENDERABLE /;"	kind:d
EGL_NATIVE_SURFACE_TIZEN	SDL_egl.h	/^#define EGL_NATIVE_SURFACE_TIZEN /;"	kind:d
EGL_NATIVE_VISUAL_ID	SDL_egl.h	/^#define EGL_NATIVE_VISUAL_ID /;"	kind:d
EGL_NATIVE_VISUAL_TYPE	SDL_egl.h	/^#define EGL_NATIVE_VISUAL_TYPE /;"	kind:d
EGL_NOK_swap_region	SDL_egl.h	/^#define EGL_NOK_swap_region /;"	kind:d
EGL_NOK_swap_region2	SDL_egl.h	/^#define EGL_NOK_swap_region2 /;"	kind:d
EGL_NOK_texture_from_pixmap	SDL_egl.h	/^#define EGL_NOK_texture_from_pixmap /;"	kind:d
EGL_NONE	SDL_egl.h	/^#define EGL_NONE /;"	kind:d
EGL_NON_CONFORMANT_CONFIG	SDL_egl.h	/^#define EGL_NON_CONFORMANT_CONFIG /;"	kind:d
EGL_NOT_INITIALIZED	SDL_egl.h	/^#define EGL_NOT_INITIALIZED /;"	kind:d
EGL_NO_CONTEXT	SDL_egl.h	/^#define EGL_NO_CONTEXT /;"	kind:d
EGL_NO_DEVICE_EXT	SDL_egl.h	/^#define EGL_NO_DEVICE_EXT /;"	kind:d
EGL_NO_DISPLAY	SDL_egl.h	/^#define EGL_NO_DISPLAY /;"	kind:d
EGL_NO_FILE_DESCRIPTOR_KHR	SDL_egl.h	/^#define EGL_NO_FILE_DESCRIPTOR_KHR /;"	kind:d
EGL_NO_IMAGE	SDL_egl.h	/^#define EGL_NO_IMAGE /;"	kind:d
EGL_NO_IMAGE_KHR	SDL_egl.h	/^#define EGL_NO_IMAGE_KHR /;"	kind:d
EGL_NO_NATIVE_FENCE_FD_ANDROID	SDL_egl.h	/^#define EGL_NO_NATIVE_FENCE_FD_ANDROID /;"	kind:d
EGL_NO_OUTPUT_LAYER_EXT	SDL_egl.h	/^#define EGL_NO_OUTPUT_LAYER_EXT /;"	kind:d
EGL_NO_OUTPUT_PORT_EXT	SDL_egl.h	/^#define EGL_NO_OUTPUT_PORT_EXT /;"	kind:d
EGL_NO_RESET_NOTIFICATION	SDL_egl.h	/^#define EGL_NO_RESET_NOTIFICATION /;"	kind:d
EGL_NO_RESET_NOTIFICATION_EXT	SDL_egl.h	/^#define EGL_NO_RESET_NOTIFICATION_EXT /;"	kind:d
EGL_NO_RESET_NOTIFICATION_KHR	SDL_egl.h	/^#define EGL_NO_RESET_NOTIFICATION_KHR /;"	kind:d
EGL_NO_STREAM_KHR	SDL_egl.h	/^#define EGL_NO_STREAM_KHR /;"	kind:d
EGL_NO_SURFACE	SDL_egl.h	/^#define EGL_NO_SURFACE /;"	kind:d
EGL_NO_SYNC	SDL_egl.h	/^#define EGL_NO_SYNC /;"	kind:d
EGL_NO_SYNC_KHR	SDL_egl.h	/^#define EGL_NO_SYNC_KHR /;"	kind:d
EGL_NO_SYNC_NV	SDL_egl.h	/^#define EGL_NO_SYNC_NV /;"	kind:d
EGL_NO_TEXTURE	SDL_egl.h	/^#define EGL_NO_TEXTURE /;"	kind:d
EGL_NV_3dvision_surface	SDL_egl.h	/^#define EGL_NV_3dvision_surface /;"	kind:d
EGL_NV_coverage_sample	SDL_egl.h	/^#define EGL_NV_coverage_sample /;"	kind:d
EGL_NV_coverage_sample_resolve	SDL_egl.h	/^#define EGL_NV_coverage_sample_resolve /;"	kind:d
EGL_NV_cuda_event	SDL_egl.h	/^#define EGL_NV_cuda_event /;"	kind:d
EGL_NV_depth_nonlinear	SDL_egl.h	/^#define EGL_NV_depth_nonlinear /;"	kind:d
EGL_NV_device_cuda	SDL_egl.h	/^#define EGL_NV_device_cuda /;"	kind:d
EGL_NV_native_query	SDL_egl.h	/^#define EGL_NV_native_query /;"	kind:d
EGL_NV_post_convert_rounding	SDL_egl.h	/^#define EGL_NV_post_convert_rounding /;"	kind:d
EGL_NV_post_sub_buffer	SDL_egl.h	/^#define EGL_NV_post_sub_buffer /;"	kind:d
EGL_NV_stream_sync	SDL_egl.h	/^#define EGL_NV_stream_sync /;"	kind:d
EGL_NV_sync	SDL_egl.h	/^#define EGL_NV_sync /;"	kind:d
EGL_NV_system_time	SDL_egl.h	/^#define EGL_NV_system_time /;"	kind:d
EGL_OPENGL_API	SDL_egl.h	/^#define EGL_OPENGL_API /;"	kind:d
EGL_OPENGL_BIT	SDL_egl.h	/^#define EGL_OPENGL_BIT /;"	kind:d
EGL_OPENGL_ES2_BIT	SDL_egl.h	/^#define EGL_OPENGL_ES2_BIT /;"	kind:d
EGL_OPENGL_ES3_BIT	SDL_egl.h	/^#define EGL_OPENGL_ES3_BIT /;"	kind:d
EGL_OPENGL_ES3_BIT_KHR	SDL_egl.h	/^#define EGL_OPENGL_ES3_BIT_KHR /;"	kind:d
EGL_OPENGL_ES_API	SDL_egl.h	/^#define EGL_OPENGL_ES_API /;"	kind:d
EGL_OPENGL_ES_BIT	SDL_egl.h	/^#define EGL_OPENGL_ES_BIT /;"	kind:d
EGL_OPENVG_API	SDL_egl.h	/^#define EGL_OPENVG_API /;"	kind:d
EGL_OPENVG_BIT	SDL_egl.h	/^#define EGL_OPENVG_BIT /;"	kind:d
EGL_OPENVG_IMAGE	SDL_egl.h	/^#define EGL_OPENVG_IMAGE /;"	kind:d
EGL_OPENWF_DEVICE_ID_EXT	SDL_egl.h	/^#define EGL_OPENWF_DEVICE_ID_EXT /;"	kind:d
EGL_OPENWF_PIPELINE_ID_EXT	SDL_egl.h	/^#define EGL_OPENWF_PIPELINE_ID_EXT /;"	kind:d
EGL_OPENWF_PORT_ID_EXT	SDL_egl.h	/^#define EGL_OPENWF_PORT_ID_EXT /;"	kind:d
EGL_OPTIMAL_FORMAT_BIT_KHR	SDL_egl.h	/^#define EGL_OPTIMAL_FORMAT_BIT_KHR /;"	kind:d
EGL_PBUFFER_BIT	SDL_egl.h	/^#define EGL_PBUFFER_BIT /;"	kind:d
EGL_PIXEL_ASPECT_RATIO	SDL_egl.h	/^#define EGL_PIXEL_ASPECT_RATIO /;"	kind:d
EGL_PIXMAP_BIT	SDL_egl.h	/^#define EGL_PIXMAP_BIT /;"	kind:d
EGL_PLATFORM_ANDROID_KHR	SDL_egl.h	/^#define EGL_PLATFORM_ANDROID_KHR /;"	kind:d
EGL_PLATFORM_DEVICE_EXT	SDL_egl.h	/^#define EGL_PLATFORM_DEVICE_EXT /;"	kind:d
EGL_PLATFORM_GBM_KHR	SDL_egl.h	/^#define EGL_PLATFORM_GBM_KHR /;"	kind:d
EGL_PLATFORM_GBM_MESA	SDL_egl.h	/^#define EGL_PLATFORM_GBM_MESA /;"	kind:d
EGL_PLATFORM_WAYLAND_EXT	SDL_egl.h	/^#define EGL_PLATFORM_WAYLAND_EXT /;"	kind:d
EGL_PLATFORM_WAYLAND_KHR	SDL_egl.h	/^#define EGL_PLATFORM_WAYLAND_KHR /;"	kind:d
EGL_PLATFORM_X11_EXT	SDL_egl.h	/^#define EGL_PLATFORM_X11_EXT /;"	kind:d
EGL_PLATFORM_X11_KHR	SDL_egl.h	/^#define EGL_PLATFORM_X11_KHR /;"	kind:d
EGL_PLATFORM_X11_SCREEN_EXT	SDL_egl.h	/^#define EGL_PLATFORM_X11_SCREEN_EXT /;"	kind:d
EGL_PLATFORM_X11_SCREEN_KHR	SDL_egl.h	/^#define EGL_PLATFORM_X11_SCREEN_KHR /;"	kind:d
EGL_POST_SUB_BUFFER_SUPPORTED_NV	SDL_egl.h	/^#define EGL_POST_SUB_BUFFER_SUPPORTED_NV /;"	kind:d
EGL_PRODUCER_FRAME_KHR	SDL_egl.h	/^#define EGL_PRODUCER_FRAME_KHR /;"	kind:d
EGL_PROTECTED_CONTENT_EXT	SDL_egl.h	/^#define EGL_PROTECTED_CONTENT_EXT /;"	kind:d
EGL_READ	SDL_egl.h	/^#define EGL_READ /;"	kind:d
EGL_READ_SURFACE_BIT_KHR	SDL_egl.h	/^#define EGL_READ_SURFACE_BIT_KHR /;"	kind:d
EGL_RECORDABLE_ANDROID	SDL_egl.h	/^#define EGL_RECORDABLE_ANDROID /;"	kind:d
EGL_RED_SIZE	SDL_egl.h	/^#define EGL_RED_SIZE /;"	kind:d
EGL_RENDERABLE_TYPE	SDL_egl.h	/^#define EGL_RENDERABLE_TYPE /;"	kind:d
EGL_RENDER_BUFFER	SDL_egl.h	/^#define EGL_RENDER_BUFFER /;"	kind:d
EGL_RGB_BUFFER	SDL_egl.h	/^#define EGL_RGB_BUFFER /;"	kind:d
EGL_SAMPLES	SDL_egl.h	/^#define EGL_SAMPLES /;"	kind:d
EGL_SAMPLE_BUFFERS	SDL_egl.h	/^#define EGL_SAMPLE_BUFFERS /;"	kind:d
EGL_SAMPLE_RANGE_HINT_EXT	SDL_egl.h	/^#define EGL_SAMPLE_RANGE_HINT_EXT /;"	kind:d
EGL_SIGNALED	SDL_egl.h	/^#define EGL_SIGNALED /;"	kind:d
EGL_SIGNALED_KHR	SDL_egl.h	/^#define EGL_SIGNALED_KHR /;"	kind:d
EGL_SIGNALED_NV	SDL_egl.h	/^#define EGL_SIGNALED_NV /;"	kind:d
EGL_SINGLE_BUFFER	SDL_egl.h	/^#define EGL_SINGLE_BUFFER /;"	kind:d
EGL_SLOW_CONFIG	SDL_egl.h	/^#define EGL_SLOW_CONFIG /;"	kind:d
EGL_STENCIL_SIZE	SDL_egl.h	/^#define EGL_STENCIL_SIZE /;"	kind:d
EGL_STREAM_BIT_KHR	SDL_egl.h	/^#define EGL_STREAM_BIT_KHR /;"	kind:d
EGL_STREAM_FIFO_LENGTH_KHR	SDL_egl.h	/^#define EGL_STREAM_FIFO_LENGTH_KHR /;"	kind:d
EGL_STREAM_STATE_CONNECTING_KHR	SDL_egl.h	/^#define EGL_STREAM_STATE_CONNECTING_KHR /;"	kind:d
EGL_STREAM_STATE_CREATED_KHR	SDL_egl.h	/^#define EGL_STREAM_STATE_CREATED_KHR /;"	kind:d
EGL_STREAM_STATE_DISCONNECTED_KHR	SDL_egl.h	/^#define EGL_STREAM_STATE_DISCONNECTED_KHR /;"	kind:d
EGL_STREAM_STATE_EMPTY_KHR	SDL_egl.h	/^#define EGL_STREAM_STATE_EMPTY_KHR /;"	kind:d
EGL_STREAM_STATE_KHR	SDL_egl.h	/^#define EGL_STREAM_STATE_KHR /;"	kind:d
EGL_STREAM_STATE_NEW_FRAME_AVAILABLE_KHR	SDL_egl.h	/^#define EGL_STREAM_STATE_NEW_FRAME_AVAILABLE_KHR /;"	kind:d
EGL_STREAM_STATE_OLD_FRAME_AVAILABLE_KHR	SDL_egl.h	/^#define EGL_STREAM_STATE_OLD_FRAME_AVAILABLE_KHR /;"	kind:d
EGL_STREAM_TIME_CONSUMER_KHR	SDL_egl.h	/^#define EGL_STREAM_TIME_CONSUMER_KHR /;"	kind:d
EGL_STREAM_TIME_NOW_KHR	SDL_egl.h	/^#define EGL_STREAM_TIME_NOW_KHR /;"	kind:d
EGL_STREAM_TIME_PRODUCER_KHR	SDL_egl.h	/^#define EGL_STREAM_TIME_PRODUCER_KHR /;"	kind:d
EGL_SUCCESS	SDL_egl.h	/^#define EGL_SUCCESS /;"	kind:d
EGL_SURFACE_TYPE	SDL_egl.h	/^#define EGL_SURFACE_TYPE /;"	kind:d
EGL_SWAP_BEHAVIOR	SDL_egl.h	/^#define EGL_SWAP_BEHAVIOR /;"	kind:d
EGL_SWAP_BEHAVIOR_PRESERVED_BIT	SDL_egl.h	/^#define EGL_SWAP_BEHAVIOR_PRESERVED_BIT /;"	kind:d
EGL_SWAP_INTERVAL_EXT	SDL_egl.h	/^#define EGL_SWAP_INTERVAL_EXT /;"	kind:d
EGL_SYNC_CL_EVENT	SDL_egl.h	/^#define EGL_SYNC_CL_EVENT /;"	kind:d
EGL_SYNC_CL_EVENT_COMPLETE	SDL_egl.h	/^#define EGL_SYNC_CL_EVENT_COMPLETE /;"	kind:d
EGL_SYNC_CL_EVENT_COMPLETE_KHR	SDL_egl.h	/^#define EGL_SYNC_CL_EVENT_COMPLETE_KHR /;"	kind:d
EGL_SYNC_CL_EVENT_KHR	SDL_egl.h	/^#define EGL_SYNC_CL_EVENT_KHR /;"	kind:d
EGL_SYNC_CONDITION	SDL_egl.h	/^#define EGL_SYNC_CONDITION /;"	kind:d
EGL_SYNC_CONDITION_KHR	SDL_egl.h	/^#define EGL_SYNC_CONDITION_KHR /;"	kind:d
EGL_SYNC_CONDITION_NV	SDL_egl.h	/^#define EGL_SYNC_CONDITION_NV /;"	kind:d
EGL_SYNC_CUDA_EVENT_COMPLETE_NV	SDL_egl.h	/^#define EGL_SYNC_CUDA_EVENT_COMPLETE_NV /;"	kind:d
EGL_SYNC_CUDA_EVENT_NV	SDL_egl.h	/^#define EGL_SYNC_CUDA_EVENT_NV /;"	kind:d
EGL_SYNC_FENCE	SDL_egl.h	/^#define EGL_SYNC_FENCE /;"	kind:d
EGL_SYNC_FENCE_KHR	SDL_egl.h	/^#define EGL_SYNC_FENCE_KHR /;"	kind:d
EGL_SYNC_FENCE_NV	SDL_egl.h	/^#define EGL_SYNC_FENCE_NV /;"	kind:d
EGL_SYNC_FLUSH_COMMANDS_BIT	SDL_egl.h	/^#define EGL_SYNC_FLUSH_COMMANDS_BIT /;"	kind:d
EGL_SYNC_FLUSH_COMMANDS_BIT_KHR	SDL_egl.h	/^#define EGL_SYNC_FLUSH_COMMANDS_BIT_KHR /;"	kind:d
EGL_SYNC_FLUSH_COMMANDS_BIT_NV	SDL_egl.h	/^#define EGL_SYNC_FLUSH_COMMANDS_BIT_NV /;"	kind:d
EGL_SYNC_NATIVE_FENCE_ANDROID	SDL_egl.h	/^#define EGL_SYNC_NATIVE_FENCE_ANDROID /;"	kind:d
EGL_SYNC_NATIVE_FENCE_FD_ANDROID	SDL_egl.h	/^#define EGL_SYNC_NATIVE_FENCE_FD_ANDROID /;"	kind:d
EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID	SDL_egl.h	/^#define EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID /;"	kind:d
EGL_SYNC_NEW_FRAME_NV	SDL_egl.h	/^#define EGL_SYNC_NEW_FRAME_NV /;"	kind:d
EGL_SYNC_PRIOR_COMMANDS_COMPLETE	SDL_egl.h	/^#define EGL_SYNC_PRIOR_COMMANDS_COMPLETE /;"	kind:d
EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR	SDL_egl.h	/^#define EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR /;"	kind:d
EGL_SYNC_PRIOR_COMMANDS_COMPLETE_NV	SDL_egl.h	/^#define EGL_SYNC_PRIOR_COMMANDS_COMPLETE_NV /;"	kind:d
EGL_SYNC_REUSABLE_KHR	SDL_egl.h	/^#define EGL_SYNC_REUSABLE_KHR /;"	kind:d
EGL_SYNC_STATUS	SDL_egl.h	/^#define EGL_SYNC_STATUS /;"	kind:d
EGL_SYNC_STATUS_KHR	SDL_egl.h	/^#define EGL_SYNC_STATUS_KHR /;"	kind:d
EGL_SYNC_STATUS_NV	SDL_egl.h	/^#define EGL_SYNC_STATUS_NV /;"	kind:d
EGL_SYNC_TYPE	SDL_egl.h	/^#define EGL_SYNC_TYPE /;"	kind:d
EGL_SYNC_TYPE_KHR	SDL_egl.h	/^#define EGL_SYNC_TYPE_KHR /;"	kind:d
EGL_SYNC_TYPE_NV	SDL_egl.h	/^#define EGL_SYNC_TYPE_NV /;"	kind:d
EGL_TEXTURE_2D	SDL_egl.h	/^#define EGL_TEXTURE_2D /;"	kind:d
EGL_TEXTURE_FORMAT	SDL_egl.h	/^#define EGL_TEXTURE_FORMAT /;"	kind:d
EGL_TEXTURE_RGB	SDL_egl.h	/^#define EGL_TEXTURE_RGB /;"	kind:d
EGL_TEXTURE_RGBA	SDL_egl.h	/^#define EGL_TEXTURE_RGBA /;"	kind:d
EGL_TEXTURE_TARGET	SDL_egl.h	/^#define EGL_TEXTURE_TARGET /;"	kind:d
EGL_TIMEOUT_EXPIRED	SDL_egl.h	/^#define EGL_TIMEOUT_EXPIRED /;"	kind:d
EGL_TIMEOUT_EXPIRED_KHR	SDL_egl.h	/^#define EGL_TIMEOUT_EXPIRED_KHR /;"	kind:d
EGL_TIMEOUT_EXPIRED_NV	SDL_egl.h	/^#define EGL_TIMEOUT_EXPIRED_NV /;"	kind:d
EGL_TIZEN_image_native_buffer	SDL_egl.h	/^#define EGL_TIZEN_image_native_buffer /;"	kind:d
EGL_TIZEN_image_native_surface	SDL_egl.h	/^#define EGL_TIZEN_image_native_surface /;"	kind:d
EGL_TRANSPARENT_BLUE_VALUE	SDL_egl.h	/^#define EGL_TRANSPARENT_BLUE_VALUE /;"	kind:d
EGL_TRANSPARENT_GREEN_VALUE	SDL_egl.h	/^#define EGL_TRANSPARENT_GREEN_VALUE /;"	kind:d
EGL_TRANSPARENT_RED_VALUE	SDL_egl.h	/^#define EGL_TRANSPARENT_RED_VALUE /;"	kind:d
EGL_TRANSPARENT_RGB	SDL_egl.h	/^#define EGL_TRANSPARENT_RGB /;"	kind:d
EGL_TRANSPARENT_TYPE	SDL_egl.h	/^#define EGL_TRANSPARENT_TYPE /;"	kind:d
EGL_TRUE	SDL_egl.h	/^#define EGL_TRUE /;"	kind:d
EGL_UNKNOWN	SDL_egl.h	/^#define EGL_UNKNOWN /;"	kind:d
EGL_UNSIGNALED	SDL_egl.h	/^#define EGL_UNSIGNALED /;"	kind:d
EGL_UNSIGNALED_KHR	SDL_egl.h	/^#define EGL_UNSIGNALED_KHR /;"	kind:d
EGL_UNSIGNALED_NV	SDL_egl.h	/^#define EGL_UNSIGNALED_NV /;"	kind:d
EGL_UPPER_LEFT_KHR	SDL_egl.h	/^#define EGL_UPPER_LEFT_KHR /;"	kind:d
EGL_VENDOR	SDL_egl.h	/^#define EGL_VENDOR /;"	kind:d
EGL_VERSION	SDL_egl.h	/^#define EGL_VERSION /;"	kind:d
EGL_VERSION_1_0	SDL_egl.h	/^#define EGL_VERSION_1_0 /;"	kind:d
EGL_VERSION_1_1	SDL_egl.h	/^#define EGL_VERSION_1_1 /;"	kind:d
EGL_VERSION_1_2	SDL_egl.h	/^#define EGL_VERSION_1_2 /;"	kind:d
EGL_VERSION_1_3	SDL_egl.h	/^#define EGL_VERSION_1_3 /;"	kind:d
EGL_VERSION_1_4	SDL_egl.h	/^#define EGL_VERSION_1_4 /;"	kind:d
EGL_VERSION_1_5	SDL_egl.h	/^#define EGL_VERSION_1_5 /;"	kind:d
EGL_VERTICAL_RESOLUTION	SDL_egl.h	/^#define EGL_VERTICAL_RESOLUTION /;"	kind:d
EGL_VG_ALPHA_FORMAT	SDL_egl.h	/^#define EGL_VG_ALPHA_FORMAT /;"	kind:d
EGL_VG_ALPHA_FORMAT_NONPRE	SDL_egl.h	/^#define EGL_VG_ALPHA_FORMAT_NONPRE /;"	kind:d
EGL_VG_ALPHA_FORMAT_PRE	SDL_egl.h	/^#define EGL_VG_ALPHA_FORMAT_PRE /;"	kind:d
EGL_VG_ALPHA_FORMAT_PRE_BIT	SDL_egl.h	/^#define EGL_VG_ALPHA_FORMAT_PRE_BIT /;"	kind:d
EGL_VG_ALPHA_FORMAT_PRE_BIT_KHR	SDL_egl.h	/^#define EGL_VG_ALPHA_FORMAT_PRE_BIT_KHR /;"	kind:d
EGL_VG_COLORSPACE	SDL_egl.h	/^#define EGL_VG_COLORSPACE /;"	kind:d
EGL_VG_COLORSPACE_LINEAR	SDL_egl.h	/^#define EGL_VG_COLORSPACE_LINEAR /;"	kind:d
EGL_VG_COLORSPACE_LINEAR_BIT	SDL_egl.h	/^#define EGL_VG_COLORSPACE_LINEAR_BIT /;"	kind:d
EGL_VG_COLORSPACE_LINEAR_BIT_KHR	SDL_egl.h	/^#define EGL_VG_COLORSPACE_LINEAR_BIT_KHR /;"	kind:d
EGL_VG_COLORSPACE_sRGB	SDL_egl.h	/^#define EGL_VG_COLORSPACE_sRGB /;"	kind:d
EGL_VG_PARENT_IMAGE_KHR	SDL_egl.h	/^#define EGL_VG_PARENT_IMAGE_KHR /;"	kind:d
EGL_WIDTH	SDL_egl.h	/^#define EGL_WIDTH /;"	kind:d
EGL_WINDOW_BIT	SDL_egl.h	/^#define EGL_WINDOW_BIT /;"	kind:d
EGL_WRITE_SURFACE_BIT_KHR	SDL_egl.h	/^#define EGL_WRITE_SURFACE_BIT_KHR /;"	kind:d
EGL_YUV_BUFFER_EXT	SDL_egl.h	/^#define EGL_YUV_BUFFER_EXT /;"	kind:d
EGL_YUV_CHROMA_HORIZONTAL_SITING_HINT_EXT	SDL_egl.h	/^#define EGL_YUV_CHROMA_HORIZONTAL_SITING_HINT_EXT /;"	kind:d
EGL_YUV_CHROMA_SITING_0_5_EXT	SDL_egl.h	/^#define EGL_YUV_CHROMA_SITING_0_5_EXT /;"	kind:d
EGL_YUV_CHROMA_SITING_0_EXT	SDL_egl.h	/^#define EGL_YUV_CHROMA_SITING_0_EXT /;"	kind:d
EGL_YUV_CHROMA_VERTICAL_SITING_HINT_EXT	SDL_egl.h	/^#define EGL_YUV_CHROMA_VERTICAL_SITING_HINT_EXT /;"	kind:d
EGL_YUV_COLOR_SPACE_HINT_EXT	SDL_egl.h	/^#define EGL_YUV_COLOR_SPACE_HINT_EXT /;"	kind:d
EGL_YUV_CSC_STANDARD_2020_EXT	SDL_egl.h	/^#define EGL_YUV_CSC_STANDARD_2020_EXT /;"	kind:d
EGL_YUV_CSC_STANDARD_601_EXT	SDL_egl.h	/^#define EGL_YUV_CSC_STANDARD_601_EXT /;"	kind:d
EGL_YUV_CSC_STANDARD_709_EXT	SDL_egl.h	/^#define EGL_YUV_CSC_STANDARD_709_EXT /;"	kind:d
EGL_YUV_CSC_STANDARD_EXT	SDL_egl.h	/^#define EGL_YUV_CSC_STANDARD_EXT /;"	kind:d
EGL_YUV_DEPTH_RANGE_EXT	SDL_egl.h	/^#define EGL_YUV_DEPTH_RANGE_EXT /;"	kind:d
EGL_YUV_DEPTH_RANGE_FULL_EXT	SDL_egl.h	/^#define EGL_YUV_DEPTH_RANGE_FULL_EXT /;"	kind:d
EGL_YUV_DEPTH_RANGE_LIMITED_EXT	SDL_egl.h	/^#define EGL_YUV_DEPTH_RANGE_LIMITED_EXT /;"	kind:d
EGL_YUV_FULL_RANGE_EXT	SDL_egl.h	/^#define EGL_YUV_FULL_RANGE_EXT /;"	kind:d
EGL_YUV_NARROW_RANGE_EXT	SDL_egl.h	/^#define EGL_YUV_NARROW_RANGE_EXT /;"	kind:d
EGL_YUV_NUMBER_OF_PLANES_EXT	SDL_egl.h	/^#define EGL_YUV_NUMBER_OF_PLANES_EXT /;"	kind:d
EGL_YUV_ORDER_AYUV_EXT	SDL_egl.h	/^#define EGL_YUV_ORDER_AYUV_EXT /;"	kind:d
EGL_YUV_ORDER_EXT	SDL_egl.h	/^#define EGL_YUV_ORDER_EXT /;"	kind:d
EGL_YUV_ORDER_UYVY_EXT	SDL_egl.h	/^#define EGL_YUV_ORDER_UYVY_EXT /;"	kind:d
EGL_YUV_ORDER_VYUY_EXT	SDL_egl.h	/^#define EGL_YUV_ORDER_VYUY_EXT /;"	kind:d
EGL_YUV_ORDER_YUV_EXT	SDL_egl.h	/^#define EGL_YUV_ORDER_YUV_EXT /;"	kind:d
EGL_YUV_ORDER_YUYV_EXT	SDL_egl.h	/^#define EGL_YUV_ORDER_YUYV_EXT /;"	kind:d
EGL_YUV_ORDER_YVU_EXT	SDL_egl.h	/^#define EGL_YUV_ORDER_YVU_EXT /;"	kind:d
EGL_YUV_ORDER_YVYU_EXT	SDL_egl.h	/^#define EGL_YUV_ORDER_YVYU_EXT /;"	kind:d
EGL_YUV_PLANE_BPP_0_EXT	SDL_egl.h	/^#define EGL_YUV_PLANE_BPP_0_EXT /;"	kind:d
EGL_YUV_PLANE_BPP_10_EXT	SDL_egl.h	/^#define EGL_YUV_PLANE_BPP_10_EXT /;"	kind:d
EGL_YUV_PLANE_BPP_8_EXT	SDL_egl.h	/^#define EGL_YUV_PLANE_BPP_8_EXT /;"	kind:d
EGL_YUV_PLANE_BPP_EXT	SDL_egl.h	/^#define EGL_YUV_PLANE_BPP_EXT /;"	kind:d
EGL_YUV_SUBSAMPLE_4_2_0_EXT	SDL_egl.h	/^#define EGL_YUV_SUBSAMPLE_4_2_0_EXT /;"	kind:d
EGL_YUV_SUBSAMPLE_4_2_2_EXT	SDL_egl.h	/^#define EGL_YUV_SUBSAMPLE_4_2_2_EXT /;"	kind:d
EGL_YUV_SUBSAMPLE_4_4_4_EXT	SDL_egl.h	/^#define EGL_YUV_SUBSAMPLE_4_4_4_EXT /;"	kind:d
EGL_YUV_SUBSAMPLE_EXT	SDL_egl.h	/^#define EGL_YUV_SUBSAMPLE_EXT /;"	kind:d
EGL_Y_INVERTED_NOK	SDL_egl.h	/^#define EGL_Y_INVERTED_NOK /;"	kind:d
EGLenum	SDL_egl.h	/^typedef unsigned int EGLenum;$/;"	kind:t	typeref:typename:unsigned int
EGLint	SDL_egl.h	/^typedef khronos_int32_t EGLint;$/;"	kind:t	typeref:typename:khronos_int32_t
EGLsizeiANDROID	SDL_egl.h	/^typedef khronos_ssize_t EGLsizeiANDROID;$/;"	kind:t	typeref:typename:khronos_ssize_t
EGLuint64KHR	SDL_egl.h	/^typedef khronos_uint64_t EGLuint64KHR;$/;"	kind:t	typeref:typename:khronos_uint64_t
EGLuint64NV	SDL_egl.h	/^typedef khronos_utime_nanoseconds_t EGLuint64NV;$/;"	kind:t	typeref:typename:khronos_utime_nanoseconds_t
FONT_CHARACTER_SIZE	SDL_test_font.h	/^#define FONT_CHARACTER_SIZE /;"	kind:d
GLAPI	SDL_opengl.h	/^#    define GLAPI /;"	kind:d
GLAPI	SDL_opengl.h	/^#  define GLAPI /;"	kind:d
GLAPI	SDL_opengl.h	/^#define GLAPI /;"	kind:d
GLAPI	SDL_opengl_glext.h	/^#define GLAPI /;"	kind:d
GLAPIENTRY	SDL_opengl.h	/^#    define GLAPIENTRY /;"	kind:d
GLAPIENTRY	SDL_opengl.h	/^#  define GLAPIENTRY /;"	kind:d
GLAPIENTRY	SDL_opengl.h	/^#  define GLAPIENTRY$/;"	kind:d
GLAPIENTRY	SDL_opengl.h	/^#define GLAPIENTRY$/;"	kind:d
GLAPIENTRYP	SDL_opengl.h	/^#define GLAPIENTRYP /;"	kind:d
GLDEBUGPROC	SDL_opengl_glext.h	/^typedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsize/;"	kind:t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLDEBUGPROCAMD	SDL_opengl_glext.h	/^typedef void (APIENTRY  *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei lengt/;"	kind:t	typeref:typename:void (APIENTRY *)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar * message,void * userParam)
GLDEBUGPROCARB	SDL_opengl_glext.h	/^typedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLs/;"	kind:t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLDEBUGPROCKHR	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,G/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLEXT_64_TYPES_DEFINED	SDL_opengl_glext.h	/^#define GLEXT_64_TYPES_DEFINED$/;"	kind:d
GL_1PASS_EXT	SDL_opengl_glext.h	/^#define GL_1PASS_EXT /;"	kind:d
GL_1PASS_SGIS	SDL_opengl_glext.h	/^#define GL_1PASS_SGIS /;"	kind:d
GL_2D	SDL_opengl.h	/^#define GL_2D	/;"	kind:d
GL_2PASS_0_EXT	SDL_opengl_glext.h	/^#define GL_2PASS_0_EXT /;"	kind:d
GL_2PASS_0_SGIS	SDL_opengl_glext.h	/^#define GL_2PASS_0_SGIS /;"	kind:d
GL_2PASS_1_EXT	SDL_opengl_glext.h	/^#define GL_2PASS_1_EXT /;"	kind:d
GL_2PASS_1_SGIS	SDL_opengl_glext.h	/^#define GL_2PASS_1_SGIS /;"	kind:d
GL_2X_BIT_ATI	SDL_opengl_glext.h	/^#define GL_2X_BIT_ATI /;"	kind:d
GL_2_BYTES	SDL_opengl.h	/^#define GL_2_BYTES	/;"	kind:d
GL_3D	SDL_opengl.h	/^#define GL_3D	/;"	kind:d
GL_3DC_XY_AMD	SDL_opengles2_gl2ext.h	/^#define GL_3DC_XY_AMD /;"	kind:d
GL_3DC_X_AMD	SDL_opengles2_gl2ext.h	/^#define GL_3DC_X_AMD /;"	kind:d
GL_3DFX_multisample	SDL_opengl_glext.h	/^#define GL_3DFX_multisample /;"	kind:d
GL_3DFX_tbuffer	SDL_opengl_glext.h	/^#define GL_3DFX_tbuffer /;"	kind:d
GL_3DFX_texture_compression_FXT1	SDL_opengl_glext.h	/^#define GL_3DFX_texture_compression_FXT1 /;"	kind:d
GL_3D_COLOR	SDL_opengl.h	/^#define GL_3D_COLOR	/;"	kind:d
GL_3D_COLOR_TEXTURE	SDL_opengl.h	/^#define GL_3D_COLOR_TEXTURE	/;"	kind:d
GL_3_BYTES	SDL_opengl.h	/^#define GL_3_BYTES	/;"	kind:d
GL_422_AVERAGE_EXT	SDL_opengl_glext.h	/^#define GL_422_AVERAGE_EXT /;"	kind:d
GL_422_EXT	SDL_opengl_glext.h	/^#define GL_422_EXT /;"	kind:d
GL_422_REV_AVERAGE_EXT	SDL_opengl_glext.h	/^#define GL_422_REV_AVERAGE_EXT /;"	kind:d
GL_422_REV_EXT	SDL_opengl_glext.h	/^#define GL_422_REV_EXT /;"	kind:d
GL_4D_COLOR_TEXTURE	SDL_opengl.h	/^#define GL_4D_COLOR_TEXTURE	/;"	kind:d
GL_4PASS_0_EXT	SDL_opengl_glext.h	/^#define GL_4PASS_0_EXT /;"	kind:d
GL_4PASS_0_SGIS	SDL_opengl_glext.h	/^#define GL_4PASS_0_SGIS /;"	kind:d
GL_4PASS_1_EXT	SDL_opengl_glext.h	/^#define GL_4PASS_1_EXT /;"	kind:d
GL_4PASS_1_SGIS	SDL_opengl_glext.h	/^#define GL_4PASS_1_SGIS /;"	kind:d
GL_4PASS_2_EXT	SDL_opengl_glext.h	/^#define GL_4PASS_2_EXT /;"	kind:d
GL_4PASS_2_SGIS	SDL_opengl_glext.h	/^#define GL_4PASS_2_SGIS /;"	kind:d
GL_4PASS_3_EXT	SDL_opengl_glext.h	/^#define GL_4PASS_3_EXT /;"	kind:d
GL_4PASS_3_SGIS	SDL_opengl_glext.h	/^#define GL_4PASS_3_SGIS /;"	kind:d
GL_4X_BIT_ATI	SDL_opengl_glext.h	/^#define GL_4X_BIT_ATI /;"	kind:d
GL_4_BYTES	SDL_opengl.h	/^#define GL_4_BYTES	/;"	kind:d
GL_8X_BIT_ATI	SDL_opengl_glext.h	/^#define GL_8X_BIT_ATI /;"	kind:d
GL_ABGR_EXT	SDL_opengl_glext.h	/^#define GL_ABGR_EXT /;"	kind:d
GL_ACCUM	SDL_opengl.h	/^#define GL_ACCUM	/;"	kind:d
GL_ACCUM_ADJACENT_PAIRS_NV	SDL_opengl_glext.h	/^#define GL_ACCUM_ADJACENT_PAIRS_NV /;"	kind:d
GL_ACCUM_ALPHA_BITS	SDL_opengl.h	/^#define GL_ACCUM_ALPHA_BITS	/;"	kind:d
GL_ACCUM_BLUE_BITS	SDL_opengl.h	/^#define GL_ACCUM_BLUE_BITS	/;"	kind:d
GL_ACCUM_BUFFER_BIT	SDL_opengl.h	/^#define GL_ACCUM_BUFFER_BIT	/;"	kind:d
GL_ACCUM_CLEAR_VALUE	SDL_opengl.h	/^#define GL_ACCUM_CLEAR_VALUE	/;"	kind:d
GL_ACCUM_GREEN_BITS	SDL_opengl.h	/^#define GL_ACCUM_GREEN_BITS	/;"	kind:d
GL_ACCUM_RED_BITS	SDL_opengl.h	/^#define GL_ACCUM_RED_BITS	/;"	kind:d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	SDL_opengl_glext.h	/^#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS /;"	kind:d
GL_ACTIVE_ATTRIBUTES	SDL_opengl_glext.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	kind:d
GL_ACTIVE_ATTRIBUTES	SDL_opengles2_gl2.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	kind:d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	SDL_opengl_glext.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	kind:d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	SDL_opengles2_gl2.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	kind:d
GL_ACTIVE_PROGRAM	SDL_opengl_glext.h	/^#define GL_ACTIVE_PROGRAM /;"	kind:d
GL_ACTIVE_PROGRAM_EXT	SDL_opengl_glext.h	/^#define GL_ACTIVE_PROGRAM_EXT /;"	kind:d
GL_ACTIVE_PROGRAM_EXT	SDL_opengles2_gl2ext.h	/^#define GL_ACTIVE_PROGRAM_EXT /;"	kind:d
GL_ACTIVE_RESOURCES	SDL_opengl_glext.h	/^#define GL_ACTIVE_RESOURCES /;"	kind:d
GL_ACTIVE_STENCIL_FACE_EXT	SDL_opengl_glext.h	/^#define GL_ACTIVE_STENCIL_FACE_EXT /;"	kind:d
GL_ACTIVE_SUBROUTINES	SDL_opengl_glext.h	/^#define GL_ACTIVE_SUBROUTINES /;"	kind:d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	SDL_opengl_glext.h	/^#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH /;"	kind:d
GL_ACTIVE_SUBROUTINE_UNIFORMS	SDL_opengl_glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORMS /;"	kind:d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	SDL_opengl_glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS /;"	kind:d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	SDL_opengl_glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH /;"	kind:d
GL_ACTIVE_TEXTURE	SDL_opengl.h	/^#define GL_ACTIVE_TEXTURE	/;"	kind:d
GL_ACTIVE_TEXTURE	SDL_opengl_glext.h	/^#define GL_ACTIVE_TEXTURE /;"	kind:d
GL_ACTIVE_TEXTURE	SDL_opengles2_gl2.h	/^#define GL_ACTIVE_TEXTURE /;"	kind:d
GL_ACTIVE_TEXTURE_ARB	SDL_opengl.h	/^#define GL_ACTIVE_TEXTURE_ARB	/;"	kind:d
GL_ACTIVE_TEXTURE_ARB	SDL_opengl_glext.h	/^#define GL_ACTIVE_TEXTURE_ARB /;"	kind:d
GL_ACTIVE_UNIFORMS	SDL_opengl_glext.h	/^#define GL_ACTIVE_UNIFORMS /;"	kind:d
GL_ACTIVE_UNIFORMS	SDL_opengles2_gl2.h	/^#define GL_ACTIVE_UNIFORMS /;"	kind:d
GL_ACTIVE_UNIFORM_BLOCKS	SDL_opengl_glext.h	/^#define GL_ACTIVE_UNIFORM_BLOCKS /;"	kind:d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	SDL_opengl_glext.h	/^#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH /;"	kind:d
GL_ACTIVE_UNIFORM_MAX_LENGTH	SDL_opengl_glext.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	kind:d
GL_ACTIVE_UNIFORM_MAX_LENGTH	SDL_opengles2_gl2.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	kind:d
GL_ACTIVE_VARIABLES	SDL_opengl_glext.h	/^#define GL_ACTIVE_VARIABLES /;"	kind:d
GL_ACTIVE_VARYINGS_NV	SDL_opengl_glext.h	/^#define GL_ACTIVE_VARYINGS_NV /;"	kind:d
GL_ACTIVE_VARYING_MAX_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_ACTIVE_VARYING_MAX_LENGTH_NV /;"	kind:d
GL_ACTIVE_VERTEX_UNITS_ARB	SDL_opengl_glext.h	/^#define GL_ACTIVE_VERTEX_UNITS_ARB /;"	kind:d
GL_ADD	SDL_opengl.h	/^#define GL_ADD	/;"	kind:d
GL_ADD_ATI	SDL_opengl_glext.h	/^#define GL_ADD_ATI /;"	kind:d
GL_ADD_SIGNED	SDL_opengl.h	/^#define GL_ADD_SIGNED	/;"	kind:d
GL_ADD_SIGNED	SDL_opengl_glext.h	/^#define GL_ADD_SIGNED /;"	kind:d
GL_ADD_SIGNED_ARB	SDL_opengl_glext.h	/^#define GL_ADD_SIGNED_ARB /;"	kind:d
GL_ADD_SIGNED_EXT	SDL_opengl_glext.h	/^#define GL_ADD_SIGNED_EXT /;"	kind:d
GL_ADJACENT_PAIRS_NV	SDL_opengl_glext.h	/^#define GL_ADJACENT_PAIRS_NV /;"	kind:d
GL_AFFINE_2D_NV	SDL_opengl_glext.h	/^#define GL_AFFINE_2D_NV /;"	kind:d
GL_AFFINE_3D_NV	SDL_opengl_glext.h	/^#define GL_AFFINE_3D_NV /;"	kind:d
GL_ALIASED_LINE_WIDTH_RANGE	SDL_opengl.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE	/;"	kind:d
GL_ALIASED_LINE_WIDTH_RANGE	SDL_opengl_glext.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	kind:d
GL_ALIASED_LINE_WIDTH_RANGE	SDL_opengles2_gl2.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	kind:d
GL_ALIASED_POINT_SIZE_RANGE	SDL_opengl.h	/^#define GL_ALIASED_POINT_SIZE_RANGE	/;"	kind:d
GL_ALIASED_POINT_SIZE_RANGE	SDL_opengl_glext.h	/^#define GL_ALIASED_POINT_SIZE_RANGE /;"	kind:d
GL_ALIASED_POINT_SIZE_RANGE	SDL_opengles2_gl2.h	/^#define GL_ALIASED_POINT_SIZE_RANGE /;"	kind:d
GL_ALLOW_DRAW_FRG_HINT_PGI	SDL_opengl_glext.h	/^#define GL_ALLOW_DRAW_FRG_HINT_PGI /;"	kind:d
GL_ALLOW_DRAW_MEM_HINT_PGI	SDL_opengl_glext.h	/^#define GL_ALLOW_DRAW_MEM_HINT_PGI /;"	kind:d
GL_ALLOW_DRAW_OBJ_HINT_PGI	SDL_opengl_glext.h	/^#define GL_ALLOW_DRAW_OBJ_HINT_PGI /;"	kind:d
GL_ALLOW_DRAW_WIN_HINT_PGI	SDL_opengl_glext.h	/^#define GL_ALLOW_DRAW_WIN_HINT_PGI /;"	kind:d
GL_ALL_ATTRIB_BITS	SDL_opengl.h	/^#define GL_ALL_ATTRIB_BITS	/;"	kind:d
GL_ALL_BARRIER_BITS	SDL_opengl_glext.h	/^#define GL_ALL_BARRIER_BITS /;"	kind:d
GL_ALL_BARRIER_BITS_EXT	SDL_opengl_glext.h	/^#define GL_ALL_BARRIER_BITS_EXT /;"	kind:d
GL_ALL_CLIENT_ATTRIB_BITS	SDL_opengl.h	/^#define GL_ALL_CLIENT_ATTRIB_BITS /;"	kind:d
GL_ALL_COMPLETED_NV	SDL_opengl_glext.h	/^#define GL_ALL_COMPLETED_NV /;"	kind:d
GL_ALL_COMPLETED_NV	SDL_opengles2_gl2ext.h	/^#define GL_ALL_COMPLETED_NV /;"	kind:d
GL_ALL_SHADER_BITS	SDL_opengl_glext.h	/^#define GL_ALL_SHADER_BITS /;"	kind:d
GL_ALL_SHADER_BITS_EXT	SDL_opengles2_gl2ext.h	/^#define GL_ALL_SHADER_BITS_EXT /;"	kind:d
GL_ALL_STATIC_DATA_IBM	SDL_opengl_glext.h	/^#define GL_ALL_STATIC_DATA_IBM /;"	kind:d
GL_ALPHA	SDL_opengl.h	/^#define GL_ALPHA	/;"	kind:d
GL_ALPHA	SDL_opengles2_gl2.h	/^#define GL_ALPHA /;"	kind:d
GL_ALPHA12	SDL_opengl.h	/^#define GL_ALPHA12	/;"	kind:d
GL_ALPHA12_EXT	SDL_opengl_glext.h	/^#define GL_ALPHA12_EXT /;"	kind:d
GL_ALPHA16	SDL_opengl.h	/^#define GL_ALPHA16	/;"	kind:d
GL_ALPHA16F_ARB	SDL_opengl_glext.h	/^#define GL_ALPHA16F_ARB /;"	kind:d
GL_ALPHA16F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_ALPHA16F_EXT /;"	kind:d
GL_ALPHA16I_EXT	SDL_opengl_glext.h	/^#define GL_ALPHA16I_EXT /;"	kind:d
GL_ALPHA16UI_EXT	SDL_opengl_glext.h	/^#define GL_ALPHA16UI_EXT /;"	kind:d
GL_ALPHA16_EXT	SDL_opengl_glext.h	/^#define GL_ALPHA16_EXT /;"	kind:d
GL_ALPHA16_SNORM	SDL_opengl_glext.h	/^#define GL_ALPHA16_SNORM /;"	kind:d
GL_ALPHA32F_ARB	SDL_opengl_glext.h	/^#define GL_ALPHA32F_ARB /;"	kind:d
GL_ALPHA32F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_ALPHA32F_EXT /;"	kind:d
GL_ALPHA32I_EXT	SDL_opengl_glext.h	/^#define GL_ALPHA32I_EXT /;"	kind:d
GL_ALPHA32UI_EXT	SDL_opengl_glext.h	/^#define GL_ALPHA32UI_EXT /;"	kind:d
GL_ALPHA4	SDL_opengl.h	/^#define GL_ALPHA4	/;"	kind:d
GL_ALPHA4_EXT	SDL_opengl_glext.h	/^#define GL_ALPHA4_EXT /;"	kind:d
GL_ALPHA8	SDL_opengl.h	/^#define GL_ALPHA8	/;"	kind:d
GL_ALPHA8I_EXT	SDL_opengl_glext.h	/^#define GL_ALPHA8I_EXT /;"	kind:d
GL_ALPHA8UI_EXT	SDL_opengl_glext.h	/^#define GL_ALPHA8UI_EXT /;"	kind:d
GL_ALPHA8_EXT	SDL_opengl_glext.h	/^#define GL_ALPHA8_EXT /;"	kind:d
GL_ALPHA8_EXT	SDL_opengles2_gl2ext.h	/^#define GL_ALPHA8_EXT /;"	kind:d
GL_ALPHA8_OES	SDL_opengles2_gl2ext.h	/^#define GL_ALPHA8_OES /;"	kind:d
GL_ALPHA8_SNORM	SDL_opengl_glext.h	/^#define GL_ALPHA8_SNORM /;"	kind:d
GL_ALPHA_BIAS	SDL_opengl.h	/^#define GL_ALPHA_BIAS	/;"	kind:d
GL_ALPHA_BITS	SDL_opengl.h	/^#define GL_ALPHA_BITS	/;"	kind:d
GL_ALPHA_BITS	SDL_opengles2_gl2.h	/^#define GL_ALPHA_BITS /;"	kind:d
GL_ALPHA_BLEND_EQUATION_ATI	SDL_opengl.h	/^#define GL_ALPHA_BLEND_EQUATION_ATI	/;"	kind:d
GL_ALPHA_FLOAT16_APPLE	SDL_opengl_glext.h	/^#define GL_ALPHA_FLOAT16_APPLE /;"	kind:d
GL_ALPHA_FLOAT16_ATI	SDL_opengl_glext.h	/^#define GL_ALPHA_FLOAT16_ATI /;"	kind:d
GL_ALPHA_FLOAT32_APPLE	SDL_opengl_glext.h	/^#define GL_ALPHA_FLOAT32_APPLE /;"	kind:d
GL_ALPHA_FLOAT32_ATI	SDL_opengl_glext.h	/^#define GL_ALPHA_FLOAT32_ATI /;"	kind:d
GL_ALPHA_INTEGER	SDL_opengl_glext.h	/^#define GL_ALPHA_INTEGER /;"	kind:d
GL_ALPHA_INTEGER_EXT	SDL_opengl_glext.h	/^#define GL_ALPHA_INTEGER_EXT /;"	kind:d
GL_ALPHA_MAX_CLAMP_INGR	SDL_opengl_glext.h	/^#define GL_ALPHA_MAX_CLAMP_INGR /;"	kind:d
GL_ALPHA_MAX_SGIX	SDL_opengl_glext.h	/^#define GL_ALPHA_MAX_SGIX /;"	kind:d
GL_ALPHA_MIN_CLAMP_INGR	SDL_opengl_glext.h	/^#define GL_ALPHA_MIN_CLAMP_INGR /;"	kind:d
GL_ALPHA_MIN_SGIX	SDL_opengl_glext.h	/^#define GL_ALPHA_MIN_SGIX /;"	kind:d
GL_ALPHA_SCALE	SDL_opengl.h	/^#define GL_ALPHA_SCALE	/;"	kind:d
GL_ALPHA_SNORM	SDL_opengl_glext.h	/^#define GL_ALPHA_SNORM /;"	kind:d
GL_ALPHA_TEST	SDL_opengl.h	/^#define GL_ALPHA_TEST	/;"	kind:d
GL_ALPHA_TEST_FUNC	SDL_opengl.h	/^#define GL_ALPHA_TEST_FUNC	/;"	kind:d
GL_ALPHA_TEST_FUNC_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_ALPHA_TEST_FUNC_QCOM /;"	kind:d
GL_ALPHA_TEST_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_ALPHA_TEST_QCOM /;"	kind:d
GL_ALPHA_TEST_REF	SDL_opengl.h	/^#define GL_ALPHA_TEST_REF	/;"	kind:d
GL_ALPHA_TEST_REF_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_ALPHA_TEST_REF_QCOM /;"	kind:d
GL_ALREADY_SIGNALED	SDL_opengl_glext.h	/^#define GL_ALREADY_SIGNALED /;"	kind:d
GL_ALREADY_SIGNALED_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_ALREADY_SIGNALED_APPLE /;"	kind:d
GL_ALWAYS	SDL_opengl.h	/^#define GL_ALWAYS	/;"	kind:d
GL_ALWAYS	SDL_opengles2_gl2.h	/^#define GL_ALWAYS /;"	kind:d
GL_ALWAYS_FAST_HINT_PGI	SDL_opengl_glext.h	/^#define GL_ALWAYS_FAST_HINT_PGI /;"	kind:d
GL_ALWAYS_SOFT_HINT_PGI	SDL_opengl_glext.h	/^#define GL_ALWAYS_SOFT_HINT_PGI /;"	kind:d
GL_AMBIENT	SDL_opengl.h	/^#define GL_AMBIENT	/;"	kind:d
GL_AMBIENT_AND_DIFFUSE	SDL_opengl.h	/^#define GL_AMBIENT_AND_DIFFUSE	/;"	kind:d
GL_AMD_blend_minmax_factor	SDL_opengl_glext.h	/^#define GL_AMD_blend_minmax_factor /;"	kind:d
GL_AMD_compressed_3DC_texture	SDL_opengles2_gl2ext.h	/^#define GL_AMD_compressed_3DC_texture /;"	kind:d
GL_AMD_compressed_ATC_texture	SDL_opengles2_gl2ext.h	/^#define GL_AMD_compressed_ATC_texture /;"	kind:d
GL_AMD_conservative_depth	SDL_opengl_glext.h	/^#define GL_AMD_conservative_depth /;"	kind:d
GL_AMD_debug_output	SDL_opengl_glext.h	/^#define GL_AMD_debug_output /;"	kind:d
GL_AMD_depth_clamp_separate	SDL_opengl_glext.h	/^#define GL_AMD_depth_clamp_separate /;"	kind:d
GL_AMD_draw_buffers_blend	SDL_opengl_glext.h	/^#define GL_AMD_draw_buffers_blend /;"	kind:d
GL_AMD_gcn_shader	SDL_opengl_glext.h	/^#define GL_AMD_gcn_shader /;"	kind:d
GL_AMD_gpu_shader_int64	SDL_opengl_glext.h	/^#define GL_AMD_gpu_shader_int64 /;"	kind:d
GL_AMD_interleaved_elements	SDL_opengl_glext.h	/^#define GL_AMD_interleaved_elements /;"	kind:d
GL_AMD_multi_draw_indirect	SDL_opengl_glext.h	/^#define GL_AMD_multi_draw_indirect /;"	kind:d
GL_AMD_name_gen_delete	SDL_opengl_glext.h	/^#define GL_AMD_name_gen_delete /;"	kind:d
GL_AMD_occlusion_query_event	SDL_opengl_glext.h	/^#define GL_AMD_occlusion_query_event /;"	kind:d
GL_AMD_performance_monitor	SDL_opengl_glext.h	/^#define GL_AMD_performance_monitor /;"	kind:d
GL_AMD_performance_monitor	SDL_opengles2_gl2ext.h	/^#define GL_AMD_performance_monitor /;"	kind:d
GL_AMD_pinned_memory	SDL_opengl_glext.h	/^#define GL_AMD_pinned_memory /;"	kind:d
GL_AMD_program_binary_Z400	SDL_opengles2_gl2ext.h	/^#define GL_AMD_program_binary_Z400 /;"	kind:d
GL_AMD_query_buffer_object	SDL_opengl_glext.h	/^#define GL_AMD_query_buffer_object /;"	kind:d
GL_AMD_sample_positions	SDL_opengl_glext.h	/^#define GL_AMD_sample_positions /;"	kind:d
GL_AMD_seamless_cubemap_per_texture	SDL_opengl_glext.h	/^#define GL_AMD_seamless_cubemap_per_texture /;"	kind:d
GL_AMD_shader_atomic_counter_ops	SDL_opengl_glext.h	/^#define GL_AMD_shader_atomic_counter_ops /;"	kind:d
GL_AMD_shader_stencil_export	SDL_opengl_glext.h	/^#define GL_AMD_shader_stencil_export /;"	kind:d
GL_AMD_shader_trinary_minmax	SDL_opengl_glext.h	/^#define GL_AMD_shader_trinary_minmax /;"	kind:d
GL_AMD_sparse_texture	SDL_opengl_glext.h	/^#define GL_AMD_sparse_texture /;"	kind:d
GL_AMD_stencil_operation_extended	SDL_opengl_glext.h	/^#define GL_AMD_stencil_operation_extended /;"	kind:d
GL_AMD_texture_texture4	SDL_opengl_glext.h	/^#define GL_AMD_texture_texture4 /;"	kind:d
GL_AMD_transform_feedback3_lines_triangles	SDL_opengl_glext.h	/^#define GL_AMD_transform_feedback3_lines_triangles /;"	kind:d
GL_AMD_transform_feedback4	SDL_opengl_glext.h	/^#define GL_AMD_transform_feedback4 /;"	kind:d
GL_AMD_vertex_shader_layer	SDL_opengl_glext.h	/^#define GL_AMD_vertex_shader_layer /;"	kind:d
GL_AMD_vertex_shader_tessellator	SDL_opengl_glext.h	/^#define GL_AMD_vertex_shader_tessellator /;"	kind:d
GL_AMD_vertex_shader_viewport_index	SDL_opengl_glext.h	/^#define GL_AMD_vertex_shader_viewport_index /;"	kind:d
GL_AND	SDL_opengl.h	/^#define GL_AND	/;"	kind:d
GL_AND_INVERTED	SDL_opengl.h	/^#define GL_AND_INVERTED	/;"	kind:d
GL_AND_REVERSE	SDL_opengl.h	/^#define GL_AND_REVERSE	/;"	kind:d
GL_ANGLE_depth_texture	SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_depth_texture /;"	kind:d
GL_ANGLE_framebuffer_blit	SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_framebuffer_blit /;"	kind:d
GL_ANGLE_framebuffer_multisample	SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_framebuffer_multisample /;"	kind:d
GL_ANGLE_instanced_arrays	SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_instanced_arrays /;"	kind:d
GL_ANGLE_pack_reverse_row_order	SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_pack_reverse_row_order /;"	kind:d
GL_ANGLE_program_binary	SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_program_binary /;"	kind:d
GL_ANGLE_texture_compression_dxt3	SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_texture_compression_dxt3 /;"	kind:d
GL_ANGLE_texture_compression_dxt5	SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_texture_compression_dxt5 /;"	kind:d
GL_ANGLE_texture_usage	SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_texture_usage /;"	kind:d
GL_ANGLE_translated_shader_source	SDL_opengles2_gl2ext.h	/^#define GL_ANGLE_translated_shader_source /;"	kind:d
GL_ANY_SAMPLES_PASSED	SDL_opengl_glext.h	/^#define GL_ANY_SAMPLES_PASSED /;"	kind:d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	SDL_opengl_glext.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE /;"	kind:d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT	SDL_opengles2_gl2ext.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT /;"	kind:d
GL_ANY_SAMPLES_PASSED_EXT	SDL_opengles2_gl2ext.h	/^#define GL_ANY_SAMPLES_PASSED_EXT /;"	kind:d
GL_APICALL	SDL_opengles2_gl2platform.h	/^#define GL_APICALL /;"	kind:d
GL_APIENTRY	SDL_opengles2_gl2platform.h	/^#define GL_APIENTRY /;"	kind:d
GL_APIENTRYP	SDL_opengles2_gl2ext.h	/^#   define GL_APIENTRYP /;"	kind:d
GL_APPLE_aux_depth_stencil	SDL_opengl_glext.h	/^#define GL_APPLE_aux_depth_stencil /;"	kind:d
GL_APPLE_client_storage	SDL_opengl_glext.h	/^#define GL_APPLE_client_storage /;"	kind:d
GL_APPLE_copy_texture_levels	SDL_opengles2_gl2ext.h	/^#define GL_APPLE_copy_texture_levels /;"	kind:d
GL_APPLE_element_array	SDL_opengl_glext.h	/^#define GL_APPLE_element_array /;"	kind:d
GL_APPLE_fence	SDL_opengl_glext.h	/^#define GL_APPLE_fence /;"	kind:d
GL_APPLE_float_pixels	SDL_opengl_glext.h	/^#define GL_APPLE_float_pixels /;"	kind:d
GL_APPLE_flush_buffer_range	SDL_opengl_glext.h	/^#define GL_APPLE_flush_buffer_range /;"	kind:d
GL_APPLE_framebuffer_multisample	SDL_opengles2_gl2ext.h	/^#define GL_APPLE_framebuffer_multisample /;"	kind:d
GL_APPLE_object_purgeable	SDL_opengl_glext.h	/^#define GL_APPLE_object_purgeable /;"	kind:d
GL_APPLE_rgb_422	SDL_opengl_glext.h	/^#define GL_APPLE_rgb_422 /;"	kind:d
GL_APPLE_rgb_422	SDL_opengles2_gl2ext.h	/^#define GL_APPLE_rgb_422 /;"	kind:d
GL_APPLE_row_bytes	SDL_opengl_glext.h	/^#define GL_APPLE_row_bytes /;"	kind:d
GL_APPLE_specular_vector	SDL_opengl_glext.h	/^#define GL_APPLE_specular_vector /;"	kind:d
GL_APPLE_sync	SDL_opengles2_gl2ext.h	/^#define GL_APPLE_sync /;"	kind:d
GL_APPLE_texture_format_BGRA8888	SDL_opengles2_gl2ext.h	/^#define GL_APPLE_texture_format_BGRA8888 /;"	kind:d
GL_APPLE_texture_max_level	SDL_opengles2_gl2ext.h	/^#define GL_APPLE_texture_max_level /;"	kind:d
GL_APPLE_texture_range	SDL_opengl_glext.h	/^#define GL_APPLE_texture_range /;"	kind:d
GL_APPLE_transform_hint	SDL_opengl_glext.h	/^#define GL_APPLE_transform_hint /;"	kind:d
GL_APPLE_vertex_array_object	SDL_opengl_glext.h	/^#define GL_APPLE_vertex_array_object /;"	kind:d
GL_APPLE_vertex_array_range	SDL_opengl_glext.h	/^#define GL_APPLE_vertex_array_range /;"	kind:d
GL_APPLE_vertex_program_evaluators	SDL_opengl_glext.h	/^#define GL_APPLE_vertex_program_evaluators /;"	kind:d
GL_APPLE_ycbcr_422	SDL_opengl_glext.h	/^#define GL_APPLE_ycbcr_422 /;"	kind:d
GL_ARB_ES2_compatibility	SDL_opengl_glext.h	/^#define GL_ARB_ES2_compatibility /;"	kind:d
GL_ARB_ES3_compatibility	SDL_opengl_glext.h	/^#define GL_ARB_ES3_compatibility /;"	kind:d
GL_ARB_arrays_of_arrays	SDL_opengl_glext.h	/^#define GL_ARB_arrays_of_arrays /;"	kind:d
GL_ARB_base_instance	SDL_opengl_glext.h	/^#define GL_ARB_base_instance /;"	kind:d
GL_ARB_bindless_texture	SDL_opengl_glext.h	/^#define GL_ARB_bindless_texture /;"	kind:d
GL_ARB_blend_func_extended	SDL_opengl_glext.h	/^#define GL_ARB_blend_func_extended /;"	kind:d
GL_ARB_buffer_storage	SDL_opengl_glext.h	/^#define GL_ARB_buffer_storage /;"	kind:d
GL_ARB_cl_event	SDL_opengl_glext.h	/^#define GL_ARB_cl_event /;"	kind:d
GL_ARB_clear_buffer_object	SDL_opengl_glext.h	/^#define GL_ARB_clear_buffer_object /;"	kind:d
GL_ARB_clear_texture	SDL_opengl_glext.h	/^#define GL_ARB_clear_texture /;"	kind:d
GL_ARB_color_buffer_float	SDL_opengl_glext.h	/^#define GL_ARB_color_buffer_float /;"	kind:d
GL_ARB_compatibility	SDL_opengl_glext.h	/^#define GL_ARB_compatibility /;"	kind:d
GL_ARB_compressed_texture_pixel_storage	SDL_opengl_glext.h	/^#define GL_ARB_compressed_texture_pixel_storage /;"	kind:d
GL_ARB_compute_shader	SDL_opengl_glext.h	/^#define GL_ARB_compute_shader /;"	kind:d
GL_ARB_compute_variable_group_size	SDL_opengl_glext.h	/^#define GL_ARB_compute_variable_group_size /;"	kind:d
GL_ARB_conservative_depth	SDL_opengl_glext.h	/^#define GL_ARB_conservative_depth /;"	kind:d
GL_ARB_copy_buffer	SDL_opengl_glext.h	/^#define GL_ARB_copy_buffer /;"	kind:d
GL_ARB_copy_image	SDL_opengl_glext.h	/^#define GL_ARB_copy_image /;"	kind:d
GL_ARB_debug_output	SDL_opengl_glext.h	/^#define GL_ARB_debug_output /;"	kind:d
GL_ARB_depth_buffer_float	SDL_opengl_glext.h	/^#define GL_ARB_depth_buffer_float /;"	kind:d
GL_ARB_depth_clamp	SDL_opengl_glext.h	/^#define GL_ARB_depth_clamp /;"	kind:d
GL_ARB_depth_texture	SDL_opengl_glext.h	/^#define GL_ARB_depth_texture /;"	kind:d
GL_ARB_draw_buffers	SDL_opengl_glext.h	/^#define GL_ARB_draw_buffers /;"	kind:d
GL_ARB_draw_buffers_blend	SDL_opengl_glext.h	/^#define GL_ARB_draw_buffers_blend /;"	kind:d
GL_ARB_draw_elements_base_vertex	SDL_opengl_glext.h	/^#define GL_ARB_draw_elements_base_vertex /;"	kind:d
GL_ARB_draw_indirect	SDL_opengl_glext.h	/^#define GL_ARB_draw_indirect /;"	kind:d
GL_ARB_draw_instanced	SDL_opengl_glext.h	/^#define GL_ARB_draw_instanced /;"	kind:d
GL_ARB_enhanced_layouts	SDL_opengl_glext.h	/^#define GL_ARB_enhanced_layouts /;"	kind:d
GL_ARB_explicit_attrib_location	SDL_opengl_glext.h	/^#define GL_ARB_explicit_attrib_location /;"	kind:d
GL_ARB_explicit_uniform_location	SDL_opengl_glext.h	/^#define GL_ARB_explicit_uniform_location /;"	kind:d
GL_ARB_fragment_coord_conventions	SDL_opengl_glext.h	/^#define GL_ARB_fragment_coord_conventions /;"	kind:d
GL_ARB_fragment_layer_viewport	SDL_opengl_glext.h	/^#define GL_ARB_fragment_layer_viewport /;"	kind:d
GL_ARB_fragment_program	SDL_opengl_glext.h	/^#define GL_ARB_fragment_program /;"	kind:d
GL_ARB_fragment_program_shadow	SDL_opengl_glext.h	/^#define GL_ARB_fragment_program_shadow /;"	kind:d
GL_ARB_fragment_shader	SDL_opengl_glext.h	/^#define GL_ARB_fragment_shader /;"	kind:d
GL_ARB_framebuffer_no_attachments	SDL_opengl_glext.h	/^#define GL_ARB_framebuffer_no_attachments /;"	kind:d
GL_ARB_framebuffer_object	SDL_opengl_glext.h	/^#define GL_ARB_framebuffer_object /;"	kind:d
GL_ARB_framebuffer_sRGB	SDL_opengl_glext.h	/^#define GL_ARB_framebuffer_sRGB /;"	kind:d
GL_ARB_geometry_shader4	SDL_opengl_glext.h	/^#define GL_ARB_geometry_shader4 /;"	kind:d
GL_ARB_get_program_binary	SDL_opengl_glext.h	/^#define GL_ARB_get_program_binary /;"	kind:d
GL_ARB_gpu_shader5	SDL_opengl_glext.h	/^#define GL_ARB_gpu_shader5 /;"	kind:d
GL_ARB_gpu_shader_fp64	SDL_opengl_glext.h	/^#define GL_ARB_gpu_shader_fp64 /;"	kind:d
GL_ARB_half_float_pixel	SDL_opengl_glext.h	/^#define GL_ARB_half_float_pixel /;"	kind:d
GL_ARB_half_float_vertex	SDL_opengl_glext.h	/^#define GL_ARB_half_float_vertex /;"	kind:d
GL_ARB_imaging	SDL_opengl.h	/^#define GL_ARB_imaging /;"	kind:d
GL_ARB_imaging	SDL_opengl_glext.h	/^#define GL_ARB_imaging /;"	kind:d
GL_ARB_indirect_parameters	SDL_opengl_glext.h	/^#define GL_ARB_indirect_parameters /;"	kind:d
GL_ARB_instanced_arrays	SDL_opengl_glext.h	/^#define GL_ARB_instanced_arrays /;"	kind:d
GL_ARB_internalformat_query	SDL_opengl_glext.h	/^#define GL_ARB_internalformat_query /;"	kind:d
GL_ARB_internalformat_query2	SDL_opengl_glext.h	/^#define GL_ARB_internalformat_query2 /;"	kind:d
GL_ARB_invalidate_subdata	SDL_opengl_glext.h	/^#define GL_ARB_invalidate_subdata /;"	kind:d
GL_ARB_map_buffer_alignment	SDL_opengl_glext.h	/^#define GL_ARB_map_buffer_alignment /;"	kind:d
GL_ARB_map_buffer_range	SDL_opengl_glext.h	/^#define GL_ARB_map_buffer_range /;"	kind:d
GL_ARB_matrix_palette	SDL_opengl_glext.h	/^#define GL_ARB_matrix_palette /;"	kind:d
GL_ARB_multi_bind	SDL_opengl_glext.h	/^#define GL_ARB_multi_bind /;"	kind:d
GL_ARB_multi_draw_indirect	SDL_opengl_glext.h	/^#define GL_ARB_multi_draw_indirect /;"	kind:d
GL_ARB_multisample	SDL_opengl_glext.h	/^#define GL_ARB_multisample /;"	kind:d
GL_ARB_multitexture	SDL_opengl.h	/^#define GL_ARB_multitexture /;"	kind:d
GL_ARB_multitexture	SDL_opengl_glext.h	/^#define GL_ARB_multitexture /;"	kind:d
GL_ARB_occlusion_query	SDL_opengl_glext.h	/^#define GL_ARB_occlusion_query /;"	kind:d
GL_ARB_occlusion_query2	SDL_opengl_glext.h	/^#define GL_ARB_occlusion_query2 /;"	kind:d
GL_ARB_pixel_buffer_object	SDL_opengl_glext.h	/^#define GL_ARB_pixel_buffer_object /;"	kind:d
GL_ARB_point_parameters	SDL_opengl_glext.h	/^#define GL_ARB_point_parameters /;"	kind:d
GL_ARB_point_sprite	SDL_opengl_glext.h	/^#define GL_ARB_point_sprite /;"	kind:d
GL_ARB_program_interface_query	SDL_opengl_glext.h	/^#define GL_ARB_program_interface_query /;"	kind:d
GL_ARB_provoking_vertex	SDL_opengl_glext.h	/^#define GL_ARB_provoking_vertex /;"	kind:d
GL_ARB_query_buffer_object	SDL_opengl_glext.h	/^#define GL_ARB_query_buffer_object /;"	kind:d
GL_ARB_robust_buffer_access_behavior	SDL_opengl_glext.h	/^#define GL_ARB_robust_buffer_access_behavior /;"	kind:d
GL_ARB_robustness	SDL_opengl_glext.h	/^#define GL_ARB_robustness /;"	kind:d
GL_ARB_robustness_isolation	SDL_opengl_glext.h	/^#define GL_ARB_robustness_isolation /;"	kind:d
GL_ARB_sample_shading	SDL_opengl_glext.h	/^#define GL_ARB_sample_shading /;"	kind:d
GL_ARB_sampler_objects	SDL_opengl_glext.h	/^#define GL_ARB_sampler_objects /;"	kind:d
GL_ARB_seamless_cube_map	SDL_opengl_glext.h	/^#define GL_ARB_seamless_cube_map /;"	kind:d
GL_ARB_seamless_cubemap_per_texture	SDL_opengl_glext.h	/^#define GL_ARB_seamless_cubemap_per_texture /;"	kind:d
GL_ARB_separate_shader_objects	SDL_opengl_glext.h	/^#define GL_ARB_separate_shader_objects /;"	kind:d
GL_ARB_shader_atomic_counters	SDL_opengl_glext.h	/^#define GL_ARB_shader_atomic_counters /;"	kind:d
GL_ARB_shader_bit_encoding	SDL_opengl_glext.h	/^#define GL_ARB_shader_bit_encoding /;"	kind:d
GL_ARB_shader_draw_parameters	SDL_opengl_glext.h	/^#define GL_ARB_shader_draw_parameters /;"	kind:d
GL_ARB_shader_group_vote	SDL_opengl_glext.h	/^#define GL_ARB_shader_group_vote /;"	kind:d
GL_ARB_shader_image_load_store	SDL_opengl_glext.h	/^#define GL_ARB_shader_image_load_store /;"	kind:d
GL_ARB_shader_image_size	SDL_opengl_glext.h	/^#define GL_ARB_shader_image_size /;"	kind:d
GL_ARB_shader_objects	SDL_opengl_glext.h	/^#define GL_ARB_shader_objects /;"	kind:d
GL_ARB_shader_precision	SDL_opengl_glext.h	/^#define GL_ARB_shader_precision /;"	kind:d
GL_ARB_shader_stencil_export	SDL_opengl_glext.h	/^#define GL_ARB_shader_stencil_export /;"	kind:d
GL_ARB_shader_storage_buffer_object	SDL_opengl_glext.h	/^#define GL_ARB_shader_storage_buffer_object /;"	kind:d
GL_ARB_shader_subroutine	SDL_opengl_glext.h	/^#define GL_ARB_shader_subroutine /;"	kind:d
GL_ARB_shader_texture_lod	SDL_opengl_glext.h	/^#define GL_ARB_shader_texture_lod /;"	kind:d
GL_ARB_shading_language_100	SDL_opengl_glext.h	/^#define GL_ARB_shading_language_100 /;"	kind:d
GL_ARB_shading_language_420pack	SDL_opengl_glext.h	/^#define GL_ARB_shading_language_420pack /;"	kind:d
GL_ARB_shading_language_include	SDL_opengl_glext.h	/^#define GL_ARB_shading_language_include /;"	kind:d
GL_ARB_shading_language_packing	SDL_opengl_glext.h	/^#define GL_ARB_shading_language_packing /;"	kind:d
GL_ARB_shadow	SDL_opengl_glext.h	/^#define GL_ARB_shadow /;"	kind:d
GL_ARB_shadow_ambient	SDL_opengl_glext.h	/^#define GL_ARB_shadow_ambient /;"	kind:d
GL_ARB_sparse_texture	SDL_opengl_glext.h	/^#define GL_ARB_sparse_texture /;"	kind:d
GL_ARB_stencil_texturing	SDL_opengl_glext.h	/^#define GL_ARB_stencil_texturing /;"	kind:d
GL_ARB_sync	SDL_opengl_glext.h	/^#define GL_ARB_sync /;"	kind:d
GL_ARB_tessellation_shader	SDL_opengl_glext.h	/^#define GL_ARB_tessellation_shader /;"	kind:d
GL_ARB_texture_border_clamp	SDL_opengl_glext.h	/^#define GL_ARB_texture_border_clamp /;"	kind:d
GL_ARB_texture_buffer_object	SDL_opengl_glext.h	/^#define GL_ARB_texture_buffer_object /;"	kind:d
GL_ARB_texture_buffer_object_rgb32	SDL_opengl_glext.h	/^#define GL_ARB_texture_buffer_object_rgb32 /;"	kind:d
GL_ARB_texture_buffer_range	SDL_opengl_glext.h	/^#define GL_ARB_texture_buffer_range /;"	kind:d
GL_ARB_texture_compression	SDL_opengl_glext.h	/^#define GL_ARB_texture_compression /;"	kind:d
GL_ARB_texture_compression_bptc	SDL_opengl_glext.h	/^#define GL_ARB_texture_compression_bptc /;"	kind:d
GL_ARB_texture_compression_rgtc	SDL_opengl_glext.h	/^#define GL_ARB_texture_compression_rgtc /;"	kind:d
GL_ARB_texture_cube_map	SDL_opengl_glext.h	/^#define GL_ARB_texture_cube_map /;"	kind:d
GL_ARB_texture_cube_map_array	SDL_opengl_glext.h	/^#define GL_ARB_texture_cube_map_array /;"	kind:d
GL_ARB_texture_env_add	SDL_opengl_glext.h	/^#define GL_ARB_texture_env_add /;"	kind:d
GL_ARB_texture_env_combine	SDL_opengl_glext.h	/^#define GL_ARB_texture_env_combine /;"	kind:d
GL_ARB_texture_env_crossbar	SDL_opengl_glext.h	/^#define GL_ARB_texture_env_crossbar /;"	kind:d
GL_ARB_texture_env_dot3	SDL_opengl_glext.h	/^#define GL_ARB_texture_env_dot3 /;"	kind:d
GL_ARB_texture_float	SDL_opengl_glext.h	/^#define GL_ARB_texture_float /;"	kind:d
GL_ARB_texture_gather	SDL_opengl_glext.h	/^#define GL_ARB_texture_gather /;"	kind:d
GL_ARB_texture_mirror_clamp_to_edge	SDL_opengl_glext.h	/^#define GL_ARB_texture_mirror_clamp_to_edge /;"	kind:d
GL_ARB_texture_mirrored_repeat	SDL_opengl_glext.h	/^#define GL_ARB_texture_mirrored_repeat /;"	kind:d
GL_ARB_texture_multisample	SDL_opengl_glext.h	/^#define GL_ARB_texture_multisample /;"	kind:d
GL_ARB_texture_non_power_of_two	SDL_opengl_glext.h	/^#define GL_ARB_texture_non_power_of_two /;"	kind:d
GL_ARB_texture_query_levels	SDL_opengl_glext.h	/^#define GL_ARB_texture_query_levels /;"	kind:d
GL_ARB_texture_query_lod	SDL_opengl_glext.h	/^#define GL_ARB_texture_query_lod /;"	kind:d
GL_ARB_texture_rectangle	SDL_opengl_glext.h	/^#define GL_ARB_texture_rectangle /;"	kind:d
GL_ARB_texture_rg	SDL_opengl_glext.h	/^#define GL_ARB_texture_rg /;"	kind:d
GL_ARB_texture_rgb10_a2ui	SDL_opengl_glext.h	/^#define GL_ARB_texture_rgb10_a2ui /;"	kind:d
GL_ARB_texture_stencil8	SDL_opengl_glext.h	/^#define GL_ARB_texture_stencil8 /;"	kind:d
GL_ARB_texture_storage	SDL_opengl_glext.h	/^#define GL_ARB_texture_storage /;"	kind:d
GL_ARB_texture_storage_multisample	SDL_opengl_glext.h	/^#define GL_ARB_texture_storage_multisample /;"	kind:d
GL_ARB_texture_swizzle	SDL_opengl_glext.h	/^#define GL_ARB_texture_swizzle /;"	kind:d
GL_ARB_texture_view	SDL_opengl_glext.h	/^#define GL_ARB_texture_view /;"	kind:d
GL_ARB_timer_query	SDL_opengl_glext.h	/^#define GL_ARB_timer_query /;"	kind:d
GL_ARB_transform_feedback2	SDL_opengl_glext.h	/^#define GL_ARB_transform_feedback2 /;"	kind:d
GL_ARB_transform_feedback3	SDL_opengl_glext.h	/^#define GL_ARB_transform_feedback3 /;"	kind:d
GL_ARB_transform_feedback_instanced	SDL_opengl_glext.h	/^#define GL_ARB_transform_feedback_instanced /;"	kind:d
GL_ARB_transpose_matrix	SDL_opengl_glext.h	/^#define GL_ARB_transpose_matrix /;"	kind:d
GL_ARB_uniform_buffer_object	SDL_opengl_glext.h	/^#define GL_ARB_uniform_buffer_object /;"	kind:d
GL_ARB_vertex_array_bgra	SDL_opengl_glext.h	/^#define GL_ARB_vertex_array_bgra /;"	kind:d
GL_ARB_vertex_array_object	SDL_opengl_glext.h	/^#define GL_ARB_vertex_array_object /;"	kind:d
GL_ARB_vertex_attrib_64bit	SDL_opengl_glext.h	/^#define GL_ARB_vertex_attrib_64bit /;"	kind:d
GL_ARB_vertex_attrib_binding	SDL_opengl_glext.h	/^#define GL_ARB_vertex_attrib_binding /;"	kind:d
GL_ARB_vertex_blend	SDL_opengl_glext.h	/^#define GL_ARB_vertex_blend /;"	kind:d
GL_ARB_vertex_buffer_object	SDL_opengl_glext.h	/^#define GL_ARB_vertex_buffer_object /;"	kind:d
GL_ARB_vertex_program	SDL_opengl_glext.h	/^#define GL_ARB_vertex_program /;"	kind:d
GL_ARB_vertex_shader	SDL_opengl_glext.h	/^#define GL_ARB_vertex_shader /;"	kind:d
GL_ARB_vertex_type_10f_11f_11f_rev	SDL_opengl_glext.h	/^#define GL_ARB_vertex_type_10f_11f_11f_rev /;"	kind:d
GL_ARB_vertex_type_2_10_10_10_rev	SDL_opengl_glext.h	/^#define GL_ARB_vertex_type_2_10_10_10_rev /;"	kind:d
GL_ARB_viewport_array	SDL_opengl_glext.h	/^#define GL_ARB_viewport_array /;"	kind:d
GL_ARB_window_pos	SDL_opengl_glext.h	/^#define GL_ARB_window_pos /;"	kind:d
GL_ARC_TO_NV	SDL_opengl_glext.h	/^#define GL_ARC_TO_NV /;"	kind:d
GL_ARM_mali_program_binary	SDL_opengles2_gl2ext.h	/^#define GL_ARM_mali_program_binary /;"	kind:d
GL_ARM_mali_shader_binary	SDL_opengles2_gl2ext.h	/^#define GL_ARM_mali_shader_binary /;"	kind:d
GL_ARM_rgba8	SDL_opengles2_gl2ext.h	/^#define GL_ARM_rgba8 /;"	kind:d
GL_ARRAY_BUFFER	SDL_opengl_glext.h	/^#define GL_ARRAY_BUFFER /;"	kind:d
GL_ARRAY_BUFFER	SDL_opengles2_gl2.h	/^#define GL_ARRAY_BUFFER /;"	kind:d
GL_ARRAY_BUFFER_ARB	SDL_opengl_glext.h	/^#define GL_ARRAY_BUFFER_ARB /;"	kind:d
GL_ARRAY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	kind:d
GL_ARRAY_BUFFER_BINDING	SDL_opengles2_gl2.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	kind:d
GL_ARRAY_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_ARRAY_BUFFER_BINDING_ARB /;"	kind:d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	SDL_opengl_glext.h	/^#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT /;"	kind:d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	SDL_opengl_glext.h	/^#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT /;"	kind:d
GL_ARRAY_OBJECT_BUFFER_ATI	SDL_opengl_glext.h	/^#define GL_ARRAY_OBJECT_BUFFER_ATI /;"	kind:d
GL_ARRAY_OBJECT_OFFSET_ATI	SDL_opengl_glext.h	/^#define GL_ARRAY_OBJECT_OFFSET_ATI /;"	kind:d
GL_ARRAY_SIZE	SDL_opengl_glext.h	/^#define GL_ARRAY_SIZE /;"	kind:d
GL_ARRAY_STRIDE	SDL_opengl_glext.h	/^#define GL_ARRAY_STRIDE /;"	kind:d
GL_ASYNC_DRAW_PIXELS_SGIX	SDL_opengl_glext.h	/^#define GL_ASYNC_DRAW_PIXELS_SGIX /;"	kind:d
GL_ASYNC_HISTOGRAM_SGIX	SDL_opengl_glext.h	/^#define GL_ASYNC_HISTOGRAM_SGIX /;"	kind:d
GL_ASYNC_MARKER_SGIX	SDL_opengl_glext.h	/^#define GL_ASYNC_MARKER_SGIX /;"	kind:d
GL_ASYNC_READ_PIXELS_SGIX	SDL_opengl_glext.h	/^#define GL_ASYNC_READ_PIXELS_SGIX /;"	kind:d
GL_ASYNC_TEX_IMAGE_SGIX	SDL_opengl_glext.h	/^#define GL_ASYNC_TEX_IMAGE_SGIX /;"	kind:d
GL_ATC_RGBA_EXPLICIT_ALPHA_AMD	SDL_opengles2_gl2ext.h	/^#define GL_ATC_RGBA_EXPLICIT_ALPHA_AMD /;"	kind:d
GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD	SDL_opengles2_gl2ext.h	/^#define GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD /;"	kind:d
GL_ATC_RGB_AMD	SDL_opengles2_gl2ext.h	/^#define GL_ATC_RGB_AMD /;"	kind:d
GL_ATI_blend_equation_separate	SDL_opengl.h	/^#define GL_ATI_blend_equation_separate /;"	kind:d
GL_ATI_draw_buffers	SDL_opengl_glext.h	/^#define GL_ATI_draw_buffers /;"	kind:d
GL_ATI_element_array	SDL_opengl_glext.h	/^#define GL_ATI_element_array /;"	kind:d
GL_ATI_envmap_bumpmap	SDL_opengl_glext.h	/^#define GL_ATI_envmap_bumpmap /;"	kind:d
GL_ATI_fragment_shader	SDL_opengl_glext.h	/^#define GL_ATI_fragment_shader /;"	kind:d
GL_ATI_map_object_buffer	SDL_opengl_glext.h	/^#define GL_ATI_map_object_buffer /;"	kind:d
GL_ATI_meminfo	SDL_opengl_glext.h	/^#define GL_ATI_meminfo /;"	kind:d
GL_ATI_pixel_format_float	SDL_opengl_glext.h	/^#define GL_ATI_pixel_format_float /;"	kind:d
GL_ATI_pn_triangles	SDL_opengl_glext.h	/^#define GL_ATI_pn_triangles /;"	kind:d
GL_ATI_separate_stencil	SDL_opengl_glext.h	/^#define GL_ATI_separate_stencil /;"	kind:d
GL_ATI_text_fragment_shader	SDL_opengl_glext.h	/^#define GL_ATI_text_fragment_shader /;"	kind:d
GL_ATI_texture_env_combine3	SDL_opengl_glext.h	/^#define GL_ATI_texture_env_combine3 /;"	kind:d
GL_ATI_texture_float	SDL_opengl_glext.h	/^#define GL_ATI_texture_float /;"	kind:d
GL_ATI_texture_mirror_once	SDL_opengl_glext.h	/^#define GL_ATI_texture_mirror_once /;"	kind:d
GL_ATI_vertex_array_object	SDL_opengl_glext.h	/^#define GL_ATI_vertex_array_object /;"	kind:d
GL_ATI_vertex_attrib_array_object	SDL_opengl_glext.h	/^#define GL_ATI_vertex_attrib_array_object /;"	kind:d
GL_ATI_vertex_streams	SDL_opengl_glext.h	/^#define GL_ATI_vertex_streams /;"	kind:d
GL_ATOMIC_COUNTER_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT /;"	kind:d
GL_ATOMIC_COUNTER_BARRIER_BIT_EXT	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_BINDING /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER_INDEX	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_INDEX /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER_SIZE	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_SIZE /;"	kind:d
GL_ATOMIC_COUNTER_BUFFER_START	SDL_opengl_glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_START /;"	kind:d
GL_ATTACHED_SHADERS	SDL_opengl_glext.h	/^#define GL_ATTACHED_SHADERS /;"	kind:d
GL_ATTACHED_SHADERS	SDL_opengles2_gl2.h	/^#define GL_ATTACHED_SHADERS /;"	kind:d
GL_ATTENUATION_EXT	SDL_opengl_glext.h	/^#define GL_ATTENUATION_EXT /;"	kind:d
GL_ATTRIB_ARRAY_POINTER_NV	SDL_opengl_glext.h	/^#define GL_ATTRIB_ARRAY_POINTER_NV /;"	kind:d
GL_ATTRIB_ARRAY_SIZE_NV	SDL_opengl_glext.h	/^#define GL_ATTRIB_ARRAY_SIZE_NV /;"	kind:d
GL_ATTRIB_ARRAY_STRIDE_NV	SDL_opengl_glext.h	/^#define GL_ATTRIB_ARRAY_STRIDE_NV /;"	kind:d
GL_ATTRIB_ARRAY_TYPE_NV	SDL_opengl_glext.h	/^#define GL_ATTRIB_ARRAY_TYPE_NV /;"	kind:d
GL_ATTRIB_STACK_DEPTH	SDL_opengl.h	/^#define GL_ATTRIB_STACK_DEPTH	/;"	kind:d
GL_AUTO_GENERATE_MIPMAP	SDL_opengl_glext.h	/^#define GL_AUTO_GENERATE_MIPMAP /;"	kind:d
GL_AUTO_NORMAL	SDL_opengl.h	/^#define GL_AUTO_NORMAL	/;"	kind:d
GL_AUX0	SDL_opengl.h	/^#define GL_AUX0	/;"	kind:d
GL_AUX1	SDL_opengl.h	/^#define GL_AUX1	/;"	kind:d
GL_AUX2	SDL_opengl.h	/^#define GL_AUX2	/;"	kind:d
GL_AUX3	SDL_opengl.h	/^#define GL_AUX3	/;"	kind:d
GL_AUX_BUFFERS	SDL_opengl.h	/^#define GL_AUX_BUFFERS	/;"	kind:d
GL_AUX_DEPTH_STENCIL_APPLE	SDL_opengl_glext.h	/^#define GL_AUX_DEPTH_STENCIL_APPLE /;"	kind:d
GL_AVERAGE_EXT	SDL_opengl_glext.h	/^#define GL_AVERAGE_EXT /;"	kind:d
GL_AVERAGE_HP	SDL_opengl_glext.h	/^#define GL_AVERAGE_HP /;"	kind:d
GL_BACK	SDL_opengl.h	/^#define GL_BACK	/;"	kind:d
GL_BACK	SDL_opengles2_gl2.h	/^#define GL_BACK /;"	kind:d
GL_BACK_LEFT	SDL_opengl.h	/^#define GL_BACK_LEFT	/;"	kind:d
GL_BACK_NORMALS_HINT_PGI	SDL_opengl_glext.h	/^#define GL_BACK_NORMALS_HINT_PGI /;"	kind:d
GL_BACK_PRIMARY_COLOR_NV	SDL_opengl_glext.h	/^#define GL_BACK_PRIMARY_COLOR_NV /;"	kind:d
GL_BACK_RIGHT	SDL_opengl.h	/^#define GL_BACK_RIGHT	/;"	kind:d
GL_BACK_SECONDARY_COLOR_NV	SDL_opengl_glext.h	/^#define GL_BACK_SECONDARY_COLOR_NV /;"	kind:d
GL_BEVEL_NV	SDL_opengl_glext.h	/^#define GL_BEVEL_NV /;"	kind:d
GL_BGR	SDL_opengl.h	/^#define GL_BGR	/;"	kind:d
GL_BGR	SDL_opengl_glext.h	/^#define GL_BGR /;"	kind:d
GL_BGRA	SDL_opengl.h	/^#define GL_BGRA	/;"	kind:d
GL_BGRA	SDL_opengl_glext.h	/^#define GL_BGRA /;"	kind:d
GL_BGRA8_EXT	SDL_opengles2_gl2ext.h	/^#define GL_BGRA8_EXT /;"	kind:d
GL_BGRA_EXT	SDL_opengl_glext.h	/^#define GL_BGRA_EXT /;"	kind:d
GL_BGRA_EXT	SDL_opengles2_gl2ext.h	/^#define GL_BGRA_EXT /;"	kind:d
GL_BGRA_IMG	SDL_opengles2_gl2ext.h	/^#define GL_BGRA_IMG /;"	kind:d
GL_BGRA_INTEGER	SDL_opengl_glext.h	/^#define GL_BGRA_INTEGER /;"	kind:d
GL_BGRA_INTEGER_EXT	SDL_opengl_glext.h	/^#define GL_BGRA_INTEGER_EXT /;"	kind:d
GL_BGR_EXT	SDL_opengl_glext.h	/^#define GL_BGR_EXT /;"	kind:d
GL_BGR_INTEGER	SDL_opengl_glext.h	/^#define GL_BGR_INTEGER /;"	kind:d
GL_BGR_INTEGER_EXT	SDL_opengl_glext.h	/^#define GL_BGR_INTEGER_EXT /;"	kind:d
GL_BIAS_BIT_ATI	SDL_opengl_glext.h	/^#define GL_BIAS_BIT_ATI /;"	kind:d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	SDL_opengl_glext.h	/^#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV /;"	kind:d
GL_BINNING_CONTROL_HINT_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_BINNING_CONTROL_HINT_QCOM /;"	kind:d
GL_BINORMAL_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_BINORMAL_ARRAY_EXT /;"	kind:d
GL_BINORMAL_ARRAY_POINTER_EXT	SDL_opengl_glext.h	/^#define GL_BINORMAL_ARRAY_POINTER_EXT /;"	kind:d
GL_BINORMAL_ARRAY_STRIDE_EXT	SDL_opengl_glext.h	/^#define GL_BINORMAL_ARRAY_STRIDE_EXT /;"	kind:d
GL_BINORMAL_ARRAY_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_BINORMAL_ARRAY_TYPE_EXT /;"	kind:d
GL_BITMAP	SDL_opengl.h	/^#define GL_BITMAP	/;"	kind:d
GL_BITMAP_TOKEN	SDL_opengl.h	/^#define GL_BITMAP_TOKEN	/;"	kind:d
GL_BLEND	SDL_opengl.h	/^#define GL_BLEND	/;"	kind:d
GL_BLEND	SDL_opengles2_gl2.h	/^#define GL_BLEND /;"	kind:d
GL_BLEND_ADVANCED_COHERENT_NV	SDL_opengl_glext.h	/^#define GL_BLEND_ADVANCED_COHERENT_NV /;"	kind:d
GL_BLEND_COLOR	SDL_opengl.h	/^#define GL_BLEND_COLOR	/;"	kind:d
GL_BLEND_COLOR	SDL_opengl_glext.h	/^#define GL_BLEND_COLOR /;"	kind:d
GL_BLEND_COLOR	SDL_opengles2_gl2.h	/^#define GL_BLEND_COLOR /;"	kind:d
GL_BLEND_COLOR_EXT	SDL_opengl_glext.h	/^#define GL_BLEND_COLOR_EXT /;"	kind:d
GL_BLEND_DST	SDL_opengl.h	/^#define GL_BLEND_DST	/;"	kind:d
GL_BLEND_DST_ALPHA	SDL_opengl_glext.h	/^#define GL_BLEND_DST_ALPHA /;"	kind:d
GL_BLEND_DST_ALPHA	SDL_opengles2_gl2.h	/^#define GL_BLEND_DST_ALPHA /;"	kind:d
GL_BLEND_DST_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_BLEND_DST_ALPHA_EXT /;"	kind:d
GL_BLEND_DST_RGB	SDL_opengl_glext.h	/^#define GL_BLEND_DST_RGB /;"	kind:d
GL_BLEND_DST_RGB	SDL_opengles2_gl2.h	/^#define GL_BLEND_DST_RGB /;"	kind:d
GL_BLEND_DST_RGB_EXT	SDL_opengl_glext.h	/^#define GL_BLEND_DST_RGB_EXT /;"	kind:d
GL_BLEND_EQUATION	SDL_opengl.h	/^#define GL_BLEND_EQUATION	/;"	kind:d
GL_BLEND_EQUATION	SDL_opengl_glext.h	/^#define GL_BLEND_EQUATION /;"	kind:d
GL_BLEND_EQUATION	SDL_opengles2_gl2.h	/^#define GL_BLEND_EQUATION /;"	kind:d
GL_BLEND_EQUATION_ALPHA	SDL_opengl_glext.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	kind:d
GL_BLEND_EQUATION_ALPHA	SDL_opengles2_gl2.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	kind:d
GL_BLEND_EQUATION_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_BLEND_EQUATION_ALPHA_EXT /;"	kind:d
GL_BLEND_EQUATION_EXT	SDL_opengl_glext.h	/^#define GL_BLEND_EQUATION_EXT /;"	kind:d
GL_BLEND_EQUATION_RGB	SDL_opengl_glext.h	/^#define GL_BLEND_EQUATION_RGB /;"	kind:d
GL_BLEND_EQUATION_RGB	SDL_opengles2_gl2.h	/^#define GL_BLEND_EQUATION_RGB /;"	kind:d
GL_BLEND_EQUATION_RGB_EXT	SDL_opengl_glext.h	/^#define GL_BLEND_EQUATION_RGB_EXT /;"	kind:d
GL_BLEND_OVERLAP_NV	SDL_opengl_glext.h	/^#define GL_BLEND_OVERLAP_NV /;"	kind:d
GL_BLEND_PREMULTIPLIED_SRC_NV	SDL_opengl_glext.h	/^#define GL_BLEND_PREMULTIPLIED_SRC_NV /;"	kind:d
GL_BLEND_SRC	SDL_opengl.h	/^#define GL_BLEND_SRC	/;"	kind:d
GL_BLEND_SRC_ALPHA	SDL_opengl_glext.h	/^#define GL_BLEND_SRC_ALPHA /;"	kind:d
GL_BLEND_SRC_ALPHA	SDL_opengles2_gl2.h	/^#define GL_BLEND_SRC_ALPHA /;"	kind:d
GL_BLEND_SRC_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_BLEND_SRC_ALPHA_EXT /;"	kind:d
GL_BLEND_SRC_RGB	SDL_opengl_glext.h	/^#define GL_BLEND_SRC_RGB /;"	kind:d
GL_BLEND_SRC_RGB	SDL_opengles2_gl2.h	/^#define GL_BLEND_SRC_RGB /;"	kind:d
GL_BLEND_SRC_RGB_EXT	SDL_opengl_glext.h	/^#define GL_BLEND_SRC_RGB_EXT /;"	kind:d
GL_BLOCK_INDEX	SDL_opengl_glext.h	/^#define GL_BLOCK_INDEX /;"	kind:d
GL_BLUE	SDL_opengl.h	/^#define GL_BLUE	/;"	kind:d
GL_BLUE_BIAS	SDL_opengl.h	/^#define GL_BLUE_BIAS	/;"	kind:d
GL_BLUE_BITS	SDL_opengl.h	/^#define GL_BLUE_BITS	/;"	kind:d
GL_BLUE_BITS	SDL_opengles2_gl2.h	/^#define GL_BLUE_BITS /;"	kind:d
GL_BLUE_BIT_ATI	SDL_opengl_glext.h	/^#define GL_BLUE_BIT_ATI /;"	kind:d
GL_BLUE_INTEGER	SDL_opengl_glext.h	/^#define GL_BLUE_INTEGER /;"	kind:d
GL_BLUE_INTEGER_EXT	SDL_opengl_glext.h	/^#define GL_BLUE_INTEGER_EXT /;"	kind:d
GL_BLUE_MAX_CLAMP_INGR	SDL_opengl_glext.h	/^#define GL_BLUE_MAX_CLAMP_INGR /;"	kind:d
GL_BLUE_MIN_CLAMP_INGR	SDL_opengl_glext.h	/^#define GL_BLUE_MIN_CLAMP_INGR /;"	kind:d
GL_BLUE_NV	SDL_opengl_glext.h	/^#define GL_BLUE_NV /;"	kind:d
GL_BLUE_SCALE	SDL_opengl.h	/^#define GL_BLUE_SCALE	/;"	kind:d
GL_BOLD_BIT_NV	SDL_opengl_glext.h	/^#define GL_BOLD_BIT_NV /;"	kind:d
GL_BOOL	SDL_opengl_glext.h	/^#define GL_BOOL /;"	kind:d
GL_BOOL	SDL_opengles2_gl2.h	/^#define GL_BOOL /;"	kind:d
GL_BOOL_ARB	SDL_opengl_glext.h	/^#define GL_BOOL_ARB /;"	kind:d
GL_BOOL_VEC2	SDL_opengl_glext.h	/^#define GL_BOOL_VEC2 /;"	kind:d
GL_BOOL_VEC2	SDL_opengles2_gl2.h	/^#define GL_BOOL_VEC2 /;"	kind:d
GL_BOOL_VEC2_ARB	SDL_opengl_glext.h	/^#define GL_BOOL_VEC2_ARB /;"	kind:d
GL_BOOL_VEC3	SDL_opengl_glext.h	/^#define GL_BOOL_VEC3 /;"	kind:d
GL_BOOL_VEC3	SDL_opengles2_gl2.h	/^#define GL_BOOL_VEC3 /;"	kind:d
GL_BOOL_VEC3_ARB	SDL_opengl_glext.h	/^#define GL_BOOL_VEC3_ARB /;"	kind:d
GL_BOOL_VEC4	SDL_opengl_glext.h	/^#define GL_BOOL_VEC4 /;"	kind:d
GL_BOOL_VEC4	SDL_opengles2_gl2.h	/^#define GL_BOOL_VEC4 /;"	kind:d
GL_BOOL_VEC4_ARB	SDL_opengl_glext.h	/^#define GL_BOOL_VEC4_ARB /;"	kind:d
GL_BOUNDING_BOX_NV	SDL_opengl_glext.h	/^#define GL_BOUNDING_BOX_NV /;"	kind:d
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV	SDL_opengl_glext.h	/^#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV /;"	kind:d
GL_BUFFER	SDL_opengl_glext.h	/^#define GL_BUFFER /;"	kind:d
GL_BUFFER_ACCESS	SDL_opengl_glext.h	/^#define GL_BUFFER_ACCESS /;"	kind:d
GL_BUFFER_ACCESS_ARB	SDL_opengl_glext.h	/^#define GL_BUFFER_ACCESS_ARB /;"	kind:d
GL_BUFFER_ACCESS_FLAGS	SDL_opengl_glext.h	/^#define GL_BUFFER_ACCESS_FLAGS /;"	kind:d
GL_BUFFER_ACCESS_OES	SDL_opengles2_gl2ext.h	/^#define GL_BUFFER_ACCESS_OES /;"	kind:d
GL_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_BUFFER_BINDING /;"	kind:d
GL_BUFFER_DATA_SIZE	SDL_opengl_glext.h	/^#define GL_BUFFER_DATA_SIZE /;"	kind:d
GL_BUFFER_FLUSHING_UNMAP_APPLE	SDL_opengl_glext.h	/^#define GL_BUFFER_FLUSHING_UNMAP_APPLE /;"	kind:d
GL_BUFFER_GPU_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_BUFFER_GPU_ADDRESS_NV /;"	kind:d
GL_BUFFER_IMMUTABLE_STORAGE	SDL_opengl_glext.h	/^#define GL_BUFFER_IMMUTABLE_STORAGE /;"	kind:d
GL_BUFFER_KHR	SDL_opengles2_gl2ext.h	/^#define GL_BUFFER_KHR /;"	kind:d
GL_BUFFER_MAPPED	SDL_opengl_glext.h	/^#define GL_BUFFER_MAPPED /;"	kind:d
GL_BUFFER_MAPPED_ARB	SDL_opengl_glext.h	/^#define GL_BUFFER_MAPPED_ARB /;"	kind:d
GL_BUFFER_MAPPED_OES	SDL_opengles2_gl2ext.h	/^#define GL_BUFFER_MAPPED_OES /;"	kind:d
GL_BUFFER_MAP_LENGTH	SDL_opengl_glext.h	/^#define GL_BUFFER_MAP_LENGTH /;"	kind:d
GL_BUFFER_MAP_OFFSET	SDL_opengl_glext.h	/^#define GL_BUFFER_MAP_OFFSET /;"	kind:d
GL_BUFFER_MAP_POINTER	SDL_opengl_glext.h	/^#define GL_BUFFER_MAP_POINTER /;"	kind:d
GL_BUFFER_MAP_POINTER_ARB	SDL_opengl_glext.h	/^#define GL_BUFFER_MAP_POINTER_ARB /;"	kind:d
GL_BUFFER_MAP_POINTER_OES	SDL_opengles2_gl2ext.h	/^#define GL_BUFFER_MAP_POINTER_OES /;"	kind:d
GL_BUFFER_OBJECT_APPLE	SDL_opengl_glext.h	/^#define GL_BUFFER_OBJECT_APPLE /;"	kind:d
GL_BUFFER_OBJECT_EXT	SDL_opengl_glext.h	/^#define GL_BUFFER_OBJECT_EXT /;"	kind:d
GL_BUFFER_OBJECT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_BUFFER_OBJECT_EXT /;"	kind:d
GL_BUFFER_SERIALIZED_MODIFY_APPLE	SDL_opengl_glext.h	/^#define GL_BUFFER_SERIALIZED_MODIFY_APPLE /;"	kind:d
GL_BUFFER_SIZE	SDL_opengl_glext.h	/^#define GL_BUFFER_SIZE /;"	kind:d
GL_BUFFER_SIZE	SDL_opengles2_gl2.h	/^#define GL_BUFFER_SIZE /;"	kind:d
GL_BUFFER_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_BUFFER_SIZE_ARB /;"	kind:d
GL_BUFFER_STORAGE_FLAGS	SDL_opengl_glext.h	/^#define GL_BUFFER_STORAGE_FLAGS /;"	kind:d
GL_BUFFER_UPDATE_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT /;"	kind:d
GL_BUFFER_UPDATE_BARRIER_BIT_EXT	SDL_opengl_glext.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT /;"	kind:d
GL_BUFFER_USAGE	SDL_opengl_glext.h	/^#define GL_BUFFER_USAGE /;"	kind:d
GL_BUFFER_USAGE	SDL_opengles2_gl2.h	/^#define GL_BUFFER_USAGE /;"	kind:d
GL_BUFFER_USAGE_ARB	SDL_opengl_glext.h	/^#define GL_BUFFER_USAGE_ARB /;"	kind:d
GL_BUFFER_VARIABLE	SDL_opengl_glext.h	/^#define GL_BUFFER_VARIABLE /;"	kind:d
GL_BUMP_ENVMAP_ATI	SDL_opengl_glext.h	/^#define GL_BUMP_ENVMAP_ATI /;"	kind:d
GL_BUMP_NUM_TEX_UNITS_ATI	SDL_opengl_glext.h	/^#define GL_BUMP_NUM_TEX_UNITS_ATI /;"	kind:d
GL_BUMP_ROT_MATRIX_ATI	SDL_opengl_glext.h	/^#define GL_BUMP_ROT_MATRIX_ATI /;"	kind:d
GL_BUMP_ROT_MATRIX_SIZE_ATI	SDL_opengl_glext.h	/^#define GL_BUMP_ROT_MATRIX_SIZE_ATI /;"	kind:d
GL_BUMP_TARGET_ATI	SDL_opengl_glext.h	/^#define GL_BUMP_TARGET_ATI /;"	kind:d
GL_BUMP_TEX_UNITS_ATI	SDL_opengl_glext.h	/^#define GL_BUMP_TEX_UNITS_ATI /;"	kind:d
GL_BYTE	SDL_opengl.h	/^#define GL_BYTE	/;"	kind:d
GL_BYTE	SDL_opengles2_gl2.h	/^#define GL_BYTE /;"	kind:d
GL_C3F_V3F	SDL_opengl.h	/^#define GL_C3F_V3F	/;"	kind:d
GL_C4F_N3F_V3F	SDL_opengl.h	/^#define GL_C4F_N3F_V3F	/;"	kind:d
GL_C4UB_V2F	SDL_opengl.h	/^#define GL_C4UB_V2F	/;"	kind:d
GL_C4UB_V3F	SDL_opengl.h	/^#define GL_C4UB_V3F	/;"	kind:d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	SDL_opengl_glext.h	/^#define GL_CALLIGRAPHIC_FRAGMENT_SGIX /;"	kind:d
GL_CAVEAT_SUPPORT	SDL_opengl_glext.h	/^#define GL_CAVEAT_SUPPORT /;"	kind:d
GL_CCW	SDL_opengl.h	/^#define GL_CCW	/;"	kind:d
GL_CCW	SDL_opengles2_gl2.h	/^#define GL_CCW /;"	kind:d
GL_CIRCULAR_CCW_ARC_TO_NV	SDL_opengl_glext.h	/^#define GL_CIRCULAR_CCW_ARC_TO_NV /;"	kind:d
GL_CIRCULAR_CW_ARC_TO_NV	SDL_opengl_glext.h	/^#define GL_CIRCULAR_CW_ARC_TO_NV /;"	kind:d
GL_CIRCULAR_TANGENT_ARC_TO_NV	SDL_opengl_glext.h	/^#define GL_CIRCULAR_TANGENT_ARC_TO_NV /;"	kind:d
GL_CLAMP	SDL_opengl.h	/^#define GL_CLAMP	/;"	kind:d
GL_CLAMP_FRAGMENT_COLOR	SDL_opengl_glext.h	/^#define GL_CLAMP_FRAGMENT_COLOR /;"	kind:d
GL_CLAMP_FRAGMENT_COLOR_ARB	SDL_opengl_glext.h	/^#define GL_CLAMP_FRAGMENT_COLOR_ARB /;"	kind:d
GL_CLAMP_READ_COLOR	SDL_opengl_glext.h	/^#define GL_CLAMP_READ_COLOR /;"	kind:d
GL_CLAMP_READ_COLOR_ARB	SDL_opengl_glext.h	/^#define GL_CLAMP_READ_COLOR_ARB /;"	kind:d
GL_CLAMP_TO_BORDER	SDL_opengl.h	/^#define GL_CLAMP_TO_BORDER	/;"	kind:d
GL_CLAMP_TO_BORDER	SDL_opengl_glext.h	/^#define GL_CLAMP_TO_BORDER /;"	kind:d
GL_CLAMP_TO_BORDER_ARB	SDL_opengl_glext.h	/^#define GL_CLAMP_TO_BORDER_ARB /;"	kind:d
GL_CLAMP_TO_BORDER_NV	SDL_opengles2_gl2ext.h	/^#define GL_CLAMP_TO_BORDER_NV /;"	kind:d
GL_CLAMP_TO_BORDER_SGIS	SDL_opengl_glext.h	/^#define GL_CLAMP_TO_BORDER_SGIS /;"	kind:d
GL_CLAMP_TO_EDGE	SDL_opengl.h	/^#define GL_CLAMP_TO_EDGE	/;"	kind:d
GL_CLAMP_TO_EDGE	SDL_opengl_glext.h	/^#define GL_CLAMP_TO_EDGE /;"	kind:d
GL_CLAMP_TO_EDGE	SDL_opengles2_gl2.h	/^#define GL_CLAMP_TO_EDGE /;"	kind:d
GL_CLAMP_TO_EDGE_SGIS	SDL_opengl_glext.h	/^#define GL_CLAMP_TO_EDGE_SGIS /;"	kind:d
GL_CLAMP_VERTEX_COLOR	SDL_opengl_glext.h	/^#define GL_CLAMP_VERTEX_COLOR /;"	kind:d
GL_CLAMP_VERTEX_COLOR_ARB	SDL_opengl_glext.h	/^#define GL_CLAMP_VERTEX_COLOR_ARB /;"	kind:d
GL_CLEAR	SDL_opengl.h	/^#define GL_CLEAR	/;"	kind:d
GL_CLEAR_BUFFER	SDL_opengl_glext.h	/^#define GL_CLEAR_BUFFER /;"	kind:d
GL_CLEAR_TEXTURE	SDL_opengl_glext.h	/^#define GL_CLEAR_TEXTURE /;"	kind:d
GL_CLIENT_ACTIVE_TEXTURE	SDL_opengl.h	/^#define GL_CLIENT_ACTIVE_TEXTURE	/;"	kind:d
GL_CLIENT_ACTIVE_TEXTURE	SDL_opengl_glext.h	/^#define GL_CLIENT_ACTIVE_TEXTURE /;"	kind:d
GL_CLIENT_ACTIVE_TEXTURE_ARB	SDL_opengl.h	/^#define GL_CLIENT_ACTIVE_TEXTURE_ARB	/;"	kind:d
GL_CLIENT_ACTIVE_TEXTURE_ARB	SDL_opengl_glext.h	/^#define GL_CLIENT_ACTIVE_TEXTURE_ARB /;"	kind:d
GL_CLIENT_ALL_ATTRIB_BITS	SDL_opengl.h	/^#define GL_CLIENT_ALL_ATTRIB_BITS /;"	kind:d
GL_CLIENT_ATTRIB_STACK_DEPTH	SDL_opengl.h	/^#define GL_CLIENT_ATTRIB_STACK_DEPTH	/;"	kind:d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT /;"	kind:d
GL_CLIENT_PIXEL_STORE_BIT	SDL_opengl.h	/^#define GL_CLIENT_PIXEL_STORE_BIT	/;"	kind:d
GL_CLIENT_STORAGE_BIT	SDL_opengl_glext.h	/^#define GL_CLIENT_STORAGE_BIT /;"	kind:d
GL_CLIENT_VERTEX_ARRAY_BIT	SDL_opengl.h	/^#define GL_CLIENT_VERTEX_ARRAY_BIT	/;"	kind:d
GL_CLIP_DISTANCE0	SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE0 /;"	kind:d
GL_CLIP_DISTANCE1	SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE1 /;"	kind:d
GL_CLIP_DISTANCE2	SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE2 /;"	kind:d
GL_CLIP_DISTANCE3	SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE3 /;"	kind:d
GL_CLIP_DISTANCE4	SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE4 /;"	kind:d
GL_CLIP_DISTANCE5	SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE5 /;"	kind:d
GL_CLIP_DISTANCE6	SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE6 /;"	kind:d
GL_CLIP_DISTANCE7	SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE7 /;"	kind:d
GL_CLIP_DISTANCE_NV	SDL_opengl_glext.h	/^#define GL_CLIP_DISTANCE_NV /;"	kind:d
GL_CLIP_FAR_HINT_PGI	SDL_opengl_glext.h	/^#define GL_CLIP_FAR_HINT_PGI /;"	kind:d
GL_CLIP_NEAR_HINT_PGI	SDL_opengl_glext.h	/^#define GL_CLIP_NEAR_HINT_PGI /;"	kind:d
GL_CLIP_PLANE0	SDL_opengl.h	/^#define GL_CLIP_PLANE0	/;"	kind:d
GL_CLIP_PLANE1	SDL_opengl.h	/^#define GL_CLIP_PLANE1	/;"	kind:d
GL_CLIP_PLANE2	SDL_opengl.h	/^#define GL_CLIP_PLANE2	/;"	kind:d
GL_CLIP_PLANE3	SDL_opengl.h	/^#define GL_CLIP_PLANE3	/;"	kind:d
GL_CLIP_PLANE4	SDL_opengl.h	/^#define GL_CLIP_PLANE4	/;"	kind:d
GL_CLIP_PLANE5	SDL_opengl.h	/^#define GL_CLIP_PLANE5	/;"	kind:d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	SDL_opengl_glext.h	/^#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT /;"	kind:d
GL_CLOSE_PATH_NV	SDL_opengl_glext.h	/^#define GL_CLOSE_PATH_NV /;"	kind:d
GL_CMYKA_EXT	SDL_opengl_glext.h	/^#define GL_CMYKA_EXT /;"	kind:d
GL_CMYK_EXT	SDL_opengl_glext.h	/^#define GL_CMYK_EXT /;"	kind:d
GL_CND0_ATI	SDL_opengl_glext.h	/^#define GL_CND0_ATI /;"	kind:d
GL_CND_ATI	SDL_opengl_glext.h	/^#define GL_CND_ATI /;"	kind:d
GL_COEFF	SDL_opengl.h	/^#define GL_COEFF	/;"	kind:d
GL_COLOR	SDL_opengl.h	/^#define GL_COLOR	/;"	kind:d
GL_COLOR3_BIT_PGI	SDL_opengl_glext.h	/^#define GL_COLOR3_BIT_PGI /;"	kind:d
GL_COLOR4_BIT_PGI	SDL_opengl_glext.h	/^#define GL_COLOR4_BIT_PGI /;"	kind:d
GL_COLORBURN_NV	SDL_opengl_glext.h	/^#define GL_COLORBURN_NV /;"	kind:d
GL_COLORDODGE_NV	SDL_opengl_glext.h	/^#define GL_COLORDODGE_NV /;"	kind:d
GL_COLOR_ALPHA_PAIRING_ATI	SDL_opengl_glext.h	/^#define GL_COLOR_ALPHA_PAIRING_ATI /;"	kind:d
GL_COLOR_ARRAY	SDL_opengl.h	/^#define GL_COLOR_ARRAY	/;"	kind:d
GL_COLOR_ARRAY_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_ADDRESS_NV /;"	kind:d
GL_COLOR_ARRAY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING /;"	kind:d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	kind:d
GL_COLOR_ARRAY_COUNT_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_COUNT_EXT /;"	kind:d
GL_COLOR_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_EXT /;"	kind:d
GL_COLOR_ARRAY_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_LENGTH_NV /;"	kind:d
GL_COLOR_ARRAY_LIST_IBM	SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_LIST_IBM /;"	kind:d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_LIST_STRIDE_IBM /;"	kind:d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL /;"	kind:d
GL_COLOR_ARRAY_POINTER	SDL_opengl.h	/^#define GL_COLOR_ARRAY_POINTER	/;"	kind:d
GL_COLOR_ARRAY_POINTER_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_POINTER_EXT /;"	kind:d
GL_COLOR_ARRAY_SIZE	SDL_opengl.h	/^#define GL_COLOR_ARRAY_SIZE	/;"	kind:d
GL_COLOR_ARRAY_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_SIZE_EXT /;"	kind:d
GL_COLOR_ARRAY_STRIDE	SDL_opengl.h	/^#define GL_COLOR_ARRAY_STRIDE	/;"	kind:d
GL_COLOR_ARRAY_STRIDE_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_STRIDE_EXT /;"	kind:d
GL_COLOR_ARRAY_TYPE	SDL_opengl.h	/^#define GL_COLOR_ARRAY_TYPE	/;"	kind:d
GL_COLOR_ARRAY_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ARRAY_TYPE_EXT /;"	kind:d
GL_COLOR_ATTACHMENT0	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT0 /;"	kind:d
GL_COLOR_ATTACHMENT0	SDL_opengles2_gl2.h	/^#define GL_COLOR_ATTACHMENT0 /;"	kind:d
GL_COLOR_ATTACHMENT0_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT0_EXT /;"	kind:d
GL_COLOR_ATTACHMENT0_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT0_EXT /;"	kind:d
GL_COLOR_ATTACHMENT0_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT0_NV /;"	kind:d
GL_COLOR_ATTACHMENT1	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT1 /;"	kind:d
GL_COLOR_ATTACHMENT10	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT10 /;"	kind:d
GL_COLOR_ATTACHMENT10_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT10_EXT /;"	kind:d
GL_COLOR_ATTACHMENT10_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT10_EXT /;"	kind:d
GL_COLOR_ATTACHMENT10_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT10_NV /;"	kind:d
GL_COLOR_ATTACHMENT11	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT11 /;"	kind:d
GL_COLOR_ATTACHMENT11_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT11_EXT /;"	kind:d
GL_COLOR_ATTACHMENT11_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT11_EXT /;"	kind:d
GL_COLOR_ATTACHMENT11_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT11_NV /;"	kind:d
GL_COLOR_ATTACHMENT12	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT12 /;"	kind:d
GL_COLOR_ATTACHMENT12_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT12_EXT /;"	kind:d
GL_COLOR_ATTACHMENT12_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT12_EXT /;"	kind:d
GL_COLOR_ATTACHMENT12_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT12_NV /;"	kind:d
GL_COLOR_ATTACHMENT13	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT13 /;"	kind:d
GL_COLOR_ATTACHMENT13_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT13_EXT /;"	kind:d
GL_COLOR_ATTACHMENT13_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT13_EXT /;"	kind:d
GL_COLOR_ATTACHMENT13_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT13_NV /;"	kind:d
GL_COLOR_ATTACHMENT14	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT14 /;"	kind:d
GL_COLOR_ATTACHMENT14_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT14_EXT /;"	kind:d
GL_COLOR_ATTACHMENT14_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT14_EXT /;"	kind:d
GL_COLOR_ATTACHMENT14_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT14_NV /;"	kind:d
GL_COLOR_ATTACHMENT15	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT15 /;"	kind:d
GL_COLOR_ATTACHMENT15_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT15_EXT /;"	kind:d
GL_COLOR_ATTACHMENT15_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT15_EXT /;"	kind:d
GL_COLOR_ATTACHMENT15_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT15_NV /;"	kind:d
GL_COLOR_ATTACHMENT1_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT1_EXT /;"	kind:d
GL_COLOR_ATTACHMENT1_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT1_EXT /;"	kind:d
GL_COLOR_ATTACHMENT1_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT1_NV /;"	kind:d
GL_COLOR_ATTACHMENT2	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT2 /;"	kind:d
GL_COLOR_ATTACHMENT2_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT2_EXT /;"	kind:d
GL_COLOR_ATTACHMENT2_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT2_EXT /;"	kind:d
GL_COLOR_ATTACHMENT2_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT2_NV /;"	kind:d
GL_COLOR_ATTACHMENT3	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT3 /;"	kind:d
GL_COLOR_ATTACHMENT3_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT3_EXT /;"	kind:d
GL_COLOR_ATTACHMENT3_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT3_EXT /;"	kind:d
GL_COLOR_ATTACHMENT3_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT3_NV /;"	kind:d
GL_COLOR_ATTACHMENT4	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT4 /;"	kind:d
GL_COLOR_ATTACHMENT4_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT4_EXT /;"	kind:d
GL_COLOR_ATTACHMENT4_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT4_EXT /;"	kind:d
GL_COLOR_ATTACHMENT4_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT4_NV /;"	kind:d
GL_COLOR_ATTACHMENT5	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT5 /;"	kind:d
GL_COLOR_ATTACHMENT5_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT5_EXT /;"	kind:d
GL_COLOR_ATTACHMENT5_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT5_EXT /;"	kind:d
GL_COLOR_ATTACHMENT5_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT5_NV /;"	kind:d
GL_COLOR_ATTACHMENT6	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT6 /;"	kind:d
GL_COLOR_ATTACHMENT6_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT6_EXT /;"	kind:d
GL_COLOR_ATTACHMENT6_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT6_EXT /;"	kind:d
GL_COLOR_ATTACHMENT6_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT6_NV /;"	kind:d
GL_COLOR_ATTACHMENT7	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT7 /;"	kind:d
GL_COLOR_ATTACHMENT7_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT7_EXT /;"	kind:d
GL_COLOR_ATTACHMENT7_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT7_EXT /;"	kind:d
GL_COLOR_ATTACHMENT7_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT7_NV /;"	kind:d
GL_COLOR_ATTACHMENT8	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT8 /;"	kind:d
GL_COLOR_ATTACHMENT8_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT8_EXT /;"	kind:d
GL_COLOR_ATTACHMENT8_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT8_EXT /;"	kind:d
GL_COLOR_ATTACHMENT8_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT8_NV /;"	kind:d
GL_COLOR_ATTACHMENT9	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT9 /;"	kind:d
GL_COLOR_ATTACHMENT9_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_ATTACHMENT9_EXT /;"	kind:d
GL_COLOR_ATTACHMENT9_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT9_EXT /;"	kind:d
GL_COLOR_ATTACHMENT9_NV	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT9_NV /;"	kind:d
GL_COLOR_ATTACHMENT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_ATTACHMENT_EXT /;"	kind:d
GL_COLOR_BUFFER_BIT	SDL_opengl.h	/^#define GL_COLOR_BUFFER_BIT	/;"	kind:d
GL_COLOR_BUFFER_BIT	SDL_opengles2_gl2.h	/^#define GL_COLOR_BUFFER_BIT /;"	kind:d
GL_COLOR_BUFFER_BIT0_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT0_QCOM /;"	kind:d
GL_COLOR_BUFFER_BIT1_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT1_QCOM /;"	kind:d
GL_COLOR_BUFFER_BIT2_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT2_QCOM /;"	kind:d
GL_COLOR_BUFFER_BIT3_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT3_QCOM /;"	kind:d
GL_COLOR_BUFFER_BIT4_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT4_QCOM /;"	kind:d
GL_COLOR_BUFFER_BIT5_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT5_QCOM /;"	kind:d
GL_COLOR_BUFFER_BIT6_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT6_QCOM /;"	kind:d
GL_COLOR_BUFFER_BIT7_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_BUFFER_BIT7_QCOM /;"	kind:d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	SDL_opengl_glext.h	/^#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI /;"	kind:d
GL_COLOR_CLEAR_VALUE	SDL_opengl.h	/^#define GL_COLOR_CLEAR_VALUE	/;"	kind:d
GL_COLOR_CLEAR_VALUE	SDL_opengles2_gl2.h	/^#define GL_COLOR_CLEAR_VALUE /;"	kind:d
GL_COLOR_COMPONENTS	SDL_opengl_glext.h	/^#define GL_COLOR_COMPONENTS /;"	kind:d
GL_COLOR_ENCODING	SDL_opengl_glext.h	/^#define GL_COLOR_ENCODING /;"	kind:d
GL_COLOR_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COLOR_EXT /;"	kind:d
GL_COLOR_FLOAT_APPLE	SDL_opengl_glext.h	/^#define GL_COLOR_FLOAT_APPLE /;"	kind:d
GL_COLOR_INDEX	SDL_opengl.h	/^#define GL_COLOR_INDEX	/;"	kind:d
GL_COLOR_INDEX12_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_INDEX12_EXT /;"	kind:d
GL_COLOR_INDEX16_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_INDEX16_EXT /;"	kind:d
GL_COLOR_INDEX1_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_INDEX1_EXT /;"	kind:d
GL_COLOR_INDEX2_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_INDEX2_EXT /;"	kind:d
GL_COLOR_INDEX4_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_INDEX4_EXT /;"	kind:d
GL_COLOR_INDEX8_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_INDEX8_EXT /;"	kind:d
GL_COLOR_INDEXES	SDL_opengl.h	/^#define GL_COLOR_INDEXES	/;"	kind:d
GL_COLOR_LOGIC_OP	SDL_opengl.h	/^#define GL_COLOR_LOGIC_OP	/;"	kind:d
GL_COLOR_MATERIAL	SDL_opengl.h	/^#define GL_COLOR_MATERIAL	/;"	kind:d
GL_COLOR_MATERIAL_FACE	SDL_opengl.h	/^#define GL_COLOR_MATERIAL_FACE	/;"	kind:d
GL_COLOR_MATERIAL_PARAMETER	SDL_opengl.h	/^#define GL_COLOR_MATERIAL_PARAMETER	/;"	kind:d
GL_COLOR_MATRIX	SDL_opengl.h	/^#define GL_COLOR_MATRIX	/;"	kind:d
GL_COLOR_MATRIX	SDL_opengl_glext.h	/^#define GL_COLOR_MATRIX /;"	kind:d
GL_COLOR_MATRIX_SGI	SDL_opengl_glext.h	/^#define GL_COLOR_MATRIX_SGI /;"	kind:d
GL_COLOR_MATRIX_STACK_DEPTH	SDL_opengl.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH	/;"	kind:d
GL_COLOR_MATRIX_STACK_DEPTH	SDL_opengl_glext.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH /;"	kind:d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	SDL_opengl_glext.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH_SGI /;"	kind:d
GL_COLOR_RENDERABLE	SDL_opengl_glext.h	/^#define GL_COLOR_RENDERABLE /;"	kind:d
GL_COLOR_SAMPLES_NV	SDL_opengl_glext.h	/^#define GL_COLOR_SAMPLES_NV /;"	kind:d
GL_COLOR_SUM	SDL_opengl_glext.h	/^#define GL_COLOR_SUM /;"	kind:d
GL_COLOR_SUM_ARB	SDL_opengl_glext.h	/^#define GL_COLOR_SUM_ARB /;"	kind:d
GL_COLOR_SUM_CLAMP_NV	SDL_opengl_glext.h	/^#define GL_COLOR_SUM_CLAMP_NV /;"	kind:d
GL_COLOR_SUM_EXT	SDL_opengl_glext.h	/^#define GL_COLOR_SUM_EXT /;"	kind:d
GL_COLOR_TABLE	SDL_opengl.h	/^#define GL_COLOR_TABLE	/;"	kind:d
GL_COLOR_TABLE	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE /;"	kind:d
GL_COLOR_TABLE_ALPHA_SIZE	SDL_opengl.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE	/;"	kind:d
GL_COLOR_TABLE_ALPHA_SIZE	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE /;"	kind:d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE_SGI /;"	kind:d
GL_COLOR_TABLE_BIAS	SDL_opengl.h	/^#define GL_COLOR_TABLE_BIAS	/;"	kind:d
GL_COLOR_TABLE_BIAS	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_BIAS /;"	kind:d
GL_COLOR_TABLE_BIAS_SGI	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_BIAS_SGI /;"	kind:d
GL_COLOR_TABLE_BLUE_SIZE	SDL_opengl.h	/^#define GL_COLOR_TABLE_BLUE_SIZE	/;"	kind:d
GL_COLOR_TABLE_BLUE_SIZE	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_BLUE_SIZE /;"	kind:d
GL_COLOR_TABLE_BLUE_SIZE_SGI	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_BLUE_SIZE_SGI /;"	kind:d
GL_COLOR_TABLE_FORMAT	SDL_opengl.h	/^#define GL_COLOR_TABLE_FORMAT	/;"	kind:d
GL_COLOR_TABLE_FORMAT	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_FORMAT /;"	kind:d
GL_COLOR_TABLE_FORMAT_SGI	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_FORMAT_SGI /;"	kind:d
GL_COLOR_TABLE_GREEN_SIZE	SDL_opengl.h	/^#define GL_COLOR_TABLE_GREEN_SIZE	/;"	kind:d
GL_COLOR_TABLE_GREEN_SIZE	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_GREEN_SIZE /;"	kind:d
GL_COLOR_TABLE_GREEN_SIZE_SGI	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_GREEN_SIZE_SGI /;"	kind:d
GL_COLOR_TABLE_INTENSITY_SIZE	SDL_opengl.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE	/;"	kind:d
GL_COLOR_TABLE_INTENSITY_SIZE	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE /;"	kind:d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI /;"	kind:d
GL_COLOR_TABLE_LUMINANCE_SIZE	SDL_opengl.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE	/;"	kind:d
GL_COLOR_TABLE_LUMINANCE_SIZE	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE /;"	kind:d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI /;"	kind:d
GL_COLOR_TABLE_RED_SIZE	SDL_opengl.h	/^#define GL_COLOR_TABLE_RED_SIZE	/;"	kind:d
GL_COLOR_TABLE_RED_SIZE	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_RED_SIZE /;"	kind:d
GL_COLOR_TABLE_RED_SIZE_SGI	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_RED_SIZE_SGI /;"	kind:d
GL_COLOR_TABLE_SCALE	SDL_opengl.h	/^#define GL_COLOR_TABLE_SCALE	/;"	kind:d
GL_COLOR_TABLE_SCALE	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_SCALE /;"	kind:d
GL_COLOR_TABLE_SCALE_SGI	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_SCALE_SGI /;"	kind:d
GL_COLOR_TABLE_SGI	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_SGI /;"	kind:d
GL_COLOR_TABLE_WIDTH	SDL_opengl.h	/^#define GL_COLOR_TABLE_WIDTH	/;"	kind:d
GL_COLOR_TABLE_WIDTH	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_WIDTH /;"	kind:d
GL_COLOR_TABLE_WIDTH_SGI	SDL_opengl_glext.h	/^#define GL_COLOR_TABLE_WIDTH_SGI /;"	kind:d
GL_COLOR_WRITEMASK	SDL_opengl.h	/^#define GL_COLOR_WRITEMASK	/;"	kind:d
GL_COLOR_WRITEMASK	SDL_opengles2_gl2.h	/^#define GL_COLOR_WRITEMASK /;"	kind:d
GL_COMBINE	SDL_opengl.h	/^#define GL_COMBINE	/;"	kind:d
GL_COMBINE	SDL_opengl_glext.h	/^#define GL_COMBINE /;"	kind:d
GL_COMBINE4_NV	SDL_opengl_glext.h	/^#define GL_COMBINE4_NV /;"	kind:d
GL_COMBINER0_NV	SDL_opengl_glext.h	/^#define GL_COMBINER0_NV /;"	kind:d
GL_COMBINER1_NV	SDL_opengl_glext.h	/^#define GL_COMBINER1_NV /;"	kind:d
GL_COMBINER2_NV	SDL_opengl_glext.h	/^#define GL_COMBINER2_NV /;"	kind:d
GL_COMBINER3_NV	SDL_opengl_glext.h	/^#define GL_COMBINER3_NV /;"	kind:d
GL_COMBINER4_NV	SDL_opengl_glext.h	/^#define GL_COMBINER4_NV /;"	kind:d
GL_COMBINER5_NV	SDL_opengl_glext.h	/^#define GL_COMBINER5_NV /;"	kind:d
GL_COMBINER6_NV	SDL_opengl_glext.h	/^#define GL_COMBINER6_NV /;"	kind:d
GL_COMBINER7_NV	SDL_opengl_glext.h	/^#define GL_COMBINER7_NV /;"	kind:d
GL_COMBINER_AB_DOT_PRODUCT_NV	SDL_opengl_glext.h	/^#define GL_COMBINER_AB_DOT_PRODUCT_NV /;"	kind:d
GL_COMBINER_AB_OUTPUT_NV	SDL_opengl_glext.h	/^#define GL_COMBINER_AB_OUTPUT_NV /;"	kind:d
GL_COMBINER_BIAS_NV	SDL_opengl_glext.h	/^#define GL_COMBINER_BIAS_NV /;"	kind:d
GL_COMBINER_CD_DOT_PRODUCT_NV	SDL_opengl_glext.h	/^#define GL_COMBINER_CD_DOT_PRODUCT_NV /;"	kind:d
GL_COMBINER_CD_OUTPUT_NV	SDL_opengl_glext.h	/^#define GL_COMBINER_CD_OUTPUT_NV /;"	kind:d
GL_COMBINER_COMPONENT_USAGE_NV	SDL_opengl_glext.h	/^#define GL_COMBINER_COMPONENT_USAGE_NV /;"	kind:d
GL_COMBINER_INPUT_NV	SDL_opengl_glext.h	/^#define GL_COMBINER_INPUT_NV /;"	kind:d
GL_COMBINER_MAPPING_NV	SDL_opengl_glext.h	/^#define GL_COMBINER_MAPPING_NV /;"	kind:d
GL_COMBINER_MUX_SUM_NV	SDL_opengl_glext.h	/^#define GL_COMBINER_MUX_SUM_NV /;"	kind:d
GL_COMBINER_SCALE_NV	SDL_opengl_glext.h	/^#define GL_COMBINER_SCALE_NV /;"	kind:d
GL_COMBINER_SUM_OUTPUT_NV	SDL_opengl_glext.h	/^#define GL_COMBINER_SUM_OUTPUT_NV /;"	kind:d
GL_COMBINE_ALPHA	SDL_opengl.h	/^#define GL_COMBINE_ALPHA	/;"	kind:d
GL_COMBINE_ALPHA	SDL_opengl_glext.h	/^#define GL_COMBINE_ALPHA /;"	kind:d
GL_COMBINE_ALPHA_ARB	SDL_opengl_glext.h	/^#define GL_COMBINE_ALPHA_ARB /;"	kind:d
GL_COMBINE_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_COMBINE_ALPHA_EXT /;"	kind:d
GL_COMBINE_ARB	SDL_opengl_glext.h	/^#define GL_COMBINE_ARB /;"	kind:d
GL_COMBINE_EXT	SDL_opengl_glext.h	/^#define GL_COMBINE_EXT /;"	kind:d
GL_COMBINE_RGB	SDL_opengl.h	/^#define GL_COMBINE_RGB	/;"	kind:d
GL_COMBINE_RGB	SDL_opengl_glext.h	/^#define GL_COMBINE_RGB /;"	kind:d
GL_COMBINE_RGB_ARB	SDL_opengl_glext.h	/^#define GL_COMBINE_RGB_ARB /;"	kind:d
GL_COMBINE_RGB_EXT	SDL_opengl_glext.h	/^#define GL_COMBINE_RGB_EXT /;"	kind:d
GL_COMMAND_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_COMMAND_BARRIER_BIT /;"	kind:d
GL_COMMAND_BARRIER_BIT_EXT	SDL_opengl_glext.h	/^#define GL_COMMAND_BARRIER_BIT_EXT /;"	kind:d
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT	SDL_opengl_glext.h	/^#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT /;"	kind:d
GL_COMPARE_REF_TO_TEXTURE	SDL_opengl_glext.h	/^#define GL_COMPARE_REF_TO_TEXTURE /;"	kind:d
GL_COMPARE_REF_TO_TEXTURE_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COMPARE_REF_TO_TEXTURE_EXT /;"	kind:d
GL_COMPARE_R_TO_TEXTURE	SDL_opengl_glext.h	/^#define GL_COMPARE_R_TO_TEXTURE /;"	kind:d
GL_COMPARE_R_TO_TEXTURE_ARB	SDL_opengl_glext.h	/^#define GL_COMPARE_R_TO_TEXTURE_ARB /;"	kind:d
GL_COMPATIBLE_SUBROUTINES	SDL_opengl_glext.h	/^#define GL_COMPATIBLE_SUBROUTINES /;"	kind:d
GL_COMPILE	SDL_opengl.h	/^#define GL_COMPILE	/;"	kind:d
GL_COMPILE_AND_EXECUTE	SDL_opengl.h	/^#define GL_COMPILE_AND_EXECUTE	/;"	kind:d
GL_COMPILE_STATUS	SDL_opengl_glext.h	/^#define GL_COMPILE_STATUS /;"	kind:d
GL_COMPILE_STATUS	SDL_opengles2_gl2.h	/^#define GL_COMPILE_STATUS /;"	kind:d
GL_COMPRESSED_ALPHA	SDL_opengl.h	/^#define GL_COMPRESSED_ALPHA	/;"	kind:d
GL_COMPRESSED_ALPHA	SDL_opengl_glext.h	/^#define GL_COMPRESSED_ALPHA /;"	kind:d
GL_COMPRESSED_ALPHA_ARB	SDL_opengl_glext.h	/^#define GL_COMPRESSED_ALPHA_ARB /;"	kind:d
GL_COMPRESSED_INTENSITY	SDL_opengl.h	/^#define GL_COMPRESSED_INTENSITY	/;"	kind:d
GL_COMPRESSED_INTENSITY	SDL_opengl_glext.h	/^#define GL_COMPRESSED_INTENSITY /;"	kind:d
GL_COMPRESSED_INTENSITY_ARB	SDL_opengl_glext.h	/^#define GL_COMPRESSED_INTENSITY_ARB /;"	kind:d
GL_COMPRESSED_LUMINANCE	SDL_opengl.h	/^#define GL_COMPRESSED_LUMINANCE	/;"	kind:d
GL_COMPRESSED_LUMINANCE	SDL_opengl_glext.h	/^#define GL_COMPRESSED_LUMINANCE /;"	kind:d
GL_COMPRESSED_LUMINANCE_ALPHA	SDL_opengl.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA	/;"	kind:d
GL_COMPRESSED_LUMINANCE_ALPHA	SDL_opengl_glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA /;"	kind:d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	SDL_opengl_glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB /;"	kind:d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT /;"	kind:d
GL_COMPRESSED_LUMINANCE_ARB	SDL_opengl_glext.h	/^#define GL_COMPRESSED_LUMINANCE_ARB /;"	kind:d
GL_COMPRESSED_LUMINANCE_LATC1_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_LUMINANCE_LATC1_EXT /;"	kind:d
GL_COMPRESSED_R11_EAC	SDL_opengl_glext.h	/^#define GL_COMPRESSED_R11_EAC /;"	kind:d
GL_COMPRESSED_RED	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RED /;"	kind:d
GL_COMPRESSED_RED_GREEN_RGTC2_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT /;"	kind:d
GL_COMPRESSED_RED_RGTC1	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RED_RGTC1 /;"	kind:d
GL_COMPRESSED_RED_RGTC1_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RED_RGTC1_EXT /;"	kind:d
GL_COMPRESSED_RG	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RG /;"	kind:d
GL_COMPRESSED_RG11_EAC	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RG11_EAC /;"	kind:d
GL_COMPRESSED_RGB	SDL_opengl.h	/^#define GL_COMPRESSED_RGB	/;"	kind:d
GL_COMPRESSED_RGB	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB /;"	kind:d
GL_COMPRESSED_RGB8_ETC2	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB8_ETC2 /;"	kind:d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	kind:d
GL_COMPRESSED_RGBA	SDL_opengl.h	/^#define GL_COMPRESSED_RGBA	/;"	kind:d
GL_COMPRESSED_RGBA	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA /;"	kind:d
GL_COMPRESSED_RGBA8_ETC2_EAC	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA8_ETC2_EAC /;"	kind:d
GL_COMPRESSED_RGBA_ARB	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ARB /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	kind:d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	kind:d
GL_COMPRESSED_RGBA_BPTC_UNORM	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM /;"	kind:d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB /;"	kind:d
GL_COMPRESSED_RGBA_FXT1_3DFX	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_FXT1_3DFX /;"	kind:d
GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG /;"	kind:d
GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG /;"	kind:d
GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG /;"	kind:d
GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG /;"	kind:d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	kind:d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	kind:d
GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE /;"	kind:d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT /;"	kind:d
GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE /;"	kind:d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT /;"	kind:d
GL_COMPRESSED_RGB_ARB	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_ARB /;"	kind:d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT /;"	kind:d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB /;"	kind:d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT /;"	kind:d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB /;"	kind:d
GL_COMPRESSED_RGB_FXT1_3DFX	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_FXT1_3DFX /;"	kind:d
GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG /;"	kind:d
GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG /;"	kind:d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT /;"	kind:d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT /;"	kind:d
GL_COMPRESSED_RG_RGTC2	SDL_opengl_glext.h	/^#define GL_COMPRESSED_RG_RGTC2 /;"	kind:d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT /;"	kind:d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT /;"	kind:d
GL_COMPRESSED_SIGNED_R11_EAC	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_R11_EAC /;"	kind:d
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT /;"	kind:d
GL_COMPRESSED_SIGNED_RED_RGTC1	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	kind:d
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT /;"	kind:d
GL_COMPRESSED_SIGNED_RG11_EAC	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_RG11_EAC /;"	kind:d
GL_COMPRESSED_SIGNED_RG_RGTC2	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SIGNED_RG_RGTC2 /;"	kind:d
GL_COMPRESSED_SLUMINANCE	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SLUMINANCE /;"	kind:d
GL_COMPRESSED_SLUMINANCE_ALPHA	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA /;"	kind:d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT /;"	kind:d
GL_COMPRESSED_SLUMINANCE_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SLUMINANCE_EXT /;"	kind:d
GL_COMPRESSED_SRGB	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR /;"	kind:d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC /;"	kind:d
GL_COMPRESSED_SRGB8_ETC2	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_ETC2 /;"	kind:d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	kind:d
GL_COMPRESSED_SRGB_ALPHA	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA /;"	kind:d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM /;"	kind:d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB /;"	kind:d
GL_COMPRESSED_SRGB_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_EXT /;"	kind:d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT /;"	kind:d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV /;"	kind:d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT /;"	kind:d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV /;"	kind:d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT /;"	kind:d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV /;"	kind:d
GL_COMPRESSED_SRGB_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_EXT /;"	kind:d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	SDL_opengl_glext.h	/^#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT /;"	kind:d
GL_COMPRESSED_SRGB_S3TC_DXT1_NV	SDL_opengles2_gl2ext.h	/^#define GL_COMPRESSED_SRGB_S3TC_DXT1_NV /;"	kind:d
GL_COMPRESSED_TEXTURE_FORMATS	SDL_opengl.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS	/;"	kind:d
GL_COMPRESSED_TEXTURE_FORMATS	SDL_opengl_glext.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	kind:d
GL_COMPRESSED_TEXTURE_FORMATS	SDL_opengles2_gl2.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	kind:d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	SDL_opengl_glext.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS_ARB /;"	kind:d
GL_COMPUTE_PROGRAM_NV	SDL_opengl_glext.h	/^#define GL_COMPUTE_PROGRAM_NV /;"	kind:d
GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV	SDL_opengl_glext.h	/^#define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV /;"	kind:d
GL_COMPUTE_SHADER	SDL_opengl_glext.h	/^#define GL_COMPUTE_SHADER /;"	kind:d
GL_COMPUTE_SHADER_BIT	SDL_opengl_glext.h	/^#define GL_COMPUTE_SHADER_BIT /;"	kind:d
GL_COMPUTE_SUBROUTINE	SDL_opengl_glext.h	/^#define GL_COMPUTE_SUBROUTINE /;"	kind:d
GL_COMPUTE_SUBROUTINE_UNIFORM	SDL_opengl_glext.h	/^#define GL_COMPUTE_SUBROUTINE_UNIFORM /;"	kind:d
GL_COMPUTE_TEXTURE	SDL_opengl_glext.h	/^#define GL_COMPUTE_TEXTURE /;"	kind:d
GL_COMPUTE_WORK_GROUP_SIZE	SDL_opengl_glext.h	/^#define GL_COMPUTE_WORK_GROUP_SIZE /;"	kind:d
GL_COMP_BIT_ATI	SDL_opengl_glext.h	/^#define GL_COMP_BIT_ATI /;"	kind:d
GL_CONDITION_SATISFIED	SDL_opengl_glext.h	/^#define GL_CONDITION_SATISFIED /;"	kind:d
GL_CONDITION_SATISFIED_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_CONDITION_SATISFIED_APPLE /;"	kind:d
GL_CONJOINT_NV	SDL_opengl_glext.h	/^#define GL_CONJOINT_NV /;"	kind:d
GL_CONSERVE_MEMORY_HINT_PGI	SDL_opengl_glext.h	/^#define GL_CONSERVE_MEMORY_HINT_PGI /;"	kind:d
GL_CONSTANT	SDL_opengl.h	/^#define GL_CONSTANT	/;"	kind:d
GL_CONSTANT	SDL_opengl_glext.h	/^#define GL_CONSTANT /;"	kind:d
GL_CONSTANT_ALPHA	SDL_opengl.h	/^#define GL_CONSTANT_ALPHA	/;"	kind:d
GL_CONSTANT_ALPHA	SDL_opengl_glext.h	/^#define GL_CONSTANT_ALPHA /;"	kind:d
GL_CONSTANT_ALPHA	SDL_opengles2_gl2.h	/^#define GL_CONSTANT_ALPHA /;"	kind:d
GL_CONSTANT_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_CONSTANT_ALPHA_EXT /;"	kind:d
GL_CONSTANT_ARB	SDL_opengl_glext.h	/^#define GL_CONSTANT_ARB /;"	kind:d
GL_CONSTANT_ATTENUATION	SDL_opengl.h	/^#define GL_CONSTANT_ATTENUATION	/;"	kind:d
GL_CONSTANT_BORDER	SDL_opengl.h	/^#define GL_CONSTANT_BORDER	/;"	kind:d
GL_CONSTANT_BORDER	SDL_opengl_glext.h	/^#define GL_CONSTANT_BORDER /;"	kind:d
GL_CONSTANT_BORDER_HP	SDL_opengl_glext.h	/^#define GL_CONSTANT_BORDER_HP /;"	kind:d
GL_CONSTANT_COLOR	SDL_opengl.h	/^#define GL_CONSTANT_COLOR	/;"	kind:d
GL_CONSTANT_COLOR	SDL_opengl_glext.h	/^#define GL_CONSTANT_COLOR /;"	kind:d
GL_CONSTANT_COLOR	SDL_opengles2_gl2.h	/^#define GL_CONSTANT_COLOR /;"	kind:d
GL_CONSTANT_COLOR0_NV	SDL_opengl_glext.h	/^#define GL_CONSTANT_COLOR0_NV /;"	kind:d
GL_CONSTANT_COLOR1_NV	SDL_opengl_glext.h	/^#define GL_CONSTANT_COLOR1_NV /;"	kind:d
GL_CONSTANT_COLOR_EXT	SDL_opengl_glext.h	/^#define GL_CONSTANT_COLOR_EXT /;"	kind:d
GL_CONSTANT_EXT	SDL_opengl_glext.h	/^#define GL_CONSTANT_EXT /;"	kind:d
GL_CONST_EYE_NV	SDL_opengl_glext.h	/^#define GL_CONST_EYE_NV /;"	kind:d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	SDL_opengl_glext.h	/^#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	kind:d
GL_CONTEXT_CORE_PROFILE_BIT	SDL_opengl_glext.h	/^#define GL_CONTEXT_CORE_PROFILE_BIT /;"	kind:d
GL_CONTEXT_FLAGS	SDL_opengl_glext.h	/^#define GL_CONTEXT_FLAGS /;"	kind:d
GL_CONTEXT_FLAG_DEBUG_BIT	SDL_opengl_glext.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT /;"	kind:d
GL_CONTEXT_FLAG_DEBUG_BIT_KHR	SDL_opengles2_gl2ext.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT_KHR /;"	kind:d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	SDL_opengl_glext.h	/^#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	kind:d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	SDL_opengl_glext.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB /;"	kind:d
GL_CONTEXT_PROFILE_MASK	SDL_opengl_glext.h	/^#define GL_CONTEXT_PROFILE_MASK /;"	kind:d
GL_CONTEXT_RELEASE_BEHAVIOR	SDL_opengl_glext.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR /;"	kind:d
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	SDL_opengl_glext.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH /;"	kind:d
GL_CONTEXT_ROBUST_ACCESS_EXT	SDL_opengles2_gl2ext.h	/^#define GL_CONTEXT_ROBUST_ACCESS_EXT /;"	kind:d
GL_CONTINUOUS_AMD	SDL_opengl_glext.h	/^#define GL_CONTINUOUS_AMD /;"	kind:d
GL_CONTRAST_NV	SDL_opengl_glext.h	/^#define GL_CONTRAST_NV /;"	kind:d
GL_CONVEX_HULL_NV	SDL_opengl_glext.h	/^#define GL_CONVEX_HULL_NV /;"	kind:d
GL_CONVOLUTION_1D	SDL_opengl.h	/^#define GL_CONVOLUTION_1D	/;"	kind:d
GL_CONVOLUTION_1D	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_1D /;"	kind:d
GL_CONVOLUTION_1D_EXT	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_1D_EXT /;"	kind:d
GL_CONVOLUTION_2D	SDL_opengl.h	/^#define GL_CONVOLUTION_2D	/;"	kind:d
GL_CONVOLUTION_2D	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_2D /;"	kind:d
GL_CONVOLUTION_2D_EXT	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_2D_EXT /;"	kind:d
GL_CONVOLUTION_BORDER_COLOR	SDL_opengl.h	/^#define GL_CONVOLUTION_BORDER_COLOR	/;"	kind:d
GL_CONVOLUTION_BORDER_COLOR	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_BORDER_COLOR /;"	kind:d
GL_CONVOLUTION_BORDER_COLOR_HP	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_BORDER_COLOR_HP /;"	kind:d
GL_CONVOLUTION_BORDER_MODE	SDL_opengl.h	/^#define GL_CONVOLUTION_BORDER_MODE	/;"	kind:d
GL_CONVOLUTION_BORDER_MODE	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_BORDER_MODE /;"	kind:d
GL_CONVOLUTION_BORDER_MODE_EXT	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_BORDER_MODE_EXT /;"	kind:d
GL_CONVOLUTION_FILTER_BIAS	SDL_opengl.h	/^#define GL_CONVOLUTION_FILTER_BIAS	/;"	kind:d
GL_CONVOLUTION_FILTER_BIAS	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_FILTER_BIAS /;"	kind:d
GL_CONVOLUTION_FILTER_BIAS_EXT	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_FILTER_BIAS_EXT /;"	kind:d
GL_CONVOLUTION_FILTER_SCALE	SDL_opengl.h	/^#define GL_CONVOLUTION_FILTER_SCALE	/;"	kind:d
GL_CONVOLUTION_FILTER_SCALE	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_FILTER_SCALE /;"	kind:d
GL_CONVOLUTION_FILTER_SCALE_EXT	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_FILTER_SCALE_EXT /;"	kind:d
GL_CONVOLUTION_FORMAT	SDL_opengl.h	/^#define GL_CONVOLUTION_FORMAT	/;"	kind:d
GL_CONVOLUTION_FORMAT	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_FORMAT /;"	kind:d
GL_CONVOLUTION_FORMAT_EXT	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_FORMAT_EXT /;"	kind:d
GL_CONVOLUTION_HEIGHT	SDL_opengl.h	/^#define GL_CONVOLUTION_HEIGHT	/;"	kind:d
GL_CONVOLUTION_HEIGHT	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_HEIGHT /;"	kind:d
GL_CONVOLUTION_HEIGHT_EXT	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_HEIGHT_EXT /;"	kind:d
GL_CONVOLUTION_HINT_SGIX	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_HINT_SGIX /;"	kind:d
GL_CONVOLUTION_WIDTH	SDL_opengl.h	/^#define GL_CONVOLUTION_WIDTH	/;"	kind:d
GL_CONVOLUTION_WIDTH	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_WIDTH /;"	kind:d
GL_CONVOLUTION_WIDTH_EXT	SDL_opengl_glext.h	/^#define GL_CONVOLUTION_WIDTH_EXT /;"	kind:d
GL_CON_0_ATI	SDL_opengl_glext.h	/^#define GL_CON_0_ATI /;"	kind:d
GL_CON_10_ATI	SDL_opengl_glext.h	/^#define GL_CON_10_ATI /;"	kind:d
GL_CON_11_ATI	SDL_opengl_glext.h	/^#define GL_CON_11_ATI /;"	kind:d
GL_CON_12_ATI	SDL_opengl_glext.h	/^#define GL_CON_12_ATI /;"	kind:d
GL_CON_13_ATI	SDL_opengl_glext.h	/^#define GL_CON_13_ATI /;"	kind:d
GL_CON_14_ATI	SDL_opengl_glext.h	/^#define GL_CON_14_ATI /;"	kind:d
GL_CON_15_ATI	SDL_opengl_glext.h	/^#define GL_CON_15_ATI /;"	kind:d
GL_CON_16_ATI	SDL_opengl_glext.h	/^#define GL_CON_16_ATI /;"	kind:d
GL_CON_17_ATI	SDL_opengl_glext.h	/^#define GL_CON_17_ATI /;"	kind:d
GL_CON_18_ATI	SDL_opengl_glext.h	/^#define GL_CON_18_ATI /;"	kind:d
GL_CON_19_ATI	SDL_opengl_glext.h	/^#define GL_CON_19_ATI /;"	kind:d
GL_CON_1_ATI	SDL_opengl_glext.h	/^#define GL_CON_1_ATI /;"	kind:d
GL_CON_20_ATI	SDL_opengl_glext.h	/^#define GL_CON_20_ATI /;"	kind:d
GL_CON_21_ATI	SDL_opengl_glext.h	/^#define GL_CON_21_ATI /;"	kind:d
GL_CON_22_ATI	SDL_opengl_glext.h	/^#define GL_CON_22_ATI /;"	kind:d
GL_CON_23_ATI	SDL_opengl_glext.h	/^#define GL_CON_23_ATI /;"	kind:d
GL_CON_24_ATI	SDL_opengl_glext.h	/^#define GL_CON_24_ATI /;"	kind:d
GL_CON_25_ATI	SDL_opengl_glext.h	/^#define GL_CON_25_ATI /;"	kind:d
GL_CON_26_ATI	SDL_opengl_glext.h	/^#define GL_CON_26_ATI /;"	kind:d
GL_CON_27_ATI	SDL_opengl_glext.h	/^#define GL_CON_27_ATI /;"	kind:d
GL_CON_28_ATI	SDL_opengl_glext.h	/^#define GL_CON_28_ATI /;"	kind:d
GL_CON_29_ATI	SDL_opengl_glext.h	/^#define GL_CON_29_ATI /;"	kind:d
GL_CON_2_ATI	SDL_opengl_glext.h	/^#define GL_CON_2_ATI /;"	kind:d
GL_CON_30_ATI	SDL_opengl_glext.h	/^#define GL_CON_30_ATI /;"	kind:d
GL_CON_31_ATI	SDL_opengl_glext.h	/^#define GL_CON_31_ATI /;"	kind:d
GL_CON_3_ATI	SDL_opengl_glext.h	/^#define GL_CON_3_ATI /;"	kind:d
GL_CON_4_ATI	SDL_opengl_glext.h	/^#define GL_CON_4_ATI /;"	kind:d
GL_CON_5_ATI	SDL_opengl_glext.h	/^#define GL_CON_5_ATI /;"	kind:d
GL_CON_6_ATI	SDL_opengl_glext.h	/^#define GL_CON_6_ATI /;"	kind:d
GL_CON_7_ATI	SDL_opengl_glext.h	/^#define GL_CON_7_ATI /;"	kind:d
GL_CON_8_ATI	SDL_opengl_glext.h	/^#define GL_CON_8_ATI /;"	kind:d
GL_CON_9_ATI	SDL_opengl_glext.h	/^#define GL_CON_9_ATI /;"	kind:d
GL_COORD_REPLACE	SDL_opengl_glext.h	/^#define GL_COORD_REPLACE /;"	kind:d
GL_COORD_REPLACE_ARB	SDL_opengl_glext.h	/^#define GL_COORD_REPLACE_ARB /;"	kind:d
GL_COORD_REPLACE_NV	SDL_opengl_glext.h	/^#define GL_COORD_REPLACE_NV /;"	kind:d
GL_COPY	SDL_opengl.h	/^#define GL_COPY	/;"	kind:d
GL_COPY_INVERTED	SDL_opengl.h	/^#define GL_COPY_INVERTED	/;"	kind:d
GL_COPY_PIXEL_TOKEN	SDL_opengl.h	/^#define GL_COPY_PIXEL_TOKEN	/;"	kind:d
GL_COPY_READ_BUFFER	SDL_opengl_glext.h	/^#define GL_COPY_READ_BUFFER /;"	kind:d
GL_COPY_READ_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_COPY_READ_BUFFER_BINDING /;"	kind:d
GL_COPY_WRITE_BUFFER	SDL_opengl_glext.h	/^#define GL_COPY_WRITE_BUFFER /;"	kind:d
GL_COPY_WRITE_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_COPY_WRITE_BUFFER_BINDING /;"	kind:d
GL_COUNTER_RANGE_AMD	SDL_opengl_glext.h	/^#define GL_COUNTER_RANGE_AMD /;"	kind:d
GL_COUNTER_RANGE_AMD	SDL_opengles2_gl2ext.h	/^#define GL_COUNTER_RANGE_AMD /;"	kind:d
GL_COUNTER_TYPE_AMD	SDL_opengl_glext.h	/^#define GL_COUNTER_TYPE_AMD /;"	kind:d
GL_COUNTER_TYPE_AMD	SDL_opengles2_gl2ext.h	/^#define GL_COUNTER_TYPE_AMD /;"	kind:d
GL_COUNT_DOWN_NV	SDL_opengl_glext.h	/^#define GL_COUNT_DOWN_NV /;"	kind:d
GL_COUNT_UP_NV	SDL_opengl_glext.h	/^#define GL_COUNT_UP_NV /;"	kind:d
GL_COVERAGE_ALL_FRAGMENTS_NV	SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_ALL_FRAGMENTS_NV /;"	kind:d
GL_COVERAGE_ATTACHMENT_NV	SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_ATTACHMENT_NV /;"	kind:d
GL_COVERAGE_AUTOMATIC_NV	SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_AUTOMATIC_NV /;"	kind:d
GL_COVERAGE_BUFFERS_NV	SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_BUFFERS_NV /;"	kind:d
GL_COVERAGE_BUFFER_BIT_NV	SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_BUFFER_BIT_NV /;"	kind:d
GL_COVERAGE_COMPONENT4_NV	SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_COMPONENT4_NV /;"	kind:d
GL_COVERAGE_COMPONENT_NV	SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_COMPONENT_NV /;"	kind:d
GL_COVERAGE_EDGE_FRAGMENTS_NV	SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_EDGE_FRAGMENTS_NV /;"	kind:d
GL_COVERAGE_SAMPLES_NV	SDL_opengles2_gl2ext.h	/^#define GL_COVERAGE_SAMPLES_NV /;"	kind:d
GL_CPU_OPTIMIZED_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_CPU_OPTIMIZED_QCOM /;"	kind:d
GL_CUBIC_CURVE_TO_NV	SDL_opengl_glext.h	/^#define GL_CUBIC_CURVE_TO_NV /;"	kind:d
GL_CUBIC_EXT	SDL_opengl_glext.h	/^#define GL_CUBIC_EXT /;"	kind:d
GL_CUBIC_HP	SDL_opengl_glext.h	/^#define GL_CUBIC_HP /;"	kind:d
GL_CULL_FACE	SDL_opengl.h	/^#define GL_CULL_FACE	/;"	kind:d
GL_CULL_FACE	SDL_opengles2_gl2.h	/^#define GL_CULL_FACE /;"	kind:d
GL_CULL_FACE_MODE	SDL_opengl.h	/^#define GL_CULL_FACE_MODE	/;"	kind:d
GL_CULL_FACE_MODE	SDL_opengles2_gl2.h	/^#define GL_CULL_FACE_MODE /;"	kind:d
GL_CULL_FRAGMENT_NV	SDL_opengl_glext.h	/^#define GL_CULL_FRAGMENT_NV /;"	kind:d
GL_CULL_MODES_NV	SDL_opengl_glext.h	/^#define GL_CULL_MODES_NV /;"	kind:d
GL_CULL_VERTEX_EXT	SDL_opengl_glext.h	/^#define GL_CULL_VERTEX_EXT /;"	kind:d
GL_CULL_VERTEX_EYE_POSITION_EXT	SDL_opengl_glext.h	/^#define GL_CULL_VERTEX_EYE_POSITION_EXT /;"	kind:d
GL_CULL_VERTEX_IBM	SDL_opengl_glext.h	/^#define GL_CULL_VERTEX_IBM /;"	kind:d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	SDL_opengl_glext.h	/^#define GL_CULL_VERTEX_OBJECT_POSITION_EXT /;"	kind:d
GL_CURRENT_ATTRIB_NV	SDL_opengl_glext.h	/^#define GL_CURRENT_ATTRIB_NV /;"	kind:d
GL_CURRENT_BINORMAL_EXT	SDL_opengl_glext.h	/^#define GL_CURRENT_BINORMAL_EXT /;"	kind:d
GL_CURRENT_BIT	SDL_opengl.h	/^#define GL_CURRENT_BIT	/;"	kind:d
GL_CURRENT_COLOR	SDL_opengl.h	/^#define GL_CURRENT_COLOR	/;"	kind:d
GL_CURRENT_FOG_COORD	SDL_opengl_glext.h	/^#define GL_CURRENT_FOG_COORD /;"	kind:d
GL_CURRENT_FOG_COORDINATE	SDL_opengl_glext.h	/^#define GL_CURRENT_FOG_COORDINATE /;"	kind:d
GL_CURRENT_FOG_COORDINATE_EXT	SDL_opengl_glext.h	/^#define GL_CURRENT_FOG_COORDINATE_EXT /;"	kind:d
GL_CURRENT_INDEX	SDL_opengl.h	/^#define GL_CURRENT_INDEX	/;"	kind:d
GL_CURRENT_MATRIX_ARB	SDL_opengl_glext.h	/^#define GL_CURRENT_MATRIX_ARB /;"	kind:d
GL_CURRENT_MATRIX_INDEX_ARB	SDL_opengl_glext.h	/^#define GL_CURRENT_MATRIX_INDEX_ARB /;"	kind:d
GL_CURRENT_MATRIX_NV	SDL_opengl_glext.h	/^#define GL_CURRENT_MATRIX_NV /;"	kind:d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	SDL_opengl_glext.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB /;"	kind:d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	SDL_opengl_glext.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_NV /;"	kind:d
GL_CURRENT_NORMAL	SDL_opengl.h	/^#define GL_CURRENT_NORMAL	/;"	kind:d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	SDL_opengl_glext.h	/^#define GL_CURRENT_OCCLUSION_QUERY_ID_NV /;"	kind:d
GL_CURRENT_PALETTE_MATRIX_ARB	SDL_opengl_glext.h	/^#define GL_CURRENT_PALETTE_MATRIX_ARB /;"	kind:d
GL_CURRENT_PROGRAM	SDL_opengl_glext.h	/^#define GL_CURRENT_PROGRAM /;"	kind:d
GL_CURRENT_PROGRAM	SDL_opengles2_gl2.h	/^#define GL_CURRENT_PROGRAM /;"	kind:d
GL_CURRENT_QUERY	SDL_opengl_glext.h	/^#define GL_CURRENT_QUERY /;"	kind:d
GL_CURRENT_QUERY_ARB	SDL_opengl_glext.h	/^#define GL_CURRENT_QUERY_ARB /;"	kind:d
GL_CURRENT_QUERY_EXT	SDL_opengles2_gl2ext.h	/^#define GL_CURRENT_QUERY_EXT /;"	kind:d
GL_CURRENT_RASTER_COLOR	SDL_opengl.h	/^#define GL_CURRENT_RASTER_COLOR	/;"	kind:d
GL_CURRENT_RASTER_DISTANCE	SDL_opengl.h	/^#define GL_CURRENT_RASTER_DISTANCE	/;"	kind:d
GL_CURRENT_RASTER_INDEX	SDL_opengl.h	/^#define GL_CURRENT_RASTER_INDEX	/;"	kind:d
GL_CURRENT_RASTER_NORMAL_SGIX	SDL_opengl_glext.h	/^#define GL_CURRENT_RASTER_NORMAL_SGIX /;"	kind:d
GL_CURRENT_RASTER_POSITION	SDL_opengl.h	/^#define GL_CURRENT_RASTER_POSITION	/;"	kind:d
GL_CURRENT_RASTER_POSITION_VALID	SDL_opengl.h	/^#define GL_CURRENT_RASTER_POSITION_VALID	/;"	kind:d
GL_CURRENT_RASTER_SECONDARY_COLOR	SDL_opengl_glext.h	/^#define GL_CURRENT_RASTER_SECONDARY_COLOR /;"	kind:d
GL_CURRENT_RASTER_TEXTURE_COORDS	SDL_opengl.h	/^#define GL_CURRENT_RASTER_TEXTURE_COORDS	/;"	kind:d
GL_CURRENT_SECONDARY_COLOR	SDL_opengl_glext.h	/^#define GL_CURRENT_SECONDARY_COLOR /;"	kind:d
GL_CURRENT_SECONDARY_COLOR_EXT	SDL_opengl_glext.h	/^#define GL_CURRENT_SECONDARY_COLOR_EXT /;"	kind:d
GL_CURRENT_TANGENT_EXT	SDL_opengl_glext.h	/^#define GL_CURRENT_TANGENT_EXT /;"	kind:d
GL_CURRENT_TEXTURE_COORDS	SDL_opengl.h	/^#define GL_CURRENT_TEXTURE_COORDS	/;"	kind:d
GL_CURRENT_TIME_NV	SDL_opengl_glext.h	/^#define GL_CURRENT_TIME_NV /;"	kind:d
GL_CURRENT_VERTEX_ATTRIB	SDL_opengl_glext.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	kind:d
GL_CURRENT_VERTEX_ATTRIB	SDL_opengles2_gl2.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	kind:d
GL_CURRENT_VERTEX_ATTRIB_ARB	SDL_opengl_glext.h	/^#define GL_CURRENT_VERTEX_ATTRIB_ARB /;"	kind:d
GL_CURRENT_VERTEX_EXT	SDL_opengl_glext.h	/^#define GL_CURRENT_VERTEX_EXT /;"	kind:d
GL_CURRENT_VERTEX_WEIGHT_EXT	SDL_opengl_glext.h	/^#define GL_CURRENT_VERTEX_WEIGHT_EXT /;"	kind:d
GL_CURRENT_WEIGHT_ARB	SDL_opengl_glext.h	/^#define GL_CURRENT_WEIGHT_ARB /;"	kind:d
GL_CW	SDL_opengl.h	/^#define GL_CW	/;"	kind:d
GL_CW	SDL_opengles2_gl2.h	/^#define GL_CW /;"	kind:d
GL_DARKEN_NV	SDL_opengl_glext.h	/^#define GL_DARKEN_NV /;"	kind:d
GL_DATA_BUFFER_AMD	SDL_opengl_glext.h	/^#define GL_DATA_BUFFER_AMD /;"	kind:d
GL_DEBUG_CALLBACK_FUNCTION	SDL_opengl_glext.h	/^#define GL_DEBUG_CALLBACK_FUNCTION /;"	kind:d
GL_DEBUG_CALLBACK_FUNCTION_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_CALLBACK_FUNCTION_ARB /;"	kind:d
GL_DEBUG_CALLBACK_FUNCTION_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_CALLBACK_FUNCTION_KHR /;"	kind:d
GL_DEBUG_CALLBACK_USER_PARAM	SDL_opengl_glext.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM /;"	kind:d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM_ARB /;"	kind:d
GL_DEBUG_CALLBACK_USER_PARAM_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM_KHR /;"	kind:d
GL_DEBUG_CATEGORY_API_ERROR_AMD	SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_API_ERROR_AMD /;"	kind:d
GL_DEBUG_CATEGORY_APPLICATION_AMD	SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_APPLICATION_AMD /;"	kind:d
GL_DEBUG_CATEGORY_DEPRECATION_AMD	SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_DEPRECATION_AMD /;"	kind:d
GL_DEBUG_CATEGORY_OTHER_AMD	SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_OTHER_AMD /;"	kind:d
GL_DEBUG_CATEGORY_PERFORMANCE_AMD	SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD /;"	kind:d
GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD	SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD /;"	kind:d
GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD	SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD /;"	kind:d
GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD	SDL_opengl_glext.h	/^#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD /;"	kind:d
GL_DEBUG_GROUP_STACK_DEPTH	SDL_opengl_glext.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH /;"	kind:d
GL_DEBUG_GROUP_STACK_DEPTH_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH_KHR /;"	kind:d
GL_DEBUG_LOGGED_MESSAGES	SDL_opengl_glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES /;"	kind:d
GL_DEBUG_LOGGED_MESSAGES_AMD	SDL_opengl_glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES_AMD /;"	kind:d
GL_DEBUG_LOGGED_MESSAGES_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES_ARB /;"	kind:d
GL_DEBUG_LOGGED_MESSAGES_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_LOGGED_MESSAGES_KHR /;"	kind:d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	SDL_opengl_glext.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH /;"	kind:d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB /;"	kind:d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR /;"	kind:d
GL_DEBUG_OUTPUT	SDL_opengl_glext.h	/^#define GL_DEBUG_OUTPUT /;"	kind:d
GL_DEBUG_OUTPUT_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_OUTPUT_KHR /;"	kind:d
GL_DEBUG_OUTPUT_SYNCHRONOUS	SDL_opengl_glext.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	kind:d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB /;"	kind:d
GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR /;"	kind:d
GL_DEBUG_SEVERITY_HIGH	SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	kind:d
GL_DEBUG_SEVERITY_HIGH_AMD	SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_HIGH_AMD /;"	kind:d
GL_DEBUG_SEVERITY_HIGH_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_HIGH_ARB /;"	kind:d
GL_DEBUG_SEVERITY_HIGH_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SEVERITY_HIGH_KHR /;"	kind:d
GL_DEBUG_SEVERITY_LOW	SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	kind:d
GL_DEBUG_SEVERITY_LOW_AMD	SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_LOW_AMD /;"	kind:d
GL_DEBUG_SEVERITY_LOW_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_LOW_ARB /;"	kind:d
GL_DEBUG_SEVERITY_LOW_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SEVERITY_LOW_KHR /;"	kind:d
GL_DEBUG_SEVERITY_MEDIUM	SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	kind:d
GL_DEBUG_SEVERITY_MEDIUM_AMD	SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_AMD /;"	kind:d
GL_DEBUG_SEVERITY_MEDIUM_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_ARB /;"	kind:d
GL_DEBUG_SEVERITY_MEDIUM_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_KHR /;"	kind:d
GL_DEBUG_SEVERITY_NOTIFICATION	SDL_opengl_glext.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	kind:d
GL_DEBUG_SEVERITY_NOTIFICATION_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION_KHR /;"	kind:d
GL_DEBUG_SOURCE_API	SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_API /;"	kind:d
GL_DEBUG_SOURCE_API_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_API_ARB /;"	kind:d
GL_DEBUG_SOURCE_API_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SOURCE_API_KHR /;"	kind:d
GL_DEBUG_SOURCE_APPLICATION	SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	kind:d
GL_DEBUG_SOURCE_APPLICATION_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_APPLICATION_ARB /;"	kind:d
GL_DEBUG_SOURCE_APPLICATION_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SOURCE_APPLICATION_KHR /;"	kind:d
GL_DEBUG_SOURCE_OTHER	SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	kind:d
GL_DEBUG_SOURCE_OTHER_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_OTHER_ARB /;"	kind:d
GL_DEBUG_SOURCE_OTHER_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SOURCE_OTHER_KHR /;"	kind:d
GL_DEBUG_SOURCE_SHADER_COMPILER	SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	kind:d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB /;"	kind:d
GL_DEBUG_SOURCE_SHADER_COMPILER_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER_KHR /;"	kind:d
GL_DEBUG_SOURCE_THIRD_PARTY	SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	kind:d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB /;"	kind:d
GL_DEBUG_SOURCE_THIRD_PARTY_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY_KHR /;"	kind:d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	kind:d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB /;"	kind:d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR /;"	kind:d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	kind:d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB /;"	kind:d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR /;"	kind:d
GL_DEBUG_TYPE_ERROR	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_ERROR /;"	kind:d
GL_DEBUG_TYPE_ERROR_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_ERROR_ARB /;"	kind:d
GL_DEBUG_TYPE_ERROR_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_ERROR_KHR /;"	kind:d
GL_DEBUG_TYPE_MARKER	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_MARKER /;"	kind:d
GL_DEBUG_TYPE_MARKER_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_MARKER_KHR /;"	kind:d
GL_DEBUG_TYPE_OTHER	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_OTHER /;"	kind:d
GL_DEBUG_TYPE_OTHER_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_OTHER_ARB /;"	kind:d
GL_DEBUG_TYPE_OTHER_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_OTHER_KHR /;"	kind:d
GL_DEBUG_TYPE_PERFORMANCE	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	kind:d
GL_DEBUG_TYPE_PERFORMANCE_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_PERFORMANCE_ARB /;"	kind:d
GL_DEBUG_TYPE_PERFORMANCE_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_PERFORMANCE_KHR /;"	kind:d
GL_DEBUG_TYPE_POP_GROUP	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_POP_GROUP /;"	kind:d
GL_DEBUG_TYPE_POP_GROUP_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_POP_GROUP_KHR /;"	kind:d
GL_DEBUG_TYPE_PORTABILITY	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	kind:d
GL_DEBUG_TYPE_PORTABILITY_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_PORTABILITY_ARB /;"	kind:d
GL_DEBUG_TYPE_PORTABILITY_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_PORTABILITY_KHR /;"	kind:d
GL_DEBUG_TYPE_PUSH_GROUP	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP /;"	kind:d
GL_DEBUG_TYPE_PUSH_GROUP_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP_KHR /;"	kind:d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	kind:d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	SDL_opengl_glext.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB /;"	kind:d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR	SDL_opengles2_gl2ext.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR /;"	kind:d
GL_DECAL	SDL_opengl.h	/^#define GL_DECAL	/;"	kind:d
GL_DECODE_EXT	SDL_opengl_glext.h	/^#define GL_DECODE_EXT /;"	kind:d
GL_DECODE_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DECODE_EXT /;"	kind:d
GL_DECR	SDL_opengl.h	/^#define GL_DECR	/;"	kind:d
GL_DECR	SDL_opengles2_gl2.h	/^#define GL_DECR /;"	kind:d
GL_DECR_WRAP	SDL_opengl_glext.h	/^#define GL_DECR_WRAP /;"	kind:d
GL_DECR_WRAP	SDL_opengles2_gl2.h	/^#define GL_DECR_WRAP /;"	kind:d
GL_DECR_WRAP_EXT	SDL_opengl_glext.h	/^#define GL_DECR_WRAP_EXT /;"	kind:d
GL_DEFORMATIONS_MASK_SGIX	SDL_opengl_glext.h	/^#define GL_DEFORMATIONS_MASK_SGIX /;"	kind:d
GL_DELETE_STATUS	SDL_opengl_glext.h	/^#define GL_DELETE_STATUS /;"	kind:d
GL_DELETE_STATUS	SDL_opengles2_gl2.h	/^#define GL_DELETE_STATUS /;"	kind:d
GL_DEPENDENT_AR_TEXTURE_2D_NV	SDL_opengl_glext.h	/^#define GL_DEPENDENT_AR_TEXTURE_2D_NV /;"	kind:d
GL_DEPENDENT_GB_TEXTURE_2D_NV	SDL_opengl_glext.h	/^#define GL_DEPENDENT_GB_TEXTURE_2D_NV /;"	kind:d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	SDL_opengl_glext.h	/^#define GL_DEPENDENT_HILO_TEXTURE_2D_NV /;"	kind:d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	SDL_opengl_glext.h	/^#define GL_DEPENDENT_RGB_TEXTURE_3D_NV /;"	kind:d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	SDL_opengl_glext.h	/^#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV /;"	kind:d
GL_DEPTH	SDL_opengl.h	/^#define GL_DEPTH	/;"	kind:d
GL_DEPTH24_STENCIL8	SDL_opengl_glext.h	/^#define GL_DEPTH24_STENCIL8 /;"	kind:d
GL_DEPTH24_STENCIL8_EXT	SDL_opengl_glext.h	/^#define GL_DEPTH24_STENCIL8_EXT /;"	kind:d
GL_DEPTH24_STENCIL8_OES	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH24_STENCIL8_OES /;"	kind:d
GL_DEPTH32F_STENCIL8	SDL_opengl_glext.h	/^#define GL_DEPTH32F_STENCIL8 /;"	kind:d
GL_DEPTH32F_STENCIL8_NV	SDL_opengl_glext.h	/^#define GL_DEPTH32F_STENCIL8_NV /;"	kind:d
GL_DEPTH_ATTACHMENT	SDL_opengl_glext.h	/^#define GL_DEPTH_ATTACHMENT /;"	kind:d
GL_DEPTH_ATTACHMENT	SDL_opengles2_gl2.h	/^#define GL_DEPTH_ATTACHMENT /;"	kind:d
GL_DEPTH_ATTACHMENT_EXT	SDL_opengl_glext.h	/^#define GL_DEPTH_ATTACHMENT_EXT /;"	kind:d
GL_DEPTH_BIAS	SDL_opengl.h	/^#define GL_DEPTH_BIAS	/;"	kind:d
GL_DEPTH_BITS	SDL_opengl.h	/^#define GL_DEPTH_BITS	/;"	kind:d
GL_DEPTH_BITS	SDL_opengles2_gl2.h	/^#define GL_DEPTH_BITS /;"	kind:d
GL_DEPTH_BOUNDS_EXT	SDL_opengl_glext.h	/^#define GL_DEPTH_BOUNDS_EXT /;"	kind:d
GL_DEPTH_BOUNDS_TEST_EXT	SDL_opengl_glext.h	/^#define GL_DEPTH_BOUNDS_TEST_EXT /;"	kind:d
GL_DEPTH_BUFFER_BIT	SDL_opengl.h	/^#define GL_DEPTH_BUFFER_BIT	/;"	kind:d
GL_DEPTH_BUFFER_BIT	SDL_opengles2_gl2.h	/^#define GL_DEPTH_BUFFER_BIT /;"	kind:d
GL_DEPTH_BUFFER_BIT0_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT0_QCOM /;"	kind:d
GL_DEPTH_BUFFER_BIT1_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT1_QCOM /;"	kind:d
GL_DEPTH_BUFFER_BIT2_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT2_QCOM /;"	kind:d
GL_DEPTH_BUFFER_BIT3_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT3_QCOM /;"	kind:d
GL_DEPTH_BUFFER_BIT4_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT4_QCOM /;"	kind:d
GL_DEPTH_BUFFER_BIT5_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT5_QCOM /;"	kind:d
GL_DEPTH_BUFFER_BIT6_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT6_QCOM /;"	kind:d
GL_DEPTH_BUFFER_BIT7_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_BUFFER_BIT7_QCOM /;"	kind:d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	SDL_opengl_glext.h	/^#define GL_DEPTH_BUFFER_FLOAT_MODE_NV /;"	kind:d
GL_DEPTH_CLAMP	SDL_opengl_glext.h	/^#define GL_DEPTH_CLAMP /;"	kind:d
GL_DEPTH_CLAMP_FAR_AMD	SDL_opengl_glext.h	/^#define GL_DEPTH_CLAMP_FAR_AMD /;"	kind:d
GL_DEPTH_CLAMP_NEAR_AMD	SDL_opengl_glext.h	/^#define GL_DEPTH_CLAMP_NEAR_AMD /;"	kind:d
GL_DEPTH_CLAMP_NV	SDL_opengl_glext.h	/^#define GL_DEPTH_CLAMP_NV /;"	kind:d
GL_DEPTH_CLEAR_VALUE	SDL_opengl.h	/^#define GL_DEPTH_CLEAR_VALUE	/;"	kind:d
GL_DEPTH_CLEAR_VALUE	SDL_opengles2_gl2.h	/^#define GL_DEPTH_CLEAR_VALUE /;"	kind:d
GL_DEPTH_COMPONENT	SDL_opengl.h	/^#define GL_DEPTH_COMPONENT	/;"	kind:d
GL_DEPTH_COMPONENT	SDL_opengles2_gl2.h	/^#define GL_DEPTH_COMPONENT /;"	kind:d
GL_DEPTH_COMPONENT	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_COMPONENT /;"	kind:d
GL_DEPTH_COMPONENT16	SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT16 /;"	kind:d
GL_DEPTH_COMPONENT16	SDL_opengles2_gl2.h	/^#define GL_DEPTH_COMPONENT16 /;"	kind:d
GL_DEPTH_COMPONENT16	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_COMPONENT16 /;"	kind:d
GL_DEPTH_COMPONENT16_ARB	SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT16_ARB /;"	kind:d
GL_DEPTH_COMPONENT16_NONLINEAR_NV	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_COMPONENT16_NONLINEAR_NV /;"	kind:d
GL_DEPTH_COMPONENT16_OES	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_COMPONENT16_OES /;"	kind:d
GL_DEPTH_COMPONENT16_SGIX	SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT16_SGIX /;"	kind:d
GL_DEPTH_COMPONENT24	SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT24 /;"	kind:d
GL_DEPTH_COMPONENT24_ARB	SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT24_ARB /;"	kind:d
GL_DEPTH_COMPONENT24_OES	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_COMPONENT24_OES /;"	kind:d
GL_DEPTH_COMPONENT24_SGIX	SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT24_SGIX /;"	kind:d
GL_DEPTH_COMPONENT32	SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT32 /;"	kind:d
GL_DEPTH_COMPONENT32F	SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT32F /;"	kind:d
GL_DEPTH_COMPONENT32F_NV	SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT32F_NV /;"	kind:d
GL_DEPTH_COMPONENT32_ARB	SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT32_ARB /;"	kind:d
GL_DEPTH_COMPONENT32_OES	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_COMPONENT32_OES /;"	kind:d
GL_DEPTH_COMPONENT32_SGIX	SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENT32_SGIX /;"	kind:d
GL_DEPTH_COMPONENTS	SDL_opengl_glext.h	/^#define GL_DEPTH_COMPONENTS /;"	kind:d
GL_DEPTH_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_EXT /;"	kind:d
GL_DEPTH_FUNC	SDL_opengl.h	/^#define GL_DEPTH_FUNC	/;"	kind:d
GL_DEPTH_FUNC	SDL_opengles2_gl2.h	/^#define GL_DEPTH_FUNC /;"	kind:d
GL_DEPTH_RANGE	SDL_opengl.h	/^#define GL_DEPTH_RANGE	/;"	kind:d
GL_DEPTH_RANGE	SDL_opengles2_gl2.h	/^#define GL_DEPTH_RANGE /;"	kind:d
GL_DEPTH_RENDERABLE	SDL_opengl_glext.h	/^#define GL_DEPTH_RENDERABLE /;"	kind:d
GL_DEPTH_SCALE	SDL_opengl.h	/^#define GL_DEPTH_SCALE	/;"	kind:d
GL_DEPTH_STENCIL	SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL /;"	kind:d
GL_DEPTH_STENCIL_ATTACHMENT	SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL_ATTACHMENT /;"	kind:d
GL_DEPTH_STENCIL_EXT	SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL_EXT /;"	kind:d
GL_DEPTH_STENCIL_MESA	SDL_opengl.h	/^#define GL_DEPTH_STENCIL_MESA	/;"	kind:d
GL_DEPTH_STENCIL_NV	SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL_NV /;"	kind:d
GL_DEPTH_STENCIL_OES	SDL_opengles2_gl2ext.h	/^#define GL_DEPTH_STENCIL_OES /;"	kind:d
GL_DEPTH_STENCIL_TEXTURE_MODE	SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL_TEXTURE_MODE /;"	kind:d
GL_DEPTH_STENCIL_TO_BGRA_NV	SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL_TO_BGRA_NV /;"	kind:d
GL_DEPTH_STENCIL_TO_RGBA_NV	SDL_opengl_glext.h	/^#define GL_DEPTH_STENCIL_TO_RGBA_NV /;"	kind:d
GL_DEPTH_TEST	SDL_opengl.h	/^#define GL_DEPTH_TEST	/;"	kind:d
GL_DEPTH_TEST	SDL_opengles2_gl2.h	/^#define GL_DEPTH_TEST /;"	kind:d
GL_DEPTH_TEXTURE_MODE	SDL_opengl_glext.h	/^#define GL_DEPTH_TEXTURE_MODE /;"	kind:d
GL_DEPTH_TEXTURE_MODE_ARB	SDL_opengl_glext.h	/^#define GL_DEPTH_TEXTURE_MODE_ARB /;"	kind:d
GL_DEPTH_WRITEMASK	SDL_opengl.h	/^#define GL_DEPTH_WRITEMASK	/;"	kind:d
GL_DEPTH_WRITEMASK	SDL_opengles2_gl2.h	/^#define GL_DEPTH_WRITEMASK /;"	kind:d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	SDL_opengl_glext.h	/^#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS /;"	kind:d
GL_DETAIL_TEXTURE_2D_SGIS	SDL_opengl_glext.h	/^#define GL_DETAIL_TEXTURE_2D_SGIS /;"	kind:d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	SDL_opengl_glext.h	/^#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS /;"	kind:d
GL_DETAIL_TEXTURE_LEVEL_SGIS	SDL_opengl_glext.h	/^#define GL_DETAIL_TEXTURE_LEVEL_SGIS /;"	kind:d
GL_DETAIL_TEXTURE_MODE_SGIS	SDL_opengl_glext.h	/^#define GL_DETAIL_TEXTURE_MODE_SGIS /;"	kind:d
GL_DIFFERENCE_NV	SDL_opengl_glext.h	/^#define GL_DIFFERENCE_NV /;"	kind:d
GL_DIFFUSE	SDL_opengl.h	/^#define GL_DIFFUSE	/;"	kind:d
GL_DISCARD_ATI	SDL_opengl_glext.h	/^#define GL_DISCARD_ATI /;"	kind:d
GL_DISCARD_NV	SDL_opengl_glext.h	/^#define GL_DISCARD_NV /;"	kind:d
GL_DISCRETE_AMD	SDL_opengl_glext.h	/^#define GL_DISCRETE_AMD /;"	kind:d
GL_DISJOINT_NV	SDL_opengl_glext.h	/^#define GL_DISJOINT_NV /;"	kind:d
GL_DISPATCH_INDIRECT_BUFFER	SDL_opengl_glext.h	/^#define GL_DISPATCH_INDIRECT_BUFFER /;"	kind:d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_DISPATCH_INDIRECT_BUFFER_BINDING /;"	kind:d
GL_DISPLAY_LIST	SDL_opengl_glext.h	/^#define GL_DISPLAY_LIST /;"	kind:d
GL_DISTANCE_ATTENUATION_EXT	SDL_opengl_glext.h	/^#define GL_DISTANCE_ATTENUATION_EXT /;"	kind:d
GL_DISTANCE_ATTENUATION_SGIS	SDL_opengl_glext.h	/^#define GL_DISTANCE_ATTENUATION_SGIS /;"	kind:d
GL_DITHER	SDL_opengl.h	/^#define GL_DITHER	/;"	kind:d
GL_DITHER	SDL_opengles2_gl2.h	/^#define GL_DITHER /;"	kind:d
GL_DMP_shader_binary	SDL_opengles2_gl2ext.h	/^#define GL_DMP_shader_binary /;"	kind:d
GL_DOMAIN	SDL_opengl.h	/^#define GL_DOMAIN	/;"	kind:d
GL_DONT_CARE	SDL_opengl.h	/^#define GL_DONT_CARE	/;"	kind:d
GL_DONT_CARE	SDL_opengles2_gl2.h	/^#define GL_DONT_CARE /;"	kind:d
GL_DOT2_ADD_ATI	SDL_opengl_glext.h	/^#define GL_DOT2_ADD_ATI /;"	kind:d
GL_DOT3_ATI	SDL_opengl_glext.h	/^#define GL_DOT3_ATI /;"	kind:d
GL_DOT3_RGB	SDL_opengl.h	/^#define GL_DOT3_RGB	/;"	kind:d
GL_DOT3_RGB	SDL_opengl_glext.h	/^#define GL_DOT3_RGB /;"	kind:d
GL_DOT3_RGBA	SDL_opengl.h	/^#define GL_DOT3_RGBA	/;"	kind:d
GL_DOT3_RGBA	SDL_opengl_glext.h	/^#define GL_DOT3_RGBA /;"	kind:d
GL_DOT3_RGBA_ARB	SDL_opengl_glext.h	/^#define GL_DOT3_RGBA_ARB /;"	kind:d
GL_DOT3_RGBA_EXT	SDL_opengl_glext.h	/^#define GL_DOT3_RGBA_EXT /;"	kind:d
GL_DOT3_RGB_ARB	SDL_opengl_glext.h	/^#define GL_DOT3_RGB_ARB /;"	kind:d
GL_DOT3_RGB_EXT	SDL_opengl_glext.h	/^#define GL_DOT3_RGB_EXT /;"	kind:d
GL_DOT4_ATI	SDL_opengl_glext.h	/^#define GL_DOT4_ATI /;"	kind:d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV /;"	kind:d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV /;"	kind:d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV /;"	kind:d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV /;"	kind:d
GL_DOT_PRODUCT_NV	SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_NV /;"	kind:d
GL_DOT_PRODUCT_PASS_THROUGH_NV	SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_PASS_THROUGH_NV /;"	kind:d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV /;"	kind:d
GL_DOT_PRODUCT_TEXTURE_1D_NV	SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_1D_NV /;"	kind:d
GL_DOT_PRODUCT_TEXTURE_2D_NV	SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_2D_NV /;"	kind:d
GL_DOT_PRODUCT_TEXTURE_3D_NV	SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_3D_NV /;"	kind:d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV /;"	kind:d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	SDL_opengl_glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV /;"	kind:d
GL_DOUBLE	SDL_opengl.h	/^#define GL_DOUBLE	/;"	kind:d
GL_DOUBLEBUFFER	SDL_opengl.h	/^#define GL_DOUBLEBUFFER	/;"	kind:d
GL_DOUBLE_MAT2	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT2 /;"	kind:d
GL_DOUBLE_MAT2_EXT	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT2_EXT /;"	kind:d
GL_DOUBLE_MAT2x3	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT2x3 /;"	kind:d
GL_DOUBLE_MAT2x3_EXT	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT2x3_EXT /;"	kind:d
GL_DOUBLE_MAT2x4	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT2x4 /;"	kind:d
GL_DOUBLE_MAT2x4_EXT	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT2x4_EXT /;"	kind:d
GL_DOUBLE_MAT3	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT3 /;"	kind:d
GL_DOUBLE_MAT3_EXT	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT3_EXT /;"	kind:d
GL_DOUBLE_MAT3x2	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT3x2 /;"	kind:d
GL_DOUBLE_MAT3x2_EXT	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT3x2_EXT /;"	kind:d
GL_DOUBLE_MAT3x4	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT3x4 /;"	kind:d
GL_DOUBLE_MAT3x4_EXT	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT3x4_EXT /;"	kind:d
GL_DOUBLE_MAT4	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT4 /;"	kind:d
GL_DOUBLE_MAT4_EXT	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT4_EXT /;"	kind:d
GL_DOUBLE_MAT4x2	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT4x2 /;"	kind:d
GL_DOUBLE_MAT4x2_EXT	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT4x2_EXT /;"	kind:d
GL_DOUBLE_MAT4x3	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT4x3 /;"	kind:d
GL_DOUBLE_MAT4x3_EXT	SDL_opengl_glext.h	/^#define GL_DOUBLE_MAT4x3_EXT /;"	kind:d
GL_DOUBLE_VEC2	SDL_opengl_glext.h	/^#define GL_DOUBLE_VEC2 /;"	kind:d
GL_DOUBLE_VEC2_EXT	SDL_opengl_glext.h	/^#define GL_DOUBLE_VEC2_EXT /;"	kind:d
GL_DOUBLE_VEC3	SDL_opengl_glext.h	/^#define GL_DOUBLE_VEC3 /;"	kind:d
GL_DOUBLE_VEC3_EXT	SDL_opengl_glext.h	/^#define GL_DOUBLE_VEC3_EXT /;"	kind:d
GL_DOUBLE_VEC4	SDL_opengl_glext.h	/^#define GL_DOUBLE_VEC4 /;"	kind:d
GL_DOUBLE_VEC4_EXT	SDL_opengl_glext.h	/^#define GL_DOUBLE_VEC4_EXT /;"	kind:d
GL_DRAW_BUFFER	SDL_opengl.h	/^#define GL_DRAW_BUFFER	/;"	kind:d
GL_DRAW_BUFFER0	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER0 /;"	kind:d
GL_DRAW_BUFFER0_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER0_ARB /;"	kind:d
GL_DRAW_BUFFER0_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER0_ATI /;"	kind:d
GL_DRAW_BUFFER0_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER0_EXT /;"	kind:d
GL_DRAW_BUFFER0_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER0_NV /;"	kind:d
GL_DRAW_BUFFER1	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER1 /;"	kind:d
GL_DRAW_BUFFER10	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER10 /;"	kind:d
GL_DRAW_BUFFER10_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER10_ARB /;"	kind:d
GL_DRAW_BUFFER10_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER10_ATI /;"	kind:d
GL_DRAW_BUFFER10_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER10_EXT /;"	kind:d
GL_DRAW_BUFFER10_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER10_NV /;"	kind:d
GL_DRAW_BUFFER11	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER11 /;"	kind:d
GL_DRAW_BUFFER11_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER11_ARB /;"	kind:d
GL_DRAW_BUFFER11_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER11_ATI /;"	kind:d
GL_DRAW_BUFFER11_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER11_EXT /;"	kind:d
GL_DRAW_BUFFER11_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER11_NV /;"	kind:d
GL_DRAW_BUFFER12	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER12 /;"	kind:d
GL_DRAW_BUFFER12_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER12_ARB /;"	kind:d
GL_DRAW_BUFFER12_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER12_ATI /;"	kind:d
GL_DRAW_BUFFER12_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER12_EXT /;"	kind:d
GL_DRAW_BUFFER12_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER12_NV /;"	kind:d
GL_DRAW_BUFFER13	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER13 /;"	kind:d
GL_DRAW_BUFFER13_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER13_ARB /;"	kind:d
GL_DRAW_BUFFER13_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER13_ATI /;"	kind:d
GL_DRAW_BUFFER13_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER13_EXT /;"	kind:d
GL_DRAW_BUFFER13_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER13_NV /;"	kind:d
GL_DRAW_BUFFER14	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER14 /;"	kind:d
GL_DRAW_BUFFER14_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER14_ARB /;"	kind:d
GL_DRAW_BUFFER14_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER14_ATI /;"	kind:d
GL_DRAW_BUFFER14_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER14_EXT /;"	kind:d
GL_DRAW_BUFFER14_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER14_NV /;"	kind:d
GL_DRAW_BUFFER15	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER15 /;"	kind:d
GL_DRAW_BUFFER15_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER15_ARB /;"	kind:d
GL_DRAW_BUFFER15_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER15_ATI /;"	kind:d
GL_DRAW_BUFFER15_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER15_EXT /;"	kind:d
GL_DRAW_BUFFER15_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER15_NV /;"	kind:d
GL_DRAW_BUFFER1_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER1_ARB /;"	kind:d
GL_DRAW_BUFFER1_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER1_ATI /;"	kind:d
GL_DRAW_BUFFER1_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER1_EXT /;"	kind:d
GL_DRAW_BUFFER1_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER1_NV /;"	kind:d
GL_DRAW_BUFFER2	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER2 /;"	kind:d
GL_DRAW_BUFFER2_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER2_ARB /;"	kind:d
GL_DRAW_BUFFER2_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER2_ATI /;"	kind:d
GL_DRAW_BUFFER2_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER2_EXT /;"	kind:d
GL_DRAW_BUFFER2_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER2_NV /;"	kind:d
GL_DRAW_BUFFER3	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER3 /;"	kind:d
GL_DRAW_BUFFER3_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER3_ARB /;"	kind:d
GL_DRAW_BUFFER3_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER3_ATI /;"	kind:d
GL_DRAW_BUFFER3_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER3_EXT /;"	kind:d
GL_DRAW_BUFFER3_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER3_NV /;"	kind:d
GL_DRAW_BUFFER4	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER4 /;"	kind:d
GL_DRAW_BUFFER4_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER4_ARB /;"	kind:d
GL_DRAW_BUFFER4_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER4_ATI /;"	kind:d
GL_DRAW_BUFFER4_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER4_EXT /;"	kind:d
GL_DRAW_BUFFER4_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER4_NV /;"	kind:d
GL_DRAW_BUFFER5	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER5 /;"	kind:d
GL_DRAW_BUFFER5_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER5_ARB /;"	kind:d
GL_DRAW_BUFFER5_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER5_ATI /;"	kind:d
GL_DRAW_BUFFER5_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER5_EXT /;"	kind:d
GL_DRAW_BUFFER5_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER5_NV /;"	kind:d
GL_DRAW_BUFFER6	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER6 /;"	kind:d
GL_DRAW_BUFFER6_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER6_ARB /;"	kind:d
GL_DRAW_BUFFER6_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER6_ATI /;"	kind:d
GL_DRAW_BUFFER6_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER6_EXT /;"	kind:d
GL_DRAW_BUFFER6_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER6_NV /;"	kind:d
GL_DRAW_BUFFER7	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER7 /;"	kind:d
GL_DRAW_BUFFER7_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER7_ARB /;"	kind:d
GL_DRAW_BUFFER7_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER7_ATI /;"	kind:d
GL_DRAW_BUFFER7_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER7_EXT /;"	kind:d
GL_DRAW_BUFFER7_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER7_NV /;"	kind:d
GL_DRAW_BUFFER8	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER8 /;"	kind:d
GL_DRAW_BUFFER8_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER8_ARB /;"	kind:d
GL_DRAW_BUFFER8_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER8_ATI /;"	kind:d
GL_DRAW_BUFFER8_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER8_EXT /;"	kind:d
GL_DRAW_BUFFER8_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER8_NV /;"	kind:d
GL_DRAW_BUFFER9	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER9 /;"	kind:d
GL_DRAW_BUFFER9_ARB	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER9_ARB /;"	kind:d
GL_DRAW_BUFFER9_ATI	SDL_opengl_glext.h	/^#define GL_DRAW_BUFFER9_ATI /;"	kind:d
GL_DRAW_BUFFER9_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER9_EXT /;"	kind:d
GL_DRAW_BUFFER9_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER9_NV /;"	kind:d
GL_DRAW_BUFFER_EXT	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_BUFFER_EXT /;"	kind:d
GL_DRAW_FRAMEBUFFER	SDL_opengl_glext.h	/^#define GL_DRAW_FRAMEBUFFER /;"	kind:d
GL_DRAW_FRAMEBUFFER_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_FRAMEBUFFER_ANGLE /;"	kind:d
GL_DRAW_FRAMEBUFFER_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_FRAMEBUFFER_APPLE /;"	kind:d
GL_DRAW_FRAMEBUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING /;"	kind:d
GL_DRAW_FRAMEBUFFER_BINDING_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_ANGLE /;"	kind:d
GL_DRAW_FRAMEBUFFER_BINDING_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_APPLE /;"	kind:d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	SDL_opengl_glext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_EXT /;"	kind:d
GL_DRAW_FRAMEBUFFER_BINDING_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_NV /;"	kind:d
GL_DRAW_FRAMEBUFFER_EXT	SDL_opengl_glext.h	/^#define GL_DRAW_FRAMEBUFFER_EXT /;"	kind:d
GL_DRAW_FRAMEBUFFER_NV	SDL_opengles2_gl2ext.h	/^#define GL_DRAW_FRAMEBUFFER_NV /;"	kind:d
GL_DRAW_INDIRECT_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_DRAW_INDIRECT_ADDRESS_NV /;"	kind:d
GL_DRAW_INDIRECT_BUFFER	SDL_opengl_glext.h	/^#define GL_DRAW_INDIRECT_BUFFER /;"	kind:d
GL_DRAW_INDIRECT_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_DRAW_INDIRECT_BUFFER_BINDING /;"	kind:d
GL_DRAW_INDIRECT_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_DRAW_INDIRECT_LENGTH_NV /;"	kind:d
GL_DRAW_INDIRECT_UNIFIED_NV	SDL_opengl_glext.h	/^#define GL_DRAW_INDIRECT_UNIFIED_NV /;"	kind:d
GL_DRAW_PIXELS_APPLE	SDL_opengl_glext.h	/^#define GL_DRAW_PIXELS_APPLE /;"	kind:d
GL_DRAW_PIXEL_TOKEN	SDL_opengl.h	/^#define GL_DRAW_PIXEL_TOKEN	/;"	kind:d
GL_DSDT8_MAG8_INTENSITY8_NV	SDL_opengl_glext.h	/^#define GL_DSDT8_MAG8_INTENSITY8_NV /;"	kind:d
GL_DSDT8_MAG8_NV	SDL_opengl_glext.h	/^#define GL_DSDT8_MAG8_NV /;"	kind:d
GL_DSDT8_NV	SDL_opengl_glext.h	/^#define GL_DSDT8_NV /;"	kind:d
GL_DSDT_MAG_INTENSITY_NV	SDL_opengl_glext.h	/^#define GL_DSDT_MAG_INTENSITY_NV /;"	kind:d
GL_DSDT_MAG_NV	SDL_opengl_glext.h	/^#define GL_DSDT_MAG_NV /;"	kind:d
GL_DSDT_MAG_VIB_NV	SDL_opengl_glext.h	/^#define GL_DSDT_MAG_VIB_NV /;"	kind:d
GL_DSDT_NV	SDL_opengl_glext.h	/^#define GL_DSDT_NV /;"	kind:d
GL_DST_ALPHA	SDL_opengl.h	/^#define GL_DST_ALPHA	/;"	kind:d
GL_DST_ALPHA	SDL_opengles2_gl2.h	/^#define GL_DST_ALPHA /;"	kind:d
GL_DST_ATOP_NV	SDL_opengl_glext.h	/^#define GL_DST_ATOP_NV /;"	kind:d
GL_DST_COLOR	SDL_opengl.h	/^#define GL_DST_COLOR	/;"	kind:d
GL_DST_COLOR	SDL_opengles2_gl2.h	/^#define GL_DST_COLOR /;"	kind:d
GL_DST_IN_NV	SDL_opengl_glext.h	/^#define GL_DST_IN_NV /;"	kind:d
GL_DST_NV	SDL_opengl_glext.h	/^#define GL_DST_NV /;"	kind:d
GL_DST_OUT_NV	SDL_opengl_glext.h	/^#define GL_DST_OUT_NV /;"	kind:d
GL_DST_OVER_NV	SDL_opengl_glext.h	/^#define GL_DST_OVER_NV /;"	kind:d
GL_DS_BIAS_NV	SDL_opengl_glext.h	/^#define GL_DS_BIAS_NV /;"	kind:d
GL_DS_SCALE_NV	SDL_opengl_glext.h	/^#define GL_DS_SCALE_NV /;"	kind:d
GL_DT_BIAS_NV	SDL_opengl_glext.h	/^#define GL_DT_BIAS_NV /;"	kind:d
GL_DT_SCALE_NV	SDL_opengl_glext.h	/^#define GL_DT_SCALE_NV /;"	kind:d
GL_DU8DV8_ATI	SDL_opengl_glext.h	/^#define GL_DU8DV8_ATI /;"	kind:d
GL_DUAL_ALPHA12_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_ALPHA12_SGIS /;"	kind:d
GL_DUAL_ALPHA16_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_ALPHA16_SGIS /;"	kind:d
GL_DUAL_ALPHA4_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_ALPHA4_SGIS /;"	kind:d
GL_DUAL_ALPHA8_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_ALPHA8_SGIS /;"	kind:d
GL_DUAL_INTENSITY12_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_INTENSITY12_SGIS /;"	kind:d
GL_DUAL_INTENSITY16_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_INTENSITY16_SGIS /;"	kind:d
GL_DUAL_INTENSITY4_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_INTENSITY4_SGIS /;"	kind:d
GL_DUAL_INTENSITY8_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_INTENSITY8_SGIS /;"	kind:d
GL_DUAL_LUMINANCE12_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_LUMINANCE12_SGIS /;"	kind:d
GL_DUAL_LUMINANCE16_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_LUMINANCE16_SGIS /;"	kind:d
GL_DUAL_LUMINANCE4_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_LUMINANCE4_SGIS /;"	kind:d
GL_DUAL_LUMINANCE8_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_LUMINANCE8_SGIS /;"	kind:d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_LUMINANCE_ALPHA4_SGIS /;"	kind:d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_LUMINANCE_ALPHA8_SGIS /;"	kind:d
GL_DUAL_TEXTURE_SELECT_SGIS	SDL_opengl_glext.h	/^#define GL_DUAL_TEXTURE_SELECT_SGIS /;"	kind:d
GL_DUDV_ATI	SDL_opengl_glext.h	/^#define GL_DUDV_ATI /;"	kind:d
GL_DUP_FIRST_CUBIC_CURVE_TO_NV	SDL_opengl_glext.h	/^#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV /;"	kind:d
GL_DUP_LAST_CUBIC_CURVE_TO_NV	SDL_opengl_glext.h	/^#define GL_DUP_LAST_CUBIC_CURVE_TO_NV /;"	kind:d
GL_DYNAMIC_ATI	SDL_opengl_glext.h	/^#define GL_DYNAMIC_ATI /;"	kind:d
GL_DYNAMIC_COPY	SDL_opengl_glext.h	/^#define GL_DYNAMIC_COPY /;"	kind:d
GL_DYNAMIC_COPY_ARB	SDL_opengl_glext.h	/^#define GL_DYNAMIC_COPY_ARB /;"	kind:d
GL_DYNAMIC_DRAW	SDL_opengl_glext.h	/^#define GL_DYNAMIC_DRAW /;"	kind:d
GL_DYNAMIC_DRAW	SDL_opengles2_gl2.h	/^#define GL_DYNAMIC_DRAW /;"	kind:d
GL_DYNAMIC_DRAW_ARB	SDL_opengl_glext.h	/^#define GL_DYNAMIC_DRAW_ARB /;"	kind:d
GL_DYNAMIC_READ	SDL_opengl_glext.h	/^#define GL_DYNAMIC_READ /;"	kind:d
GL_DYNAMIC_READ_ARB	SDL_opengl_glext.h	/^#define GL_DYNAMIC_READ_ARB /;"	kind:d
GL_DYNAMIC_STORAGE_BIT	SDL_opengl_glext.h	/^#define GL_DYNAMIC_STORAGE_BIT /;"	kind:d
GL_EDGEFLAG_BIT_PGI	SDL_opengl_glext.h	/^#define GL_EDGEFLAG_BIT_PGI /;"	kind:d
GL_EDGE_FLAG	SDL_opengl.h	/^#define GL_EDGE_FLAG	/;"	kind:d
GL_EDGE_FLAG_ARRAY	SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY	/;"	kind:d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV /;"	kind:d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING /;"	kind:d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB /;"	kind:d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_COUNT_EXT /;"	kind:d
GL_EDGE_FLAG_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_EXT /;"	kind:d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_LENGTH_NV /;"	kind:d
GL_EDGE_FLAG_ARRAY_LIST_IBM	SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_IBM /;"	kind:d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM /;"	kind:d
GL_EDGE_FLAG_ARRAY_POINTER	SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY_POINTER	/;"	kind:d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_POINTER_EXT /;"	kind:d
GL_EDGE_FLAG_ARRAY_STRIDE	SDL_opengl.h	/^#define GL_EDGE_FLAG_ARRAY_STRIDE	/;"	kind:d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	SDL_opengl_glext.h	/^#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT /;"	kind:d
GL_EIGHTH_BIT_ATI	SDL_opengl_glext.h	/^#define GL_EIGHTH_BIT_ATI /;"	kind:d
GL_ELEMENT_ARRAY_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_ADDRESS_NV /;"	kind:d
GL_ELEMENT_ARRAY_APPLE	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_APPLE /;"	kind:d
GL_ELEMENT_ARRAY_ATI	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_ATI /;"	kind:d
GL_ELEMENT_ARRAY_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT /;"	kind:d
GL_ELEMENT_ARRAY_BARRIER_BIT_EXT	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT /;"	kind:d
GL_ELEMENT_ARRAY_BUFFER	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	kind:d
GL_ELEMENT_ARRAY_BUFFER	SDL_opengles2_gl2.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	kind:d
GL_ELEMENT_ARRAY_BUFFER_ARB	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_ARB /;"	kind:d
GL_ELEMENT_ARRAY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	kind:d
GL_ELEMENT_ARRAY_BUFFER_BINDING	SDL_opengles2_gl2.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	kind:d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB /;"	kind:d
GL_ELEMENT_ARRAY_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_LENGTH_NV /;"	kind:d
GL_ELEMENT_ARRAY_POINTER_APPLE	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_POINTER_APPLE /;"	kind:d
GL_ELEMENT_ARRAY_POINTER_ATI	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_POINTER_ATI /;"	kind:d
GL_ELEMENT_ARRAY_TYPE_APPLE	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_TYPE_APPLE /;"	kind:d
GL_ELEMENT_ARRAY_TYPE_ATI	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_TYPE_ATI /;"	kind:d
GL_ELEMENT_ARRAY_UNIFIED_NV	SDL_opengl_glext.h	/^#define GL_ELEMENT_ARRAY_UNIFIED_NV /;"	kind:d
GL_EMBOSS_CONSTANT_NV	SDL_opengl_glext.h	/^#define GL_EMBOSS_CONSTANT_NV /;"	kind:d
GL_EMBOSS_LIGHT_NV	SDL_opengl_glext.h	/^#define GL_EMBOSS_LIGHT_NV /;"	kind:d
GL_EMBOSS_MAP_NV	SDL_opengl_glext.h	/^#define GL_EMBOSS_MAP_NV /;"	kind:d
GL_EMISSION	SDL_opengl.h	/^#define GL_EMISSION	/;"	kind:d
GL_ENABLE_BIT	SDL_opengl.h	/^#define GL_ENABLE_BIT	/;"	kind:d
GL_EQUAL	SDL_opengl.h	/^#define GL_EQUAL	/;"	kind:d
GL_EQUAL	SDL_opengles2_gl2.h	/^#define GL_EQUAL /;"	kind:d
GL_EQUIV	SDL_opengl.h	/^#define GL_EQUIV	/;"	kind:d
GL_ES_VERSION_2_0	SDL_opengles2_gl2.h	/^#define GL_ES_VERSION_2_0 /;"	kind:d
GL_ETC1_RGB8_OES	SDL_opengles2_gl2ext.h	/^#define GL_ETC1_RGB8_OES /;"	kind:d
GL_ETC1_SRGB8_NV	SDL_opengles2_gl2ext.h	/^#define GL_ETC1_SRGB8_NV /;"	kind:d
GL_EVAL_2D_NV	SDL_opengl_glext.h	/^#define GL_EVAL_2D_NV /;"	kind:d
GL_EVAL_BIT	SDL_opengl.h	/^#define GL_EVAL_BIT	/;"	kind:d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	SDL_opengl_glext.h	/^#define GL_EVAL_FRACTIONAL_TESSELLATION_NV /;"	kind:d
GL_EVAL_TRIANGULAR_2D_NV	SDL_opengl_glext.h	/^#define GL_EVAL_TRIANGULAR_2D_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB0_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB0_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB10_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB10_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB11_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB11_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB12_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB12_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB13_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB13_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB14_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB14_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB15_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB15_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB1_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB1_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB2_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB2_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB3_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB3_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB4_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB4_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB5_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB5_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB6_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB6_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB7_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB7_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB8_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB8_NV /;"	kind:d
GL_EVAL_VERTEX_ATTRIB9_NV	SDL_opengl_glext.h	/^#define GL_EVAL_VERTEX_ATTRIB9_NV /;"	kind:d
GL_EXCLUSION_NV	SDL_opengl_glext.h	/^#define GL_EXCLUSION_NV /;"	kind:d
GL_EXP	SDL_opengl.h	/^#define GL_EXP	/;"	kind:d
GL_EXP2	SDL_opengl.h	/^#define GL_EXP2	/;"	kind:d
GL_EXPAND_NEGATE_NV	SDL_opengl_glext.h	/^#define GL_EXPAND_NEGATE_NV /;"	kind:d
GL_EXPAND_NORMAL_NV	SDL_opengl_glext.h	/^#define GL_EXPAND_NORMAL_NV /;"	kind:d
GL_EXTENSIONS	SDL_opengl.h	/^#define GL_EXTENSIONS	/;"	kind:d
GL_EXTENSIONS	SDL_opengles2_gl2.h	/^#define GL_EXTENSIONS /;"	kind:d
GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD	SDL_opengl_glext.h	/^#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD /;"	kind:d
GL_EXT_422_pixels	SDL_opengl_glext.h	/^#define GL_EXT_422_pixels /;"	kind:d
GL_EXT_abgr	SDL_opengl_glext.h	/^#define GL_EXT_abgr /;"	kind:d
GL_EXT_bgra	SDL_opengl_glext.h	/^#define GL_EXT_bgra /;"	kind:d
GL_EXT_bindable_uniform	SDL_opengl_glext.h	/^#define GL_EXT_bindable_uniform /;"	kind:d
GL_EXT_blend_color	SDL_opengl_glext.h	/^#define GL_EXT_blend_color /;"	kind:d
GL_EXT_blend_equation_separate	SDL_opengl_glext.h	/^#define GL_EXT_blend_equation_separate /;"	kind:d
GL_EXT_blend_func_separate	SDL_opengl_glext.h	/^#define GL_EXT_blend_func_separate /;"	kind:d
GL_EXT_blend_logic_op	SDL_opengl_glext.h	/^#define GL_EXT_blend_logic_op /;"	kind:d
GL_EXT_blend_minmax	SDL_opengl_glext.h	/^#define GL_EXT_blend_minmax /;"	kind:d
GL_EXT_blend_minmax	SDL_opengles2_gl2ext.h	/^#define GL_EXT_blend_minmax /;"	kind:d
GL_EXT_blend_subtract	SDL_opengl_glext.h	/^#define GL_EXT_blend_subtract /;"	kind:d
GL_EXT_clip_volume_hint	SDL_opengl_glext.h	/^#define GL_EXT_clip_volume_hint /;"	kind:d
GL_EXT_cmyka	SDL_opengl_glext.h	/^#define GL_EXT_cmyka /;"	kind:d
GL_EXT_color_buffer_half_float	SDL_opengles2_gl2ext.h	/^#define GL_EXT_color_buffer_half_float /;"	kind:d
GL_EXT_color_subtable	SDL_opengl_glext.h	/^#define GL_EXT_color_subtable /;"	kind:d
GL_EXT_compiled_vertex_array	SDL_opengl_glext.h	/^#define GL_EXT_compiled_vertex_array /;"	kind:d
GL_EXT_convolution	SDL_opengl_glext.h	/^#define GL_EXT_convolution /;"	kind:d
GL_EXT_coordinate_frame	SDL_opengl_glext.h	/^#define GL_EXT_coordinate_frame /;"	kind:d
GL_EXT_copy_texture	SDL_opengl_glext.h	/^#define GL_EXT_copy_texture /;"	kind:d
GL_EXT_cull_vertex	SDL_opengl_glext.h	/^#define GL_EXT_cull_vertex /;"	kind:d
GL_EXT_debug_label	SDL_opengl_glext.h	/^#define GL_EXT_debug_label /;"	kind:d
GL_EXT_debug_label	SDL_opengles2_gl2ext.h	/^#define GL_EXT_debug_label /;"	kind:d
GL_EXT_debug_marker	SDL_opengl_glext.h	/^#define GL_EXT_debug_marker /;"	kind:d
GL_EXT_debug_marker	SDL_opengles2_gl2ext.h	/^#define GL_EXT_debug_marker /;"	kind:d
GL_EXT_depth_bounds_test	SDL_opengl_glext.h	/^#define GL_EXT_depth_bounds_test /;"	kind:d
GL_EXT_direct_state_access	SDL_opengl_glext.h	/^#define GL_EXT_direct_state_access /;"	kind:d
GL_EXT_discard_framebuffer	SDL_opengles2_gl2ext.h	/^#define GL_EXT_discard_framebuffer /;"	kind:d
GL_EXT_disjoint_timer_query	SDL_opengles2_gl2ext.h	/^#define GL_EXT_disjoint_timer_query /;"	kind:d
GL_EXT_draw_buffers	SDL_opengles2_gl2ext.h	/^#define GL_EXT_draw_buffers /;"	kind:d
GL_EXT_draw_buffers2	SDL_opengl_glext.h	/^#define GL_EXT_draw_buffers2 /;"	kind:d
GL_EXT_draw_instanced	SDL_opengl_glext.h	/^#define GL_EXT_draw_instanced /;"	kind:d
GL_EXT_draw_range_elements	SDL_opengl_glext.h	/^#define GL_EXT_draw_range_elements /;"	kind:d
GL_EXT_fog_coord	SDL_opengl_glext.h	/^#define GL_EXT_fog_coord /;"	kind:d
GL_EXT_framebuffer_blit	SDL_opengl_glext.h	/^#define GL_EXT_framebuffer_blit /;"	kind:d
GL_EXT_framebuffer_multisample	SDL_opengl_glext.h	/^#define GL_EXT_framebuffer_multisample /;"	kind:d
GL_EXT_framebuffer_multisample_blit_scaled	SDL_opengl_glext.h	/^#define GL_EXT_framebuffer_multisample_blit_scaled /;"	kind:d
GL_EXT_framebuffer_object	SDL_opengl_glext.h	/^#define GL_EXT_framebuffer_object /;"	kind:d
GL_EXT_framebuffer_sRGB	SDL_opengl_glext.h	/^#define GL_EXT_framebuffer_sRGB /;"	kind:d
GL_EXT_geometry_shader4	SDL_opengl_glext.h	/^#define GL_EXT_geometry_shader4 /;"	kind:d
GL_EXT_gpu_program_parameters	SDL_opengl_glext.h	/^#define GL_EXT_gpu_program_parameters /;"	kind:d
GL_EXT_gpu_shader4	SDL_opengl_glext.h	/^#define GL_EXT_gpu_shader4 /;"	kind:d
GL_EXT_histogram	SDL_opengl_glext.h	/^#define GL_EXT_histogram /;"	kind:d
GL_EXT_index_array_formats	SDL_opengl_glext.h	/^#define GL_EXT_index_array_formats /;"	kind:d
GL_EXT_index_func	SDL_opengl_glext.h	/^#define GL_EXT_index_func /;"	kind:d
GL_EXT_index_material	SDL_opengl_glext.h	/^#define GL_EXT_index_material /;"	kind:d
GL_EXT_index_texture	SDL_opengl_glext.h	/^#define GL_EXT_index_texture /;"	kind:d
GL_EXT_light_texture	SDL_opengl_glext.h	/^#define GL_EXT_light_texture /;"	kind:d
GL_EXT_map_buffer_range	SDL_opengles2_gl2ext.h	/^#define GL_EXT_map_buffer_range /;"	kind:d
GL_EXT_misc_attribute	SDL_opengl_glext.h	/^#define GL_EXT_misc_attribute /;"	kind:d
GL_EXT_multi_draw_arrays	SDL_opengl_glext.h	/^#define GL_EXT_multi_draw_arrays /;"	kind:d
GL_EXT_multi_draw_arrays	SDL_opengles2_gl2ext.h	/^#define GL_EXT_multi_draw_arrays /;"	kind:d
GL_EXT_multisample	SDL_opengl_glext.h	/^#define GL_EXT_multisample /;"	kind:d
GL_EXT_multisampled_render_to_texture	SDL_opengles2_gl2ext.h	/^#define GL_EXT_multisampled_render_to_texture /;"	kind:d
GL_EXT_multiview_draw_buffers	SDL_opengles2_gl2ext.h	/^#define GL_EXT_multiview_draw_buffers /;"	kind:d
GL_EXT_occlusion_query_boolean	SDL_opengles2_gl2ext.h	/^#define GL_EXT_occlusion_query_boolean /;"	kind:d
GL_EXT_packed_depth_stencil	SDL_opengl_glext.h	/^#define GL_EXT_packed_depth_stencil /;"	kind:d
GL_EXT_packed_float	SDL_opengl_glext.h	/^#define GL_EXT_packed_float /;"	kind:d
GL_EXT_packed_pixels	SDL_opengl_glext.h	/^#define GL_EXT_packed_pixels /;"	kind:d
GL_EXT_paletted_texture	SDL_opengl_glext.h	/^#define GL_EXT_paletted_texture /;"	kind:d
GL_EXT_pixel_buffer_object	SDL_opengl_glext.h	/^#define GL_EXT_pixel_buffer_object /;"	kind:d
GL_EXT_pixel_transform	SDL_opengl_glext.h	/^#define GL_EXT_pixel_transform /;"	kind:d
GL_EXT_pixel_transform_color_table	SDL_opengl_glext.h	/^#define GL_EXT_pixel_transform_color_table /;"	kind:d
GL_EXT_point_parameters	SDL_opengl_glext.h	/^#define GL_EXT_point_parameters /;"	kind:d
GL_EXT_polygon_offset	SDL_opengl_glext.h	/^#define GL_EXT_polygon_offset /;"	kind:d
GL_EXT_provoking_vertex	SDL_opengl_glext.h	/^#define GL_EXT_provoking_vertex /;"	kind:d
GL_EXT_read_format_bgra	SDL_opengles2_gl2ext.h	/^#define GL_EXT_read_format_bgra /;"	kind:d
GL_EXT_rescale_normal	SDL_opengl_glext.h	/^#define GL_EXT_rescale_normal /;"	kind:d
GL_EXT_robustness	SDL_opengles2_gl2ext.h	/^#define GL_EXT_robustness /;"	kind:d
GL_EXT_sRGB	SDL_opengles2_gl2ext.h	/^#define GL_EXT_sRGB /;"	kind:d
GL_EXT_sRGB_write_control	SDL_opengles2_gl2ext.h	/^#define GL_EXT_sRGB_write_control /;"	kind:d
GL_EXT_secondary_color	SDL_opengl_glext.h	/^#define GL_EXT_secondary_color /;"	kind:d
GL_EXT_separate_shader_objects	SDL_opengl_glext.h	/^#define GL_EXT_separate_shader_objects /;"	kind:d
GL_EXT_separate_shader_objects	SDL_opengles2_gl2ext.h	/^#define GL_EXT_separate_shader_objects /;"	kind:d
GL_EXT_separate_specular_color	SDL_opengl_glext.h	/^#define GL_EXT_separate_specular_color /;"	kind:d
GL_EXT_shader_framebuffer_fetch	SDL_opengles2_gl2ext.h	/^#define GL_EXT_shader_framebuffer_fetch /;"	kind:d
GL_EXT_shader_image_load_formatted	SDL_opengl_glext.h	/^#define GL_EXT_shader_image_load_formatted /;"	kind:d
GL_EXT_shader_image_load_store	SDL_opengl_glext.h	/^#define GL_EXT_shader_image_load_store /;"	kind:d
GL_EXT_shader_integer_mix	SDL_opengl_glext.h	/^#define GL_EXT_shader_integer_mix /;"	kind:d
GL_EXT_shader_texture_lod	SDL_opengles2_gl2ext.h	/^#define GL_EXT_shader_texture_lod /;"	kind:d
GL_EXT_shadow_funcs	SDL_opengl_glext.h	/^#define GL_EXT_shadow_funcs /;"	kind:d
GL_EXT_shadow_samplers	SDL_opengles2_gl2ext.h	/^#define GL_EXT_shadow_samplers /;"	kind:d
GL_EXT_shared_texture_palette	SDL_opengl_glext.h	/^#define GL_EXT_shared_texture_palette /;"	kind:d
GL_EXT_stencil_clear_tag	SDL_opengl_glext.h	/^#define GL_EXT_stencil_clear_tag /;"	kind:d
GL_EXT_stencil_two_side	SDL_opengl_glext.h	/^#define GL_EXT_stencil_two_side /;"	kind:d
GL_EXT_stencil_wrap	SDL_opengl_glext.h	/^#define GL_EXT_stencil_wrap /;"	kind:d
GL_EXT_subtexture	SDL_opengl_glext.h	/^#define GL_EXT_subtexture /;"	kind:d
GL_EXT_texture	SDL_opengl_glext.h	/^#define GL_EXT_texture /;"	kind:d
GL_EXT_texture3D	SDL_opengl_glext.h	/^#define GL_EXT_texture3D /;"	kind:d
GL_EXT_texture_array	SDL_opengl_glext.h	/^#define GL_EXT_texture_array /;"	kind:d
GL_EXT_texture_buffer_object	SDL_opengl_glext.h	/^#define GL_EXT_texture_buffer_object /;"	kind:d
GL_EXT_texture_compression_dxt1	SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_compression_dxt1 /;"	kind:d
GL_EXT_texture_compression_latc	SDL_opengl_glext.h	/^#define GL_EXT_texture_compression_latc /;"	kind:d
GL_EXT_texture_compression_rgtc	SDL_opengl_glext.h	/^#define GL_EXT_texture_compression_rgtc /;"	kind:d
GL_EXT_texture_compression_s3tc	SDL_opengl_glext.h	/^#define GL_EXT_texture_compression_s3tc /;"	kind:d
GL_EXT_texture_cube_map	SDL_opengl_glext.h	/^#define GL_EXT_texture_cube_map /;"	kind:d
GL_EXT_texture_env_add	SDL_opengl_glext.h	/^#define GL_EXT_texture_env_add /;"	kind:d
GL_EXT_texture_env_combine	SDL_opengl_glext.h	/^#define GL_EXT_texture_env_combine /;"	kind:d
GL_EXT_texture_env_dot3	SDL_opengl_glext.h	/^#define GL_EXT_texture_env_dot3 /;"	kind:d
GL_EXT_texture_filter_anisotropic	SDL_opengl_glext.h	/^#define GL_EXT_texture_filter_anisotropic /;"	kind:d
GL_EXT_texture_filter_anisotropic	SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_filter_anisotropic /;"	kind:d
GL_EXT_texture_format_BGRA8888	SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_format_BGRA8888 /;"	kind:d
GL_EXT_texture_integer	SDL_opengl_glext.h	/^#define GL_EXT_texture_integer /;"	kind:d
GL_EXT_texture_lod_bias	SDL_opengl_glext.h	/^#define GL_EXT_texture_lod_bias /;"	kind:d
GL_EXT_texture_mirror_clamp	SDL_opengl_glext.h	/^#define GL_EXT_texture_mirror_clamp /;"	kind:d
GL_EXT_texture_object	SDL_opengl_glext.h	/^#define GL_EXT_texture_object /;"	kind:d
GL_EXT_texture_perturb_normal	SDL_opengl_glext.h	/^#define GL_EXT_texture_perturb_normal /;"	kind:d
GL_EXT_texture_rg	SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_rg /;"	kind:d
GL_EXT_texture_sRGB	SDL_opengl_glext.h	/^#define GL_EXT_texture_sRGB /;"	kind:d
GL_EXT_texture_sRGB_decode	SDL_opengl_glext.h	/^#define GL_EXT_texture_sRGB_decode /;"	kind:d
GL_EXT_texture_sRGB_decode	SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_sRGB_decode /;"	kind:d
GL_EXT_texture_shared_exponent	SDL_opengl_glext.h	/^#define GL_EXT_texture_shared_exponent /;"	kind:d
GL_EXT_texture_snorm	SDL_opengl_glext.h	/^#define GL_EXT_texture_snorm /;"	kind:d
GL_EXT_texture_storage	SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_storage /;"	kind:d
GL_EXT_texture_swizzle	SDL_opengl_glext.h	/^#define GL_EXT_texture_swizzle /;"	kind:d
GL_EXT_texture_type_2_10_10_10_REV	SDL_opengles2_gl2ext.h	/^#define GL_EXT_texture_type_2_10_10_10_REV /;"	kind:d
GL_EXT_timer_query	SDL_opengl_glext.h	/^#define GL_EXT_timer_query /;"	kind:d
GL_EXT_transform_feedback	SDL_opengl_glext.h	/^#define GL_EXT_transform_feedback /;"	kind:d
GL_EXT_unpack_subimage	SDL_opengles2_gl2ext.h	/^#define GL_EXT_unpack_subimage /;"	kind:d
GL_EXT_vertex_array	SDL_opengl_glext.h	/^#define GL_EXT_vertex_array /;"	kind:d
GL_EXT_vertex_array_bgra	SDL_opengl_glext.h	/^#define GL_EXT_vertex_array_bgra /;"	kind:d
GL_EXT_vertex_attrib_64bit	SDL_opengl_glext.h	/^#define GL_EXT_vertex_attrib_64bit /;"	kind:d
GL_EXT_vertex_shader	SDL_opengl_glext.h	/^#define GL_EXT_vertex_shader /;"	kind:d
GL_EXT_vertex_weighting	SDL_opengl_glext.h	/^#define GL_EXT_vertex_weighting /;"	kind:d
GL_EXT_x11_sync_object	SDL_opengl_glext.h	/^#define GL_EXT_x11_sync_object /;"	kind:d
GL_EYE_DISTANCE_TO_LINE_SGIS	SDL_opengl_glext.h	/^#define GL_EYE_DISTANCE_TO_LINE_SGIS /;"	kind:d
GL_EYE_DISTANCE_TO_POINT_SGIS	SDL_opengl_glext.h	/^#define GL_EYE_DISTANCE_TO_POINT_SGIS /;"	kind:d
GL_EYE_LINEAR	SDL_opengl.h	/^#define GL_EYE_LINEAR	/;"	kind:d
GL_EYE_LINE_SGIS	SDL_opengl_glext.h	/^#define GL_EYE_LINE_SGIS /;"	kind:d
GL_EYE_PLANE	SDL_opengl.h	/^#define GL_EYE_PLANE	/;"	kind:d
GL_EYE_PLANE_ABSOLUTE_NV	SDL_opengl_glext.h	/^#define GL_EYE_PLANE_ABSOLUTE_NV /;"	kind:d
GL_EYE_POINT_SGIS	SDL_opengl_glext.h	/^#define GL_EYE_POINT_SGIS /;"	kind:d
GL_EYE_RADIAL_NV	SDL_opengl_glext.h	/^#define GL_EYE_RADIAL_NV /;"	kind:d
GL_E_TIMES_F_NV	SDL_opengl_glext.h	/^#define GL_E_TIMES_F_NV /;"	kind:d
GL_FACTOR_MAX_AMD	SDL_opengl_glext.h	/^#define GL_FACTOR_MAX_AMD /;"	kind:d
GL_FACTOR_MIN_AMD	SDL_opengl_glext.h	/^#define GL_FACTOR_MIN_AMD /;"	kind:d
GL_FAILURE_NV	SDL_opengl_glext.h	/^#define GL_FAILURE_NV /;"	kind:d
GL_FALSE	SDL_opengl.h	/^#define GL_FALSE	/;"	kind:d
GL_FALSE	SDL_opengles2_gl2.h	/^#define GL_FALSE /;"	kind:d
GL_FASTEST	SDL_opengl.h	/^#define GL_FASTEST	/;"	kind:d
GL_FASTEST	SDL_opengles2_gl2.h	/^#define GL_FASTEST /;"	kind:d
GL_FEEDBACK	SDL_opengl.h	/^#define GL_FEEDBACK	/;"	kind:d
GL_FEEDBACK_BUFFER_POINTER	SDL_opengl.h	/^#define GL_FEEDBACK_BUFFER_POINTER	/;"	kind:d
GL_FEEDBACK_BUFFER_SIZE	SDL_opengl.h	/^#define GL_FEEDBACK_BUFFER_SIZE	/;"	kind:d
GL_FEEDBACK_BUFFER_TYPE	SDL_opengl.h	/^#define GL_FEEDBACK_BUFFER_TYPE	/;"	kind:d
GL_FENCE_APPLE	SDL_opengl_glext.h	/^#define GL_FENCE_APPLE /;"	kind:d
GL_FENCE_CONDITION_NV	SDL_opengl_glext.h	/^#define GL_FENCE_CONDITION_NV /;"	kind:d
GL_FENCE_CONDITION_NV	SDL_opengles2_gl2ext.h	/^#define GL_FENCE_CONDITION_NV /;"	kind:d
GL_FENCE_STATUS_NV	SDL_opengl_glext.h	/^#define GL_FENCE_STATUS_NV /;"	kind:d
GL_FENCE_STATUS_NV	SDL_opengles2_gl2ext.h	/^#define GL_FENCE_STATUS_NV /;"	kind:d
GL_FIELDS_NV	SDL_opengl_glext.h	/^#define GL_FIELDS_NV /;"	kind:d
GL_FIELD_LOWER_NV	SDL_opengl_glext.h	/^#define GL_FIELD_LOWER_NV /;"	kind:d
GL_FIELD_UPPER_NV	SDL_opengl_glext.h	/^#define GL_FIELD_UPPER_NV /;"	kind:d
GL_FILE_NAME_NV	SDL_opengl_glext.h	/^#define GL_FILE_NAME_NV /;"	kind:d
GL_FILL	SDL_opengl.h	/^#define GL_FILL	/;"	kind:d
GL_FILTER	SDL_opengl_glext.h	/^#define GL_FILTER /;"	kind:d
GL_FILTER4_SGIS	SDL_opengl_glext.h	/^#define GL_FILTER4_SGIS /;"	kind:d
GL_FIRST_TO_REST_NV	SDL_opengl_glext.h	/^#define GL_FIRST_TO_REST_NV /;"	kind:d
GL_FIRST_VERTEX_CONVENTION	SDL_opengl_glext.h	/^#define GL_FIRST_VERTEX_CONVENTION /;"	kind:d
GL_FIRST_VERTEX_CONVENTION_EXT	SDL_opengl_glext.h	/^#define GL_FIRST_VERTEX_CONVENTION_EXT /;"	kind:d
GL_FIXED	SDL_opengl_glext.h	/^#define GL_FIXED /;"	kind:d
GL_FIXED	SDL_opengles2_gl2.h	/^#define GL_FIXED /;"	kind:d
GL_FIXED_OES	SDL_opengl_glext.h	/^#define GL_FIXED_OES /;"	kind:d
GL_FIXED_ONLY	SDL_opengl_glext.h	/^#define GL_FIXED_ONLY /;"	kind:d
GL_FIXED_ONLY_ARB	SDL_opengl_glext.h	/^#define GL_FIXED_ONLY_ARB /;"	kind:d
GL_FJ_shader_binary_GCCSO	SDL_opengles2_gl2ext.h	/^#define GL_FJ_shader_binary_GCCSO /;"	kind:d
GL_FLAT	SDL_opengl.h	/^#define GL_FLAT	/;"	kind:d
GL_FLOAT	SDL_opengl.h	/^#define GL_FLOAT	/;"	kind:d
GL_FLOAT	SDL_opengles2_gl2.h	/^#define GL_FLOAT /;"	kind:d
GL_FLOAT16_NV	SDL_opengl_glext.h	/^#define GL_FLOAT16_NV /;"	kind:d
GL_FLOAT16_VEC2_NV	SDL_opengl_glext.h	/^#define GL_FLOAT16_VEC2_NV /;"	kind:d
GL_FLOAT16_VEC3_NV	SDL_opengl_glext.h	/^#define GL_FLOAT16_VEC3_NV /;"	kind:d
GL_FLOAT16_VEC4_NV	SDL_opengl_glext.h	/^#define GL_FLOAT16_VEC4_NV /;"	kind:d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	SDL_opengl_glext.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV /;"	kind:d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV /;"	kind:d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_CLEAR_COLOR_VALUE_NV /;"	kind:d
GL_FLOAT_MAT2	SDL_opengl_glext.h	/^#define GL_FLOAT_MAT2 /;"	kind:d
GL_FLOAT_MAT2	SDL_opengles2_gl2.h	/^#define GL_FLOAT_MAT2 /;"	kind:d
GL_FLOAT_MAT2_ARB	SDL_opengl_glext.h	/^#define GL_FLOAT_MAT2_ARB /;"	kind:d
GL_FLOAT_MAT2x3	SDL_opengl_glext.h	/^#define GL_FLOAT_MAT2x3 /;"	kind:d
GL_FLOAT_MAT2x4	SDL_opengl_glext.h	/^#define GL_FLOAT_MAT2x4 /;"	kind:d
GL_FLOAT_MAT3	SDL_opengl_glext.h	/^#define GL_FLOAT_MAT3 /;"	kind:d
GL_FLOAT_MAT3	SDL_opengles2_gl2.h	/^#define GL_FLOAT_MAT3 /;"	kind:d
GL_FLOAT_MAT3_ARB	SDL_opengl_glext.h	/^#define GL_FLOAT_MAT3_ARB /;"	kind:d
GL_FLOAT_MAT3x2	SDL_opengl_glext.h	/^#define GL_FLOAT_MAT3x2 /;"	kind:d
GL_FLOAT_MAT3x4	SDL_opengl_glext.h	/^#define GL_FLOAT_MAT3x4 /;"	kind:d
GL_FLOAT_MAT4	SDL_opengl_glext.h	/^#define GL_FLOAT_MAT4 /;"	kind:d
GL_FLOAT_MAT4	SDL_opengles2_gl2.h	/^#define GL_FLOAT_MAT4 /;"	kind:d
GL_FLOAT_MAT4_ARB	SDL_opengl_glext.h	/^#define GL_FLOAT_MAT4_ARB /;"	kind:d
GL_FLOAT_MAT4x2	SDL_opengl_glext.h	/^#define GL_FLOAT_MAT4x2 /;"	kind:d
GL_FLOAT_MAT4x3	SDL_opengl_glext.h	/^#define GL_FLOAT_MAT4x3 /;"	kind:d
GL_FLOAT_R16_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_R16_NV /;"	kind:d
GL_FLOAT_R32_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_R32_NV /;"	kind:d
GL_FLOAT_RG16_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_RG16_NV /;"	kind:d
GL_FLOAT_RG32_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_RG32_NV /;"	kind:d
GL_FLOAT_RGB16_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_RGB16_NV /;"	kind:d
GL_FLOAT_RGB32_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_RGB32_NV /;"	kind:d
GL_FLOAT_RGBA16_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_RGBA16_NV /;"	kind:d
GL_FLOAT_RGBA32_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_RGBA32_NV /;"	kind:d
GL_FLOAT_RGBA_MODE_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_RGBA_MODE_NV /;"	kind:d
GL_FLOAT_RGBA_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_RGBA_NV /;"	kind:d
GL_FLOAT_RGB_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_RGB_NV /;"	kind:d
GL_FLOAT_RG_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_RG_NV /;"	kind:d
GL_FLOAT_R_NV	SDL_opengl_glext.h	/^#define GL_FLOAT_R_NV /;"	kind:d
GL_FLOAT_VEC2	SDL_opengl_glext.h	/^#define GL_FLOAT_VEC2 /;"	kind:d
GL_FLOAT_VEC2	SDL_opengles2_gl2.h	/^#define GL_FLOAT_VEC2 /;"	kind:d
GL_FLOAT_VEC2_ARB	SDL_opengl_glext.h	/^#define GL_FLOAT_VEC2_ARB /;"	kind:d
GL_FLOAT_VEC3	SDL_opengl_glext.h	/^#define GL_FLOAT_VEC3 /;"	kind:d
GL_FLOAT_VEC3	SDL_opengles2_gl2.h	/^#define GL_FLOAT_VEC3 /;"	kind:d
GL_FLOAT_VEC3_ARB	SDL_opengl_glext.h	/^#define GL_FLOAT_VEC3_ARB /;"	kind:d
GL_FLOAT_VEC4	SDL_opengl_glext.h	/^#define GL_FLOAT_VEC4 /;"	kind:d
GL_FLOAT_VEC4	SDL_opengles2_gl2.h	/^#define GL_FLOAT_VEC4 /;"	kind:d
GL_FLOAT_VEC4_ARB	SDL_opengl_glext.h	/^#define GL_FLOAT_VEC4_ARB /;"	kind:d
GL_FOG	SDL_opengl.h	/^#define GL_FOG	/;"	kind:d
GL_FOG_BIT	SDL_opengl.h	/^#define GL_FOG_BIT	/;"	kind:d
GL_FOG_COLOR	SDL_opengl.h	/^#define GL_FOG_COLOR	/;"	kind:d
GL_FOG_COORD	SDL_opengl_glext.h	/^#define GL_FOG_COORD /;"	kind:d
GL_FOG_COORDINATE	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE /;"	kind:d
GL_FOG_COORDINATE_ARRAY	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY /;"	kind:d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING /;"	kind:d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB /;"	kind:d
GL_FOG_COORDINATE_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_EXT /;"	kind:d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_IBM /;"	kind:d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM /;"	kind:d
GL_FOG_COORDINATE_ARRAY_POINTER	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER /;"	kind:d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT /;"	kind:d
GL_FOG_COORDINATE_ARRAY_STRIDE	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE /;"	kind:d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT /;"	kind:d
GL_FOG_COORDINATE_ARRAY_TYPE	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE /;"	kind:d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT /;"	kind:d
GL_FOG_COORDINATE_EXT	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_EXT /;"	kind:d
GL_FOG_COORDINATE_SOURCE	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_SOURCE /;"	kind:d
GL_FOG_COORDINATE_SOURCE_EXT	SDL_opengl_glext.h	/^#define GL_FOG_COORDINATE_SOURCE_EXT /;"	kind:d
GL_FOG_COORD_ARRAY	SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY /;"	kind:d
GL_FOG_COORD_ARRAY_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY_ADDRESS_NV /;"	kind:d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY_BUFFER_BINDING /;"	kind:d
GL_FOG_COORD_ARRAY_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY_LENGTH_NV /;"	kind:d
GL_FOG_COORD_ARRAY_POINTER	SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY_POINTER /;"	kind:d
GL_FOG_COORD_ARRAY_STRIDE	SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY_STRIDE /;"	kind:d
GL_FOG_COORD_ARRAY_TYPE	SDL_opengl_glext.h	/^#define GL_FOG_COORD_ARRAY_TYPE /;"	kind:d
GL_FOG_COORD_SRC	SDL_opengl_glext.h	/^#define GL_FOG_COORD_SRC /;"	kind:d
GL_FOG_DENSITY	SDL_opengl.h	/^#define GL_FOG_DENSITY	/;"	kind:d
GL_FOG_DISTANCE_MODE_NV	SDL_opengl_glext.h	/^#define GL_FOG_DISTANCE_MODE_NV /;"	kind:d
GL_FOG_END	SDL_opengl.h	/^#define GL_FOG_END	/;"	kind:d
GL_FOG_FUNC_POINTS_SGIS	SDL_opengl_glext.h	/^#define GL_FOG_FUNC_POINTS_SGIS /;"	kind:d
GL_FOG_FUNC_SGIS	SDL_opengl_glext.h	/^#define GL_FOG_FUNC_SGIS /;"	kind:d
GL_FOG_HINT	SDL_opengl.h	/^#define GL_FOG_HINT	/;"	kind:d
GL_FOG_INDEX	SDL_opengl.h	/^#define GL_FOG_INDEX	/;"	kind:d
GL_FOG_MODE	SDL_opengl.h	/^#define GL_FOG_MODE	/;"	kind:d
GL_FOG_OFFSET_SGIX	SDL_opengl_glext.h	/^#define GL_FOG_OFFSET_SGIX /;"	kind:d
GL_FOG_OFFSET_VALUE_SGIX	SDL_opengl_glext.h	/^#define GL_FOG_OFFSET_VALUE_SGIX /;"	kind:d
GL_FOG_SPECULAR_TEXTURE_WIN	SDL_opengl_glext.h	/^#define GL_FOG_SPECULAR_TEXTURE_WIN /;"	kind:d
GL_FOG_START	SDL_opengl.h	/^#define GL_FOG_START	/;"	kind:d
GL_FONT_ASCENDER_BIT_NV	SDL_opengl_glext.h	/^#define GL_FONT_ASCENDER_BIT_NV /;"	kind:d
GL_FONT_DESCENDER_BIT_NV	SDL_opengl_glext.h	/^#define GL_FONT_DESCENDER_BIT_NV /;"	kind:d
GL_FONT_HAS_KERNING_BIT_NV	SDL_opengl_glext.h	/^#define GL_FONT_HAS_KERNING_BIT_NV /;"	kind:d
GL_FONT_HEIGHT_BIT_NV	SDL_opengl_glext.h	/^#define GL_FONT_HEIGHT_BIT_NV /;"	kind:d
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV	SDL_opengl_glext.h	/^#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV /;"	kind:d
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV	SDL_opengl_glext.h	/^#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV /;"	kind:d
GL_FONT_UNDERLINE_POSITION_BIT_NV	SDL_opengl_glext.h	/^#define GL_FONT_UNDERLINE_POSITION_BIT_NV /;"	kind:d
GL_FONT_UNDERLINE_THICKNESS_BIT_NV	SDL_opengl_glext.h	/^#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV /;"	kind:d
GL_FONT_UNITS_PER_EM_BIT_NV	SDL_opengl_glext.h	/^#define GL_FONT_UNITS_PER_EM_BIT_NV /;"	kind:d
GL_FONT_X_MAX_BOUNDS_BIT_NV	SDL_opengl_glext.h	/^#define GL_FONT_X_MAX_BOUNDS_BIT_NV /;"	kind:d
GL_FONT_X_MIN_BOUNDS_BIT_NV	SDL_opengl_glext.h	/^#define GL_FONT_X_MIN_BOUNDS_BIT_NV /;"	kind:d
GL_FONT_Y_MAX_BOUNDS_BIT_NV	SDL_opengl_glext.h	/^#define GL_FONT_Y_MAX_BOUNDS_BIT_NV /;"	kind:d
GL_FONT_Y_MIN_BOUNDS_BIT_NV	SDL_opengl_glext.h	/^#define GL_FONT_Y_MIN_BOUNDS_BIT_NV /;"	kind:d
GL_FORCE_BLUE_TO_ONE_NV	SDL_opengl_glext.h	/^#define GL_FORCE_BLUE_TO_ONE_NV /;"	kind:d
GL_FORMAT_SUBSAMPLE_244_244_OML	SDL_opengl_glext.h	/^#define GL_FORMAT_SUBSAMPLE_244_244_OML /;"	kind:d
GL_FORMAT_SUBSAMPLE_24_24_OML	SDL_opengl_glext.h	/^#define GL_FORMAT_SUBSAMPLE_24_24_OML /;"	kind:d
GL_FRACTIONAL_EVEN	SDL_opengl_glext.h	/^#define GL_FRACTIONAL_EVEN /;"	kind:d
GL_FRACTIONAL_ODD	SDL_opengl_glext.h	/^#define GL_FRACTIONAL_ODD /;"	kind:d
GL_FRAGMENT_COLOR_EXT	SDL_opengl_glext.h	/^#define GL_FRAGMENT_COLOR_EXT /;"	kind:d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX /;"	kind:d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX /;"	kind:d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_SGIX /;"	kind:d
GL_FRAGMENT_DEPTH	SDL_opengl_glext.h	/^#define GL_FRAGMENT_DEPTH /;"	kind:d
GL_FRAGMENT_DEPTH_EXT	SDL_opengl_glext.h	/^#define GL_FRAGMENT_DEPTH_EXT /;"	kind:d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	SDL_opengl_glext.h	/^#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS /;"	kind:d
GL_FRAGMENT_LIGHT0_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT0_SGIX /;"	kind:d
GL_FRAGMENT_LIGHT1_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT1_SGIX /;"	kind:d
GL_FRAGMENT_LIGHT2_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT2_SGIX /;"	kind:d
GL_FRAGMENT_LIGHT3_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT3_SGIX /;"	kind:d
GL_FRAGMENT_LIGHT4_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT4_SGIX /;"	kind:d
GL_FRAGMENT_LIGHT5_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT5_SGIX /;"	kind:d
GL_FRAGMENT_LIGHT6_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT6_SGIX /;"	kind:d
GL_FRAGMENT_LIGHT7_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT7_SGIX /;"	kind:d
GL_FRAGMENT_LIGHTING_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHTING_SGIX /;"	kind:d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX /;"	kind:d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX /;"	kind:d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX /;"	kind:d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	SDL_opengl_glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX /;"	kind:d
GL_FRAGMENT_MATERIAL_EXT	SDL_opengl_glext.h	/^#define GL_FRAGMENT_MATERIAL_EXT /;"	kind:d
GL_FRAGMENT_NORMAL_EXT	SDL_opengl_glext.h	/^#define GL_FRAGMENT_NORMAL_EXT /;"	kind:d
GL_FRAGMENT_PROGRAM_ARB	SDL_opengl_glext.h	/^#define GL_FRAGMENT_PROGRAM_ARB /;"	kind:d
GL_FRAGMENT_PROGRAM_BINDING_NV	SDL_opengl_glext.h	/^#define GL_FRAGMENT_PROGRAM_BINDING_NV /;"	kind:d
GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV	SDL_opengl_glext.h	/^#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV /;"	kind:d
GL_FRAGMENT_PROGRAM_NV	SDL_opengl_glext.h	/^#define GL_FRAGMENT_PROGRAM_NV /;"	kind:d
GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV	SDL_opengl_glext.h	/^#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV /;"	kind:d
GL_FRAGMENT_SHADER	SDL_opengl_glext.h	/^#define GL_FRAGMENT_SHADER /;"	kind:d
GL_FRAGMENT_SHADER	SDL_opengles2_gl2.h	/^#define GL_FRAGMENT_SHADER /;"	kind:d
GL_FRAGMENT_SHADER_ARB	SDL_opengl_glext.h	/^#define GL_FRAGMENT_SHADER_ARB /;"	kind:d
GL_FRAGMENT_SHADER_ATI	SDL_opengl_glext.h	/^#define GL_FRAGMENT_SHADER_ATI /;"	kind:d
GL_FRAGMENT_SHADER_BIT	SDL_opengl_glext.h	/^#define GL_FRAGMENT_SHADER_BIT /;"	kind:d
GL_FRAGMENT_SHADER_BIT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_FRAGMENT_SHADER_BIT_EXT /;"	kind:d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	SDL_opengl_glext.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	kind:d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	SDL_opengl_glext.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB /;"	kind:d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES	SDL_opengles2_gl2ext.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES /;"	kind:d
GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT	SDL_opengles2_gl2ext.h	/^#define GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT /;"	kind:d
GL_FRAGMENT_SUBROUTINE	SDL_opengl_glext.h	/^#define GL_FRAGMENT_SUBROUTINE /;"	kind:d
GL_FRAGMENT_SUBROUTINE_UNIFORM	SDL_opengl_glext.h	/^#define GL_FRAGMENT_SUBROUTINE_UNIFORM /;"	kind:d
GL_FRAGMENT_TEXTURE	SDL_opengl_glext.h	/^#define GL_FRAGMENT_TEXTURE /;"	kind:d
GL_FRAMEBUFFER	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER /;"	kind:d
GL_FRAMEBUFFER	SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ANGLE /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT	SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT	SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES	SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT /;"	kind:d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT	SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT /;"	kind:d
GL_FRAMEBUFFER_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT /;"	kind:d
GL_FRAMEBUFFER_BARRIER_BIT_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT_EXT /;"	kind:d
GL_FRAMEBUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_BINDING /;"	kind:d
GL_FRAMEBUFFER_BINDING	SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_BINDING /;"	kind:d
GL_FRAMEBUFFER_BINDING_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_BINDING_EXT /;"	kind:d
GL_FRAMEBUFFER_BLEND	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_BLEND /;"	kind:d
GL_FRAMEBUFFER_COMPLETE	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	kind:d
GL_FRAMEBUFFER_COMPLETE	SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	kind:d
GL_FRAMEBUFFER_COMPLETE_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_COMPLETE_EXT /;"	kind:d
GL_FRAMEBUFFER_DEFAULT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_DEFAULT /;"	kind:d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS /;"	kind:d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_HEIGHT /;"	kind:d
GL_FRAMEBUFFER_DEFAULT_LAYERS	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_LAYERS /;"	kind:d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_SAMPLES /;"	kind:d
GL_FRAMEBUFFER_DEFAULT_WIDTH	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_WIDTH /;"	kind:d
GL_FRAMEBUFFER_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_EXT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS	SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG	SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV	SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER /;"	kind:d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT /;"	kind:d
GL_FRAMEBUFFER_RENDERABLE	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_RENDERABLE /;"	kind:d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_RENDERABLE_LAYERED /;"	kind:d
GL_FRAMEBUFFER_SRGB	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_SRGB /;"	kind:d
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT /;"	kind:d
GL_FRAMEBUFFER_SRGB_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_SRGB_EXT /;"	kind:d
GL_FRAMEBUFFER_SRGB_EXT	SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_SRGB_EXT /;"	kind:d
GL_FRAMEBUFFER_UNDEFINED	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_UNDEFINED /;"	kind:d
GL_FRAMEBUFFER_UNDEFINED_OES	SDL_opengles2_gl2ext.h	/^#define GL_FRAMEBUFFER_UNDEFINED_OES /;"	kind:d
GL_FRAMEBUFFER_UNSUPPORTED	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	kind:d
GL_FRAMEBUFFER_UNSUPPORTED	SDL_opengles2_gl2.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	kind:d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	SDL_opengl_glext.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED_EXT /;"	kind:d
GL_FRAMEZOOM_FACTOR_SGIX	SDL_opengl_glext.h	/^#define GL_FRAMEZOOM_FACTOR_SGIX /;"	kind:d
GL_FRAMEZOOM_SGIX	SDL_opengl_glext.h	/^#define GL_FRAMEZOOM_SGIX /;"	kind:d
GL_FRAME_NV	SDL_opengl_glext.h	/^#define GL_FRAME_NV /;"	kind:d
GL_FRONT	SDL_opengl.h	/^#define GL_FRONT	/;"	kind:d
GL_FRONT	SDL_opengles2_gl2.h	/^#define GL_FRONT /;"	kind:d
GL_FRONT_AND_BACK	SDL_opengl.h	/^#define GL_FRONT_AND_BACK	/;"	kind:d
GL_FRONT_AND_BACK	SDL_opengles2_gl2.h	/^#define GL_FRONT_AND_BACK /;"	kind:d
GL_FRONT_FACE	SDL_opengl.h	/^#define GL_FRONT_FACE	/;"	kind:d
GL_FRONT_FACE	SDL_opengles2_gl2.h	/^#define GL_FRONT_FACE /;"	kind:d
GL_FRONT_LEFT	SDL_opengl.h	/^#define GL_FRONT_LEFT	/;"	kind:d
GL_FRONT_RIGHT	SDL_opengl.h	/^#define GL_FRONT_RIGHT	/;"	kind:d
GL_FULL_RANGE_EXT	SDL_opengl_glext.h	/^#define GL_FULL_RANGE_EXT /;"	kind:d
GL_FULL_STIPPLE_HINT_PGI	SDL_opengl_glext.h	/^#define GL_FULL_STIPPLE_HINT_PGI /;"	kind:d
GL_FULL_SUPPORT	SDL_opengl_glext.h	/^#define GL_FULL_SUPPORT /;"	kind:d
GL_FUNC_ADD	SDL_opengl.h	/^#define GL_FUNC_ADD	/;"	kind:d
GL_FUNC_ADD	SDL_opengl_glext.h	/^#define GL_FUNC_ADD /;"	kind:d
GL_FUNC_ADD	SDL_opengles2_gl2.h	/^#define GL_FUNC_ADD /;"	kind:d
GL_FUNC_ADD_EXT	SDL_opengl_glext.h	/^#define GL_FUNC_ADD_EXT /;"	kind:d
GL_FUNC_REVERSE_SUBTRACT	SDL_opengl.h	/^#define GL_FUNC_REVERSE_SUBTRACT	/;"	kind:d
GL_FUNC_REVERSE_SUBTRACT	SDL_opengl_glext.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	kind:d
GL_FUNC_REVERSE_SUBTRACT	SDL_opengles2_gl2.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	kind:d
GL_FUNC_REVERSE_SUBTRACT_EXT	SDL_opengl_glext.h	/^#define GL_FUNC_REVERSE_SUBTRACT_EXT /;"	kind:d
GL_FUNC_SUBTRACT	SDL_opengl.h	/^#define GL_FUNC_SUBTRACT	/;"	kind:d
GL_FUNC_SUBTRACT	SDL_opengl_glext.h	/^#define GL_FUNC_SUBTRACT /;"	kind:d
GL_FUNC_SUBTRACT	SDL_opengles2_gl2.h	/^#define GL_FUNC_SUBTRACT /;"	kind:d
GL_FUNC_SUBTRACT_EXT	SDL_opengl_glext.h	/^#define GL_FUNC_SUBTRACT_EXT /;"	kind:d
GL_GCCSO_SHADER_BINARY_FJ	SDL_opengles2_gl2ext.h	/^#define GL_GCCSO_SHADER_BINARY_FJ /;"	kind:d
GL_GENERATE_MIPMAP	SDL_opengl_glext.h	/^#define GL_GENERATE_MIPMAP /;"	kind:d
GL_GENERATE_MIPMAP_HINT	SDL_opengl_glext.h	/^#define GL_GENERATE_MIPMAP_HINT /;"	kind:d
GL_GENERATE_MIPMAP_HINT	SDL_opengles2_gl2.h	/^#define GL_GENERATE_MIPMAP_HINT /;"	kind:d
GL_GENERATE_MIPMAP_HINT_SGIS	SDL_opengl_glext.h	/^#define GL_GENERATE_MIPMAP_HINT_SGIS /;"	kind:d
GL_GENERATE_MIPMAP_SGIS	SDL_opengl_glext.h	/^#define GL_GENERATE_MIPMAP_SGIS /;"	kind:d
GL_GENERIC_ATTRIB_NV	SDL_opengl_glext.h	/^#define GL_GENERIC_ATTRIB_NV /;"	kind:d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	SDL_opengl_glext.h	/^#define GL_GEOMETRY_DEFORMATION_BIT_SGIX /;"	kind:d
GL_GEOMETRY_DEFORMATION_SGIX	SDL_opengl_glext.h	/^#define GL_GEOMETRY_DEFORMATION_SGIX /;"	kind:d
GL_GEOMETRY_INPUT_TYPE	SDL_opengl_glext.h	/^#define GL_GEOMETRY_INPUT_TYPE /;"	kind:d
GL_GEOMETRY_INPUT_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_GEOMETRY_INPUT_TYPE_ARB /;"	kind:d
GL_GEOMETRY_INPUT_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_GEOMETRY_INPUT_TYPE_EXT /;"	kind:d
GL_GEOMETRY_OUTPUT_TYPE	SDL_opengl_glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE /;"	kind:d
GL_GEOMETRY_OUTPUT_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_ARB /;"	kind:d
GL_GEOMETRY_OUTPUT_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_EXT /;"	kind:d
GL_GEOMETRY_PROGRAM_NV	SDL_opengl_glext.h	/^#define GL_GEOMETRY_PROGRAM_NV /;"	kind:d
GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV	SDL_opengl_glext.h	/^#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV /;"	kind:d
GL_GEOMETRY_SHADER	SDL_opengl_glext.h	/^#define GL_GEOMETRY_SHADER /;"	kind:d
GL_GEOMETRY_SHADER_ARB	SDL_opengl_glext.h	/^#define GL_GEOMETRY_SHADER_ARB /;"	kind:d
GL_GEOMETRY_SHADER_BIT	SDL_opengl_glext.h	/^#define GL_GEOMETRY_SHADER_BIT /;"	kind:d
GL_GEOMETRY_SHADER_EXT	SDL_opengl_glext.h	/^#define GL_GEOMETRY_SHADER_EXT /;"	kind:d
GL_GEOMETRY_SHADER_INVOCATIONS	SDL_opengl_glext.h	/^#define GL_GEOMETRY_SHADER_INVOCATIONS /;"	kind:d
GL_GEOMETRY_SUBROUTINE	SDL_opengl_glext.h	/^#define GL_GEOMETRY_SUBROUTINE /;"	kind:d
GL_GEOMETRY_SUBROUTINE_UNIFORM	SDL_opengl_glext.h	/^#define GL_GEOMETRY_SUBROUTINE_UNIFORM /;"	kind:d
GL_GEOMETRY_TEXTURE	SDL_opengl_glext.h	/^#define GL_GEOMETRY_TEXTURE /;"	kind:d
GL_GEOMETRY_VERTICES_OUT	SDL_opengl_glext.h	/^#define GL_GEOMETRY_VERTICES_OUT /;"	kind:d
GL_GEOMETRY_VERTICES_OUT_ARB	SDL_opengl_glext.h	/^#define GL_GEOMETRY_VERTICES_OUT_ARB /;"	kind:d
GL_GEOMETRY_VERTICES_OUT_EXT	SDL_opengl_glext.h	/^#define GL_GEOMETRY_VERTICES_OUT_EXT /;"	kind:d
GL_GEQUAL	SDL_opengl.h	/^#define GL_GEQUAL	/;"	kind:d
GL_GEQUAL	SDL_opengles2_gl2.h	/^#define GL_GEQUAL /;"	kind:d
GL_GET_TEXTURE_IMAGE_FORMAT	SDL_opengl_glext.h	/^#define GL_GET_TEXTURE_IMAGE_FORMAT /;"	kind:d
GL_GET_TEXTURE_IMAGE_TYPE	SDL_opengl_glext.h	/^#define GL_GET_TEXTURE_IMAGE_TYPE /;"	kind:d
GL_GLEXT_VERSION	SDL_opengl_glext.h	/^#define GL_GLEXT_VERSION /;"	kind:d
GL_GLOBAL_ALPHA_FACTOR_SUN	SDL_opengl_glext.h	/^#define GL_GLOBAL_ALPHA_FACTOR_SUN /;"	kind:d
GL_GLOBAL_ALPHA_SUN	SDL_opengl_glext.h	/^#define GL_GLOBAL_ALPHA_SUN /;"	kind:d
GL_GLYPH_HAS_KERNING_BIT_NV	SDL_opengl_glext.h	/^#define GL_GLYPH_HAS_KERNING_BIT_NV /;"	kind:d
GL_GLYPH_HEIGHT_BIT_NV	SDL_opengl_glext.h	/^#define GL_GLYPH_HEIGHT_BIT_NV /;"	kind:d
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV	SDL_opengl_glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV /;"	kind:d
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV	SDL_opengl_glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV /;"	kind:d
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV	SDL_opengl_glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV /;"	kind:d
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV	SDL_opengl_glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV /;"	kind:d
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV	SDL_opengl_glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV /;"	kind:d
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV	SDL_opengl_glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV /;"	kind:d
GL_GLYPH_WIDTH_BIT_NV	SDL_opengl_glext.h	/^#define GL_GLYPH_WIDTH_BIT_NV /;"	kind:d
GL_GPU_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_GPU_ADDRESS_NV /;"	kind:d
GL_GPU_DISJOINT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_GPU_DISJOINT_EXT /;"	kind:d
GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX	SDL_opengl_glext.h	/^#define GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX /;"	kind:d
GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX	SDL_opengl_glext.h	/^#define GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX /;"	kind:d
GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX	SDL_opengl_glext.h	/^#define GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX /;"	kind:d
GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX	SDL_opengl_glext.h	/^#define GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX /;"	kind:d
GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX	SDL_opengl_glext.h	/^#define GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX /;"	kind:d
GL_GPU_OPTIMIZED_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_GPU_OPTIMIZED_QCOM /;"	kind:d
GL_GREATER	SDL_opengl.h	/^#define GL_GREATER	/;"	kind:d
GL_GREATER	SDL_opengles2_gl2.h	/^#define GL_GREATER /;"	kind:d
GL_GREEN	SDL_opengl.h	/^#define GL_GREEN	/;"	kind:d
GL_GREEN_BIAS	SDL_opengl.h	/^#define GL_GREEN_BIAS	/;"	kind:d
GL_GREEN_BITS	SDL_opengl.h	/^#define GL_GREEN_BITS	/;"	kind:d
GL_GREEN_BITS	SDL_opengles2_gl2.h	/^#define GL_GREEN_BITS /;"	kind:d
GL_GREEN_BIT_ATI	SDL_opengl_glext.h	/^#define GL_GREEN_BIT_ATI /;"	kind:d
GL_GREEN_INTEGER	SDL_opengl_glext.h	/^#define GL_GREEN_INTEGER /;"	kind:d
GL_GREEN_INTEGER_EXT	SDL_opengl_glext.h	/^#define GL_GREEN_INTEGER_EXT /;"	kind:d
GL_GREEN_MAX_CLAMP_INGR	SDL_opengl_glext.h	/^#define GL_GREEN_MAX_CLAMP_INGR /;"	kind:d
GL_GREEN_MIN_CLAMP_INGR	SDL_opengl_glext.h	/^#define GL_GREEN_MIN_CLAMP_INGR /;"	kind:d
GL_GREEN_NV	SDL_opengl_glext.h	/^#define GL_GREEN_NV /;"	kind:d
GL_GREEN_SCALE	SDL_opengl.h	/^#define GL_GREEN_SCALE	/;"	kind:d
GL_GREMEDY_frame_terminator	SDL_opengl_glext.h	/^#define GL_GREMEDY_frame_terminator /;"	kind:d
GL_GREMEDY_string_marker	SDL_opengl_glext.h	/^#define GL_GREMEDY_string_marker /;"	kind:d
GL_GUILTY_CONTEXT_RESET_ARB	SDL_opengl_glext.h	/^#define GL_GUILTY_CONTEXT_RESET_ARB /;"	kind:d
GL_GUILTY_CONTEXT_RESET_EXT	SDL_opengles2_gl2ext.h	/^#define GL_GUILTY_CONTEXT_RESET_EXT /;"	kind:d
GL_HALF_APPLE	SDL_opengl_glext.h	/^#define GL_HALF_APPLE /;"	kind:d
GL_HALF_BIAS_NEGATE_NV	SDL_opengl_glext.h	/^#define GL_HALF_BIAS_NEGATE_NV /;"	kind:d
GL_HALF_BIAS_NORMAL_NV	SDL_opengl_glext.h	/^#define GL_HALF_BIAS_NORMAL_NV /;"	kind:d
GL_HALF_BIT_ATI	SDL_opengl_glext.h	/^#define GL_HALF_BIT_ATI /;"	kind:d
GL_HALF_FLOAT	SDL_opengl_glext.h	/^#define GL_HALF_FLOAT /;"	kind:d
GL_HALF_FLOAT_ARB	SDL_opengl_glext.h	/^#define GL_HALF_FLOAT_ARB /;"	kind:d
GL_HALF_FLOAT_NV	SDL_opengl_glext.h	/^#define GL_HALF_FLOAT_NV /;"	kind:d
GL_HALF_FLOAT_OES	SDL_opengles2_gl2ext.h	/^#define GL_HALF_FLOAT_OES /;"	kind:d
GL_HARDLIGHT_NV	SDL_opengl_glext.h	/^#define GL_HARDLIGHT_NV /;"	kind:d
GL_HARDMIX_NV	SDL_opengl_glext.h	/^#define GL_HARDMIX_NV /;"	kind:d
GL_HIGH_FLOAT	SDL_opengl_glext.h	/^#define GL_HIGH_FLOAT /;"	kind:d
GL_HIGH_FLOAT	SDL_opengles2_gl2.h	/^#define GL_HIGH_FLOAT /;"	kind:d
GL_HIGH_INT	SDL_opengl_glext.h	/^#define GL_HIGH_INT /;"	kind:d
GL_HIGH_INT	SDL_opengles2_gl2.h	/^#define GL_HIGH_INT /;"	kind:d
GL_HILO16_NV	SDL_opengl_glext.h	/^#define GL_HILO16_NV /;"	kind:d
GL_HILO8_NV	SDL_opengl_glext.h	/^#define GL_HILO8_NV /;"	kind:d
GL_HILO_NV	SDL_opengl_glext.h	/^#define GL_HILO_NV /;"	kind:d
GL_HINT_BIT	SDL_opengl.h	/^#define GL_HINT_BIT	/;"	kind:d
GL_HISTOGRAM	SDL_opengl.h	/^#define GL_HISTOGRAM	/;"	kind:d
GL_HISTOGRAM	SDL_opengl_glext.h	/^#define GL_HISTOGRAM /;"	kind:d
GL_HISTOGRAM_ALPHA_SIZE	SDL_opengl.h	/^#define GL_HISTOGRAM_ALPHA_SIZE	/;"	kind:d
GL_HISTOGRAM_ALPHA_SIZE	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_ALPHA_SIZE /;"	kind:d
GL_HISTOGRAM_ALPHA_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_ALPHA_SIZE_EXT /;"	kind:d
GL_HISTOGRAM_BLUE_SIZE	SDL_opengl.h	/^#define GL_HISTOGRAM_BLUE_SIZE	/;"	kind:d
GL_HISTOGRAM_BLUE_SIZE	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_BLUE_SIZE /;"	kind:d
GL_HISTOGRAM_BLUE_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_BLUE_SIZE_EXT /;"	kind:d
GL_HISTOGRAM_EXT	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_EXT /;"	kind:d
GL_HISTOGRAM_FORMAT	SDL_opengl.h	/^#define GL_HISTOGRAM_FORMAT	/;"	kind:d
GL_HISTOGRAM_FORMAT	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_FORMAT /;"	kind:d
GL_HISTOGRAM_FORMAT_EXT	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_FORMAT_EXT /;"	kind:d
GL_HISTOGRAM_GREEN_SIZE	SDL_opengl.h	/^#define GL_HISTOGRAM_GREEN_SIZE	/;"	kind:d
GL_HISTOGRAM_GREEN_SIZE	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_GREEN_SIZE /;"	kind:d
GL_HISTOGRAM_GREEN_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_GREEN_SIZE_EXT /;"	kind:d
GL_HISTOGRAM_LUMINANCE_SIZE	SDL_opengl.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE	/;"	kind:d
GL_HISTOGRAM_LUMINANCE_SIZE	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE /;"	kind:d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT /;"	kind:d
GL_HISTOGRAM_RED_SIZE	SDL_opengl.h	/^#define GL_HISTOGRAM_RED_SIZE	/;"	kind:d
GL_HISTOGRAM_RED_SIZE	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_RED_SIZE /;"	kind:d
GL_HISTOGRAM_RED_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_RED_SIZE_EXT /;"	kind:d
GL_HISTOGRAM_SINK	SDL_opengl.h	/^#define GL_HISTOGRAM_SINK	/;"	kind:d
GL_HISTOGRAM_SINK	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_SINK /;"	kind:d
GL_HISTOGRAM_SINK_EXT	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_SINK_EXT /;"	kind:d
GL_HISTOGRAM_WIDTH	SDL_opengl.h	/^#define GL_HISTOGRAM_WIDTH	/;"	kind:d
GL_HISTOGRAM_WIDTH	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_WIDTH /;"	kind:d
GL_HISTOGRAM_WIDTH_EXT	SDL_opengl_glext.h	/^#define GL_HISTOGRAM_WIDTH_EXT /;"	kind:d
GL_HI_BIAS_NV	SDL_opengl_glext.h	/^#define GL_HI_BIAS_NV /;"	kind:d
GL_HI_SCALE_NV	SDL_opengl_glext.h	/^#define GL_HI_SCALE_NV /;"	kind:d
GL_HORIZONTAL_LINE_TO_NV	SDL_opengl_glext.h	/^#define GL_HORIZONTAL_LINE_TO_NV /;"	kind:d
GL_HP_convolution_border_modes	SDL_opengl_glext.h	/^#define GL_HP_convolution_border_modes /;"	kind:d
GL_HP_image_transform	SDL_opengl_glext.h	/^#define GL_HP_image_transform /;"	kind:d
GL_HP_occlusion_test	SDL_opengl_glext.h	/^#define GL_HP_occlusion_test /;"	kind:d
GL_HP_texture_lighting	SDL_opengl_glext.h	/^#define GL_HP_texture_lighting /;"	kind:d
GL_HSL_COLOR_NV	SDL_opengl_glext.h	/^#define GL_HSL_COLOR_NV /;"	kind:d
GL_HSL_HUE_NV	SDL_opengl_glext.h	/^#define GL_HSL_HUE_NV /;"	kind:d
GL_HSL_LUMINOSITY_NV	SDL_opengl_glext.h	/^#define GL_HSL_LUMINOSITY_NV /;"	kind:d
GL_HSL_SATURATION_NV	SDL_opengl_glext.h	/^#define GL_HSL_SATURATION_NV /;"	kind:d
GL_IBM_cull_vertex	SDL_opengl_glext.h	/^#define GL_IBM_cull_vertex /;"	kind:d
GL_IBM_multimode_draw_arrays	SDL_opengl_glext.h	/^#define GL_IBM_multimode_draw_arrays /;"	kind:d
GL_IBM_rasterpos_clip	SDL_opengl_glext.h	/^#define GL_IBM_rasterpos_clip /;"	kind:d
GL_IBM_static_data	SDL_opengl_glext.h	/^#define GL_IBM_static_data /;"	kind:d
GL_IBM_texture_mirrored_repeat	SDL_opengl_glext.h	/^#define GL_IBM_texture_mirrored_repeat /;"	kind:d
GL_IBM_vertex_array_lists	SDL_opengl_glext.h	/^#define GL_IBM_vertex_array_lists /;"	kind:d
GL_IDENTITY_NV	SDL_opengl_glext.h	/^#define GL_IDENTITY_NV /;"	kind:d
GL_IGNORE_BORDER_HP	SDL_opengl_glext.h	/^#define GL_IGNORE_BORDER_HP /;"	kind:d
GL_IMAGE_1D	SDL_opengl_glext.h	/^#define GL_IMAGE_1D /;"	kind:d
GL_IMAGE_1D_ARRAY	SDL_opengl_glext.h	/^#define GL_IMAGE_1D_ARRAY /;"	kind:d
GL_IMAGE_1D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_1D_ARRAY_EXT /;"	kind:d
GL_IMAGE_1D_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_1D_EXT /;"	kind:d
GL_IMAGE_2D	SDL_opengl_glext.h	/^#define GL_IMAGE_2D /;"	kind:d
GL_IMAGE_2D_ARRAY	SDL_opengl_glext.h	/^#define GL_IMAGE_2D_ARRAY /;"	kind:d
GL_IMAGE_2D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_2D_ARRAY_EXT /;"	kind:d
GL_IMAGE_2D_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_2D_EXT /;"	kind:d
GL_IMAGE_2D_MULTISAMPLE	SDL_opengl_glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE /;"	kind:d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	SDL_opengl_glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY /;"	kind:d
GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	kind:d
GL_IMAGE_2D_MULTISAMPLE_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_EXT /;"	kind:d
GL_IMAGE_2D_RECT	SDL_opengl_glext.h	/^#define GL_IMAGE_2D_RECT /;"	kind:d
GL_IMAGE_2D_RECT_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_2D_RECT_EXT /;"	kind:d
GL_IMAGE_3D	SDL_opengl_glext.h	/^#define GL_IMAGE_3D /;"	kind:d
GL_IMAGE_3D_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_3D_EXT /;"	kind:d
GL_IMAGE_BINDING_ACCESS	SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_ACCESS /;"	kind:d
GL_IMAGE_BINDING_ACCESS_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_ACCESS_EXT /;"	kind:d
GL_IMAGE_BINDING_FORMAT	SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_FORMAT /;"	kind:d
GL_IMAGE_BINDING_FORMAT_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_FORMAT_EXT /;"	kind:d
GL_IMAGE_BINDING_LAYER	SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_LAYER /;"	kind:d
GL_IMAGE_BINDING_LAYERED	SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_LAYERED /;"	kind:d
GL_IMAGE_BINDING_LAYERED_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_LAYERED_EXT /;"	kind:d
GL_IMAGE_BINDING_LAYER_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_LAYER_EXT /;"	kind:d
GL_IMAGE_BINDING_LEVEL	SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_LEVEL /;"	kind:d
GL_IMAGE_BINDING_LEVEL_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_LEVEL_EXT /;"	kind:d
GL_IMAGE_BINDING_NAME	SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_NAME /;"	kind:d
GL_IMAGE_BINDING_NAME_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_BINDING_NAME_EXT /;"	kind:d
GL_IMAGE_BUFFER	SDL_opengl_glext.h	/^#define GL_IMAGE_BUFFER /;"	kind:d
GL_IMAGE_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_BUFFER_EXT /;"	kind:d
GL_IMAGE_CLASS_10_10_10_2	SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_10_10_10_2 /;"	kind:d
GL_IMAGE_CLASS_11_11_10	SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_11_11_10 /;"	kind:d
GL_IMAGE_CLASS_1_X_16	SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_1_X_16 /;"	kind:d
GL_IMAGE_CLASS_1_X_32	SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_1_X_32 /;"	kind:d
GL_IMAGE_CLASS_1_X_8	SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_1_X_8 /;"	kind:d
GL_IMAGE_CLASS_2_X_16	SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_2_X_16 /;"	kind:d
GL_IMAGE_CLASS_2_X_32	SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_2_X_32 /;"	kind:d
GL_IMAGE_CLASS_2_X_8	SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_2_X_8 /;"	kind:d
GL_IMAGE_CLASS_4_X_16	SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_4_X_16 /;"	kind:d
GL_IMAGE_CLASS_4_X_32	SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_4_X_32 /;"	kind:d
GL_IMAGE_CLASS_4_X_8	SDL_opengl_glext.h	/^#define GL_IMAGE_CLASS_4_X_8 /;"	kind:d
GL_IMAGE_COMPATIBILITY_CLASS	SDL_opengl_glext.h	/^#define GL_IMAGE_COMPATIBILITY_CLASS /;"	kind:d
GL_IMAGE_CUBE	SDL_opengl_glext.h	/^#define GL_IMAGE_CUBE /;"	kind:d
GL_IMAGE_CUBE_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_CUBE_EXT /;"	kind:d
GL_IMAGE_CUBE_MAP_ARRAY	SDL_opengl_glext.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY /;"	kind:d
GL_IMAGE_CUBE_MAP_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY_EXT /;"	kind:d
GL_IMAGE_CUBIC_WEIGHT_HP	SDL_opengl_glext.h	/^#define GL_IMAGE_CUBIC_WEIGHT_HP /;"	kind:d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	SDL_opengl_glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS /;"	kind:d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	SDL_opengl_glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE /;"	kind:d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	SDL_opengl_glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE /;"	kind:d
GL_IMAGE_MAG_FILTER_HP	SDL_opengl_glext.h	/^#define GL_IMAGE_MAG_FILTER_HP /;"	kind:d
GL_IMAGE_MIN_FILTER_HP	SDL_opengl_glext.h	/^#define GL_IMAGE_MIN_FILTER_HP /;"	kind:d
GL_IMAGE_PIXEL_FORMAT	SDL_opengl_glext.h	/^#define GL_IMAGE_PIXEL_FORMAT /;"	kind:d
GL_IMAGE_PIXEL_TYPE	SDL_opengl_glext.h	/^#define GL_IMAGE_PIXEL_TYPE /;"	kind:d
GL_IMAGE_ROTATE_ANGLE_HP	SDL_opengl_glext.h	/^#define GL_IMAGE_ROTATE_ANGLE_HP /;"	kind:d
GL_IMAGE_ROTATE_ORIGIN_X_HP	SDL_opengl_glext.h	/^#define GL_IMAGE_ROTATE_ORIGIN_X_HP /;"	kind:d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	SDL_opengl_glext.h	/^#define GL_IMAGE_ROTATE_ORIGIN_Y_HP /;"	kind:d
GL_IMAGE_SCALE_X_HP	SDL_opengl_glext.h	/^#define GL_IMAGE_SCALE_X_HP /;"	kind:d
GL_IMAGE_SCALE_Y_HP	SDL_opengl_glext.h	/^#define GL_IMAGE_SCALE_Y_HP /;"	kind:d
GL_IMAGE_TEXEL_SIZE	SDL_opengl_glext.h	/^#define GL_IMAGE_TEXEL_SIZE /;"	kind:d
GL_IMAGE_TRANSFORM_2D_HP	SDL_opengl_glext.h	/^#define GL_IMAGE_TRANSFORM_2D_HP /;"	kind:d
GL_IMAGE_TRANSLATE_X_HP	SDL_opengl_glext.h	/^#define GL_IMAGE_TRANSLATE_X_HP /;"	kind:d
GL_IMAGE_TRANSLATE_Y_HP	SDL_opengl_glext.h	/^#define GL_IMAGE_TRANSLATE_Y_HP /;"	kind:d
GL_IMG_multisampled_render_to_texture	SDL_opengles2_gl2ext.h	/^#define GL_IMG_multisampled_render_to_texture /;"	kind:d
GL_IMG_program_binary	SDL_opengles2_gl2ext.h	/^#define GL_IMG_program_binary /;"	kind:d
GL_IMG_read_format	SDL_opengles2_gl2ext.h	/^#define GL_IMG_read_format /;"	kind:d
GL_IMG_shader_binary	SDL_opengles2_gl2ext.h	/^#define GL_IMG_shader_binary /;"	kind:d
GL_IMG_texture_compression_pvrtc	SDL_opengles2_gl2ext.h	/^#define GL_IMG_texture_compression_pvrtc /;"	kind:d
GL_IMG_texture_compression_pvrtc2	SDL_opengles2_gl2ext.h	/^#define GL_IMG_texture_compression_pvrtc2 /;"	kind:d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	SDL_opengl_glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT /;"	kind:d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	SDL_opengles2_gl2.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT /;"	kind:d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	SDL_opengl_glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES /;"	kind:d
GL_IMPLEMENTATION_COLOR_READ_TYPE	SDL_opengl_glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE /;"	kind:d
GL_IMPLEMENTATION_COLOR_READ_TYPE	SDL_opengles2_gl2.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE /;"	kind:d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	SDL_opengl_glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES /;"	kind:d
GL_INCR	SDL_opengl.h	/^#define GL_INCR	/;"	kind:d
GL_INCR	SDL_opengles2_gl2.h	/^#define GL_INCR /;"	kind:d
GL_INCR_WRAP	SDL_opengl_glext.h	/^#define GL_INCR_WRAP /;"	kind:d
GL_INCR_WRAP	SDL_opengles2_gl2.h	/^#define GL_INCR_WRAP /;"	kind:d
GL_INCR_WRAP_EXT	SDL_opengl_glext.h	/^#define GL_INCR_WRAP_EXT /;"	kind:d
GL_INDEX	SDL_opengl_glext.h	/^#define GL_INDEX /;"	kind:d
GL_INDEX_ARRAY	SDL_opengl.h	/^#define GL_INDEX_ARRAY	/;"	kind:d
GL_INDEX_ARRAY_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_ADDRESS_NV /;"	kind:d
GL_INDEX_ARRAY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING /;"	kind:d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB /;"	kind:d
GL_INDEX_ARRAY_COUNT_EXT	SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_COUNT_EXT /;"	kind:d
GL_INDEX_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_EXT /;"	kind:d
GL_INDEX_ARRAY_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_LENGTH_NV /;"	kind:d
GL_INDEX_ARRAY_LIST_IBM	SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_LIST_IBM /;"	kind:d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_LIST_STRIDE_IBM /;"	kind:d
GL_INDEX_ARRAY_POINTER	SDL_opengl.h	/^#define GL_INDEX_ARRAY_POINTER	/;"	kind:d
GL_INDEX_ARRAY_POINTER_EXT	SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_POINTER_EXT /;"	kind:d
GL_INDEX_ARRAY_STRIDE	SDL_opengl.h	/^#define GL_INDEX_ARRAY_STRIDE	/;"	kind:d
GL_INDEX_ARRAY_STRIDE_EXT	SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_STRIDE_EXT /;"	kind:d
GL_INDEX_ARRAY_TYPE	SDL_opengl.h	/^#define GL_INDEX_ARRAY_TYPE	/;"	kind:d
GL_INDEX_ARRAY_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_INDEX_ARRAY_TYPE_EXT /;"	kind:d
GL_INDEX_BITS	SDL_opengl.h	/^#define GL_INDEX_BITS	/;"	kind:d
GL_INDEX_BIT_PGI	SDL_opengl_glext.h	/^#define GL_INDEX_BIT_PGI /;"	kind:d
GL_INDEX_CLEAR_VALUE	SDL_opengl.h	/^#define GL_INDEX_CLEAR_VALUE	/;"	kind:d
GL_INDEX_LOGIC_OP	SDL_opengl.h	/^#define GL_INDEX_LOGIC_OP	/;"	kind:d
GL_INDEX_MATERIAL_EXT	SDL_opengl_glext.h	/^#define GL_INDEX_MATERIAL_EXT /;"	kind:d
GL_INDEX_MATERIAL_FACE_EXT	SDL_opengl_glext.h	/^#define GL_INDEX_MATERIAL_FACE_EXT /;"	kind:d
GL_INDEX_MATERIAL_PARAMETER_EXT	SDL_opengl_glext.h	/^#define GL_INDEX_MATERIAL_PARAMETER_EXT /;"	kind:d
GL_INDEX_MODE	SDL_opengl.h	/^#define GL_INDEX_MODE	/;"	kind:d
GL_INDEX_OFFSET	SDL_opengl.h	/^#define GL_INDEX_OFFSET	/;"	kind:d
GL_INDEX_SHIFT	SDL_opengl.h	/^#define GL_INDEX_SHIFT	/;"	kind:d
GL_INDEX_TEST_EXT	SDL_opengl_glext.h	/^#define GL_INDEX_TEST_EXT /;"	kind:d
GL_INDEX_TEST_FUNC_EXT	SDL_opengl_glext.h	/^#define GL_INDEX_TEST_FUNC_EXT /;"	kind:d
GL_INDEX_TEST_REF_EXT	SDL_opengl_glext.h	/^#define GL_INDEX_TEST_REF_EXT /;"	kind:d
GL_INDEX_WRITEMASK	SDL_opengl.h	/^#define GL_INDEX_WRITEMASK	/;"	kind:d
GL_INFO_LOG_LENGTH	SDL_opengl_glext.h	/^#define GL_INFO_LOG_LENGTH /;"	kind:d
GL_INFO_LOG_LENGTH	SDL_opengles2_gl2.h	/^#define GL_INFO_LOG_LENGTH /;"	kind:d
GL_INGR_blend_func_separate	SDL_opengl_glext.h	/^#define GL_INGR_blend_func_separate /;"	kind:d
GL_INGR_color_clamp	SDL_opengl_glext.h	/^#define GL_INGR_color_clamp /;"	kind:d
GL_INGR_interlace_read	SDL_opengl_glext.h	/^#define GL_INGR_interlace_read /;"	kind:d
GL_INNOCENT_CONTEXT_RESET_ARB	SDL_opengl_glext.h	/^#define GL_INNOCENT_CONTEXT_RESET_ARB /;"	kind:d
GL_INNOCENT_CONTEXT_RESET_EXT	SDL_opengles2_gl2ext.h	/^#define GL_INNOCENT_CONTEXT_RESET_EXT /;"	kind:d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	SDL_opengl_glext.h	/^#define GL_INSTRUMENT_BUFFER_POINTER_SGIX /;"	kind:d
GL_INSTRUMENT_MEASUREMENTS_SGIX	SDL_opengl_glext.h	/^#define GL_INSTRUMENT_MEASUREMENTS_SGIX /;"	kind:d
GL_INT	SDL_opengl.h	/^#define GL_INT	/;"	kind:d
GL_INT	SDL_opengles2_gl2.h	/^#define GL_INT /;"	kind:d
GL_INT16_NV	SDL_opengl_glext.h	/^#define GL_INT16_NV /;"	kind:d
GL_INT16_VEC2_NV	SDL_opengl_glext.h	/^#define GL_INT16_VEC2_NV /;"	kind:d
GL_INT16_VEC3_NV	SDL_opengl_glext.h	/^#define GL_INT16_VEC3_NV /;"	kind:d
GL_INT16_VEC4_NV	SDL_opengl_glext.h	/^#define GL_INT16_VEC4_NV /;"	kind:d
GL_INT64_NV	SDL_opengl_glext.h	/^#define GL_INT64_NV /;"	kind:d
GL_INT64_VEC2_NV	SDL_opengl_glext.h	/^#define GL_INT64_VEC2_NV /;"	kind:d
GL_INT64_VEC3_NV	SDL_opengl_glext.h	/^#define GL_INT64_VEC3_NV /;"	kind:d
GL_INT64_VEC4_NV	SDL_opengl_glext.h	/^#define GL_INT64_VEC4_NV /;"	kind:d
GL_INT8_NV	SDL_opengl_glext.h	/^#define GL_INT8_NV /;"	kind:d
GL_INT8_VEC2_NV	SDL_opengl_glext.h	/^#define GL_INT8_VEC2_NV /;"	kind:d
GL_INT8_VEC3_NV	SDL_opengl_glext.h	/^#define GL_INT8_VEC3_NV /;"	kind:d
GL_INT8_VEC4_NV	SDL_opengl_glext.h	/^#define GL_INT8_VEC4_NV /;"	kind:d
GL_INTEL_fragment_shader_ordering	SDL_opengl_glext.h	/^#define GL_INTEL_fragment_shader_ordering /;"	kind:d
GL_INTEL_map_texture	SDL_opengl_glext.h	/^#define GL_INTEL_map_texture /;"	kind:d
GL_INTEL_parallel_arrays	SDL_opengl_glext.h	/^#define GL_INTEL_parallel_arrays /;"	kind:d
GL_INTEL_performance_query	SDL_opengl_glext.h	/^#define GL_INTEL_performance_query /;"	kind:d
GL_INTENSITY	SDL_opengl.h	/^#define GL_INTENSITY	/;"	kind:d
GL_INTENSITY12	SDL_opengl.h	/^#define GL_INTENSITY12	/;"	kind:d
GL_INTENSITY12_EXT	SDL_opengl_glext.h	/^#define GL_INTENSITY12_EXT /;"	kind:d
GL_INTENSITY16	SDL_opengl.h	/^#define GL_INTENSITY16	/;"	kind:d
GL_INTENSITY16F_ARB	SDL_opengl_glext.h	/^#define GL_INTENSITY16F_ARB /;"	kind:d
GL_INTENSITY16I_EXT	SDL_opengl_glext.h	/^#define GL_INTENSITY16I_EXT /;"	kind:d
GL_INTENSITY16UI_EXT	SDL_opengl_glext.h	/^#define GL_INTENSITY16UI_EXT /;"	kind:d
GL_INTENSITY16_EXT	SDL_opengl_glext.h	/^#define GL_INTENSITY16_EXT /;"	kind:d
GL_INTENSITY16_SNORM	SDL_opengl_glext.h	/^#define GL_INTENSITY16_SNORM /;"	kind:d
GL_INTENSITY32F_ARB	SDL_opengl_glext.h	/^#define GL_INTENSITY32F_ARB /;"	kind:d
GL_INTENSITY32I_EXT	SDL_opengl_glext.h	/^#define GL_INTENSITY32I_EXT /;"	kind:d
GL_INTENSITY32UI_EXT	SDL_opengl_glext.h	/^#define GL_INTENSITY32UI_EXT /;"	kind:d
GL_INTENSITY4	SDL_opengl.h	/^#define GL_INTENSITY4	/;"	kind:d
GL_INTENSITY4_EXT	SDL_opengl_glext.h	/^#define GL_INTENSITY4_EXT /;"	kind:d
GL_INTENSITY8	SDL_opengl.h	/^#define GL_INTENSITY8	/;"	kind:d
GL_INTENSITY8I_EXT	SDL_opengl_glext.h	/^#define GL_INTENSITY8I_EXT /;"	kind:d
GL_INTENSITY8UI_EXT	SDL_opengl_glext.h	/^#define GL_INTENSITY8UI_EXT /;"	kind:d
GL_INTENSITY8_EXT	SDL_opengl_glext.h	/^#define GL_INTENSITY8_EXT /;"	kind:d
GL_INTENSITY8_SNORM	SDL_opengl_glext.h	/^#define GL_INTENSITY8_SNORM /;"	kind:d
GL_INTENSITY_EXT	SDL_opengl_glext.h	/^#define GL_INTENSITY_EXT /;"	kind:d
GL_INTENSITY_FLOAT16_APPLE	SDL_opengl_glext.h	/^#define GL_INTENSITY_FLOAT16_APPLE /;"	kind:d
GL_INTENSITY_FLOAT16_ATI	SDL_opengl_glext.h	/^#define GL_INTENSITY_FLOAT16_ATI /;"	kind:d
GL_INTENSITY_FLOAT32_APPLE	SDL_opengl_glext.h	/^#define GL_INTENSITY_FLOAT32_APPLE /;"	kind:d
GL_INTENSITY_FLOAT32_ATI	SDL_opengl_glext.h	/^#define GL_INTENSITY_FLOAT32_ATI /;"	kind:d
GL_INTENSITY_SNORM	SDL_opengl_glext.h	/^#define GL_INTENSITY_SNORM /;"	kind:d
GL_INTERLACE_OML	SDL_opengl_glext.h	/^#define GL_INTERLACE_OML /;"	kind:d
GL_INTERLACE_READ_INGR	SDL_opengl_glext.h	/^#define GL_INTERLACE_READ_INGR /;"	kind:d
GL_INTERLACE_READ_OML	SDL_opengl_glext.h	/^#define GL_INTERLACE_READ_OML /;"	kind:d
GL_INTERLACE_SGIX	SDL_opengl_glext.h	/^#define GL_INTERLACE_SGIX /;"	kind:d
GL_INTERLEAVED_ATTRIBS	SDL_opengl_glext.h	/^#define GL_INTERLEAVED_ATTRIBS /;"	kind:d
GL_INTERLEAVED_ATTRIBS_EXT	SDL_opengl_glext.h	/^#define GL_INTERLEAVED_ATTRIBS_EXT /;"	kind:d
GL_INTERLEAVED_ATTRIBS_NV	SDL_opengl_glext.h	/^#define GL_INTERLEAVED_ATTRIBS_NV /;"	kind:d
GL_INTERNALFORMAT_ALPHA_SIZE	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_ALPHA_SIZE /;"	kind:d
GL_INTERNALFORMAT_ALPHA_TYPE	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_ALPHA_TYPE /;"	kind:d
GL_INTERNALFORMAT_BLUE_SIZE	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_BLUE_SIZE /;"	kind:d
GL_INTERNALFORMAT_BLUE_TYPE	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_BLUE_TYPE /;"	kind:d
GL_INTERNALFORMAT_DEPTH_SIZE	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_DEPTH_SIZE /;"	kind:d
GL_INTERNALFORMAT_DEPTH_TYPE	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_DEPTH_TYPE /;"	kind:d
GL_INTERNALFORMAT_GREEN_SIZE	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_GREEN_SIZE /;"	kind:d
GL_INTERNALFORMAT_GREEN_TYPE	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_GREEN_TYPE /;"	kind:d
GL_INTERNALFORMAT_PREFERRED	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_PREFERRED /;"	kind:d
GL_INTERNALFORMAT_RED_SIZE	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_RED_SIZE /;"	kind:d
GL_INTERNALFORMAT_RED_TYPE	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_RED_TYPE /;"	kind:d
GL_INTERNALFORMAT_SHARED_SIZE	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_SHARED_SIZE /;"	kind:d
GL_INTERNALFORMAT_STENCIL_SIZE	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_STENCIL_SIZE /;"	kind:d
GL_INTERNALFORMAT_STENCIL_TYPE	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_STENCIL_TYPE /;"	kind:d
GL_INTERNALFORMAT_SUPPORTED	SDL_opengl_glext.h	/^#define GL_INTERNALFORMAT_SUPPORTED /;"	kind:d
GL_INTERPOLATE	SDL_opengl.h	/^#define GL_INTERPOLATE	/;"	kind:d
GL_INTERPOLATE	SDL_opengl_glext.h	/^#define GL_INTERPOLATE /;"	kind:d
GL_INTERPOLATE_ARB	SDL_opengl_glext.h	/^#define GL_INTERPOLATE_ARB /;"	kind:d
GL_INTERPOLATE_EXT	SDL_opengl_glext.h	/^#define GL_INTERPOLATE_EXT /;"	kind:d
GL_INT_10_10_10_2_OES	SDL_opengles2_gl2ext.h	/^#define GL_INT_10_10_10_2_OES /;"	kind:d
GL_INT_2_10_10_10_REV	SDL_opengl_glext.h	/^#define GL_INT_2_10_10_10_REV /;"	kind:d
GL_INT_IMAGE_1D	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_1D /;"	kind:d
GL_INT_IMAGE_1D_ARRAY	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_1D_ARRAY /;"	kind:d
GL_INT_IMAGE_1D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_1D_ARRAY_EXT /;"	kind:d
GL_INT_IMAGE_1D_EXT	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_1D_EXT /;"	kind:d
GL_INT_IMAGE_2D	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D /;"	kind:d
GL_INT_IMAGE_2D_ARRAY	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_ARRAY /;"	kind:d
GL_INT_IMAGE_2D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_ARRAY_EXT /;"	kind:d
GL_INT_IMAGE_2D_EXT	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_EXT /;"	kind:d
GL_INT_IMAGE_2D_MULTISAMPLE	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE /;"	kind:d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	kind:d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	kind:d
GL_INT_IMAGE_2D_MULTISAMPLE_EXT	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	kind:d
GL_INT_IMAGE_2D_RECT	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_RECT /;"	kind:d
GL_INT_IMAGE_2D_RECT_EXT	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_2D_RECT_EXT /;"	kind:d
GL_INT_IMAGE_3D	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_3D /;"	kind:d
GL_INT_IMAGE_3D_EXT	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_3D_EXT /;"	kind:d
GL_INT_IMAGE_BUFFER	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_BUFFER /;"	kind:d
GL_INT_IMAGE_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_BUFFER_EXT /;"	kind:d
GL_INT_IMAGE_CUBE	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_CUBE /;"	kind:d
GL_INT_IMAGE_CUBE_EXT	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_CUBE_EXT /;"	kind:d
GL_INT_IMAGE_CUBE_MAP_ARRAY	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY /;"	kind:d
GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	kind:d
GL_INT_SAMPLER_1D	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_1D /;"	kind:d
GL_INT_SAMPLER_1D_ARRAY	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_1D_ARRAY /;"	kind:d
GL_INT_SAMPLER_1D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_1D_ARRAY_EXT /;"	kind:d
GL_INT_SAMPLER_1D_EXT	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_1D_EXT /;"	kind:d
GL_INT_SAMPLER_2D	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D /;"	kind:d
GL_INT_SAMPLER_2D_ARRAY	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_ARRAY /;"	kind:d
GL_INT_SAMPLER_2D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_ARRAY_EXT /;"	kind:d
GL_INT_SAMPLER_2D_EXT	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_EXT /;"	kind:d
GL_INT_SAMPLER_2D_MULTISAMPLE	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE /;"	kind:d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	kind:d
GL_INT_SAMPLER_2D_RECT	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_RECT /;"	kind:d
GL_INT_SAMPLER_2D_RECT_EXT	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_2D_RECT_EXT /;"	kind:d
GL_INT_SAMPLER_3D	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_3D /;"	kind:d
GL_INT_SAMPLER_3D_EXT	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_3D_EXT /;"	kind:d
GL_INT_SAMPLER_BUFFER	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_BUFFER /;"	kind:d
GL_INT_SAMPLER_BUFFER_AMD	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_BUFFER_AMD /;"	kind:d
GL_INT_SAMPLER_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_BUFFER_EXT /;"	kind:d
GL_INT_SAMPLER_CUBE	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_CUBE /;"	kind:d
GL_INT_SAMPLER_CUBE_EXT	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_CUBE_EXT /;"	kind:d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY /;"	kind:d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	kind:d
GL_INT_SAMPLER_RENDERBUFFER_NV	SDL_opengl_glext.h	/^#define GL_INT_SAMPLER_RENDERBUFFER_NV /;"	kind:d
GL_INT_VEC2	SDL_opengl_glext.h	/^#define GL_INT_VEC2 /;"	kind:d
GL_INT_VEC2	SDL_opengles2_gl2.h	/^#define GL_INT_VEC2 /;"	kind:d
GL_INT_VEC2_ARB	SDL_opengl_glext.h	/^#define GL_INT_VEC2_ARB /;"	kind:d
GL_INT_VEC3	SDL_opengl_glext.h	/^#define GL_INT_VEC3 /;"	kind:d
GL_INT_VEC3	SDL_opengles2_gl2.h	/^#define GL_INT_VEC3 /;"	kind:d
GL_INT_VEC3_ARB	SDL_opengl_glext.h	/^#define GL_INT_VEC3_ARB /;"	kind:d
GL_INT_VEC4	SDL_opengl_glext.h	/^#define GL_INT_VEC4 /;"	kind:d
GL_INT_VEC4	SDL_opengles2_gl2.h	/^#define GL_INT_VEC4 /;"	kind:d
GL_INT_VEC4_ARB	SDL_opengl_glext.h	/^#define GL_INT_VEC4_ARB /;"	kind:d
GL_INVALID_ENUM	SDL_opengl.h	/^#define GL_INVALID_ENUM	/;"	kind:d
GL_INVALID_ENUM	SDL_opengles2_gl2.h	/^#define GL_INVALID_ENUM /;"	kind:d
GL_INVALID_FRAMEBUFFER_OPERATION	SDL_opengl_glext.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	kind:d
GL_INVALID_FRAMEBUFFER_OPERATION	SDL_opengles2_gl2.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	kind:d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	SDL_opengl_glext.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT /;"	kind:d
GL_INVALID_INDEX	SDL_opengl_glext.h	/^#define GL_INVALID_INDEX /;"	kind:d
GL_INVALID_OPERATION	SDL_opengl.h	/^#define GL_INVALID_OPERATION	/;"	kind:d
GL_INVALID_OPERATION	SDL_opengles2_gl2.h	/^#define GL_INVALID_OPERATION /;"	kind:d
GL_INVALID_VALUE	SDL_opengl.h	/^#define GL_INVALID_VALUE	/;"	kind:d
GL_INVALID_VALUE	SDL_opengles2_gl2.h	/^#define GL_INVALID_VALUE /;"	kind:d
GL_INVARIANT_DATATYPE_EXT	SDL_opengl_glext.h	/^#define GL_INVARIANT_DATATYPE_EXT /;"	kind:d
GL_INVARIANT_EXT	SDL_opengl_glext.h	/^#define GL_INVARIANT_EXT /;"	kind:d
GL_INVARIANT_VALUE_EXT	SDL_opengl_glext.h	/^#define GL_INVARIANT_VALUE_EXT /;"	kind:d
GL_INVERSE_NV	SDL_opengl_glext.h	/^#define GL_INVERSE_NV /;"	kind:d
GL_INVERSE_TRANSPOSE_NV	SDL_opengl_glext.h	/^#define GL_INVERSE_TRANSPOSE_NV /;"	kind:d
GL_INVERT	SDL_opengl.h	/^#define GL_INVERT	/;"	kind:d
GL_INVERT	SDL_opengles2_gl2.h	/^#define GL_INVERT /;"	kind:d
GL_INVERTED_SCREEN_W_REND	SDL_opengl_glext.h	/^#define GL_INVERTED_SCREEN_W_REND /;"	kind:d
GL_INVERT_OVG_NV	SDL_opengl_glext.h	/^#define GL_INVERT_OVG_NV /;"	kind:d
GL_INVERT_RGB_NV	SDL_opengl_glext.h	/^#define GL_INVERT_RGB_NV /;"	kind:d
GL_IR_INSTRUMENT1_SGIX	SDL_opengl_glext.h	/^#define GL_IR_INSTRUMENT1_SGIX /;"	kind:d
GL_ISOLINES	SDL_opengl_glext.h	/^#define GL_ISOLINES /;"	kind:d
GL_IS_PER_PATCH	SDL_opengl_glext.h	/^#define GL_IS_PER_PATCH /;"	kind:d
GL_IS_ROW_MAJOR	SDL_opengl_glext.h	/^#define GL_IS_ROW_MAJOR /;"	kind:d
GL_ITALIC_BIT_NV	SDL_opengl_glext.h	/^#define GL_ITALIC_BIT_NV /;"	kind:d
GL_IUI_N3F_V2F_EXT	SDL_opengl_glext.h	/^#define GL_IUI_N3F_V2F_EXT /;"	kind:d
GL_IUI_N3F_V3F_EXT	SDL_opengl_glext.h	/^#define GL_IUI_N3F_V3F_EXT /;"	kind:d
GL_IUI_V2F_EXT	SDL_opengl_glext.h	/^#define GL_IUI_V2F_EXT /;"	kind:d
GL_IUI_V3F_EXT	SDL_opengl_glext.h	/^#define GL_IUI_V3F_EXT /;"	kind:d
GL_KEEP	SDL_opengl.h	/^#define GL_KEEP	/;"	kind:d
GL_KEEP	SDL_opengles2_gl2.h	/^#define GL_KEEP /;"	kind:d
GL_KHR_debug	SDL_opengl_glext.h	/^#define GL_KHR_debug /;"	kind:d
GL_KHR_debug	SDL_opengles2_gl2ext.h	/^#define GL_KHR_debug /;"	kind:d
GL_KHR_texture_compression_astc_hdr	SDL_opengl_glext.h	/^#define GL_KHR_texture_compression_astc_hdr /;"	kind:d
GL_KHR_texture_compression_astc_ldr	SDL_opengl_glext.h	/^#define GL_KHR_texture_compression_astc_ldr /;"	kind:d
GL_KHR_texture_compression_astc_ldr	SDL_opengles2_gl2ext.h	/^#define GL_KHR_texture_compression_astc_ldr /;"	kind:d
GL_LARGE_CCW_ARC_TO_NV	SDL_opengl_glext.h	/^#define GL_LARGE_CCW_ARC_TO_NV /;"	kind:d
GL_LARGE_CW_ARC_TO_NV	SDL_opengl_glext.h	/^#define GL_LARGE_CW_ARC_TO_NV /;"	kind:d
GL_LAST_VERTEX_CONVENTION	SDL_opengl_glext.h	/^#define GL_LAST_VERTEX_CONVENTION /;"	kind:d
GL_LAST_VERTEX_CONVENTION_EXT	SDL_opengl_glext.h	/^#define GL_LAST_VERTEX_CONVENTION_EXT /;"	kind:d
GL_LAST_VIDEO_CAPTURE_STATUS_NV	SDL_opengl_glext.h	/^#define GL_LAST_VIDEO_CAPTURE_STATUS_NV /;"	kind:d
GL_LAYER_NV	SDL_opengl_glext.h	/^#define GL_LAYER_NV /;"	kind:d
GL_LAYER_PROVOKING_VERTEX	SDL_opengl_glext.h	/^#define GL_LAYER_PROVOKING_VERTEX /;"	kind:d
GL_LAYOUT_DEFAULT_INTEL	SDL_opengl_glext.h	/^#define GL_LAYOUT_DEFAULT_INTEL /;"	kind:d
GL_LAYOUT_LINEAR_CPU_CACHED_INTEL	SDL_opengl_glext.h	/^#define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL /;"	kind:d
GL_LAYOUT_LINEAR_INTEL	SDL_opengl_glext.h	/^#define GL_LAYOUT_LINEAR_INTEL /;"	kind:d
GL_LEFT	SDL_opengl.h	/^#define GL_LEFT	/;"	kind:d
GL_LEQUAL	SDL_opengl.h	/^#define GL_LEQUAL	/;"	kind:d
GL_LEQUAL	SDL_opengles2_gl2.h	/^#define GL_LEQUAL /;"	kind:d
GL_LERP_ATI	SDL_opengl_glext.h	/^#define GL_LERP_ATI /;"	kind:d
GL_LESS	SDL_opengl.h	/^#define GL_LESS	/;"	kind:d
GL_LESS	SDL_opengles2_gl2.h	/^#define GL_LESS /;"	kind:d
GL_LIGHT0	SDL_opengl.h	/^#define GL_LIGHT0	/;"	kind:d
GL_LIGHT1	SDL_opengl.h	/^#define GL_LIGHT1	/;"	kind:d
GL_LIGHT2	SDL_opengl.h	/^#define GL_LIGHT2	/;"	kind:d
GL_LIGHT3	SDL_opengl.h	/^#define GL_LIGHT3	/;"	kind:d
GL_LIGHT4	SDL_opengl.h	/^#define GL_LIGHT4	/;"	kind:d
GL_LIGHT5	SDL_opengl.h	/^#define GL_LIGHT5	/;"	kind:d
GL_LIGHT6	SDL_opengl.h	/^#define GL_LIGHT6	/;"	kind:d
GL_LIGHT7	SDL_opengl.h	/^#define GL_LIGHT7	/;"	kind:d
GL_LIGHTEN_NV	SDL_opengl_glext.h	/^#define GL_LIGHTEN_NV /;"	kind:d
GL_LIGHTING	SDL_opengl.h	/^#define GL_LIGHTING	/;"	kind:d
GL_LIGHTING_BIT	SDL_opengl.h	/^#define GL_LIGHTING_BIT	/;"	kind:d
GL_LIGHT_ENV_MODE_SGIX	SDL_opengl_glext.h	/^#define GL_LIGHT_ENV_MODE_SGIX /;"	kind:d
GL_LIGHT_MODEL_AMBIENT	SDL_opengl.h	/^#define GL_LIGHT_MODEL_AMBIENT	/;"	kind:d
GL_LIGHT_MODEL_COLOR_CONTROL	SDL_opengl.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL	/;"	kind:d
GL_LIGHT_MODEL_COLOR_CONTROL	SDL_opengl_glext.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL /;"	kind:d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	SDL_opengl_glext.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT /;"	kind:d
GL_LIGHT_MODEL_LOCAL_VIEWER	SDL_opengl.h	/^#define GL_LIGHT_MODEL_LOCAL_VIEWER	/;"	kind:d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	SDL_opengl_glext.h	/^#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE /;"	kind:d
GL_LIGHT_MODEL_TWO_SIDE	SDL_opengl.h	/^#define GL_LIGHT_MODEL_TWO_SIDE	/;"	kind:d
GL_LINE	SDL_opengl.h	/^#define GL_LINE	/;"	kind:d
GL_LINEAR	SDL_opengl.h	/^#define GL_LINEAR	/;"	kind:d
GL_LINEAR	SDL_opengles2_gl2.h	/^#define GL_LINEAR /;"	kind:d
GL_LINEARBURN_NV	SDL_opengl_glext.h	/^#define GL_LINEARBURN_NV /;"	kind:d
GL_LINEARDODGE_NV	SDL_opengl_glext.h	/^#define GL_LINEARDODGE_NV /;"	kind:d
GL_LINEARLIGHT_NV	SDL_opengl_glext.h	/^#define GL_LINEARLIGHT_NV /;"	kind:d
GL_LINEAR_ATTENUATION	SDL_opengl.h	/^#define GL_LINEAR_ATTENUATION	/;"	kind:d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	SDL_opengl_glext.h	/^#define GL_LINEAR_CLIPMAP_LINEAR_SGIX /;"	kind:d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	SDL_opengl_glext.h	/^#define GL_LINEAR_CLIPMAP_NEAREST_SGIX /;"	kind:d
GL_LINEAR_DETAIL_ALPHA_SGIS	SDL_opengl_glext.h	/^#define GL_LINEAR_DETAIL_ALPHA_SGIS /;"	kind:d
GL_LINEAR_DETAIL_COLOR_SGIS	SDL_opengl_glext.h	/^#define GL_LINEAR_DETAIL_COLOR_SGIS /;"	kind:d
GL_LINEAR_DETAIL_SGIS	SDL_opengl_glext.h	/^#define GL_LINEAR_DETAIL_SGIS /;"	kind:d
GL_LINEAR_MIPMAP_LINEAR	SDL_opengl.h	/^#define GL_LINEAR_MIPMAP_LINEAR	/;"	kind:d
GL_LINEAR_MIPMAP_LINEAR	SDL_opengles2_gl2.h	/^#define GL_LINEAR_MIPMAP_LINEAR /;"	kind:d
GL_LINEAR_MIPMAP_NEAREST	SDL_opengl.h	/^#define GL_LINEAR_MIPMAP_NEAREST	/;"	kind:d
GL_LINEAR_MIPMAP_NEAREST	SDL_opengles2_gl2.h	/^#define GL_LINEAR_MIPMAP_NEAREST /;"	kind:d
GL_LINEAR_SHARPEN_ALPHA_SGIS	SDL_opengl_glext.h	/^#define GL_LINEAR_SHARPEN_ALPHA_SGIS /;"	kind:d
GL_LINEAR_SHARPEN_COLOR_SGIS	SDL_opengl_glext.h	/^#define GL_LINEAR_SHARPEN_COLOR_SGIS /;"	kind:d
GL_LINEAR_SHARPEN_SGIS	SDL_opengl_glext.h	/^#define GL_LINEAR_SHARPEN_SGIS /;"	kind:d
GL_LINES	SDL_opengl.h	/^#define GL_LINES	/;"	kind:d
GL_LINES	SDL_opengles2_gl2.h	/^#define GL_LINES /;"	kind:d
GL_LINES_ADJACENCY	SDL_opengl_glext.h	/^#define GL_LINES_ADJACENCY /;"	kind:d
GL_LINES_ADJACENCY_ARB	SDL_opengl_glext.h	/^#define GL_LINES_ADJACENCY_ARB /;"	kind:d
GL_LINES_ADJACENCY_EXT	SDL_opengl_glext.h	/^#define GL_LINES_ADJACENCY_EXT /;"	kind:d
GL_LINE_BIT	SDL_opengl.h	/^#define GL_LINE_BIT	/;"	kind:d
GL_LINE_LOOP	SDL_opengl.h	/^#define GL_LINE_LOOP	/;"	kind:d
GL_LINE_LOOP	SDL_opengles2_gl2.h	/^#define GL_LINE_LOOP /;"	kind:d
GL_LINE_RESET_TOKEN	SDL_opengl.h	/^#define GL_LINE_RESET_TOKEN	/;"	kind:d
GL_LINE_SMOOTH	SDL_opengl.h	/^#define GL_LINE_SMOOTH	/;"	kind:d
GL_LINE_SMOOTH_HINT	SDL_opengl.h	/^#define GL_LINE_SMOOTH_HINT	/;"	kind:d
GL_LINE_STIPPLE	SDL_opengl.h	/^#define GL_LINE_STIPPLE	/;"	kind:d
GL_LINE_STIPPLE_PATTERN	SDL_opengl.h	/^#define GL_LINE_STIPPLE_PATTERN	/;"	kind:d
GL_LINE_STIPPLE_REPEAT	SDL_opengl.h	/^#define GL_LINE_STIPPLE_REPEAT	/;"	kind:d
GL_LINE_STRIP	SDL_opengl.h	/^#define GL_LINE_STRIP	/;"	kind:d
GL_LINE_STRIP	SDL_opengles2_gl2.h	/^#define GL_LINE_STRIP /;"	kind:d
GL_LINE_STRIP_ADJACENCY	SDL_opengl_glext.h	/^#define GL_LINE_STRIP_ADJACENCY /;"	kind:d
GL_LINE_STRIP_ADJACENCY_ARB	SDL_opengl_glext.h	/^#define GL_LINE_STRIP_ADJACENCY_ARB /;"	kind:d
GL_LINE_STRIP_ADJACENCY_EXT	SDL_opengl_glext.h	/^#define GL_LINE_STRIP_ADJACENCY_EXT /;"	kind:d
GL_LINE_TOKEN	SDL_opengl.h	/^#define GL_LINE_TOKEN	/;"	kind:d
GL_LINE_TO_NV	SDL_opengl_glext.h	/^#define GL_LINE_TO_NV /;"	kind:d
GL_LINE_WIDTH	SDL_opengl.h	/^#define GL_LINE_WIDTH	/;"	kind:d
GL_LINE_WIDTH	SDL_opengles2_gl2.h	/^#define GL_LINE_WIDTH /;"	kind:d
GL_LINE_WIDTH_GRANULARITY	SDL_opengl.h	/^#define GL_LINE_WIDTH_GRANULARITY	/;"	kind:d
GL_LINE_WIDTH_RANGE	SDL_opengl.h	/^#define GL_LINE_WIDTH_RANGE	/;"	kind:d
GL_LINK_STATUS	SDL_opengl_glext.h	/^#define GL_LINK_STATUS /;"	kind:d
GL_LINK_STATUS	SDL_opengles2_gl2.h	/^#define GL_LINK_STATUS /;"	kind:d
GL_LIST_BASE	SDL_opengl.h	/^#define GL_LIST_BASE	/;"	kind:d
GL_LIST_BIT	SDL_opengl.h	/^#define GL_LIST_BIT	/;"	kind:d
GL_LIST_INDEX	SDL_opengl.h	/^#define GL_LIST_INDEX	/;"	kind:d
GL_LIST_MODE	SDL_opengl.h	/^#define GL_LIST_MODE	/;"	kind:d
GL_LIST_PRIORITY_SGIX	SDL_opengl_glext.h	/^#define GL_LIST_PRIORITY_SGIX /;"	kind:d
GL_LOAD	SDL_opengl.h	/^#define GL_LOAD	/;"	kind:d
GL_LOCAL_CONSTANT_DATATYPE_EXT	SDL_opengl_glext.h	/^#define GL_LOCAL_CONSTANT_DATATYPE_EXT /;"	kind:d
GL_LOCAL_CONSTANT_EXT	SDL_opengl_glext.h	/^#define GL_LOCAL_CONSTANT_EXT /;"	kind:d
GL_LOCAL_CONSTANT_VALUE_EXT	SDL_opengl_glext.h	/^#define GL_LOCAL_CONSTANT_VALUE_EXT /;"	kind:d
GL_LOCAL_EXT	SDL_opengl_glext.h	/^#define GL_LOCAL_EXT /;"	kind:d
GL_LOCATION	SDL_opengl_glext.h	/^#define GL_LOCATION /;"	kind:d
GL_LOCATION_COMPONENT	SDL_opengl_glext.h	/^#define GL_LOCATION_COMPONENT /;"	kind:d
GL_LOCATION_INDEX	SDL_opengl_glext.h	/^#define GL_LOCATION_INDEX /;"	kind:d
GL_LOGIC_OP	SDL_opengl.h	/^#define GL_LOGIC_OP	/;"	kind:d
GL_LOGIC_OP_MODE	SDL_opengl.h	/^#define GL_LOGIC_OP_MODE	/;"	kind:d
GL_LOSE_CONTEXT_ON_RESET_ARB	SDL_opengl_glext.h	/^#define GL_LOSE_CONTEXT_ON_RESET_ARB /;"	kind:d
GL_LOSE_CONTEXT_ON_RESET_EXT	SDL_opengles2_gl2ext.h	/^#define GL_LOSE_CONTEXT_ON_RESET_EXT /;"	kind:d
GL_LOWER_LEFT	SDL_opengl_glext.h	/^#define GL_LOWER_LEFT /;"	kind:d
GL_LOW_FLOAT	SDL_opengl_glext.h	/^#define GL_LOW_FLOAT /;"	kind:d
GL_LOW_FLOAT	SDL_opengles2_gl2.h	/^#define GL_LOW_FLOAT /;"	kind:d
GL_LOW_INT	SDL_opengl_glext.h	/^#define GL_LOW_INT /;"	kind:d
GL_LOW_INT	SDL_opengles2_gl2.h	/^#define GL_LOW_INT /;"	kind:d
GL_LO_BIAS_NV	SDL_opengl_glext.h	/^#define GL_LO_BIAS_NV /;"	kind:d
GL_LO_SCALE_NV	SDL_opengl_glext.h	/^#define GL_LO_SCALE_NV /;"	kind:d
GL_LUMINANCE	SDL_opengl.h	/^#define GL_LUMINANCE	/;"	kind:d
GL_LUMINANCE	SDL_opengles2_gl2.h	/^#define GL_LUMINANCE /;"	kind:d
GL_LUMINANCE12	SDL_opengl.h	/^#define GL_LUMINANCE12	/;"	kind:d
GL_LUMINANCE12_ALPHA12	SDL_opengl.h	/^#define GL_LUMINANCE12_ALPHA12	/;"	kind:d
GL_LUMINANCE12_ALPHA12_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE12_ALPHA12_EXT /;"	kind:d
GL_LUMINANCE12_ALPHA4	SDL_opengl.h	/^#define GL_LUMINANCE12_ALPHA4	/;"	kind:d
GL_LUMINANCE12_ALPHA4_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE12_ALPHA4_EXT /;"	kind:d
GL_LUMINANCE12_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE12_EXT /;"	kind:d
GL_LUMINANCE16	SDL_opengl.h	/^#define GL_LUMINANCE16	/;"	kind:d
GL_LUMINANCE16F_ARB	SDL_opengl_glext.h	/^#define GL_LUMINANCE16F_ARB /;"	kind:d
GL_LUMINANCE16F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE16F_EXT /;"	kind:d
GL_LUMINANCE16I_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE16I_EXT /;"	kind:d
GL_LUMINANCE16UI_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE16UI_EXT /;"	kind:d
GL_LUMINANCE16_ALPHA16	SDL_opengl.h	/^#define GL_LUMINANCE16_ALPHA16	/;"	kind:d
GL_LUMINANCE16_ALPHA16_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE16_ALPHA16_EXT /;"	kind:d
GL_LUMINANCE16_ALPHA16_SNORM	SDL_opengl_glext.h	/^#define GL_LUMINANCE16_ALPHA16_SNORM /;"	kind:d
GL_LUMINANCE16_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE16_EXT /;"	kind:d
GL_LUMINANCE16_SNORM	SDL_opengl_glext.h	/^#define GL_LUMINANCE16_SNORM /;"	kind:d
GL_LUMINANCE32F_ARB	SDL_opengl_glext.h	/^#define GL_LUMINANCE32F_ARB /;"	kind:d
GL_LUMINANCE32F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE32F_EXT /;"	kind:d
GL_LUMINANCE32I_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE32I_EXT /;"	kind:d
GL_LUMINANCE32UI_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE32UI_EXT /;"	kind:d
GL_LUMINANCE4	SDL_opengl.h	/^#define GL_LUMINANCE4	/;"	kind:d
GL_LUMINANCE4_ALPHA4	SDL_opengl.h	/^#define GL_LUMINANCE4_ALPHA4	/;"	kind:d
GL_LUMINANCE4_ALPHA4_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE4_ALPHA4_EXT /;"	kind:d
GL_LUMINANCE4_ALPHA4_OES	SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE4_ALPHA4_OES /;"	kind:d
GL_LUMINANCE4_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE4_EXT /;"	kind:d
GL_LUMINANCE6_ALPHA2	SDL_opengl.h	/^#define GL_LUMINANCE6_ALPHA2	/;"	kind:d
GL_LUMINANCE6_ALPHA2_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE6_ALPHA2_EXT /;"	kind:d
GL_LUMINANCE8	SDL_opengl.h	/^#define GL_LUMINANCE8	/;"	kind:d
GL_LUMINANCE8I_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE8I_EXT /;"	kind:d
GL_LUMINANCE8UI_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE8UI_EXT /;"	kind:d
GL_LUMINANCE8_ALPHA8	SDL_opengl.h	/^#define GL_LUMINANCE8_ALPHA8	/;"	kind:d
GL_LUMINANCE8_ALPHA8_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE8_ALPHA8_EXT /;"	kind:d
GL_LUMINANCE8_ALPHA8_EXT	SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE8_ALPHA8_EXT /;"	kind:d
GL_LUMINANCE8_ALPHA8_OES	SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE8_ALPHA8_OES /;"	kind:d
GL_LUMINANCE8_ALPHA8_SNORM	SDL_opengl_glext.h	/^#define GL_LUMINANCE8_ALPHA8_SNORM /;"	kind:d
GL_LUMINANCE8_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE8_EXT /;"	kind:d
GL_LUMINANCE8_EXT	SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE8_EXT /;"	kind:d
GL_LUMINANCE8_OES	SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE8_OES /;"	kind:d
GL_LUMINANCE8_SNORM	SDL_opengl_glext.h	/^#define GL_LUMINANCE8_SNORM /;"	kind:d
GL_LUMINANCE_ALPHA	SDL_opengl.h	/^#define GL_LUMINANCE_ALPHA	/;"	kind:d
GL_LUMINANCE_ALPHA	SDL_opengles2_gl2.h	/^#define GL_LUMINANCE_ALPHA /;"	kind:d
GL_LUMINANCE_ALPHA16F_ARB	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA16F_ARB /;"	kind:d
GL_LUMINANCE_ALPHA16F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE_ALPHA16F_EXT /;"	kind:d
GL_LUMINANCE_ALPHA16I_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA16I_EXT /;"	kind:d
GL_LUMINANCE_ALPHA16UI_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA16UI_EXT /;"	kind:d
GL_LUMINANCE_ALPHA32F_ARB	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA32F_ARB /;"	kind:d
GL_LUMINANCE_ALPHA32F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_LUMINANCE_ALPHA32F_EXT /;"	kind:d
GL_LUMINANCE_ALPHA32I_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA32I_EXT /;"	kind:d
GL_LUMINANCE_ALPHA32UI_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA32UI_EXT /;"	kind:d
GL_LUMINANCE_ALPHA8I_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA8I_EXT /;"	kind:d
GL_LUMINANCE_ALPHA8UI_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA8UI_EXT /;"	kind:d
GL_LUMINANCE_ALPHA_FLOAT16_APPLE	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE /;"	kind:d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_ATI /;"	kind:d
GL_LUMINANCE_ALPHA_FLOAT32_APPLE	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE /;"	kind:d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_ATI /;"	kind:d
GL_LUMINANCE_ALPHA_INTEGER_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA_INTEGER_EXT /;"	kind:d
GL_LUMINANCE_ALPHA_SNORM	SDL_opengl_glext.h	/^#define GL_LUMINANCE_ALPHA_SNORM /;"	kind:d
GL_LUMINANCE_FLOAT16_APPLE	SDL_opengl_glext.h	/^#define GL_LUMINANCE_FLOAT16_APPLE /;"	kind:d
GL_LUMINANCE_FLOAT16_ATI	SDL_opengl_glext.h	/^#define GL_LUMINANCE_FLOAT16_ATI /;"	kind:d
GL_LUMINANCE_FLOAT32_APPLE	SDL_opengl_glext.h	/^#define GL_LUMINANCE_FLOAT32_APPLE /;"	kind:d
GL_LUMINANCE_FLOAT32_ATI	SDL_opengl_glext.h	/^#define GL_LUMINANCE_FLOAT32_ATI /;"	kind:d
GL_LUMINANCE_INTEGER_EXT	SDL_opengl_glext.h	/^#define GL_LUMINANCE_INTEGER_EXT /;"	kind:d
GL_LUMINANCE_SNORM	SDL_opengl_glext.h	/^#define GL_LUMINANCE_SNORM /;"	kind:d
GL_MAD_ATI	SDL_opengl_glext.h	/^#define GL_MAD_ATI /;"	kind:d
GL_MAGNITUDE_BIAS_NV	SDL_opengl_glext.h	/^#define GL_MAGNITUDE_BIAS_NV /;"	kind:d
GL_MAGNITUDE_SCALE_NV	SDL_opengl_glext.h	/^#define GL_MAGNITUDE_SCALE_NV /;"	kind:d
GL_MAJOR_VERSION	SDL_opengl_glext.h	/^#define GL_MAJOR_VERSION /;"	kind:d
GL_MALI_PROGRAM_BINARY_ARM	SDL_opengles2_gl2ext.h	/^#define GL_MALI_PROGRAM_BINARY_ARM /;"	kind:d
GL_MALI_SHADER_BINARY_ARM	SDL_opengles2_gl2ext.h	/^#define GL_MALI_SHADER_BINARY_ARM /;"	kind:d
GL_MANUAL_GENERATE_MIPMAP	SDL_opengl_glext.h	/^#define GL_MANUAL_GENERATE_MIPMAP /;"	kind:d
GL_MAP1_BINORMAL_EXT	SDL_opengl_glext.h	/^#define GL_MAP1_BINORMAL_EXT /;"	kind:d
GL_MAP1_COLOR_4	SDL_opengl.h	/^#define GL_MAP1_COLOR_4	/;"	kind:d
GL_MAP1_GRID_DOMAIN	SDL_opengl.h	/^#define GL_MAP1_GRID_DOMAIN	/;"	kind:d
GL_MAP1_GRID_SEGMENTS	SDL_opengl.h	/^#define GL_MAP1_GRID_SEGMENTS	/;"	kind:d
GL_MAP1_INDEX	SDL_opengl.h	/^#define GL_MAP1_INDEX	/;"	kind:d
GL_MAP1_NORMAL	SDL_opengl.h	/^#define GL_MAP1_NORMAL	/;"	kind:d
GL_MAP1_TANGENT_EXT	SDL_opengl_glext.h	/^#define GL_MAP1_TANGENT_EXT /;"	kind:d
GL_MAP1_TEXTURE_COORD_1	SDL_opengl.h	/^#define GL_MAP1_TEXTURE_COORD_1	/;"	kind:d
GL_MAP1_TEXTURE_COORD_2	SDL_opengl.h	/^#define GL_MAP1_TEXTURE_COORD_2	/;"	kind:d
GL_MAP1_TEXTURE_COORD_3	SDL_opengl.h	/^#define GL_MAP1_TEXTURE_COORD_3	/;"	kind:d
GL_MAP1_TEXTURE_COORD_4	SDL_opengl.h	/^#define GL_MAP1_TEXTURE_COORD_4	/;"	kind:d
GL_MAP1_VERTEX_3	SDL_opengl.h	/^#define GL_MAP1_VERTEX_3	/;"	kind:d
GL_MAP1_VERTEX_4	SDL_opengl.h	/^#define GL_MAP1_VERTEX_4	/;"	kind:d
GL_MAP1_VERTEX_ATTRIB0_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB0_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB10_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB10_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB11_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB11_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB12_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB12_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB13_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB13_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB14_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB14_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB15_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB15_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB1_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB1_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB2_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB2_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB3_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB3_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB4_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB4_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB5_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB5_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB6_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB6_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB7_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB7_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB8_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB8_4_NV /;"	kind:d
GL_MAP1_VERTEX_ATTRIB9_4_NV	SDL_opengl_glext.h	/^#define GL_MAP1_VERTEX_ATTRIB9_4_NV /;"	kind:d
GL_MAP2_BINORMAL_EXT	SDL_opengl_glext.h	/^#define GL_MAP2_BINORMAL_EXT /;"	kind:d
GL_MAP2_COLOR_4	SDL_opengl.h	/^#define GL_MAP2_COLOR_4	/;"	kind:d
GL_MAP2_GRID_DOMAIN	SDL_opengl.h	/^#define GL_MAP2_GRID_DOMAIN	/;"	kind:d
GL_MAP2_GRID_SEGMENTS	SDL_opengl.h	/^#define GL_MAP2_GRID_SEGMENTS	/;"	kind:d
GL_MAP2_INDEX	SDL_opengl.h	/^#define GL_MAP2_INDEX	/;"	kind:d
GL_MAP2_NORMAL	SDL_opengl.h	/^#define GL_MAP2_NORMAL	/;"	kind:d
GL_MAP2_TANGENT_EXT	SDL_opengl_glext.h	/^#define GL_MAP2_TANGENT_EXT /;"	kind:d
GL_MAP2_TEXTURE_COORD_1	SDL_opengl.h	/^#define GL_MAP2_TEXTURE_COORD_1	/;"	kind:d
GL_MAP2_TEXTURE_COORD_2	SDL_opengl.h	/^#define GL_MAP2_TEXTURE_COORD_2	/;"	kind:d
GL_MAP2_TEXTURE_COORD_3	SDL_opengl.h	/^#define GL_MAP2_TEXTURE_COORD_3	/;"	kind:d
GL_MAP2_TEXTURE_COORD_4	SDL_opengl.h	/^#define GL_MAP2_TEXTURE_COORD_4	/;"	kind:d
GL_MAP2_VERTEX_3	SDL_opengl.h	/^#define GL_MAP2_VERTEX_3	/;"	kind:d
GL_MAP2_VERTEX_4	SDL_opengl.h	/^#define GL_MAP2_VERTEX_4	/;"	kind:d
GL_MAP2_VERTEX_ATTRIB0_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB0_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB10_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB10_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB11_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB11_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB12_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB12_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB13_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB13_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB14_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB14_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB15_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB15_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB1_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB1_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB2_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB2_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB3_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB3_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB4_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB4_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB5_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB5_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB6_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB6_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB7_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB7_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB8_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB8_4_NV /;"	kind:d
GL_MAP2_VERTEX_ATTRIB9_4_NV	SDL_opengl_glext.h	/^#define GL_MAP2_VERTEX_ATTRIB9_4_NV /;"	kind:d
GL_MAP_ATTRIB_U_ORDER_NV	SDL_opengl_glext.h	/^#define GL_MAP_ATTRIB_U_ORDER_NV /;"	kind:d
GL_MAP_ATTRIB_V_ORDER_NV	SDL_opengl_glext.h	/^#define GL_MAP_ATTRIB_V_ORDER_NV /;"	kind:d
GL_MAP_COHERENT_BIT	SDL_opengl_glext.h	/^#define GL_MAP_COHERENT_BIT /;"	kind:d
GL_MAP_COLOR	SDL_opengl.h	/^#define GL_MAP_COLOR	/;"	kind:d
GL_MAP_FLUSH_EXPLICIT_BIT	SDL_opengl_glext.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT /;"	kind:d
GL_MAP_FLUSH_EXPLICIT_BIT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT_EXT /;"	kind:d
GL_MAP_INVALIDATE_BUFFER_BIT	SDL_opengl_glext.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT /;"	kind:d
GL_MAP_INVALIDATE_BUFFER_BIT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT_EXT /;"	kind:d
GL_MAP_INVALIDATE_RANGE_BIT	SDL_opengl_glext.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT /;"	kind:d
GL_MAP_INVALIDATE_RANGE_BIT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT_EXT /;"	kind:d
GL_MAP_PERSISTENT_BIT	SDL_opengl_glext.h	/^#define GL_MAP_PERSISTENT_BIT /;"	kind:d
GL_MAP_READ_BIT	SDL_opengl_glext.h	/^#define GL_MAP_READ_BIT /;"	kind:d
GL_MAP_READ_BIT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MAP_READ_BIT_EXT /;"	kind:d
GL_MAP_STENCIL	SDL_opengl.h	/^#define GL_MAP_STENCIL	/;"	kind:d
GL_MAP_TESSELLATION_NV	SDL_opengl_glext.h	/^#define GL_MAP_TESSELLATION_NV /;"	kind:d
GL_MAP_UNSYNCHRONIZED_BIT	SDL_opengl_glext.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT /;"	kind:d
GL_MAP_UNSYNCHRONIZED_BIT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT_EXT /;"	kind:d
GL_MAP_WRITE_BIT	SDL_opengl_glext.h	/^#define GL_MAP_WRITE_BIT /;"	kind:d
GL_MAP_WRITE_BIT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MAP_WRITE_BIT_EXT /;"	kind:d
GL_MATERIAL_SIDE_HINT_PGI	SDL_opengl_glext.h	/^#define GL_MATERIAL_SIDE_HINT_PGI /;"	kind:d
GL_MATRIX0_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX0_ARB /;"	kind:d
GL_MATRIX0_NV	SDL_opengl_glext.h	/^#define GL_MATRIX0_NV /;"	kind:d
GL_MATRIX10_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX10_ARB /;"	kind:d
GL_MATRIX11_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX11_ARB /;"	kind:d
GL_MATRIX12_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX12_ARB /;"	kind:d
GL_MATRIX13_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX13_ARB /;"	kind:d
GL_MATRIX14_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX14_ARB /;"	kind:d
GL_MATRIX15_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX15_ARB /;"	kind:d
GL_MATRIX16_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX16_ARB /;"	kind:d
GL_MATRIX17_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX17_ARB /;"	kind:d
GL_MATRIX18_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX18_ARB /;"	kind:d
GL_MATRIX19_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX19_ARB /;"	kind:d
GL_MATRIX1_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX1_ARB /;"	kind:d
GL_MATRIX1_NV	SDL_opengl_glext.h	/^#define GL_MATRIX1_NV /;"	kind:d
GL_MATRIX20_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX20_ARB /;"	kind:d
GL_MATRIX21_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX21_ARB /;"	kind:d
GL_MATRIX22_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX22_ARB /;"	kind:d
GL_MATRIX23_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX23_ARB /;"	kind:d
GL_MATRIX24_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX24_ARB /;"	kind:d
GL_MATRIX25_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX25_ARB /;"	kind:d
GL_MATRIX26_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX26_ARB /;"	kind:d
GL_MATRIX27_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX27_ARB /;"	kind:d
GL_MATRIX28_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX28_ARB /;"	kind:d
GL_MATRIX29_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX29_ARB /;"	kind:d
GL_MATRIX2_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX2_ARB /;"	kind:d
GL_MATRIX2_NV	SDL_opengl_glext.h	/^#define GL_MATRIX2_NV /;"	kind:d
GL_MATRIX30_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX30_ARB /;"	kind:d
GL_MATRIX31_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX31_ARB /;"	kind:d
GL_MATRIX3_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX3_ARB /;"	kind:d
GL_MATRIX3_NV	SDL_opengl_glext.h	/^#define GL_MATRIX3_NV /;"	kind:d
GL_MATRIX4_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX4_ARB /;"	kind:d
GL_MATRIX4_NV	SDL_opengl_glext.h	/^#define GL_MATRIX4_NV /;"	kind:d
GL_MATRIX5_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX5_ARB /;"	kind:d
GL_MATRIX5_NV	SDL_opengl_glext.h	/^#define GL_MATRIX5_NV /;"	kind:d
GL_MATRIX6_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX6_ARB /;"	kind:d
GL_MATRIX6_NV	SDL_opengl_glext.h	/^#define GL_MATRIX6_NV /;"	kind:d
GL_MATRIX7_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX7_ARB /;"	kind:d
GL_MATRIX7_NV	SDL_opengl_glext.h	/^#define GL_MATRIX7_NV /;"	kind:d
GL_MATRIX8_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX8_ARB /;"	kind:d
GL_MATRIX9_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX9_ARB /;"	kind:d
GL_MATRIX_EXT	SDL_opengl_glext.h	/^#define GL_MATRIX_EXT /;"	kind:d
GL_MATRIX_INDEX_ARRAY_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX_INDEX_ARRAY_ARB /;"	kind:d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB /;"	kind:d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB /;"	kind:d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB /;"	kind:d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB /;"	kind:d
GL_MATRIX_MODE	SDL_opengl.h	/^#define GL_MATRIX_MODE	/;"	kind:d
GL_MATRIX_PALETTE_ARB	SDL_opengl_glext.h	/^#define GL_MATRIX_PALETTE_ARB /;"	kind:d
GL_MATRIX_STRIDE	SDL_opengl_glext.h	/^#define GL_MATRIX_STRIDE /;"	kind:d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	SDL_opengl_glext.h	/^#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI /;"	kind:d
GL_MAT_AMBIENT_BIT_PGI	SDL_opengl_glext.h	/^#define GL_MAT_AMBIENT_BIT_PGI /;"	kind:d
GL_MAT_COLOR_INDEXES_BIT_PGI	SDL_opengl_glext.h	/^#define GL_MAT_COLOR_INDEXES_BIT_PGI /;"	kind:d
GL_MAT_DIFFUSE_BIT_PGI	SDL_opengl_glext.h	/^#define GL_MAT_DIFFUSE_BIT_PGI /;"	kind:d
GL_MAT_EMISSION_BIT_PGI	SDL_opengl_glext.h	/^#define GL_MAT_EMISSION_BIT_PGI /;"	kind:d
GL_MAT_SHININESS_BIT_PGI	SDL_opengl_glext.h	/^#define GL_MAT_SHININESS_BIT_PGI /;"	kind:d
GL_MAT_SPECULAR_BIT_PGI	SDL_opengl_glext.h	/^#define GL_MAT_SPECULAR_BIT_PGI /;"	kind:d
GL_MAX	SDL_opengl.h	/^#define GL_MAX	/;"	kind:d
GL_MAX	SDL_opengl_glext.h	/^#define GL_MAX /;"	kind:d
GL_MAX_3D_TEXTURE_SIZE	SDL_opengl.h	/^#define GL_MAX_3D_TEXTURE_SIZE	/;"	kind:d
GL_MAX_3D_TEXTURE_SIZE	SDL_opengl_glext.h	/^#define GL_MAX_3D_TEXTURE_SIZE /;"	kind:d
GL_MAX_3D_TEXTURE_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_MAX_3D_TEXTURE_SIZE_EXT /;"	kind:d
GL_MAX_3D_TEXTURE_SIZE_OES	SDL_opengles2_gl2ext.h	/^#define GL_MAX_3D_TEXTURE_SIZE_OES /;"	kind:d
GL_MAX_4D_TEXTURE_SIZE_SGIS	SDL_opengl_glext.h	/^#define GL_MAX_4D_TEXTURE_SIZE_SGIS /;"	kind:d
GL_MAX_ACTIVE_LIGHTS_SGIX	SDL_opengl_glext.h	/^#define GL_MAX_ACTIVE_LIGHTS_SGIX /;"	kind:d
GL_MAX_ARRAY_TEXTURE_LAYERS	SDL_opengl_glext.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	kind:d
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT /;"	kind:d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	SDL_opengl_glext.h	/^#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX /;"	kind:d
GL_MAX_ASYNC_HISTOGRAM_SGIX	SDL_opengl_glext.h	/^#define GL_MAX_ASYNC_HISTOGRAM_SGIX /;"	kind:d
GL_MAX_ASYNC_READ_PIXELS_SGIX	SDL_opengl_glext.h	/^#define GL_MAX_ASYNC_READ_PIXELS_SGIX /;"	kind:d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	SDL_opengl_glext.h	/^#define GL_MAX_ASYNC_TEX_IMAGE_SGIX /;"	kind:d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	SDL_opengl_glext.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS /;"	kind:d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	SDL_opengl_glext.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE /;"	kind:d
GL_MAX_ATTRIB_STACK_DEPTH	SDL_opengl.h	/^#define GL_MAX_ATTRIB_STACK_DEPTH	/;"	kind:d
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT /;"	kind:d
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH	SDL_opengl.h	/^#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH	/;"	kind:d
GL_MAX_CLIPMAP_DEPTH_SGIX	SDL_opengl_glext.h	/^#define GL_MAX_CLIPMAP_DEPTH_SGIX /;"	kind:d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	SDL_opengl_glext.h	/^#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX /;"	kind:d
GL_MAX_CLIP_DISTANCES	SDL_opengl_glext.h	/^#define GL_MAX_CLIP_DISTANCES /;"	kind:d
GL_MAX_CLIP_PLANES	SDL_opengl.h	/^#define GL_MAX_CLIP_PLANES	/;"	kind:d
GL_MAX_COLOR_ATTACHMENTS	SDL_opengl_glext.h	/^#define GL_MAX_COLOR_ATTACHMENTS /;"	kind:d
GL_MAX_COLOR_ATTACHMENTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_COLOR_ATTACHMENTS_EXT /;"	kind:d
GL_MAX_COLOR_ATTACHMENTS_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MAX_COLOR_ATTACHMENTS_EXT /;"	kind:d
GL_MAX_COLOR_ATTACHMENTS_NV	SDL_opengles2_gl2ext.h	/^#define GL_MAX_COLOR_ATTACHMENTS_NV /;"	kind:d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	SDL_opengl.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH	/;"	kind:d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	SDL_opengl_glext.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH /;"	kind:d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	SDL_opengl_glext.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI /;"	kind:d
GL_MAX_COLOR_TEXTURE_SAMPLES	SDL_opengl_glext.h	/^#define GL_MAX_COLOR_TEXTURE_SAMPLES /;"	kind:d
GL_MAX_COMBINED_ATOMIC_COUNTERS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTERS /;"	kind:d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS /;"	kind:d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS /;"	kind:d
GL_MAX_COMBINED_DIMENSIONS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_DIMENSIONS /;"	kind:d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS /;"	kind:d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS /;"	kind:d
GL_MAX_COMBINED_IMAGE_UNIFORMS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNIFORMS /;"	kind:d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS /;"	kind:d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT /;"	kind:d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES /;"	kind:d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS /;"	kind:d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS /;"	kind:d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	kind:d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	kind:d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	SDL_opengles2_gl2.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	kind:d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB /;"	kind:d
GL_MAX_COMBINED_UNIFORM_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_UNIFORM_BLOCKS /;"	kind:d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS /;"	kind:d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTERS /;"	kind:d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS /;"	kind:d
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB /;"	kind:d
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB /;"	kind:d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_IMAGE_UNIFORMS /;"	kind:d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS /;"	kind:d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE /;"	kind:d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS /;"	kind:d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_UNIFORM_BLOCKS /;"	kind:d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS /;"	kind:d
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB /;"	kind:d
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB /;"	kind:d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_COUNT /;"	kind:d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS /;"	kind:d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	SDL_opengl_glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_SIZE /;"	kind:d
GL_MAX_CONVOLUTION_HEIGHT	SDL_opengl.h	/^#define GL_MAX_CONVOLUTION_HEIGHT	/;"	kind:d
GL_MAX_CONVOLUTION_HEIGHT	SDL_opengl_glext.h	/^#define GL_MAX_CONVOLUTION_HEIGHT /;"	kind:d
GL_MAX_CONVOLUTION_HEIGHT_EXT	SDL_opengl_glext.h	/^#define GL_MAX_CONVOLUTION_HEIGHT_EXT /;"	kind:d
GL_MAX_CONVOLUTION_WIDTH	SDL_opengl.h	/^#define GL_MAX_CONVOLUTION_WIDTH	/;"	kind:d
GL_MAX_CONVOLUTION_WIDTH	SDL_opengl_glext.h	/^#define GL_MAX_CONVOLUTION_WIDTH /;"	kind:d
GL_MAX_CONVOLUTION_WIDTH_EXT	SDL_opengl_glext.h	/^#define GL_MAX_CONVOLUTION_WIDTH_EXT /;"	kind:d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	SDL_opengl.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE	/;"	kind:d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	SDL_opengl_glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	kind:d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	SDL_opengles2_gl2.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	kind:d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB /;"	kind:d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT /;"	kind:d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH /;"	kind:d
GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR	SDL_opengles2_gl2ext.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR /;"	kind:d
GL_MAX_DEBUG_LOGGED_MESSAGES	SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES /;"	kind:d
GL_MAX_DEBUG_LOGGED_MESSAGES_AMD	SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD /;"	kind:d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB /;"	kind:d
GL_MAX_DEBUG_LOGGED_MESSAGES_KHR	SDL_opengles2_gl2ext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_KHR /;"	kind:d
GL_MAX_DEBUG_MESSAGE_LENGTH	SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH /;"	kind:d
GL_MAX_DEBUG_MESSAGE_LENGTH_AMD	SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD /;"	kind:d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	SDL_opengl_glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB /;"	kind:d
GL_MAX_DEBUG_MESSAGE_LENGTH_KHR	SDL_opengles2_gl2ext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_KHR /;"	kind:d
GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV	SDL_opengl_glext.h	/^#define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV /;"	kind:d
GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV	SDL_opengl_glext.h	/^#define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV /;"	kind:d
GL_MAX_DEFORMATION_ORDER_SGIX	SDL_opengl_glext.h	/^#define GL_MAX_DEFORMATION_ORDER_SGIX /;"	kind:d
GL_MAX_DEPTH	SDL_opengl_glext.h	/^#define GL_MAX_DEPTH /;"	kind:d
GL_MAX_DEPTH_TEXTURE_SAMPLES	SDL_opengl_glext.h	/^#define GL_MAX_DEPTH_TEXTURE_SAMPLES /;"	kind:d
GL_MAX_DRAW_BUFFERS	SDL_opengl_glext.h	/^#define GL_MAX_DRAW_BUFFERS /;"	kind:d
GL_MAX_DRAW_BUFFERS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_DRAW_BUFFERS_ARB /;"	kind:d
GL_MAX_DRAW_BUFFERS_ATI	SDL_opengl_glext.h	/^#define GL_MAX_DRAW_BUFFERS_ATI /;"	kind:d
GL_MAX_DRAW_BUFFERS_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MAX_DRAW_BUFFERS_EXT /;"	kind:d
GL_MAX_DRAW_BUFFERS_NV	SDL_opengles2_gl2ext.h	/^#define GL_MAX_DRAW_BUFFERS_NV /;"	kind:d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	SDL_opengl_glext.h	/^#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS /;"	kind:d
GL_MAX_ELEMENTS_INDICES	SDL_opengl.h	/^#define GL_MAX_ELEMENTS_INDICES	/;"	kind:d
GL_MAX_ELEMENTS_INDICES	SDL_opengl_glext.h	/^#define GL_MAX_ELEMENTS_INDICES /;"	kind:d
GL_MAX_ELEMENTS_INDICES_EXT	SDL_opengl_glext.h	/^#define GL_MAX_ELEMENTS_INDICES_EXT /;"	kind:d
GL_MAX_ELEMENTS_VERTICES	SDL_opengl.h	/^#define GL_MAX_ELEMENTS_VERTICES	/;"	kind:d
GL_MAX_ELEMENTS_VERTICES	SDL_opengl_glext.h	/^#define GL_MAX_ELEMENTS_VERTICES /;"	kind:d
GL_MAX_ELEMENTS_VERTICES_EXT	SDL_opengl_glext.h	/^#define GL_MAX_ELEMENTS_VERTICES_EXT /;"	kind:d
GL_MAX_ELEMENT_INDEX	SDL_opengl_glext.h	/^#define GL_MAX_ELEMENT_INDEX /;"	kind:d
GL_MAX_EVAL_ORDER	SDL_opengl.h	/^#define GL_MAX_EVAL_ORDER	/;"	kind:d
GL_MAX_EXT	SDL_opengl_glext.h	/^#define GL_MAX_EXT /;"	kind:d
GL_MAX_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MAX_EXT /;"	kind:d
GL_MAX_FOG_FUNC_POINTS_SGIS	SDL_opengl_glext.h	/^#define GL_MAX_FOG_FUNC_POINTS_SGIS /;"	kind:d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS /;"	kind:d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS /;"	kind:d
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT /;"	kind:d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS /;"	kind:d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_INPUT_COMPONENTS /;"	kind:d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET /;"	kind:d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	kind:d
GL_MAX_FRAGMENT_LIGHTS_SGIX	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_LIGHTS_SGIX /;"	kind:d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV /;"	kind:d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS /;"	kind:d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS /;"	kind:d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	kind:d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB /;"	kind:d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	SDL_opengl_glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_VECTORS /;"	kind:d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	SDL_opengles2_gl2.h	/^#define GL_MAX_FRAGMENT_UNIFORM_VECTORS /;"	kind:d
GL_MAX_FRAMEBUFFER_HEIGHT	SDL_opengl_glext.h	/^#define GL_MAX_FRAMEBUFFER_HEIGHT /;"	kind:d
GL_MAX_FRAMEBUFFER_LAYERS	SDL_opengl_glext.h	/^#define GL_MAX_FRAMEBUFFER_LAYERS /;"	kind:d
GL_MAX_FRAMEBUFFER_SAMPLES	SDL_opengl_glext.h	/^#define GL_MAX_FRAMEBUFFER_SAMPLES /;"	kind:d
GL_MAX_FRAMEBUFFER_WIDTH	SDL_opengl_glext.h	/^#define GL_MAX_FRAMEBUFFER_WIDTH /;"	kind:d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	SDL_opengl_glext.h	/^#define GL_MAX_FRAMEZOOM_FACTOR_SGIX /;"	kind:d
GL_MAX_GENERAL_COMBINERS_NV	SDL_opengl_glext.h	/^#define GL_MAX_GENERAL_COMBINERS_NV /;"	kind:d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS /;"	kind:d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS /;"	kind:d
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT /;"	kind:d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS /;"	kind:d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS /;"	kind:d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS /;"	kind:d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES /;"	kind:d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB /;"	kind:d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT /;"	kind:d
GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV /;"	kind:d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS /;"	kind:d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS /;"	kind:d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS /;"	kind:d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB /;"	kind:d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT /;"	kind:d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS /;"	kind:d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB /;"	kind:d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT /;"	kind:d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS /;"	kind:d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS /;"	kind:d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB /;"	kind:d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT /;"	kind:d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB /;"	kind:d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT /;"	kind:d
GL_MAX_HEIGHT	SDL_opengl_glext.h	/^#define GL_MAX_HEIGHT /;"	kind:d
GL_MAX_IMAGE_SAMPLES	SDL_opengl_glext.h	/^#define GL_MAX_IMAGE_SAMPLES /;"	kind:d
GL_MAX_IMAGE_SAMPLES_EXT	SDL_opengl_glext.h	/^#define GL_MAX_IMAGE_SAMPLES_EXT /;"	kind:d
GL_MAX_IMAGE_UNITS	SDL_opengl_glext.h	/^#define GL_MAX_IMAGE_UNITS /;"	kind:d
GL_MAX_IMAGE_UNITS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_IMAGE_UNITS_EXT /;"	kind:d
GL_MAX_INTEGER_SAMPLES	SDL_opengl_glext.h	/^#define GL_MAX_INTEGER_SAMPLES /;"	kind:d
GL_MAX_LABEL_LENGTH	SDL_opengl_glext.h	/^#define GL_MAX_LABEL_LENGTH /;"	kind:d
GL_MAX_LABEL_LENGTH_KHR	SDL_opengles2_gl2ext.h	/^#define GL_MAX_LABEL_LENGTH_KHR /;"	kind:d
GL_MAX_LAYERS	SDL_opengl_glext.h	/^#define GL_MAX_LAYERS /;"	kind:d
GL_MAX_LIGHTS	SDL_opengl.h	/^#define GL_MAX_LIGHTS	/;"	kind:d
GL_MAX_LIST_NESTING	SDL_opengl.h	/^#define GL_MAX_LIST_NESTING	/;"	kind:d
GL_MAX_MAP_TESSELLATION_NV	SDL_opengl_glext.h	/^#define GL_MAX_MAP_TESSELLATION_NV /;"	kind:d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	SDL_opengl_glext.h	/^#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB /;"	kind:d
GL_MAX_MODELVIEW_STACK_DEPTH	SDL_opengl.h	/^#define GL_MAX_MODELVIEW_STACK_DEPTH	/;"	kind:d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	SDL_opengl_glext.h	/^#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV /;"	kind:d
GL_MAX_MULTIVIEW_BUFFERS_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MAX_MULTIVIEW_BUFFERS_EXT /;"	kind:d
GL_MAX_NAME_LENGTH	SDL_opengl_glext.h	/^#define GL_MAX_NAME_LENGTH /;"	kind:d
GL_MAX_NAME_STACK_DEPTH	SDL_opengl.h	/^#define GL_MAX_NAME_STACK_DEPTH	/;"	kind:d
GL_MAX_NUM_ACTIVE_VARIABLES	SDL_opengl_glext.h	/^#define GL_MAX_NUM_ACTIVE_VARIABLES /;"	kind:d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	SDL_opengl_glext.h	/^#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES /;"	kind:d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	kind:d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT /;"	kind:d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT /;"	kind:d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	kind:d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT /;"	kind:d
GL_MAX_PALETTE_MATRICES_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PALETTE_MATRICES_ARB /;"	kind:d
GL_MAX_PATCH_VERTICES	SDL_opengl_glext.h	/^#define GL_MAX_PATCH_VERTICES /;"	kind:d
GL_MAX_PIXEL_MAP_TABLE	SDL_opengl.h	/^#define GL_MAX_PIXEL_MAP_TABLE	/;"	kind:d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	SDL_opengl_glext.h	/^#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	kind:d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	SDL_opengl_glext.h	/^#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	kind:d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB /;"	kind:d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	kind:d
GL_MAX_PROGRAM_ATTRIBS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_ATTRIBS_ARB /;"	kind:d
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV /;"	kind:d
GL_MAX_PROGRAM_CALL_DEPTH_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_CALL_DEPTH_NV /;"	kind:d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB /;"	kind:d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV /;"	kind:d
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV /;"	kind:d
GL_MAX_PROGRAM_GENERIC_RESULTS_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV /;"	kind:d
GL_MAX_PROGRAM_IF_DEPTH_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_IF_DEPTH_NV /;"	kind:d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB /;"	kind:d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB /;"	kind:d
GL_MAX_PROGRAM_LOOP_COUNT_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_LOOP_COUNT_NV /;"	kind:d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_LOOP_DEPTH_NV /;"	kind:d
GL_MAX_PROGRAM_MATRICES_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_MATRICES_ARB /;"	kind:d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB /;"	kind:d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	kind:d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	kind:d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB /;"	kind:d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	kind:d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB /;"	kind:d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	kind:d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	kind:d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	kind:d
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV /;"	kind:d
GL_MAX_PROGRAM_PARAMETERS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_PARAMETERS_ARB /;"	kind:d
GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV /;"	kind:d
GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV /;"	kind:d
GL_MAX_PROGRAM_PATCH_ATTRIBS_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV /;"	kind:d
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV /;"	kind:d
GL_MAX_PROGRAM_SUBROUTINE_NUM_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV /;"	kind:d
GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV /;"	kind:d
GL_MAX_PROGRAM_TEMPORARIES_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEMPORARIES_ARB /;"	kind:d
GL_MAX_PROGRAM_TEXEL_OFFSET	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET /;"	kind:d
GL_MAX_PROGRAM_TEXEL_OFFSET_EXT	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT /;"	kind:d
GL_MAX_PROGRAM_TEXEL_OFFSET_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV /;"	kind:d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB /;"	kind:d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET /;"	kind:d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	kind:d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	kind:d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB /;"	kind:d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	kind:d
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV	SDL_opengl_glext.h	/^#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV /;"	kind:d
GL_MAX_PROJECTION_STACK_DEPTH	SDL_opengl.h	/^#define GL_MAX_PROJECTION_STACK_DEPTH	/;"	kind:d
GL_MAX_RATIONAL_EVAL_ORDER_NV	SDL_opengl_glext.h	/^#define GL_MAX_RATIONAL_EVAL_ORDER_NV /;"	kind:d
GL_MAX_RECTANGLE_TEXTURE_SIZE	SDL_opengl_glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE /;"	kind:d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB /;"	kind:d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	SDL_opengl_glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV /;"	kind:d
GL_MAX_RENDERBUFFER_SIZE	SDL_opengl_glext.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	kind:d
GL_MAX_RENDERBUFFER_SIZE	SDL_opengles2_gl2.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	kind:d
GL_MAX_RENDERBUFFER_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_MAX_RENDERBUFFER_SIZE_EXT /;"	kind:d
GL_MAX_SAMPLES	SDL_opengl_glext.h	/^#define GL_MAX_SAMPLES /;"	kind:d
GL_MAX_SAMPLES_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_MAX_SAMPLES_ANGLE /;"	kind:d
GL_MAX_SAMPLES_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_MAX_SAMPLES_APPLE /;"	kind:d
GL_MAX_SAMPLES_EXT	SDL_opengl_glext.h	/^#define GL_MAX_SAMPLES_EXT /;"	kind:d
GL_MAX_SAMPLES_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MAX_SAMPLES_EXT /;"	kind:d
GL_MAX_SAMPLES_IMG	SDL_opengles2_gl2ext.h	/^#define GL_MAX_SAMPLES_IMG /;"	kind:d
GL_MAX_SAMPLES_NV	SDL_opengles2_gl2ext.h	/^#define GL_MAX_SAMPLES_NV /;"	kind:d
GL_MAX_SAMPLE_MASK_WORDS	SDL_opengl_glext.h	/^#define GL_MAX_SAMPLE_MASK_WORDS /;"	kind:d
GL_MAX_SAMPLE_MASK_WORDS_NV	SDL_opengl_glext.h	/^#define GL_MAX_SAMPLE_MASK_WORDS_NV /;"	kind:d
GL_MAX_SERVER_WAIT_TIMEOUT	SDL_opengl_glext.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT /;"	kind:d
GL_MAX_SERVER_WAIT_TIMEOUT_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT_APPLE /;"	kind:d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_MAX_SHADER_BUFFER_ADDRESS_NV /;"	kind:d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	SDL_opengl_glext.h	/^#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE /;"	kind:d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	SDL_opengl_glext.h	/^#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS /;"	kind:d
GL_MAX_SHININESS_NV	SDL_opengl_glext.h	/^#define GL_MAX_SHININESS_NV /;"	kind:d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD	SDL_opengl_glext.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD /;"	kind:d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB /;"	kind:d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS	SDL_opengl_glext.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS /;"	kind:d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB /;"	kind:d
GL_MAX_SPARSE_TEXTURE_SIZE_AMD	SDL_opengl_glext.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD /;"	kind:d
GL_MAX_SPARSE_TEXTURE_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB /;"	kind:d
GL_MAX_SPOT_EXPONENT_NV	SDL_opengl_glext.h	/^#define GL_MAX_SPOT_EXPONENT_NV /;"	kind:d
GL_MAX_SUBROUTINES	SDL_opengl_glext.h	/^#define GL_MAX_SUBROUTINES /;"	kind:d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	SDL_opengl_glext.h	/^#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS /;"	kind:d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS /;"	kind:d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS /;"	kind:d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS /;"	kind:d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS /;"	kind:d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS /;"	kind:d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS /;"	kind:d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS /;"	kind:d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS /;"	kind:d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS /;"	kind:d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS /;"	kind:d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS /;"	kind:d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS /;"	kind:d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS /;"	kind:d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS /;"	kind:d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS /;"	kind:d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS /;"	kind:d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS /;"	kind:d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS /;"	kind:d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	kind:d
GL_MAX_TESS_GEN_LEVEL	SDL_opengl_glext.h	/^#define GL_MAX_TESS_GEN_LEVEL /;"	kind:d
GL_MAX_TESS_PATCH_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_TESS_PATCH_COMPONENTS /;"	kind:d
GL_MAX_TEXTURE_BUFFER_SIZE	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE /;"	kind:d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB /;"	kind:d
GL_MAX_TEXTURE_BUFFER_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT /;"	kind:d
GL_MAX_TEXTURE_COORDS	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_COORDS /;"	kind:d
GL_MAX_TEXTURE_COORDS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_COORDS_ARB /;"	kind:d
GL_MAX_TEXTURE_COORDS_NV	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_COORDS_NV /;"	kind:d
GL_MAX_TEXTURE_IMAGE_UNITS	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	kind:d
GL_MAX_TEXTURE_IMAGE_UNITS	SDL_opengles2_gl2.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	kind:d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB /;"	kind:d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_NV /;"	kind:d
GL_MAX_TEXTURE_LOD_BIAS	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_LOD_BIAS /;"	kind:d
GL_MAX_TEXTURE_LOD_BIAS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_LOD_BIAS_EXT /;"	kind:d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	kind:d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	kind:d
GL_MAX_TEXTURE_SIZE	SDL_opengl.h	/^#define GL_MAX_TEXTURE_SIZE	/;"	kind:d
GL_MAX_TEXTURE_SIZE	SDL_opengles2_gl2.h	/^#define GL_MAX_TEXTURE_SIZE /;"	kind:d
GL_MAX_TEXTURE_STACK_DEPTH	SDL_opengl.h	/^#define GL_MAX_TEXTURE_STACK_DEPTH	/;"	kind:d
GL_MAX_TEXTURE_UNITS	SDL_opengl.h	/^#define GL_MAX_TEXTURE_UNITS	/;"	kind:d
GL_MAX_TEXTURE_UNITS	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_UNITS /;"	kind:d
GL_MAX_TEXTURE_UNITS_ARB	SDL_opengl.h	/^#define GL_MAX_TEXTURE_UNITS_ARB	/;"	kind:d
GL_MAX_TEXTURE_UNITS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_TEXTURE_UNITS_ARB /;"	kind:d
GL_MAX_TRACK_MATRICES_NV	SDL_opengl_glext.h	/^#define GL_MAX_TRACK_MATRICES_NV /;"	kind:d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	SDL_opengl_glext.h	/^#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV /;"	kind:d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS /;"	kind:d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS /;"	kind:d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT /;"	kind:d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV	SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV /;"	kind:d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS /;"	kind:d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT /;"	kind:d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV	SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV /;"	kind:d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS /;"	kind:d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT /;"	kind:d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV	SDL_opengl_glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV /;"	kind:d
GL_MAX_UNIFORM_BLOCK_SIZE	SDL_opengl_glext.h	/^#define GL_MAX_UNIFORM_BLOCK_SIZE /;"	kind:d
GL_MAX_UNIFORM_BUFFER_BINDINGS	SDL_opengl_glext.h	/^#define GL_MAX_UNIFORM_BUFFER_BINDINGS /;"	kind:d
GL_MAX_UNIFORM_LOCATIONS	SDL_opengl_glext.h	/^#define GL_MAX_UNIFORM_LOCATIONS /;"	kind:d
GL_MAX_VARYING_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_VARYING_COMPONENTS /;"	kind:d
GL_MAX_VARYING_COMPONENTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_VARYING_COMPONENTS_EXT /;"	kind:d
GL_MAX_VARYING_FLOATS	SDL_opengl_glext.h	/^#define GL_MAX_VARYING_FLOATS /;"	kind:d
GL_MAX_VARYING_FLOATS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_VARYING_FLOATS_ARB /;"	kind:d
GL_MAX_VARYING_VECTORS	SDL_opengl_glext.h	/^#define GL_MAX_VARYING_VECTORS /;"	kind:d
GL_MAX_VARYING_VECTORS	SDL_opengles2_gl2.h	/^#define GL_MAX_VARYING_VECTORS /;"	kind:d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV /;"	kind:d
GL_MAX_VERTEX_ATOMIC_COUNTERS	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTERS /;"	kind:d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS /;"	kind:d
GL_MAX_VERTEX_ATTRIBS	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	kind:d
GL_MAX_VERTEX_ATTRIBS	SDL_opengles2_gl2.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	kind:d
GL_MAX_VERTEX_ATTRIBS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATTRIBS_ARB /;"	kind:d
GL_MAX_VERTEX_ATTRIB_BINDINGS	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATTRIB_BINDINGS /;"	kind:d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	kind:d
GL_MAX_VERTEX_ATTRIB_STRIDE	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_ATTRIB_STRIDE /;"	kind:d
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT /;"	kind:d
GL_MAX_VERTEX_HINT_PGI	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_HINT_PGI /;"	kind:d
GL_MAX_VERTEX_IMAGE_UNIFORMS	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_IMAGE_UNIFORMS /;"	kind:d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_OUTPUT_COMPONENTS /;"	kind:d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	kind:d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT /;"	kind:d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_SHADER_LOCALS_EXT /;"	kind:d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	kind:d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS /;"	kind:d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT /;"	kind:d
GL_MAX_VERTEX_STREAMS	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_STREAMS /;"	kind:d
GL_MAX_VERTEX_STREAMS_ATI	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_STREAMS_ATI /;"	kind:d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	kind:d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	SDL_opengles2_gl2.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	kind:d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB /;"	kind:d
GL_MAX_VERTEX_UNIFORM_BLOCKS	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_UNIFORM_BLOCKS /;"	kind:d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	kind:d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB /;"	kind:d
GL_MAX_VERTEX_UNIFORM_VECTORS	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	kind:d
GL_MAX_VERTEX_UNIFORM_VECTORS	SDL_opengles2_gl2.h	/^#define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	kind:d
GL_MAX_VERTEX_UNITS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_UNITS_ARB /;"	kind:d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB /;"	kind:d
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT	SDL_opengl_glext.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT /;"	kind:d
GL_MAX_VIEWPORTS	SDL_opengl_glext.h	/^#define GL_MAX_VIEWPORTS /;"	kind:d
GL_MAX_VIEWPORT_DIMS	SDL_opengl.h	/^#define GL_MAX_VIEWPORT_DIMS	/;"	kind:d
GL_MAX_VIEWPORT_DIMS	SDL_opengles2_gl2.h	/^#define GL_MAX_VIEWPORT_DIMS /;"	kind:d
GL_MAX_WIDTH	SDL_opengl_glext.h	/^#define GL_MAX_WIDTH /;"	kind:d
GL_MEDIUM_FLOAT	SDL_opengl_glext.h	/^#define GL_MEDIUM_FLOAT /;"	kind:d
GL_MEDIUM_FLOAT	SDL_opengles2_gl2.h	/^#define GL_MEDIUM_FLOAT /;"	kind:d
GL_MEDIUM_INT	SDL_opengl_glext.h	/^#define GL_MEDIUM_INT /;"	kind:d
GL_MEDIUM_INT	SDL_opengles2_gl2.h	/^#define GL_MEDIUM_INT /;"	kind:d
GL_MESAX_texture_stack	SDL_opengl_glext.h	/^#define GL_MESAX_texture_stack /;"	kind:d
GL_MESA_pack_invert	SDL_opengl_glext.h	/^#define GL_MESA_pack_invert /;"	kind:d
GL_MESA_packed_depth_stencil	SDL_opengl.h	/^#define GL_MESA_packed_depth_stencil /;"	kind:d
GL_MESA_resize_buffers	SDL_opengl_glext.h	/^#define GL_MESA_resize_buffers /;"	kind:d
GL_MESA_window_pos	SDL_opengl_glext.h	/^#define GL_MESA_window_pos /;"	kind:d
GL_MESA_ycbcr_texture	SDL_opengl_glext.h	/^#define GL_MESA_ycbcr_texture /;"	kind:d
GL_MIN	SDL_opengl.h	/^#define GL_MIN	/;"	kind:d
GL_MIN	SDL_opengl_glext.h	/^#define GL_MIN /;"	kind:d
GL_MINMAX	SDL_opengl.h	/^#define GL_MINMAX	/;"	kind:d
GL_MINMAX	SDL_opengl_glext.h	/^#define GL_MINMAX /;"	kind:d
GL_MINMAX_EXT	SDL_opengl_glext.h	/^#define GL_MINMAX_EXT /;"	kind:d
GL_MINMAX_FORMAT	SDL_opengl.h	/^#define GL_MINMAX_FORMAT	/;"	kind:d
GL_MINMAX_FORMAT	SDL_opengl_glext.h	/^#define GL_MINMAX_FORMAT /;"	kind:d
GL_MINMAX_FORMAT_EXT	SDL_opengl_glext.h	/^#define GL_MINMAX_FORMAT_EXT /;"	kind:d
GL_MINMAX_SINK	SDL_opengl.h	/^#define GL_MINMAX_SINK	/;"	kind:d
GL_MINMAX_SINK	SDL_opengl_glext.h	/^#define GL_MINMAX_SINK /;"	kind:d
GL_MINMAX_SINK_EXT	SDL_opengl_glext.h	/^#define GL_MINMAX_SINK_EXT /;"	kind:d
GL_MINOR_VERSION	SDL_opengl_glext.h	/^#define GL_MINOR_VERSION /;"	kind:d
GL_MINUS_CLAMPED_NV	SDL_opengl_glext.h	/^#define GL_MINUS_CLAMPED_NV /;"	kind:d
GL_MINUS_NV	SDL_opengl_glext.h	/^#define GL_MINUS_NV /;"	kind:d
GL_MIN_EXT	SDL_opengl_glext.h	/^#define GL_MIN_EXT /;"	kind:d
GL_MIN_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MIN_EXT /;"	kind:d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	SDL_opengl_glext.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET /;"	kind:d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV	SDL_opengl_glext.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	kind:d
GL_MIN_LOD_WARNING_AMD	SDL_opengl_glext.h	/^#define GL_MIN_LOD_WARNING_AMD /;"	kind:d
GL_MIN_MAP_BUFFER_ALIGNMENT	SDL_opengl_glext.h	/^#define GL_MIN_MAP_BUFFER_ALIGNMENT /;"	kind:d
GL_MIN_PROGRAM_TEXEL_OFFSET	SDL_opengl_glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET /;"	kind:d
GL_MIN_PROGRAM_TEXEL_OFFSET_EXT	SDL_opengl_glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT /;"	kind:d
GL_MIN_PROGRAM_TEXEL_OFFSET_NV	SDL_opengl_glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV /;"	kind:d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	SDL_opengl_glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET /;"	kind:d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	SDL_opengl_glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	kind:d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV	SDL_opengl_glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	kind:d
GL_MIN_SAMPLE_SHADING_VALUE	SDL_opengl_glext.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE /;"	kind:d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	SDL_opengl_glext.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE_ARB /;"	kind:d
GL_MIN_SPARSE_LEVEL_AMD	SDL_opengl_glext.h	/^#define GL_MIN_SPARSE_LEVEL_AMD /;"	kind:d
GL_MIN_SPARSE_LEVEL_ARB	SDL_opengl_glext.h	/^#define GL_MIN_SPARSE_LEVEL_ARB /;"	kind:d
GL_MIPMAP	SDL_opengl_glext.h	/^#define GL_MIPMAP /;"	kind:d
GL_MIRRORED_REPEAT	SDL_opengl_glext.h	/^#define GL_MIRRORED_REPEAT /;"	kind:d
GL_MIRRORED_REPEAT	SDL_opengles2_gl2.h	/^#define GL_MIRRORED_REPEAT /;"	kind:d
GL_MIRRORED_REPEAT_ARB	SDL_opengl_glext.h	/^#define GL_MIRRORED_REPEAT_ARB /;"	kind:d
GL_MIRRORED_REPEAT_IBM	SDL_opengl_glext.h	/^#define GL_MIRRORED_REPEAT_IBM /;"	kind:d
GL_MIRROR_CLAMP_ATI	SDL_opengl_glext.h	/^#define GL_MIRROR_CLAMP_ATI /;"	kind:d
GL_MIRROR_CLAMP_EXT	SDL_opengl_glext.h	/^#define GL_MIRROR_CLAMP_EXT /;"	kind:d
GL_MIRROR_CLAMP_TO_BORDER_EXT	SDL_opengl_glext.h	/^#define GL_MIRROR_CLAMP_TO_BORDER_EXT /;"	kind:d
GL_MIRROR_CLAMP_TO_EDGE	SDL_opengl_glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE /;"	kind:d
GL_MIRROR_CLAMP_TO_EDGE_ATI	SDL_opengl_glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_ATI /;"	kind:d
GL_MIRROR_CLAMP_TO_EDGE_EXT	SDL_opengl_glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_EXT /;"	kind:d
GL_MITER_REVERT_NV	SDL_opengl_glext.h	/^#define GL_MITER_REVERT_NV /;"	kind:d
GL_MITER_TRUNCATE_NV	SDL_opengl_glext.h	/^#define GL_MITER_TRUNCATE_NV /;"	kind:d
GL_MODELVIEW	SDL_opengl.h	/^#define GL_MODELVIEW	/;"	kind:d
GL_MODELVIEW0_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW0_ARB /;"	kind:d
GL_MODELVIEW0_EXT	SDL_opengl_glext.h	/^#define GL_MODELVIEW0_EXT /;"	kind:d
GL_MODELVIEW0_MATRIX_EXT	SDL_opengl_glext.h	/^#define GL_MODELVIEW0_MATRIX_EXT /;"	kind:d
GL_MODELVIEW0_STACK_DEPTH_EXT	SDL_opengl_glext.h	/^#define GL_MODELVIEW0_STACK_DEPTH_EXT /;"	kind:d
GL_MODELVIEW10_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW10_ARB /;"	kind:d
GL_MODELVIEW11_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW11_ARB /;"	kind:d
GL_MODELVIEW12_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW12_ARB /;"	kind:d
GL_MODELVIEW13_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW13_ARB /;"	kind:d
GL_MODELVIEW14_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW14_ARB /;"	kind:d
GL_MODELVIEW15_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW15_ARB /;"	kind:d
GL_MODELVIEW16_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW16_ARB /;"	kind:d
GL_MODELVIEW17_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW17_ARB /;"	kind:d
GL_MODELVIEW18_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW18_ARB /;"	kind:d
GL_MODELVIEW19_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW19_ARB /;"	kind:d
GL_MODELVIEW1_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW1_ARB /;"	kind:d
GL_MODELVIEW1_EXT	SDL_opengl_glext.h	/^#define GL_MODELVIEW1_EXT /;"	kind:d
GL_MODELVIEW1_MATRIX_EXT	SDL_opengl_glext.h	/^#define GL_MODELVIEW1_MATRIX_EXT /;"	kind:d
GL_MODELVIEW1_STACK_DEPTH_EXT	SDL_opengl_glext.h	/^#define GL_MODELVIEW1_STACK_DEPTH_EXT /;"	kind:d
GL_MODELVIEW20_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW20_ARB /;"	kind:d
GL_MODELVIEW21_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW21_ARB /;"	kind:d
GL_MODELVIEW22_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW22_ARB /;"	kind:d
GL_MODELVIEW23_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW23_ARB /;"	kind:d
GL_MODELVIEW24_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW24_ARB /;"	kind:d
GL_MODELVIEW25_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW25_ARB /;"	kind:d
GL_MODELVIEW26_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW26_ARB /;"	kind:d
GL_MODELVIEW27_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW27_ARB /;"	kind:d
GL_MODELVIEW28_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW28_ARB /;"	kind:d
GL_MODELVIEW29_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW29_ARB /;"	kind:d
GL_MODELVIEW2_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW2_ARB /;"	kind:d
GL_MODELVIEW30_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW30_ARB /;"	kind:d
GL_MODELVIEW31_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW31_ARB /;"	kind:d
GL_MODELVIEW3_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW3_ARB /;"	kind:d
GL_MODELVIEW4_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW4_ARB /;"	kind:d
GL_MODELVIEW5_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW5_ARB /;"	kind:d
GL_MODELVIEW6_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW6_ARB /;"	kind:d
GL_MODELVIEW7_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW7_ARB /;"	kind:d
GL_MODELVIEW8_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW8_ARB /;"	kind:d
GL_MODELVIEW9_ARB	SDL_opengl_glext.h	/^#define GL_MODELVIEW9_ARB /;"	kind:d
GL_MODELVIEW_MATRIX	SDL_opengl.h	/^#define GL_MODELVIEW_MATRIX	/;"	kind:d
GL_MODELVIEW_PROJECTION_NV	SDL_opengl_glext.h	/^#define GL_MODELVIEW_PROJECTION_NV /;"	kind:d
GL_MODELVIEW_STACK_DEPTH	SDL_opengl.h	/^#define GL_MODELVIEW_STACK_DEPTH	/;"	kind:d
GL_MODULATE	SDL_opengl.h	/^#define GL_MODULATE	/;"	kind:d
GL_MODULATE_ADD_ATI	SDL_opengl_glext.h	/^#define GL_MODULATE_ADD_ATI /;"	kind:d
GL_MODULATE_SIGNED_ADD_ATI	SDL_opengl_glext.h	/^#define GL_MODULATE_SIGNED_ADD_ATI /;"	kind:d
GL_MODULATE_SUBTRACT_ATI	SDL_opengl_glext.h	/^#define GL_MODULATE_SUBTRACT_ATI /;"	kind:d
GL_MOVE_TO_CONTINUES_NV	SDL_opengl_glext.h	/^#define GL_MOVE_TO_CONTINUES_NV /;"	kind:d
GL_MOVE_TO_NV	SDL_opengl_glext.h	/^#define GL_MOVE_TO_NV /;"	kind:d
GL_MOVE_TO_RESETS_NV	SDL_opengl_glext.h	/^#define GL_MOVE_TO_RESETS_NV /;"	kind:d
GL_MOV_ATI	SDL_opengl_glext.h	/^#define GL_MOV_ATI /;"	kind:d
GL_MULT	SDL_opengl.h	/^#define GL_MULT	/;"	kind:d
GL_MULTIPLY_NV	SDL_opengl_glext.h	/^#define GL_MULTIPLY_NV /;"	kind:d
GL_MULTISAMPLE	SDL_opengl.h	/^#define GL_MULTISAMPLE	/;"	kind:d
GL_MULTISAMPLE	SDL_opengl_glext.h	/^#define GL_MULTISAMPLE /;"	kind:d
GL_MULTISAMPLE_3DFX	SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_3DFX /;"	kind:d
GL_MULTISAMPLE_ARB	SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_ARB /;"	kind:d
GL_MULTISAMPLE_BIT	SDL_opengl.h	/^#define GL_MULTISAMPLE_BIT	/;"	kind:d
GL_MULTISAMPLE_BIT	SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_BIT /;"	kind:d
GL_MULTISAMPLE_BIT_3DFX	SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_BIT_3DFX /;"	kind:d
GL_MULTISAMPLE_BIT_ARB	SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_BIT_ARB /;"	kind:d
GL_MULTISAMPLE_BIT_EXT	SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_BIT_EXT /;"	kind:d
GL_MULTISAMPLE_BUFFER_BIT0_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT0_QCOM /;"	kind:d
GL_MULTISAMPLE_BUFFER_BIT1_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT1_QCOM /;"	kind:d
GL_MULTISAMPLE_BUFFER_BIT2_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT2_QCOM /;"	kind:d
GL_MULTISAMPLE_BUFFER_BIT3_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT3_QCOM /;"	kind:d
GL_MULTISAMPLE_BUFFER_BIT4_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT4_QCOM /;"	kind:d
GL_MULTISAMPLE_BUFFER_BIT5_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT5_QCOM /;"	kind:d
GL_MULTISAMPLE_BUFFER_BIT6_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT6_QCOM /;"	kind:d
GL_MULTISAMPLE_BUFFER_BIT7_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_MULTISAMPLE_BUFFER_BIT7_QCOM /;"	kind:d
GL_MULTISAMPLE_COVERAGE_MODES_NV	SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_COVERAGE_MODES_NV /;"	kind:d
GL_MULTISAMPLE_EXT	SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_EXT /;"	kind:d
GL_MULTISAMPLE_FILTER_HINT_NV	SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_FILTER_HINT_NV /;"	kind:d
GL_MULTISAMPLE_SGIS	SDL_opengl_glext.h	/^#define GL_MULTISAMPLE_SGIS /;"	kind:d
GL_MULTIVIEW_EXT	SDL_opengles2_gl2ext.h	/^#define GL_MULTIVIEW_EXT /;"	kind:d
GL_MUL_ATI	SDL_opengl_glext.h	/^#define GL_MUL_ATI /;"	kind:d
GL_MVP_MATRIX_EXT	SDL_opengl_glext.h	/^#define GL_MVP_MATRIX_EXT /;"	kind:d
GL_N3F_V3F	SDL_opengl.h	/^#define GL_N3F_V3F	/;"	kind:d
GL_NAMED_STRING_LENGTH_ARB	SDL_opengl_glext.h	/^#define GL_NAMED_STRING_LENGTH_ARB /;"	kind:d
GL_NAMED_STRING_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_NAMED_STRING_TYPE_ARB /;"	kind:d
GL_NAME_LENGTH	SDL_opengl_glext.h	/^#define GL_NAME_LENGTH /;"	kind:d
GL_NAME_STACK_DEPTH	SDL_opengl.h	/^#define GL_NAME_STACK_DEPTH	/;"	kind:d
GL_NAND	SDL_opengl.h	/^#define GL_NAND	/;"	kind:d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	SDL_opengl_glext.h	/^#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI /;"	kind:d
GL_NATIVE_GRAPHICS_END_HINT_PGI	SDL_opengl_glext.h	/^#define GL_NATIVE_GRAPHICS_END_HINT_PGI /;"	kind:d
GL_NATIVE_GRAPHICS_HANDLE_PGI	SDL_opengl_glext.h	/^#define GL_NATIVE_GRAPHICS_HANDLE_PGI /;"	kind:d
GL_NEAREST	SDL_opengl.h	/^#define GL_NEAREST	/;"	kind:d
GL_NEAREST	SDL_opengles2_gl2.h	/^#define GL_NEAREST /;"	kind:d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	SDL_opengl_glext.h	/^#define GL_NEAREST_CLIPMAP_LINEAR_SGIX /;"	kind:d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	SDL_opengl_glext.h	/^#define GL_NEAREST_CLIPMAP_NEAREST_SGIX /;"	kind:d
GL_NEAREST_MIPMAP_LINEAR	SDL_opengl.h	/^#define GL_NEAREST_MIPMAP_LINEAR	/;"	kind:d
GL_NEAREST_MIPMAP_LINEAR	SDL_opengles2_gl2.h	/^#define GL_NEAREST_MIPMAP_LINEAR /;"	kind:d
GL_NEAREST_MIPMAP_NEAREST	SDL_opengl.h	/^#define GL_NEAREST_MIPMAP_NEAREST	/;"	kind:d
GL_NEAREST_MIPMAP_NEAREST	SDL_opengles2_gl2.h	/^#define GL_NEAREST_MIPMAP_NEAREST /;"	kind:d
GL_NEGATE_BIT_ATI	SDL_opengl_glext.h	/^#define GL_NEGATE_BIT_ATI /;"	kind:d
GL_NEGATIVE_ONE_EXT	SDL_opengl_glext.h	/^#define GL_NEGATIVE_ONE_EXT /;"	kind:d
GL_NEGATIVE_W_EXT	SDL_opengl_glext.h	/^#define GL_NEGATIVE_W_EXT /;"	kind:d
GL_NEGATIVE_X_EXT	SDL_opengl_glext.h	/^#define GL_NEGATIVE_X_EXT /;"	kind:d
GL_NEGATIVE_Y_EXT	SDL_opengl_glext.h	/^#define GL_NEGATIVE_Y_EXT /;"	kind:d
GL_NEGATIVE_Z_EXT	SDL_opengl_glext.h	/^#define GL_NEGATIVE_Z_EXT /;"	kind:d
GL_NEVER	SDL_opengl.h	/^#define GL_NEVER	/;"	kind:d
GL_NEVER	SDL_opengles2_gl2.h	/^#define GL_NEVER /;"	kind:d
GL_NEXT_BUFFER_NV	SDL_opengl_glext.h	/^#define GL_NEXT_BUFFER_NV /;"	kind:d
GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV	SDL_opengl_glext.h	/^#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV /;"	kind:d
GL_NICEST	SDL_opengl.h	/^#define GL_NICEST	/;"	kind:d
GL_NICEST	SDL_opengles2_gl2.h	/^#define GL_NICEST /;"	kind:d
GL_NONE	SDL_opengl.h	/^#define GL_NONE	/;"	kind:d
GL_NONE	SDL_opengles2_gl2.h	/^#define GL_NONE /;"	kind:d
GL_NOOP	SDL_opengl.h	/^#define GL_NOOP	/;"	kind:d
GL_NOR	SDL_opengl.h	/^#define GL_NOR	/;"	kind:d
GL_NORMALIZE	SDL_opengl.h	/^#define GL_NORMALIZE	/;"	kind:d
GL_NORMALIZED_RANGE_EXT	SDL_opengl_glext.h	/^#define GL_NORMALIZED_RANGE_EXT /;"	kind:d
GL_NORMAL_ARRAY	SDL_opengl.h	/^#define GL_NORMAL_ARRAY	/;"	kind:d
GL_NORMAL_ARRAY_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_ADDRESS_NV /;"	kind:d
GL_NORMAL_ARRAY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING /;"	kind:d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB /;"	kind:d
GL_NORMAL_ARRAY_COUNT_EXT	SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_COUNT_EXT /;"	kind:d
GL_NORMAL_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_EXT /;"	kind:d
GL_NORMAL_ARRAY_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_LENGTH_NV /;"	kind:d
GL_NORMAL_ARRAY_LIST_IBM	SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_LIST_IBM /;"	kind:d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM /;"	kind:d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL /;"	kind:d
GL_NORMAL_ARRAY_POINTER	SDL_opengl.h	/^#define GL_NORMAL_ARRAY_POINTER	/;"	kind:d
GL_NORMAL_ARRAY_POINTER_EXT	SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_POINTER_EXT /;"	kind:d
GL_NORMAL_ARRAY_STRIDE	SDL_opengl.h	/^#define GL_NORMAL_ARRAY_STRIDE	/;"	kind:d
GL_NORMAL_ARRAY_STRIDE_EXT	SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_STRIDE_EXT /;"	kind:d
GL_NORMAL_ARRAY_TYPE	SDL_opengl.h	/^#define GL_NORMAL_ARRAY_TYPE	/;"	kind:d
GL_NORMAL_ARRAY_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_NORMAL_ARRAY_TYPE_EXT /;"	kind:d
GL_NORMAL_BIT_PGI	SDL_opengl_glext.h	/^#define GL_NORMAL_BIT_PGI /;"	kind:d
GL_NORMAL_MAP	SDL_opengl.h	/^#define GL_NORMAL_MAP	/;"	kind:d
GL_NORMAL_MAP	SDL_opengl_glext.h	/^#define GL_NORMAL_MAP /;"	kind:d
GL_NORMAL_MAP_ARB	SDL_opengl_glext.h	/^#define GL_NORMAL_MAP_ARB /;"	kind:d
GL_NORMAL_MAP_EXT	SDL_opengl_glext.h	/^#define GL_NORMAL_MAP_EXT /;"	kind:d
GL_NORMAL_MAP_NV	SDL_opengl_glext.h	/^#define GL_NORMAL_MAP_NV /;"	kind:d
GL_NOTEQUAL	SDL_opengl.h	/^#define GL_NOTEQUAL	/;"	kind:d
GL_NOTEQUAL	SDL_opengles2_gl2.h	/^#define GL_NOTEQUAL /;"	kind:d
GL_NO_ERROR	SDL_opengl.h	/^#define GL_NO_ERROR /;"	kind:d
GL_NO_ERROR	SDL_opengles2_gl2.h	/^#define GL_NO_ERROR /;"	kind:d
GL_NO_RESET_NOTIFICATION_ARB	SDL_opengl_glext.h	/^#define GL_NO_RESET_NOTIFICATION_ARB /;"	kind:d
GL_NO_RESET_NOTIFICATION_EXT	SDL_opengles2_gl2ext.h	/^#define GL_NO_RESET_NOTIFICATION_EXT /;"	kind:d
GL_NUM_ACTIVE_VARIABLES	SDL_opengl_glext.h	/^#define GL_NUM_ACTIVE_VARIABLES /;"	kind:d
GL_NUM_COMPATIBLE_SUBROUTINES	SDL_opengl_glext.h	/^#define GL_NUM_COMPATIBLE_SUBROUTINES /;"	kind:d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	SDL_opengl.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS	/;"	kind:d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	SDL_opengl_glext.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	kind:d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	SDL_opengles2_gl2.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	kind:d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	SDL_opengl_glext.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB /;"	kind:d
GL_NUM_EXTENSIONS	SDL_opengl_glext.h	/^#define GL_NUM_EXTENSIONS /;"	kind:d
GL_NUM_FILL_STREAMS_NV	SDL_opengl_glext.h	/^#define GL_NUM_FILL_STREAMS_NV /;"	kind:d
GL_NUM_FRAGMENT_CONSTANTS_ATI	SDL_opengl_glext.h	/^#define GL_NUM_FRAGMENT_CONSTANTS_ATI /;"	kind:d
GL_NUM_FRAGMENT_REGISTERS_ATI	SDL_opengl_glext.h	/^#define GL_NUM_FRAGMENT_REGISTERS_ATI /;"	kind:d
GL_NUM_GENERAL_COMBINERS_NV	SDL_opengl_glext.h	/^#define GL_NUM_GENERAL_COMBINERS_NV /;"	kind:d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	SDL_opengl_glext.h	/^#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI /;"	kind:d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	SDL_opengl_glext.h	/^#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI /;"	kind:d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	SDL_opengl_glext.h	/^#define GL_NUM_INSTRUCTIONS_TOTAL_ATI /;"	kind:d
GL_NUM_LOOPBACK_COMPONENTS_ATI	SDL_opengl_glext.h	/^#define GL_NUM_LOOPBACK_COMPONENTS_ATI /;"	kind:d
GL_NUM_PASSES_ATI	SDL_opengl_glext.h	/^#define GL_NUM_PASSES_ATI /;"	kind:d
GL_NUM_PROGRAM_BINARY_FORMATS	SDL_opengl_glext.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS /;"	kind:d
GL_NUM_PROGRAM_BINARY_FORMATS_OES	SDL_opengles2_gl2ext.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS_OES /;"	kind:d
GL_NUM_SAMPLE_COUNTS	SDL_opengl_glext.h	/^#define GL_NUM_SAMPLE_COUNTS /;"	kind:d
GL_NUM_SHADER_BINARY_FORMATS	SDL_opengl_glext.h	/^#define GL_NUM_SHADER_BINARY_FORMATS /;"	kind:d
GL_NUM_SHADER_BINARY_FORMATS	SDL_opengles2_gl2.h	/^#define GL_NUM_SHADER_BINARY_FORMATS /;"	kind:d
GL_NUM_SHADING_LANGUAGE_VERSIONS	SDL_opengl_glext.h	/^#define GL_NUM_SHADING_LANGUAGE_VERSIONS /;"	kind:d
GL_NUM_VIDEO_CAPTURE_STREAMS_NV	SDL_opengl_glext.h	/^#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV /;"	kind:d
GL_NUM_VIRTUAL_PAGE_SIZES_ARB	SDL_opengl_glext.h	/^#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB /;"	kind:d
GL_NVX_conditional_render	SDL_opengl_glext.h	/^#define GL_NVX_conditional_render /;"	kind:d
GL_NVX_gpu_memory_info	SDL_opengl_glext.h	/^#define GL_NVX_gpu_memory_info /;"	kind:d
GL_NV_bindless_multi_draw_indirect	SDL_opengl_glext.h	/^#define GL_NV_bindless_multi_draw_indirect /;"	kind:d
GL_NV_bindless_texture	SDL_opengl_glext.h	/^#define GL_NV_bindless_texture /;"	kind:d
GL_NV_blend_equation_advanced	SDL_opengl_glext.h	/^#define GL_NV_blend_equation_advanced /;"	kind:d
GL_NV_blend_equation_advanced_coherent	SDL_opengl_glext.h	/^#define GL_NV_blend_equation_advanced_coherent /;"	kind:d
GL_NV_blend_square	SDL_opengl_glext.h	/^#define GL_NV_blend_square /;"	kind:d
GL_NV_compute_program5	SDL_opengl_glext.h	/^#define GL_NV_compute_program5 /;"	kind:d
GL_NV_conditional_render	SDL_opengl_glext.h	/^#define GL_NV_conditional_render /;"	kind:d
GL_NV_copy_depth_to_color	SDL_opengl_glext.h	/^#define GL_NV_copy_depth_to_color /;"	kind:d
GL_NV_copy_image	SDL_opengl_glext.h	/^#define GL_NV_copy_image /;"	kind:d
GL_NV_coverage_sample	SDL_opengles2_gl2ext.h	/^#define GL_NV_coverage_sample /;"	kind:d
GL_NV_deep_texture3D	SDL_opengl_glext.h	/^#define GL_NV_deep_texture3D /;"	kind:d
GL_NV_depth_buffer_float	SDL_opengl_glext.h	/^#define GL_NV_depth_buffer_float /;"	kind:d
GL_NV_depth_clamp	SDL_opengl_glext.h	/^#define GL_NV_depth_clamp /;"	kind:d
GL_NV_depth_nonlinear	SDL_opengles2_gl2ext.h	/^#define GL_NV_depth_nonlinear /;"	kind:d
GL_NV_draw_buffers	SDL_opengles2_gl2ext.h	/^#define GL_NV_draw_buffers /;"	kind:d
GL_NV_draw_instanced	SDL_opengles2_gl2ext.h	/^#define GL_NV_draw_instanced /;"	kind:d
GL_NV_draw_texture	SDL_opengl_glext.h	/^#define GL_NV_draw_texture /;"	kind:d
GL_NV_evaluators	SDL_opengl_glext.h	/^#define GL_NV_evaluators /;"	kind:d
GL_NV_explicit_multisample	SDL_opengl_glext.h	/^#define GL_NV_explicit_multisample /;"	kind:d
GL_NV_fbo_color_attachments	SDL_opengles2_gl2ext.h	/^#define GL_NV_fbo_color_attachments /;"	kind:d
GL_NV_fence	SDL_opengl_glext.h	/^#define GL_NV_fence /;"	kind:d
GL_NV_fence	SDL_opengles2_gl2ext.h	/^#define GL_NV_fence /;"	kind:d
GL_NV_float_buffer	SDL_opengl_glext.h	/^#define GL_NV_float_buffer /;"	kind:d
GL_NV_fog_distance	SDL_opengl_glext.h	/^#define GL_NV_fog_distance /;"	kind:d
GL_NV_fragment_program	SDL_opengl_glext.h	/^#define GL_NV_fragment_program /;"	kind:d
GL_NV_fragment_program2	SDL_opengl_glext.h	/^#define GL_NV_fragment_program2 /;"	kind:d
GL_NV_fragment_program4	SDL_opengl_glext.h	/^#define GL_NV_fragment_program4 /;"	kind:d
GL_NV_fragment_program_option	SDL_opengl_glext.h	/^#define GL_NV_fragment_program_option /;"	kind:d
GL_NV_framebuffer_blit	SDL_opengles2_gl2ext.h	/^#define GL_NV_framebuffer_blit /;"	kind:d
GL_NV_framebuffer_multisample	SDL_opengles2_gl2ext.h	/^#define GL_NV_framebuffer_multisample /;"	kind:d
GL_NV_framebuffer_multisample_coverage	SDL_opengl_glext.h	/^#define GL_NV_framebuffer_multisample_coverage /;"	kind:d
GL_NV_generate_mipmap_sRGB	SDL_opengles2_gl2ext.h	/^#define GL_NV_generate_mipmap_sRGB /;"	kind:d
GL_NV_geometry_program4	SDL_opengl_glext.h	/^#define GL_NV_geometry_program4 /;"	kind:d
GL_NV_geometry_shader4	SDL_opengl_glext.h	/^#define GL_NV_geometry_shader4 /;"	kind:d
GL_NV_gpu_program4	SDL_opengl_glext.h	/^#define GL_NV_gpu_program4 /;"	kind:d
GL_NV_gpu_program5	SDL_opengl_glext.h	/^#define GL_NV_gpu_program5 /;"	kind:d
GL_NV_gpu_program5_mem_extended	SDL_opengl_glext.h	/^#define GL_NV_gpu_program5_mem_extended /;"	kind:d
GL_NV_gpu_shader5	SDL_opengl_glext.h	/^#define GL_NV_gpu_shader5 /;"	kind:d
GL_NV_half_float	SDL_opengl_glext.h	/^#define GL_NV_half_float /;"	kind:d
GL_NV_instanced_arrays	SDL_opengles2_gl2ext.h	/^#define GL_NV_instanced_arrays /;"	kind:d
GL_NV_light_max_exponent	SDL_opengl_glext.h	/^#define GL_NV_light_max_exponent /;"	kind:d
GL_NV_multisample_coverage	SDL_opengl_glext.h	/^#define GL_NV_multisample_coverage /;"	kind:d
GL_NV_multisample_filter_hint	SDL_opengl_glext.h	/^#define GL_NV_multisample_filter_hint /;"	kind:d
GL_NV_occlusion_query	SDL_opengl_glext.h	/^#define GL_NV_occlusion_query /;"	kind:d
GL_NV_packed_depth_stencil	SDL_opengl_glext.h	/^#define GL_NV_packed_depth_stencil /;"	kind:d
GL_NV_parameter_buffer_object	SDL_opengl_glext.h	/^#define GL_NV_parameter_buffer_object /;"	kind:d
GL_NV_parameter_buffer_object2	SDL_opengl_glext.h	/^#define GL_NV_parameter_buffer_object2 /;"	kind:d
GL_NV_path_rendering	SDL_opengl_glext.h	/^#define GL_NV_path_rendering /;"	kind:d
GL_NV_pixel_data_range	SDL_opengl_glext.h	/^#define GL_NV_pixel_data_range /;"	kind:d
GL_NV_point_sprite	SDL_opengl_glext.h	/^#define GL_NV_point_sprite /;"	kind:d
GL_NV_present_video	SDL_opengl_glext.h	/^#define GL_NV_present_video /;"	kind:d
GL_NV_primitive_restart	SDL_opengl_glext.h	/^#define GL_NV_primitive_restart /;"	kind:d
GL_NV_read_buffer	SDL_opengles2_gl2ext.h	/^#define GL_NV_read_buffer /;"	kind:d
GL_NV_read_buffer_front	SDL_opengles2_gl2ext.h	/^#define GL_NV_read_buffer_front /;"	kind:d
GL_NV_read_depth	SDL_opengles2_gl2ext.h	/^#define GL_NV_read_depth /;"	kind:d
GL_NV_read_depth_stencil	SDL_opengles2_gl2ext.h	/^#define GL_NV_read_depth_stencil /;"	kind:d
GL_NV_read_stencil	SDL_opengles2_gl2ext.h	/^#define GL_NV_read_stencil /;"	kind:d
GL_NV_register_combiners	SDL_opengl_glext.h	/^#define GL_NV_register_combiners /;"	kind:d
GL_NV_register_combiners2	SDL_opengl_glext.h	/^#define GL_NV_register_combiners2 /;"	kind:d
GL_NV_sRGB_formats	SDL_opengles2_gl2ext.h	/^#define GL_NV_sRGB_formats /;"	kind:d
GL_NV_shader_atomic_counters	SDL_opengl_glext.h	/^#define GL_NV_shader_atomic_counters /;"	kind:d
GL_NV_shader_atomic_float	SDL_opengl_glext.h	/^#define GL_NV_shader_atomic_float /;"	kind:d
GL_NV_shader_buffer_load	SDL_opengl_glext.h	/^#define GL_NV_shader_buffer_load /;"	kind:d
GL_NV_shader_buffer_store	SDL_opengl_glext.h	/^#define GL_NV_shader_buffer_store /;"	kind:d
GL_NV_shader_storage_buffer_object	SDL_opengl_glext.h	/^#define GL_NV_shader_storage_buffer_object /;"	kind:d
GL_NV_shader_thread_group	SDL_opengl_glext.h	/^#define GL_NV_shader_thread_group /;"	kind:d
GL_NV_shader_thread_shuffle	SDL_opengl_glext.h	/^#define GL_NV_shader_thread_shuffle /;"	kind:d
GL_NV_shadow_samplers_array	SDL_opengles2_gl2ext.h	/^#define GL_NV_shadow_samplers_array /;"	kind:d
GL_NV_shadow_samplers_cube	SDL_opengles2_gl2ext.h	/^#define GL_NV_shadow_samplers_cube /;"	kind:d
GL_NV_tessellation_program5	SDL_opengl_glext.h	/^#define GL_NV_tessellation_program5 /;"	kind:d
GL_NV_texgen_emboss	SDL_opengl_glext.h	/^#define GL_NV_texgen_emboss /;"	kind:d
GL_NV_texgen_reflection	SDL_opengl_glext.h	/^#define GL_NV_texgen_reflection /;"	kind:d
GL_NV_texture_barrier	SDL_opengl_glext.h	/^#define GL_NV_texture_barrier /;"	kind:d
GL_NV_texture_border_clamp	SDL_opengles2_gl2ext.h	/^#define GL_NV_texture_border_clamp /;"	kind:d
GL_NV_texture_compression_s3tc_update	SDL_opengles2_gl2ext.h	/^#define GL_NV_texture_compression_s3tc_update /;"	kind:d
GL_NV_texture_compression_vtc	SDL_opengl_glext.h	/^#define GL_NV_texture_compression_vtc /;"	kind:d
GL_NV_texture_env_combine4	SDL_opengl_glext.h	/^#define GL_NV_texture_env_combine4 /;"	kind:d
GL_NV_texture_expand_normal	SDL_opengl_glext.h	/^#define GL_NV_texture_expand_normal /;"	kind:d
GL_NV_texture_multisample	SDL_opengl_glext.h	/^#define GL_NV_texture_multisample /;"	kind:d
GL_NV_texture_npot_2D_mipmap	SDL_opengles2_gl2ext.h	/^#define GL_NV_texture_npot_2D_mipmap /;"	kind:d
GL_NV_texture_rectangle	SDL_opengl_glext.h	/^#define GL_NV_texture_rectangle /;"	kind:d
GL_NV_texture_shader	SDL_opengl_glext.h	/^#define GL_NV_texture_shader /;"	kind:d
GL_NV_texture_shader2	SDL_opengl_glext.h	/^#define GL_NV_texture_shader2 /;"	kind:d
GL_NV_texture_shader3	SDL_opengl_glext.h	/^#define GL_NV_texture_shader3 /;"	kind:d
GL_NV_transform_feedback	SDL_opengl_glext.h	/^#define GL_NV_transform_feedback /;"	kind:d
GL_NV_transform_feedback2	SDL_opengl_glext.h	/^#define GL_NV_transform_feedback2 /;"	kind:d
GL_NV_vdpau_interop	SDL_opengl_glext.h	/^#define GL_NV_vdpau_interop /;"	kind:d
GL_NV_vertex_array_range	SDL_opengl_glext.h	/^#define GL_NV_vertex_array_range /;"	kind:d
GL_NV_vertex_array_range2	SDL_opengl_glext.h	/^#define GL_NV_vertex_array_range2 /;"	kind:d
GL_NV_vertex_attrib_integer_64bit	SDL_opengl_glext.h	/^#define GL_NV_vertex_attrib_integer_64bit /;"	kind:d
GL_NV_vertex_buffer_unified_memory	SDL_opengl_glext.h	/^#define GL_NV_vertex_buffer_unified_memory /;"	kind:d
GL_NV_vertex_program	SDL_opengl_glext.h	/^#define GL_NV_vertex_program /;"	kind:d
GL_NV_vertex_program1_1	SDL_opengl_glext.h	/^#define GL_NV_vertex_program1_1 /;"	kind:d
GL_NV_vertex_program2	SDL_opengl_glext.h	/^#define GL_NV_vertex_program2 /;"	kind:d
GL_NV_vertex_program2_option	SDL_opengl_glext.h	/^#define GL_NV_vertex_program2_option /;"	kind:d
GL_NV_vertex_program3	SDL_opengl_glext.h	/^#define GL_NV_vertex_program3 /;"	kind:d
GL_NV_vertex_program4	SDL_opengl_glext.h	/^#define GL_NV_vertex_program4 /;"	kind:d
GL_NV_video_capture	SDL_opengl_glext.h	/^#define GL_NV_video_capture /;"	kind:d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	SDL_opengl_glext.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB /;"	kind:d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	SDL_opengl_glext.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB /;"	kind:d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	SDL_opengl_glext.h	/^#define GL_OBJECT_ACTIVE_UNIFORMS_ARB /;"	kind:d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	SDL_opengl_glext.h	/^#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB /;"	kind:d
GL_OBJECT_ATTACHED_OBJECTS_ARB	SDL_opengl_glext.h	/^#define GL_OBJECT_ATTACHED_OBJECTS_ARB /;"	kind:d
GL_OBJECT_BUFFER_SIZE_ATI	SDL_opengl_glext.h	/^#define GL_OBJECT_BUFFER_SIZE_ATI /;"	kind:d
GL_OBJECT_BUFFER_USAGE_ATI	SDL_opengl_glext.h	/^#define GL_OBJECT_BUFFER_USAGE_ATI /;"	kind:d
GL_OBJECT_COMPILE_STATUS_ARB	SDL_opengl_glext.h	/^#define GL_OBJECT_COMPILE_STATUS_ARB /;"	kind:d
GL_OBJECT_DELETE_STATUS_ARB	SDL_opengl_glext.h	/^#define GL_OBJECT_DELETE_STATUS_ARB /;"	kind:d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	SDL_opengl_glext.h	/^#define GL_OBJECT_DISTANCE_TO_LINE_SGIS /;"	kind:d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	SDL_opengl_glext.h	/^#define GL_OBJECT_DISTANCE_TO_POINT_SGIS /;"	kind:d
GL_OBJECT_INFO_LOG_LENGTH_ARB	SDL_opengl_glext.h	/^#define GL_OBJECT_INFO_LOG_LENGTH_ARB /;"	kind:d
GL_OBJECT_LINEAR	SDL_opengl.h	/^#define GL_OBJECT_LINEAR	/;"	kind:d
GL_OBJECT_LINE_SGIS	SDL_opengl_glext.h	/^#define GL_OBJECT_LINE_SGIS /;"	kind:d
GL_OBJECT_LINK_STATUS_ARB	SDL_opengl_glext.h	/^#define GL_OBJECT_LINK_STATUS_ARB /;"	kind:d
GL_OBJECT_PLANE	SDL_opengl.h	/^#define GL_OBJECT_PLANE	/;"	kind:d
GL_OBJECT_POINT_SGIS	SDL_opengl_glext.h	/^#define GL_OBJECT_POINT_SGIS /;"	kind:d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	SDL_opengl_glext.h	/^#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB /;"	kind:d
GL_OBJECT_SUBTYPE_ARB	SDL_opengl_glext.h	/^#define GL_OBJECT_SUBTYPE_ARB /;"	kind:d
GL_OBJECT_TYPE	SDL_opengl_glext.h	/^#define GL_OBJECT_TYPE /;"	kind:d
GL_OBJECT_TYPE_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_OBJECT_TYPE_APPLE /;"	kind:d
GL_OBJECT_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_OBJECT_TYPE_ARB /;"	kind:d
GL_OBJECT_VALIDATE_STATUS_ARB	SDL_opengl_glext.h	/^#define GL_OBJECT_VALIDATE_STATUS_ARB /;"	kind:d
GL_OCCLUSION_QUERY_EVENT_MASK_AMD	SDL_opengl_glext.h	/^#define GL_OCCLUSION_QUERY_EVENT_MASK_AMD /;"	kind:d
GL_OCCLUSION_TEST_HP	SDL_opengl_glext.h	/^#define GL_OCCLUSION_TEST_HP /;"	kind:d
GL_OCCLUSION_TEST_RESULT_HP	SDL_opengl_glext.h	/^#define GL_OCCLUSION_TEST_RESULT_HP /;"	kind:d
GL_OES_EGL_image	SDL_opengl.h	/^#define GL_OES_EGL_image /;"	kind:d
GL_OES_EGL_image	SDL_opengles2_gl2ext.h	/^#define GL_OES_EGL_image /;"	kind:d
GL_OES_EGL_image_external	SDL_opengles2_gl2ext.h	/^#define GL_OES_EGL_image_external /;"	kind:d
GL_OES_byte_coordinates	SDL_opengl_glext.h	/^#define GL_OES_byte_coordinates /;"	kind:d
GL_OES_compressed_ETC1_RGB8_texture	SDL_opengles2_gl2ext.h	/^#define GL_OES_compressed_ETC1_RGB8_texture /;"	kind:d
GL_OES_compressed_paletted_texture	SDL_opengl_glext.h	/^#define GL_OES_compressed_paletted_texture /;"	kind:d
GL_OES_compressed_paletted_texture	SDL_opengles2_gl2ext.h	/^#define GL_OES_compressed_paletted_texture /;"	kind:d
GL_OES_depth24	SDL_opengles2_gl2ext.h	/^#define GL_OES_depth24 /;"	kind:d
GL_OES_depth32	SDL_opengles2_gl2ext.h	/^#define GL_OES_depth32 /;"	kind:d
GL_OES_depth_texture	SDL_opengles2_gl2ext.h	/^#define GL_OES_depth_texture /;"	kind:d
GL_OES_element_index_uint	SDL_opengles2_gl2ext.h	/^#define GL_OES_element_index_uint /;"	kind:d
GL_OES_fbo_render_mipmap	SDL_opengles2_gl2ext.h	/^#define GL_OES_fbo_render_mipmap /;"	kind:d
GL_OES_fixed_point	SDL_opengl_glext.h	/^#define GL_OES_fixed_point /;"	kind:d
GL_OES_fragment_precision_high	SDL_opengles2_gl2ext.h	/^#define GL_OES_fragment_precision_high /;"	kind:d
GL_OES_get_program_binary	SDL_opengles2_gl2ext.h	/^#define GL_OES_get_program_binary /;"	kind:d
GL_OES_mapbuffer	SDL_opengles2_gl2ext.h	/^#define GL_OES_mapbuffer /;"	kind:d
GL_OES_packed_depth_stencil	SDL_opengles2_gl2ext.h	/^#define GL_OES_packed_depth_stencil /;"	kind:d
GL_OES_query_matrix	SDL_opengl_glext.h	/^#define GL_OES_query_matrix /;"	kind:d
GL_OES_read_format	SDL_opengl_glext.h	/^#define GL_OES_read_format /;"	kind:d
GL_OES_required_internalformat	SDL_opengles2_gl2ext.h	/^#define GL_OES_required_internalformat /;"	kind:d
GL_OES_rgb8_rgba8	SDL_opengles2_gl2ext.h	/^#define GL_OES_rgb8_rgba8 /;"	kind:d
GL_OES_single_precision	SDL_opengl_glext.h	/^#define GL_OES_single_precision /;"	kind:d
GL_OES_standard_derivatives	SDL_opengles2_gl2ext.h	/^#define GL_OES_standard_derivatives /;"	kind:d
GL_OES_stencil1	SDL_opengles2_gl2ext.h	/^#define GL_OES_stencil1 /;"	kind:d
GL_OES_stencil4	SDL_opengles2_gl2ext.h	/^#define GL_OES_stencil4 /;"	kind:d
GL_OES_surfaceless_context	SDL_opengles2_gl2ext.h	/^#define GL_OES_surfaceless_context /;"	kind:d
GL_OES_texture_3D	SDL_opengles2_gl2ext.h	/^#define GL_OES_texture_3D /;"	kind:d
GL_OES_texture_float	SDL_opengles2_gl2ext.h	/^#define GL_OES_texture_float /;"	kind:d
GL_OES_texture_float_linear	SDL_opengles2_gl2ext.h	/^#define GL_OES_texture_float_linear /;"	kind:d
GL_OES_texture_half_float	SDL_opengles2_gl2ext.h	/^#define GL_OES_texture_half_float /;"	kind:d
GL_OES_texture_half_float_linear	SDL_opengles2_gl2ext.h	/^#define GL_OES_texture_half_float_linear /;"	kind:d
GL_OES_texture_npot	SDL_opengles2_gl2ext.h	/^#define GL_OES_texture_npot /;"	kind:d
GL_OES_vertex_array_object	SDL_opengles2_gl2ext.h	/^#define GL_OES_vertex_array_object /;"	kind:d
GL_OES_vertex_half_float	SDL_opengles2_gl2ext.h	/^#define GL_OES_vertex_half_float /;"	kind:d
GL_OES_vertex_type_10_10_10_2	SDL_opengles2_gl2ext.h	/^#define GL_OES_vertex_type_10_10_10_2 /;"	kind:d
GL_OFFSET	SDL_opengl_glext.h	/^#define GL_OFFSET /;"	kind:d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV /;"	kind:d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	kind:d
GL_OFFSET_HILO_TEXTURE_2D_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_HILO_TEXTURE_2D_NV /;"	kind:d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV /;"	kind:d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV /;"	kind:d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV /;"	kind:d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	kind:d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV /;"	kind:d
GL_OFFSET_TEXTURE_2D_BIAS_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_2D_BIAS_NV /;"	kind:d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_2D_MATRIX_NV /;"	kind:d
GL_OFFSET_TEXTURE_2D_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_2D_NV /;"	kind:d
GL_OFFSET_TEXTURE_2D_SCALE_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_2D_SCALE_NV /;"	kind:d
GL_OFFSET_TEXTURE_BIAS_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_BIAS_NV /;"	kind:d
GL_OFFSET_TEXTURE_MATRIX_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_MATRIX_NV /;"	kind:d
GL_OFFSET_TEXTURE_RECTANGLE_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_NV /;"	kind:d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV /;"	kind:d
GL_OFFSET_TEXTURE_SCALE_NV	SDL_opengl_glext.h	/^#define GL_OFFSET_TEXTURE_SCALE_NV /;"	kind:d
GL_OML_interlace	SDL_opengl_glext.h	/^#define GL_OML_interlace /;"	kind:d
GL_OML_resample	SDL_opengl_glext.h	/^#define GL_OML_resample /;"	kind:d
GL_OML_subsample	SDL_opengl_glext.h	/^#define GL_OML_subsample /;"	kind:d
GL_ONE	SDL_opengl.h	/^#define GL_ONE	/;"	kind:d
GL_ONE	SDL_opengles2_gl2.h	/^#define GL_ONE /;"	kind:d
GL_ONE_EXT	SDL_opengl_glext.h	/^#define GL_ONE_EXT /;"	kind:d
GL_ONE_MINUS_CONSTANT_ALPHA	SDL_opengl.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA	/;"	kind:d
GL_ONE_MINUS_CONSTANT_ALPHA	SDL_opengl_glext.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	kind:d
GL_ONE_MINUS_CONSTANT_ALPHA	SDL_opengles2_gl2.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	kind:d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT /;"	kind:d
GL_ONE_MINUS_CONSTANT_COLOR	SDL_opengl.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR	/;"	kind:d
GL_ONE_MINUS_CONSTANT_COLOR	SDL_opengl_glext.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	kind:d
GL_ONE_MINUS_CONSTANT_COLOR	SDL_opengles2_gl2.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	kind:d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	SDL_opengl_glext.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR_EXT /;"	kind:d
GL_ONE_MINUS_DST_ALPHA	SDL_opengl.h	/^#define GL_ONE_MINUS_DST_ALPHA	/;"	kind:d
GL_ONE_MINUS_DST_ALPHA	SDL_opengles2_gl2.h	/^#define GL_ONE_MINUS_DST_ALPHA /;"	kind:d
GL_ONE_MINUS_DST_COLOR	SDL_opengl.h	/^#define GL_ONE_MINUS_DST_COLOR	/;"	kind:d
GL_ONE_MINUS_DST_COLOR	SDL_opengles2_gl2.h	/^#define GL_ONE_MINUS_DST_COLOR /;"	kind:d
GL_ONE_MINUS_SRC1_ALPHA	SDL_opengl_glext.h	/^#define GL_ONE_MINUS_SRC1_ALPHA /;"	kind:d
GL_ONE_MINUS_SRC1_COLOR	SDL_opengl_glext.h	/^#define GL_ONE_MINUS_SRC1_COLOR /;"	kind:d
GL_ONE_MINUS_SRC_ALPHA	SDL_opengl.h	/^#define GL_ONE_MINUS_SRC_ALPHA	/;"	kind:d
GL_ONE_MINUS_SRC_ALPHA	SDL_opengles2_gl2.h	/^#define GL_ONE_MINUS_SRC_ALPHA /;"	kind:d
GL_ONE_MINUS_SRC_COLOR	SDL_opengl.h	/^#define GL_ONE_MINUS_SRC_COLOR	/;"	kind:d
GL_ONE_MINUS_SRC_COLOR	SDL_opengles2_gl2.h	/^#define GL_ONE_MINUS_SRC_COLOR /;"	kind:d
GL_OPERAND0_ALPHA	SDL_opengl.h	/^#define GL_OPERAND0_ALPHA	/;"	kind:d
GL_OPERAND0_ALPHA	SDL_opengl_glext.h	/^#define GL_OPERAND0_ALPHA /;"	kind:d
GL_OPERAND0_ALPHA_ARB	SDL_opengl_glext.h	/^#define GL_OPERAND0_ALPHA_ARB /;"	kind:d
GL_OPERAND0_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_OPERAND0_ALPHA_EXT /;"	kind:d
GL_OPERAND0_RGB	SDL_opengl.h	/^#define GL_OPERAND0_RGB	/;"	kind:d
GL_OPERAND0_RGB	SDL_opengl_glext.h	/^#define GL_OPERAND0_RGB /;"	kind:d
GL_OPERAND0_RGB_ARB	SDL_opengl_glext.h	/^#define GL_OPERAND0_RGB_ARB /;"	kind:d
GL_OPERAND0_RGB_EXT	SDL_opengl_glext.h	/^#define GL_OPERAND0_RGB_EXT /;"	kind:d
GL_OPERAND1_ALPHA	SDL_opengl.h	/^#define GL_OPERAND1_ALPHA	/;"	kind:d
GL_OPERAND1_ALPHA	SDL_opengl_glext.h	/^#define GL_OPERAND1_ALPHA /;"	kind:d
GL_OPERAND1_ALPHA_ARB	SDL_opengl_glext.h	/^#define GL_OPERAND1_ALPHA_ARB /;"	kind:d
GL_OPERAND1_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_OPERAND1_ALPHA_EXT /;"	kind:d
GL_OPERAND1_RGB	SDL_opengl.h	/^#define GL_OPERAND1_RGB	/;"	kind:d
GL_OPERAND1_RGB	SDL_opengl_glext.h	/^#define GL_OPERAND1_RGB /;"	kind:d
GL_OPERAND1_RGB_ARB	SDL_opengl_glext.h	/^#define GL_OPERAND1_RGB_ARB /;"	kind:d
GL_OPERAND1_RGB_EXT	SDL_opengl_glext.h	/^#define GL_OPERAND1_RGB_EXT /;"	kind:d
GL_OPERAND2_ALPHA	SDL_opengl.h	/^#define GL_OPERAND2_ALPHA	/;"	kind:d
GL_OPERAND2_ALPHA	SDL_opengl_glext.h	/^#define GL_OPERAND2_ALPHA /;"	kind:d
GL_OPERAND2_ALPHA_ARB	SDL_opengl_glext.h	/^#define GL_OPERAND2_ALPHA_ARB /;"	kind:d
GL_OPERAND2_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_OPERAND2_ALPHA_EXT /;"	kind:d
GL_OPERAND2_RGB	SDL_opengl.h	/^#define GL_OPERAND2_RGB	/;"	kind:d
GL_OPERAND2_RGB	SDL_opengl_glext.h	/^#define GL_OPERAND2_RGB /;"	kind:d
GL_OPERAND2_RGB_ARB	SDL_opengl_glext.h	/^#define GL_OPERAND2_RGB_ARB /;"	kind:d
GL_OPERAND2_RGB_EXT	SDL_opengl_glext.h	/^#define GL_OPERAND2_RGB_EXT /;"	kind:d
GL_OPERAND3_ALPHA_NV	SDL_opengl_glext.h	/^#define GL_OPERAND3_ALPHA_NV /;"	kind:d
GL_OPERAND3_RGB_NV	SDL_opengl_glext.h	/^#define GL_OPERAND3_RGB_NV /;"	kind:d
GL_OP_ADD_EXT	SDL_opengl_glext.h	/^#define GL_OP_ADD_EXT /;"	kind:d
GL_OP_CLAMP_EXT	SDL_opengl_glext.h	/^#define GL_OP_CLAMP_EXT /;"	kind:d
GL_OP_CROSS_PRODUCT_EXT	SDL_opengl_glext.h	/^#define GL_OP_CROSS_PRODUCT_EXT /;"	kind:d
GL_OP_DOT3_EXT	SDL_opengl_glext.h	/^#define GL_OP_DOT3_EXT /;"	kind:d
GL_OP_DOT4_EXT	SDL_opengl_glext.h	/^#define GL_OP_DOT4_EXT /;"	kind:d
GL_OP_EXP_BASE_2_EXT	SDL_opengl_glext.h	/^#define GL_OP_EXP_BASE_2_EXT /;"	kind:d
GL_OP_FLOOR_EXT	SDL_opengl_glext.h	/^#define GL_OP_FLOOR_EXT /;"	kind:d
GL_OP_FRAC_EXT	SDL_opengl_glext.h	/^#define GL_OP_FRAC_EXT /;"	kind:d
GL_OP_INDEX_EXT	SDL_opengl_glext.h	/^#define GL_OP_INDEX_EXT /;"	kind:d
GL_OP_LOG_BASE_2_EXT	SDL_opengl_glext.h	/^#define GL_OP_LOG_BASE_2_EXT /;"	kind:d
GL_OP_MADD_EXT	SDL_opengl_glext.h	/^#define GL_OP_MADD_EXT /;"	kind:d
GL_OP_MAX_EXT	SDL_opengl_glext.h	/^#define GL_OP_MAX_EXT /;"	kind:d
GL_OP_MIN_EXT	SDL_opengl_glext.h	/^#define GL_OP_MIN_EXT /;"	kind:d
GL_OP_MOV_EXT	SDL_opengl_glext.h	/^#define GL_OP_MOV_EXT /;"	kind:d
GL_OP_MULTIPLY_MATRIX_EXT	SDL_opengl_glext.h	/^#define GL_OP_MULTIPLY_MATRIX_EXT /;"	kind:d
GL_OP_MUL_EXT	SDL_opengl_glext.h	/^#define GL_OP_MUL_EXT /;"	kind:d
GL_OP_NEGATE_EXT	SDL_opengl_glext.h	/^#define GL_OP_NEGATE_EXT /;"	kind:d
GL_OP_POWER_EXT	SDL_opengl_glext.h	/^#define GL_OP_POWER_EXT /;"	kind:d
GL_OP_RECIP_EXT	SDL_opengl_glext.h	/^#define GL_OP_RECIP_EXT /;"	kind:d
GL_OP_RECIP_SQRT_EXT	SDL_opengl_glext.h	/^#define GL_OP_RECIP_SQRT_EXT /;"	kind:d
GL_OP_ROUND_EXT	SDL_opengl_glext.h	/^#define GL_OP_ROUND_EXT /;"	kind:d
GL_OP_SET_GE_EXT	SDL_opengl_glext.h	/^#define GL_OP_SET_GE_EXT /;"	kind:d
GL_OP_SET_LT_EXT	SDL_opengl_glext.h	/^#define GL_OP_SET_LT_EXT /;"	kind:d
GL_OP_SUB_EXT	SDL_opengl_glext.h	/^#define GL_OP_SUB_EXT /;"	kind:d
GL_OR	SDL_opengl.h	/^#define GL_OR	/;"	kind:d
GL_ORDER	SDL_opengl.h	/^#define GL_ORDER	/;"	kind:d
GL_OR_INVERTED	SDL_opengl.h	/^#define GL_OR_INVERTED	/;"	kind:d
GL_OR_REVERSE	SDL_opengl.h	/^#define GL_OR_REVERSE	/;"	kind:d
GL_OUTPUT_COLOR0_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_COLOR0_EXT /;"	kind:d
GL_OUTPUT_COLOR1_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_COLOR1_EXT /;"	kind:d
GL_OUTPUT_FOG_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_FOG_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD0_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD0_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD10_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD10_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD11_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD11_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD12_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD12_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD13_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD13_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD14_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD14_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD15_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD15_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD16_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD16_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD17_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD17_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD18_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD18_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD19_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD19_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD1_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD1_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD20_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD20_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD21_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD21_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD22_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD22_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD23_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD23_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD24_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD24_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD25_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD25_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD26_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD26_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD27_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD27_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD28_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD28_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD29_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD29_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD2_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD2_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD30_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD30_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD31_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD31_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD3_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD3_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD4_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD4_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD5_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD5_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD6_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD6_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD7_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD7_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD8_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD8_EXT /;"	kind:d
GL_OUTPUT_TEXTURE_COORD9_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_TEXTURE_COORD9_EXT /;"	kind:d
GL_OUTPUT_VERTEX_EXT	SDL_opengl_glext.h	/^#define GL_OUTPUT_VERTEX_EXT /;"	kind:d
GL_OUT_OF_MEMORY	SDL_opengl.h	/^#define GL_OUT_OF_MEMORY	/;"	kind:d
GL_OUT_OF_MEMORY	SDL_opengles2_gl2.h	/^#define GL_OUT_OF_MEMORY /;"	kind:d
GL_OVERLAY_NV	SDL_opengl_glext.h	/^#define GL_OVERLAY_NV /;"	kind:d
GL_PACK_ALIGNMENT	SDL_opengl.h	/^#define GL_PACK_ALIGNMENT	/;"	kind:d
GL_PACK_ALIGNMENT	SDL_opengles2_gl2.h	/^#define GL_PACK_ALIGNMENT /;"	kind:d
GL_PACK_CMYK_HINT_EXT	SDL_opengl_glext.h	/^#define GL_PACK_CMYK_HINT_EXT /;"	kind:d
GL_PACK_COMPRESSED_BLOCK_DEPTH	SDL_opengl_glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_DEPTH /;"	kind:d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	SDL_opengl_glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_HEIGHT /;"	kind:d
GL_PACK_COMPRESSED_BLOCK_SIZE	SDL_opengl_glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_SIZE /;"	kind:d
GL_PACK_COMPRESSED_BLOCK_WIDTH	SDL_opengl_glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_WIDTH /;"	kind:d
GL_PACK_IMAGE_DEPTH_SGIS	SDL_opengl_glext.h	/^#define GL_PACK_IMAGE_DEPTH_SGIS /;"	kind:d
GL_PACK_IMAGE_HEIGHT	SDL_opengl.h	/^#define GL_PACK_IMAGE_HEIGHT	/;"	kind:d
GL_PACK_IMAGE_HEIGHT	SDL_opengl_glext.h	/^#define GL_PACK_IMAGE_HEIGHT /;"	kind:d
GL_PACK_IMAGE_HEIGHT_EXT	SDL_opengl_glext.h	/^#define GL_PACK_IMAGE_HEIGHT_EXT /;"	kind:d
GL_PACK_INVERT_MESA	SDL_opengl_glext.h	/^#define GL_PACK_INVERT_MESA /;"	kind:d
GL_PACK_LSB_FIRST	SDL_opengl.h	/^#define GL_PACK_LSB_FIRST	/;"	kind:d
GL_PACK_RESAMPLE_OML	SDL_opengl_glext.h	/^#define GL_PACK_RESAMPLE_OML /;"	kind:d
GL_PACK_RESAMPLE_SGIX	SDL_opengl_glext.h	/^#define GL_PACK_RESAMPLE_SGIX /;"	kind:d
GL_PACK_REVERSE_ROW_ORDER_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_PACK_REVERSE_ROW_ORDER_ANGLE /;"	kind:d
GL_PACK_ROW_BYTES_APPLE	SDL_opengl_glext.h	/^#define GL_PACK_ROW_BYTES_APPLE /;"	kind:d
GL_PACK_ROW_LENGTH	SDL_opengl.h	/^#define GL_PACK_ROW_LENGTH	/;"	kind:d
GL_PACK_SKIP_IMAGES	SDL_opengl.h	/^#define GL_PACK_SKIP_IMAGES	/;"	kind:d
GL_PACK_SKIP_IMAGES	SDL_opengl_glext.h	/^#define GL_PACK_SKIP_IMAGES /;"	kind:d
GL_PACK_SKIP_IMAGES_EXT	SDL_opengl_glext.h	/^#define GL_PACK_SKIP_IMAGES_EXT /;"	kind:d
GL_PACK_SKIP_PIXELS	SDL_opengl.h	/^#define GL_PACK_SKIP_PIXELS	/;"	kind:d
GL_PACK_SKIP_ROWS	SDL_opengl.h	/^#define GL_PACK_SKIP_ROWS	/;"	kind:d
GL_PACK_SKIP_VOLUMES_SGIS	SDL_opengl_glext.h	/^#define GL_PACK_SKIP_VOLUMES_SGIS /;"	kind:d
GL_PACK_SUBSAMPLE_RATE_SGIX	SDL_opengl_glext.h	/^#define GL_PACK_SUBSAMPLE_RATE_SGIX /;"	kind:d
GL_PACK_SWAP_BYTES	SDL_opengl.h	/^#define GL_PACK_SWAP_BYTES	/;"	kind:d
GL_PALETTE4_R5_G6_B5_OES	SDL_opengl_glext.h	/^#define GL_PALETTE4_R5_G6_B5_OES /;"	kind:d
GL_PALETTE4_R5_G6_B5_OES	SDL_opengles2_gl2ext.h	/^#define GL_PALETTE4_R5_G6_B5_OES /;"	kind:d
GL_PALETTE4_RGB5_A1_OES	SDL_opengl_glext.h	/^#define GL_PALETTE4_RGB5_A1_OES /;"	kind:d
GL_PALETTE4_RGB5_A1_OES	SDL_opengles2_gl2ext.h	/^#define GL_PALETTE4_RGB5_A1_OES /;"	kind:d
GL_PALETTE4_RGB8_OES	SDL_opengl_glext.h	/^#define GL_PALETTE4_RGB8_OES /;"	kind:d
GL_PALETTE4_RGB8_OES	SDL_opengles2_gl2ext.h	/^#define GL_PALETTE4_RGB8_OES /;"	kind:d
GL_PALETTE4_RGBA4_OES	SDL_opengl_glext.h	/^#define GL_PALETTE4_RGBA4_OES /;"	kind:d
GL_PALETTE4_RGBA4_OES	SDL_opengles2_gl2ext.h	/^#define GL_PALETTE4_RGBA4_OES /;"	kind:d
GL_PALETTE4_RGBA8_OES	SDL_opengl_glext.h	/^#define GL_PALETTE4_RGBA8_OES /;"	kind:d
GL_PALETTE4_RGBA8_OES	SDL_opengles2_gl2ext.h	/^#define GL_PALETTE4_RGBA8_OES /;"	kind:d
GL_PALETTE8_R5_G6_B5_OES	SDL_opengl_glext.h	/^#define GL_PALETTE8_R5_G6_B5_OES /;"	kind:d
GL_PALETTE8_R5_G6_B5_OES	SDL_opengles2_gl2ext.h	/^#define GL_PALETTE8_R5_G6_B5_OES /;"	kind:d
GL_PALETTE8_RGB5_A1_OES	SDL_opengl_glext.h	/^#define GL_PALETTE8_RGB5_A1_OES /;"	kind:d
GL_PALETTE8_RGB5_A1_OES	SDL_opengles2_gl2ext.h	/^#define GL_PALETTE8_RGB5_A1_OES /;"	kind:d
GL_PALETTE8_RGB8_OES	SDL_opengl_glext.h	/^#define GL_PALETTE8_RGB8_OES /;"	kind:d
GL_PALETTE8_RGB8_OES	SDL_opengles2_gl2ext.h	/^#define GL_PALETTE8_RGB8_OES /;"	kind:d
GL_PALETTE8_RGBA4_OES	SDL_opengl_glext.h	/^#define GL_PALETTE8_RGBA4_OES /;"	kind:d
GL_PALETTE8_RGBA4_OES	SDL_opengles2_gl2ext.h	/^#define GL_PALETTE8_RGBA4_OES /;"	kind:d
GL_PALETTE8_RGBA8_OES	SDL_opengl_glext.h	/^#define GL_PALETTE8_RGBA8_OES /;"	kind:d
GL_PALETTE8_RGBA8_OES	SDL_opengles2_gl2ext.h	/^#define GL_PALETTE8_RGBA8_OES /;"	kind:d
GL_PARALLEL_ARRAYS_INTEL	SDL_opengl_glext.h	/^#define GL_PARALLEL_ARRAYS_INTEL /;"	kind:d
GL_PARAMETER_BUFFER_ARB	SDL_opengl_glext.h	/^#define GL_PARAMETER_BUFFER_ARB /;"	kind:d
GL_PARAMETER_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_PARAMETER_BUFFER_BINDING_ARB /;"	kind:d
GL_PARTIAL_SUCCESS_NV	SDL_opengl_glext.h	/^#define GL_PARTIAL_SUCCESS_NV /;"	kind:d
GL_PASS_THROUGH_NV	SDL_opengl_glext.h	/^#define GL_PASS_THROUGH_NV /;"	kind:d
GL_PASS_THROUGH_TOKEN	SDL_opengl.h	/^#define GL_PASS_THROUGH_TOKEN	/;"	kind:d
GL_PATCHES	SDL_opengl_glext.h	/^#define GL_PATCHES /;"	kind:d
GL_PATCH_DEFAULT_INNER_LEVEL	SDL_opengl_glext.h	/^#define GL_PATCH_DEFAULT_INNER_LEVEL /;"	kind:d
GL_PATCH_DEFAULT_OUTER_LEVEL	SDL_opengl_glext.h	/^#define GL_PATCH_DEFAULT_OUTER_LEVEL /;"	kind:d
GL_PATCH_VERTICES	SDL_opengl_glext.h	/^#define GL_PATCH_VERTICES /;"	kind:d
GL_PATH_CLIENT_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_PATH_CLIENT_LENGTH_NV /;"	kind:d
GL_PATH_COMMAND_COUNT_NV	SDL_opengl_glext.h	/^#define GL_PATH_COMMAND_COUNT_NV /;"	kind:d
GL_PATH_COMPUTED_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_PATH_COMPUTED_LENGTH_NV /;"	kind:d
GL_PATH_COORD_COUNT_NV	SDL_opengl_glext.h	/^#define GL_PATH_COORD_COUNT_NV /;"	kind:d
GL_PATH_COVER_DEPTH_FUNC_NV	SDL_opengl_glext.h	/^#define GL_PATH_COVER_DEPTH_FUNC_NV /;"	kind:d
GL_PATH_DASH_ARRAY_COUNT_NV	SDL_opengl_glext.h	/^#define GL_PATH_DASH_ARRAY_COUNT_NV /;"	kind:d
GL_PATH_DASH_CAPS_NV	SDL_opengl_glext.h	/^#define GL_PATH_DASH_CAPS_NV /;"	kind:d
GL_PATH_DASH_OFFSET_NV	SDL_opengl_glext.h	/^#define GL_PATH_DASH_OFFSET_NV /;"	kind:d
GL_PATH_DASH_OFFSET_RESET_NV	SDL_opengl_glext.h	/^#define GL_PATH_DASH_OFFSET_RESET_NV /;"	kind:d
GL_PATH_END_CAPS_NV	SDL_opengl_glext.h	/^#define GL_PATH_END_CAPS_NV /;"	kind:d
GL_PATH_ERROR_POSITION_NV	SDL_opengl_glext.h	/^#define GL_PATH_ERROR_POSITION_NV /;"	kind:d
GL_PATH_FILL_BOUNDING_BOX_NV	SDL_opengl_glext.h	/^#define GL_PATH_FILL_BOUNDING_BOX_NV /;"	kind:d
GL_PATH_FILL_COVER_MODE_NV	SDL_opengl_glext.h	/^#define GL_PATH_FILL_COVER_MODE_NV /;"	kind:d
GL_PATH_FILL_MASK_NV	SDL_opengl_glext.h	/^#define GL_PATH_FILL_MASK_NV /;"	kind:d
GL_PATH_FILL_MODE_NV	SDL_opengl_glext.h	/^#define GL_PATH_FILL_MODE_NV /;"	kind:d
GL_PATH_FOG_GEN_MODE_NV	SDL_opengl_glext.h	/^#define GL_PATH_FOG_GEN_MODE_NV /;"	kind:d
GL_PATH_FORMAT_PS_NV	SDL_opengl_glext.h	/^#define GL_PATH_FORMAT_PS_NV /;"	kind:d
GL_PATH_FORMAT_SVG_NV	SDL_opengl_glext.h	/^#define GL_PATH_FORMAT_SVG_NV /;"	kind:d
GL_PATH_GEN_COEFF_NV	SDL_opengl_glext.h	/^#define GL_PATH_GEN_COEFF_NV /;"	kind:d
GL_PATH_GEN_COLOR_FORMAT_NV	SDL_opengl_glext.h	/^#define GL_PATH_GEN_COLOR_FORMAT_NV /;"	kind:d
GL_PATH_GEN_COMPONENTS_NV	SDL_opengl_glext.h	/^#define GL_PATH_GEN_COMPONENTS_NV /;"	kind:d
GL_PATH_GEN_MODE_NV	SDL_opengl_glext.h	/^#define GL_PATH_GEN_MODE_NV /;"	kind:d
GL_PATH_INITIAL_DASH_CAP_NV	SDL_opengl_glext.h	/^#define GL_PATH_INITIAL_DASH_CAP_NV /;"	kind:d
GL_PATH_INITIAL_END_CAP_NV	SDL_opengl_glext.h	/^#define GL_PATH_INITIAL_END_CAP_NV /;"	kind:d
GL_PATH_JOIN_STYLE_NV	SDL_opengl_glext.h	/^#define GL_PATH_JOIN_STYLE_NV /;"	kind:d
GL_PATH_MITER_LIMIT_NV	SDL_opengl_glext.h	/^#define GL_PATH_MITER_LIMIT_NV /;"	kind:d
GL_PATH_OBJECT_BOUNDING_BOX_NV	SDL_opengl_glext.h	/^#define GL_PATH_OBJECT_BOUNDING_BOX_NV /;"	kind:d
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV	SDL_opengl_glext.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV /;"	kind:d
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV	SDL_opengl_glext.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV /;"	kind:d
GL_PATH_STENCIL_FUNC_NV	SDL_opengl_glext.h	/^#define GL_PATH_STENCIL_FUNC_NV /;"	kind:d
GL_PATH_STENCIL_REF_NV	SDL_opengl_glext.h	/^#define GL_PATH_STENCIL_REF_NV /;"	kind:d
GL_PATH_STENCIL_VALUE_MASK_NV	SDL_opengl_glext.h	/^#define GL_PATH_STENCIL_VALUE_MASK_NV /;"	kind:d
GL_PATH_STROKE_BOUNDING_BOX_NV	SDL_opengl_glext.h	/^#define GL_PATH_STROKE_BOUNDING_BOX_NV /;"	kind:d
GL_PATH_STROKE_COVER_MODE_NV	SDL_opengl_glext.h	/^#define GL_PATH_STROKE_COVER_MODE_NV /;"	kind:d
GL_PATH_STROKE_MASK_NV	SDL_opengl_glext.h	/^#define GL_PATH_STROKE_MASK_NV /;"	kind:d
GL_PATH_STROKE_WIDTH_NV	SDL_opengl_glext.h	/^#define GL_PATH_STROKE_WIDTH_NV /;"	kind:d
GL_PATH_TERMINAL_DASH_CAP_NV	SDL_opengl_glext.h	/^#define GL_PATH_TERMINAL_DASH_CAP_NV /;"	kind:d
GL_PATH_TERMINAL_END_CAP_NV	SDL_opengl_glext.h	/^#define GL_PATH_TERMINAL_END_CAP_NV /;"	kind:d
GL_PERCENTAGE_AMD	SDL_opengl_glext.h	/^#define GL_PERCENTAGE_AMD /;"	kind:d
GL_PERCENTAGE_AMD	SDL_opengles2_gl2ext.h	/^#define GL_PERCENTAGE_AMD /;"	kind:d
GL_PERFMON_GLOBAL_MODE_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_PERFMON_GLOBAL_MODE_QCOM /;"	kind:d
GL_PERFMON_RESULT_AMD	SDL_opengl_glext.h	/^#define GL_PERFMON_RESULT_AMD /;"	kind:d
GL_PERFMON_RESULT_AMD	SDL_opengles2_gl2ext.h	/^#define GL_PERFMON_RESULT_AMD /;"	kind:d
GL_PERFMON_RESULT_AVAILABLE_AMD	SDL_opengl_glext.h	/^#define GL_PERFMON_RESULT_AVAILABLE_AMD /;"	kind:d
GL_PERFMON_RESULT_AVAILABLE_AMD	SDL_opengles2_gl2ext.h	/^#define GL_PERFMON_RESULT_AVAILABLE_AMD /;"	kind:d
GL_PERFMON_RESULT_SIZE_AMD	SDL_opengl_glext.h	/^#define GL_PERFMON_RESULT_SIZE_AMD /;"	kind:d
GL_PERFMON_RESULT_SIZE_AMD	SDL_opengles2_gl2ext.h	/^#define GL_PERFMON_RESULT_SIZE_AMD /;"	kind:d
GL_PERFORMANCE_MONITOR_AMD	SDL_opengl_glext.h	/^#define GL_PERFORMANCE_MONITOR_AMD /;"	kind:d
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL /;"	kind:d
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL /;"	kind:d
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL /;"	kind:d
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL /;"	kind:d
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL /;"	kind:d
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL /;"	kind:d
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL /;"	kind:d
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL /;"	kind:d
GL_PERFQUERY_COUNTER_EVENT_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_EVENT_INTEL /;"	kind:d
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL /;"	kind:d
GL_PERFQUERY_COUNTER_RAW_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_RAW_INTEL /;"	kind:d
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL /;"	kind:d
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL /;"	kind:d
GL_PERFQUERY_DONOT_FLUSH_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_DONOT_FLUSH_INTEL /;"	kind:d
GL_PERFQUERY_FLUSH_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_FLUSH_INTEL /;"	kind:d
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL /;"	kind:d
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL /;"	kind:d
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL /;"	kind:d
GL_PERFQUERY_SINGLE_CONTEXT_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL /;"	kind:d
GL_PERFQUERY_WAIT_INTEL	SDL_opengl_glext.h	/^#define GL_PERFQUERY_WAIT_INTEL /;"	kind:d
GL_PERSPECTIVE_CORRECTION_HINT	SDL_opengl.h	/^#define GL_PERSPECTIVE_CORRECTION_HINT	/;"	kind:d
GL_PERTURB_EXT	SDL_opengl_glext.h	/^#define GL_PERTURB_EXT /;"	kind:d
GL_PER_STAGE_CONSTANTS_NV	SDL_opengl_glext.h	/^#define GL_PER_STAGE_CONSTANTS_NV /;"	kind:d
GL_PGI_misc_hints	SDL_opengl_glext.h	/^#define GL_PGI_misc_hints /;"	kind:d
GL_PGI_vertex_hints	SDL_opengl_glext.h	/^#define GL_PGI_vertex_hints /;"	kind:d
GL_PHONG_HINT_WIN	SDL_opengl_glext.h	/^#define GL_PHONG_HINT_WIN /;"	kind:d
GL_PHONG_WIN	SDL_opengl_glext.h	/^#define GL_PHONG_WIN /;"	kind:d
GL_PINLIGHT_NV	SDL_opengl_glext.h	/^#define GL_PINLIGHT_NV /;"	kind:d
GL_PIXEL_BUFFER_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT /;"	kind:d
GL_PIXEL_BUFFER_BARRIER_BIT_EXT	SDL_opengl_glext.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT /;"	kind:d
GL_PIXEL_COUNTER_BITS_NV	SDL_opengl_glext.h	/^#define GL_PIXEL_COUNTER_BITS_NV /;"	kind:d
GL_PIXEL_COUNT_AVAILABLE_NV	SDL_opengl_glext.h	/^#define GL_PIXEL_COUNT_AVAILABLE_NV /;"	kind:d
GL_PIXEL_COUNT_NV	SDL_opengl_glext.h	/^#define GL_PIXEL_COUNT_NV /;"	kind:d
GL_PIXEL_CUBIC_WEIGHT_EXT	SDL_opengl_glext.h	/^#define GL_PIXEL_CUBIC_WEIGHT_EXT /;"	kind:d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	SDL_opengl_glext.h	/^#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS /;"	kind:d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	SDL_opengl_glext.h	/^#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS /;"	kind:d
GL_PIXEL_GROUP_COLOR_SGIS	SDL_opengl_glext.h	/^#define GL_PIXEL_GROUP_COLOR_SGIS /;"	kind:d
GL_PIXEL_MAG_FILTER_EXT	SDL_opengl_glext.h	/^#define GL_PIXEL_MAG_FILTER_EXT /;"	kind:d
GL_PIXEL_MAP_A_TO_A	SDL_opengl.h	/^#define GL_PIXEL_MAP_A_TO_A	/;"	kind:d
GL_PIXEL_MAP_A_TO_A_SIZE	SDL_opengl.h	/^#define GL_PIXEL_MAP_A_TO_A_SIZE	/;"	kind:d
GL_PIXEL_MAP_B_TO_B	SDL_opengl.h	/^#define GL_PIXEL_MAP_B_TO_B	/;"	kind:d
GL_PIXEL_MAP_B_TO_B_SIZE	SDL_opengl.h	/^#define GL_PIXEL_MAP_B_TO_B_SIZE	/;"	kind:d
GL_PIXEL_MAP_G_TO_G	SDL_opengl.h	/^#define GL_PIXEL_MAP_G_TO_G	/;"	kind:d
GL_PIXEL_MAP_G_TO_G_SIZE	SDL_opengl.h	/^#define GL_PIXEL_MAP_G_TO_G_SIZE	/;"	kind:d
GL_PIXEL_MAP_I_TO_A	SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_A	/;"	kind:d
GL_PIXEL_MAP_I_TO_A_SIZE	SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_A_SIZE	/;"	kind:d
GL_PIXEL_MAP_I_TO_B	SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_B	/;"	kind:d
GL_PIXEL_MAP_I_TO_B_SIZE	SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_B_SIZE	/;"	kind:d
GL_PIXEL_MAP_I_TO_G	SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_G	/;"	kind:d
GL_PIXEL_MAP_I_TO_G_SIZE	SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_G_SIZE	/;"	kind:d
GL_PIXEL_MAP_I_TO_I	SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_I	/;"	kind:d
GL_PIXEL_MAP_I_TO_I_SIZE	SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_I_SIZE	/;"	kind:d
GL_PIXEL_MAP_I_TO_R	SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_R	/;"	kind:d
GL_PIXEL_MAP_I_TO_R_SIZE	SDL_opengl.h	/^#define GL_PIXEL_MAP_I_TO_R_SIZE	/;"	kind:d
GL_PIXEL_MAP_R_TO_R	SDL_opengl.h	/^#define GL_PIXEL_MAP_R_TO_R	/;"	kind:d
GL_PIXEL_MAP_R_TO_R_SIZE	SDL_opengl.h	/^#define GL_PIXEL_MAP_R_TO_R_SIZE	/;"	kind:d
GL_PIXEL_MAP_S_TO_S	SDL_opengl.h	/^#define GL_PIXEL_MAP_S_TO_S	/;"	kind:d
GL_PIXEL_MAP_S_TO_S_SIZE	SDL_opengl.h	/^#define GL_PIXEL_MAP_S_TO_S_SIZE	/;"	kind:d
GL_PIXEL_MIN_FILTER_EXT	SDL_opengl_glext.h	/^#define GL_PIXEL_MIN_FILTER_EXT /;"	kind:d
GL_PIXEL_MODE_BIT	SDL_opengl.h	/^#define GL_PIXEL_MODE_BIT	/;"	kind:d
GL_PIXEL_PACK_BUFFER	SDL_opengl_glext.h	/^#define GL_PIXEL_PACK_BUFFER /;"	kind:d
GL_PIXEL_PACK_BUFFER_ARB	SDL_opengl_glext.h	/^#define GL_PIXEL_PACK_BUFFER_ARB /;"	kind:d
GL_PIXEL_PACK_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING /;"	kind:d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_ARB /;"	kind:d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	SDL_opengl_glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_EXT /;"	kind:d
GL_PIXEL_PACK_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_PIXEL_PACK_BUFFER_EXT /;"	kind:d
GL_PIXEL_SUBSAMPLE_2424_SGIX	SDL_opengl_glext.h	/^#define GL_PIXEL_SUBSAMPLE_2424_SGIX /;"	kind:d
GL_PIXEL_SUBSAMPLE_4242_SGIX	SDL_opengl_glext.h	/^#define GL_PIXEL_SUBSAMPLE_4242_SGIX /;"	kind:d
GL_PIXEL_SUBSAMPLE_4444_SGIX	SDL_opengl_glext.h	/^#define GL_PIXEL_SUBSAMPLE_4444_SGIX /;"	kind:d
GL_PIXEL_TEXTURE_SGIS	SDL_opengl_glext.h	/^#define GL_PIXEL_TEXTURE_SGIS /;"	kind:d
GL_PIXEL_TEX_GEN_MODE_SGIX	SDL_opengl_glext.h	/^#define GL_PIXEL_TEX_GEN_MODE_SGIX /;"	kind:d
GL_PIXEL_TEX_GEN_SGIX	SDL_opengl_glext.h	/^#define GL_PIXEL_TEX_GEN_SGIX /;"	kind:d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX /;"	kind:d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX /;"	kind:d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_CACHE_SIZE_SGIX /;"	kind:d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_GRID_DEPTH_SGIX /;"	kind:d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX /;"	kind:d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_GRID_WIDTH_SGIX /;"	kind:d
GL_PIXEL_TILE_HEIGHT_SGIX	SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_HEIGHT_SGIX /;"	kind:d
GL_PIXEL_TILE_WIDTH_SGIX	SDL_opengl_glext.h	/^#define GL_PIXEL_TILE_WIDTH_SGIX /;"	kind:d
GL_PIXEL_TRANSFORM_2D_EXT	SDL_opengl_glext.h	/^#define GL_PIXEL_TRANSFORM_2D_EXT /;"	kind:d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	SDL_opengl_glext.h	/^#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT /;"	kind:d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	SDL_opengl_glext.h	/^#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	kind:d
GL_PIXEL_UNPACK_BUFFER	SDL_opengl_glext.h	/^#define GL_PIXEL_UNPACK_BUFFER /;"	kind:d
GL_PIXEL_UNPACK_BUFFER_ARB	SDL_opengl_glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_ARB /;"	kind:d
GL_PIXEL_UNPACK_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING /;"	kind:d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB /;"	kind:d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	SDL_opengl_glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT /;"	kind:d
GL_PIXEL_UNPACK_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_EXT /;"	kind:d
GL_PLUS_CLAMPED_ALPHA_NV	SDL_opengl_glext.h	/^#define GL_PLUS_CLAMPED_ALPHA_NV /;"	kind:d
GL_PLUS_CLAMPED_NV	SDL_opengl_glext.h	/^#define GL_PLUS_CLAMPED_NV /;"	kind:d
GL_PLUS_DARKER_NV	SDL_opengl_glext.h	/^#define GL_PLUS_DARKER_NV /;"	kind:d
GL_PLUS_NV	SDL_opengl_glext.h	/^#define GL_PLUS_NV /;"	kind:d
GL_PN_TRIANGLES_ATI	SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_ATI /;"	kind:d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_ATI /;"	kind:d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI /;"	kind:d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI /;"	kind:d
GL_PN_TRIANGLES_POINT_MODE_ATI	SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_ATI /;"	kind:d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI /;"	kind:d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI /;"	kind:d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	SDL_opengl_glext.h	/^#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	kind:d
GL_POINT	SDL_opengl.h	/^#define GL_POINT	/;"	kind:d
GL_POINTS	SDL_opengl.h	/^#define GL_POINTS	/;"	kind:d
GL_POINTS	SDL_opengles2_gl2.h	/^#define GL_POINTS /;"	kind:d
GL_POINT_BIT	SDL_opengl.h	/^#define GL_POINT_BIT	/;"	kind:d
GL_POINT_DISTANCE_ATTENUATION	SDL_opengl_glext.h	/^#define GL_POINT_DISTANCE_ATTENUATION /;"	kind:d
GL_POINT_DISTANCE_ATTENUATION_ARB	SDL_opengl_glext.h	/^#define GL_POINT_DISTANCE_ATTENUATION_ARB /;"	kind:d
GL_POINT_FADE_THRESHOLD_SIZE	SDL_opengl_glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE /;"	kind:d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_ARB /;"	kind:d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_EXT /;"	kind:d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	SDL_opengl_glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS /;"	kind:d
GL_POINT_SIZE	SDL_opengl.h	/^#define GL_POINT_SIZE	/;"	kind:d
GL_POINT_SIZE_GRANULARITY	SDL_opengl.h	/^#define GL_POINT_SIZE_GRANULARITY /;"	kind:d
GL_POINT_SIZE_MAX	SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MAX /;"	kind:d
GL_POINT_SIZE_MAX_ARB	SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MAX_ARB /;"	kind:d
GL_POINT_SIZE_MAX_EXT	SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MAX_EXT /;"	kind:d
GL_POINT_SIZE_MAX_SGIS	SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MAX_SGIS /;"	kind:d
GL_POINT_SIZE_MIN	SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MIN /;"	kind:d
GL_POINT_SIZE_MIN_ARB	SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MIN_ARB /;"	kind:d
GL_POINT_SIZE_MIN_EXT	SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MIN_EXT /;"	kind:d
GL_POINT_SIZE_MIN_SGIS	SDL_opengl_glext.h	/^#define GL_POINT_SIZE_MIN_SGIS /;"	kind:d
GL_POINT_SIZE_RANGE	SDL_opengl.h	/^#define GL_POINT_SIZE_RANGE	/;"	kind:d
GL_POINT_SMOOTH	SDL_opengl.h	/^#define GL_POINT_SMOOTH	/;"	kind:d
GL_POINT_SMOOTH_HINT	SDL_opengl.h	/^#define GL_POINT_SMOOTH_HINT	/;"	kind:d
GL_POINT_SPRITE	SDL_opengl_glext.h	/^#define GL_POINT_SPRITE /;"	kind:d
GL_POINT_SPRITE_ARB	SDL_opengl_glext.h	/^#define GL_POINT_SPRITE_ARB /;"	kind:d
GL_POINT_SPRITE_COORD_ORIGIN	SDL_opengl_glext.h	/^#define GL_POINT_SPRITE_COORD_ORIGIN /;"	kind:d
GL_POINT_SPRITE_NV	SDL_opengl_glext.h	/^#define GL_POINT_SPRITE_NV /;"	kind:d
GL_POINT_SPRITE_R_MODE_NV	SDL_opengl_glext.h	/^#define GL_POINT_SPRITE_R_MODE_NV /;"	kind:d
GL_POINT_TOKEN	SDL_opengl.h	/^#define GL_POINT_TOKEN	/;"	kind:d
GL_POLYGON	SDL_opengl.h	/^#define GL_POLYGON	/;"	kind:d
GL_POLYGON_BIT	SDL_opengl.h	/^#define GL_POLYGON_BIT	/;"	kind:d
GL_POLYGON_MODE	SDL_opengl.h	/^#define GL_POLYGON_MODE	/;"	kind:d
GL_POLYGON_OFFSET_BIAS_EXT	SDL_opengl_glext.h	/^#define GL_POLYGON_OFFSET_BIAS_EXT /;"	kind:d
GL_POLYGON_OFFSET_EXT	SDL_opengl_glext.h	/^#define GL_POLYGON_OFFSET_EXT /;"	kind:d
GL_POLYGON_OFFSET_FACTOR	SDL_opengl.h	/^#define GL_POLYGON_OFFSET_FACTOR	/;"	kind:d
GL_POLYGON_OFFSET_FACTOR	SDL_opengles2_gl2.h	/^#define GL_POLYGON_OFFSET_FACTOR /;"	kind:d
GL_POLYGON_OFFSET_FACTOR_EXT	SDL_opengl_glext.h	/^#define GL_POLYGON_OFFSET_FACTOR_EXT /;"	kind:d
GL_POLYGON_OFFSET_FILL	SDL_opengl.h	/^#define GL_POLYGON_OFFSET_FILL	/;"	kind:d
GL_POLYGON_OFFSET_FILL	SDL_opengles2_gl2.h	/^#define GL_POLYGON_OFFSET_FILL /;"	kind:d
GL_POLYGON_OFFSET_LINE	SDL_opengl.h	/^#define GL_POLYGON_OFFSET_LINE	/;"	kind:d
GL_POLYGON_OFFSET_POINT	SDL_opengl.h	/^#define GL_POLYGON_OFFSET_POINT	/;"	kind:d
GL_POLYGON_OFFSET_UNITS	SDL_opengl.h	/^#define GL_POLYGON_OFFSET_UNITS	/;"	kind:d
GL_POLYGON_OFFSET_UNITS	SDL_opengles2_gl2.h	/^#define GL_POLYGON_OFFSET_UNITS /;"	kind:d
GL_POLYGON_SMOOTH	SDL_opengl.h	/^#define GL_POLYGON_SMOOTH	/;"	kind:d
GL_POLYGON_SMOOTH_HINT	SDL_opengl.h	/^#define GL_POLYGON_SMOOTH_HINT	/;"	kind:d
GL_POLYGON_STIPPLE	SDL_opengl.h	/^#define GL_POLYGON_STIPPLE	/;"	kind:d
GL_POLYGON_STIPPLE_BIT	SDL_opengl.h	/^#define GL_POLYGON_STIPPLE_BIT	/;"	kind:d
GL_POLYGON_TOKEN	SDL_opengl.h	/^#define GL_POLYGON_TOKEN	/;"	kind:d
GL_POSITION	SDL_opengl.h	/^#define GL_POSITION	/;"	kind:d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS	/;"	kind:d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS /;"	kind:d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI /;"	kind:d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE	/;"	kind:d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE /;"	kind:d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI /;"	kind:d
GL_POST_COLOR_MATRIX_BLUE_BIAS	SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS	/;"	kind:d
GL_POST_COLOR_MATRIX_BLUE_BIAS	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS /;"	kind:d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI /;"	kind:d
GL_POST_COLOR_MATRIX_BLUE_SCALE	SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE	/;"	kind:d
GL_POST_COLOR_MATRIX_BLUE_SCALE	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE /;"	kind:d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI /;"	kind:d
GL_POST_COLOR_MATRIX_COLOR_TABLE	SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE	/;"	kind:d
GL_POST_COLOR_MATRIX_COLOR_TABLE	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE /;"	kind:d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	kind:d
GL_POST_COLOR_MATRIX_GREEN_BIAS	SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS	/;"	kind:d
GL_POST_COLOR_MATRIX_GREEN_BIAS	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS /;"	kind:d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI /;"	kind:d
GL_POST_COLOR_MATRIX_GREEN_SCALE	SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE	/;"	kind:d
GL_POST_COLOR_MATRIX_GREEN_SCALE	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE /;"	kind:d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI /;"	kind:d
GL_POST_COLOR_MATRIX_RED_BIAS	SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS	/;"	kind:d
GL_POST_COLOR_MATRIX_RED_BIAS	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS /;"	kind:d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI /;"	kind:d
GL_POST_COLOR_MATRIX_RED_SCALE	SDL_opengl.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE	/;"	kind:d
GL_POST_COLOR_MATRIX_RED_SCALE	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE /;"	kind:d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	SDL_opengl_glext.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI /;"	kind:d
GL_POST_CONVOLUTION_ALPHA_BIAS	SDL_opengl.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS	/;"	kind:d
GL_POST_CONVOLUTION_ALPHA_BIAS	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS /;"	kind:d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT /;"	kind:d
GL_POST_CONVOLUTION_ALPHA_SCALE	SDL_opengl.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE	/;"	kind:d
GL_POST_CONVOLUTION_ALPHA_SCALE	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE /;"	kind:d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT /;"	kind:d
GL_POST_CONVOLUTION_BLUE_BIAS	SDL_opengl.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS	/;"	kind:d
GL_POST_CONVOLUTION_BLUE_BIAS	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS /;"	kind:d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT /;"	kind:d
GL_POST_CONVOLUTION_BLUE_SCALE	SDL_opengl.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE	/;"	kind:d
GL_POST_CONVOLUTION_BLUE_SCALE	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE /;"	kind:d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT /;"	kind:d
GL_POST_CONVOLUTION_COLOR_TABLE	SDL_opengl.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE	/;"	kind:d
GL_POST_CONVOLUTION_COLOR_TABLE	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE /;"	kind:d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	kind:d
GL_POST_CONVOLUTION_GREEN_BIAS	SDL_opengl.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS	/;"	kind:d
GL_POST_CONVOLUTION_GREEN_BIAS	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS /;"	kind:d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT /;"	kind:d
GL_POST_CONVOLUTION_GREEN_SCALE	SDL_opengl.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE	/;"	kind:d
GL_POST_CONVOLUTION_GREEN_SCALE	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE /;"	kind:d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT /;"	kind:d
GL_POST_CONVOLUTION_RED_BIAS	SDL_opengl.h	/^#define GL_POST_CONVOLUTION_RED_BIAS	/;"	kind:d
GL_POST_CONVOLUTION_RED_BIAS	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_RED_BIAS /;"	kind:d
GL_POST_CONVOLUTION_RED_BIAS_EXT	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_RED_BIAS_EXT /;"	kind:d
GL_POST_CONVOLUTION_RED_SCALE	SDL_opengl.h	/^#define GL_POST_CONVOLUTION_RED_SCALE	/;"	kind:d
GL_POST_CONVOLUTION_RED_SCALE	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_RED_SCALE /;"	kind:d
GL_POST_CONVOLUTION_RED_SCALE_EXT	SDL_opengl_glext.h	/^#define GL_POST_CONVOLUTION_RED_SCALE_EXT /;"	kind:d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	SDL_opengl_glext.h	/^#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP /;"	kind:d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	SDL_opengl_glext.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX /;"	kind:d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	SDL_opengl_glext.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_SGIX /;"	kind:d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	SDL_opengl_glext.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX /;"	kind:d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	SDL_opengl_glext.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_SGIX /;"	kind:d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	SDL_opengl_glext.h	/^#define GL_PREFER_DOUBLEBUFFER_HINT_PGI /;"	kind:d
GL_PRESENT_DURATION_NV	SDL_opengl_glext.h	/^#define GL_PRESENT_DURATION_NV /;"	kind:d
GL_PRESENT_TIME_NV	SDL_opengl_glext.h	/^#define GL_PRESENT_TIME_NV /;"	kind:d
GL_PRESERVE_ATI	SDL_opengl_glext.h	/^#define GL_PRESERVE_ATI /;"	kind:d
GL_PREVIOUS	SDL_opengl.h	/^#define GL_PREVIOUS	/;"	kind:d
GL_PREVIOUS	SDL_opengl_glext.h	/^#define GL_PREVIOUS /;"	kind:d
GL_PREVIOUS_ARB	SDL_opengl_glext.h	/^#define GL_PREVIOUS_ARB /;"	kind:d
GL_PREVIOUS_EXT	SDL_opengl_glext.h	/^#define GL_PREVIOUS_EXT /;"	kind:d
GL_PREVIOUS_TEXTURE_INPUT_NV	SDL_opengl_glext.h	/^#define GL_PREVIOUS_TEXTURE_INPUT_NV /;"	kind:d
GL_PRIMARY_COLOR	SDL_opengl.h	/^#define GL_PRIMARY_COLOR	/;"	kind:d
GL_PRIMARY_COLOR	SDL_opengl_glext.h	/^#define GL_PRIMARY_COLOR /;"	kind:d
GL_PRIMARY_COLOR_ARB	SDL_opengl_glext.h	/^#define GL_PRIMARY_COLOR_ARB /;"	kind:d
GL_PRIMARY_COLOR_EXT	SDL_opengl_glext.h	/^#define GL_PRIMARY_COLOR_EXT /;"	kind:d
GL_PRIMARY_COLOR_NV	SDL_opengl_glext.h	/^#define GL_PRIMARY_COLOR_NV /;"	kind:d
GL_PRIMITIVES_GENERATED	SDL_opengl_glext.h	/^#define GL_PRIMITIVES_GENERATED /;"	kind:d
GL_PRIMITIVES_GENERATED_EXT	SDL_opengl_glext.h	/^#define GL_PRIMITIVES_GENERATED_EXT /;"	kind:d
GL_PRIMITIVES_GENERATED_NV	SDL_opengl_glext.h	/^#define GL_PRIMITIVES_GENERATED_NV /;"	kind:d
GL_PRIMITIVE_ID_NV	SDL_opengl_glext.h	/^#define GL_PRIMITIVE_ID_NV /;"	kind:d
GL_PRIMITIVE_RESTART	SDL_opengl_glext.h	/^#define GL_PRIMITIVE_RESTART /;"	kind:d
GL_PRIMITIVE_RESTART_FIXED_INDEX	SDL_opengl_glext.h	/^#define GL_PRIMITIVE_RESTART_FIXED_INDEX /;"	kind:d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	SDL_opengl_glext.h	/^#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED /;"	kind:d
GL_PRIMITIVE_RESTART_INDEX	SDL_opengl_glext.h	/^#define GL_PRIMITIVE_RESTART_INDEX /;"	kind:d
GL_PRIMITIVE_RESTART_INDEX_NV	SDL_opengl_glext.h	/^#define GL_PRIMITIVE_RESTART_INDEX_NV /;"	kind:d
GL_PRIMITIVE_RESTART_NV	SDL_opengl_glext.h	/^#define GL_PRIMITIVE_RESTART_NV /;"	kind:d
GL_PROGRAM	SDL_opengl_glext.h	/^#define GL_PROGRAM /;"	kind:d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_ADDRESS_REGISTERS_ARB /;"	kind:d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	kind:d
GL_PROGRAM_ATTRIBS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_ATTRIBS_ARB /;"	kind:d
GL_PROGRAM_ATTRIB_COMPONENTS_NV	SDL_opengl_glext.h	/^#define GL_PROGRAM_ATTRIB_COMPONENTS_NV /;"	kind:d
GL_PROGRAM_BINARY_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_BINARY_ANGLE /;"	kind:d
GL_PROGRAM_BINARY_FORMATS	SDL_opengl_glext.h	/^#define GL_PROGRAM_BINARY_FORMATS /;"	kind:d
GL_PROGRAM_BINARY_FORMATS_OES	SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_BINARY_FORMATS_OES /;"	kind:d
GL_PROGRAM_BINARY_LENGTH	SDL_opengl_glext.h	/^#define GL_PROGRAM_BINARY_LENGTH /;"	kind:d
GL_PROGRAM_BINARY_LENGTH_OES	SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_BINARY_LENGTH_OES /;"	kind:d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	SDL_opengl_glext.h	/^#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT /;"	kind:d
GL_PROGRAM_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_BINDING_ARB /;"	kind:d
GL_PROGRAM_ERROR_POSITION_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_ERROR_POSITION_ARB /;"	kind:d
GL_PROGRAM_ERROR_POSITION_NV	SDL_opengl_glext.h	/^#define GL_PROGRAM_ERROR_POSITION_NV /;"	kind:d
GL_PROGRAM_ERROR_STRING_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_ERROR_STRING_ARB /;"	kind:d
GL_PROGRAM_ERROR_STRING_NV	SDL_opengl_glext.h	/^#define GL_PROGRAM_ERROR_STRING_NV /;"	kind:d
GL_PROGRAM_FORMAT_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_FORMAT_ARB /;"	kind:d
GL_PROGRAM_FORMAT_ASCII_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_FORMAT_ASCII_ARB /;"	kind:d
GL_PROGRAM_INPUT	SDL_opengl_glext.h	/^#define GL_PROGRAM_INPUT /;"	kind:d
GL_PROGRAM_INSTRUCTIONS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_INSTRUCTIONS_ARB /;"	kind:d
GL_PROGRAM_KHR	SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_KHR /;"	kind:d
GL_PROGRAM_LENGTH_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_LENGTH_ARB /;"	kind:d
GL_PROGRAM_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_PROGRAM_LENGTH_NV /;"	kind:d
GL_PROGRAM_MATRIX_EXT	SDL_opengl_glext.h	/^#define GL_PROGRAM_MATRIX_EXT /;"	kind:d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	SDL_opengl_glext.h	/^#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT /;"	kind:d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	kind:d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	kind:d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_ATTRIBS_ARB /;"	kind:d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	kind:d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_PARAMETERS_ARB /;"	kind:d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	kind:d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	kind:d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	kind:d
GL_PROGRAM_OBJECT_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_OBJECT_ARB /;"	kind:d
GL_PROGRAM_OBJECT_EXT	SDL_opengl_glext.h	/^#define GL_PROGRAM_OBJECT_EXT /;"	kind:d
GL_PROGRAM_OBJECT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_OBJECT_EXT /;"	kind:d
GL_PROGRAM_OUTPUT	SDL_opengl_glext.h	/^#define GL_PROGRAM_OUTPUT /;"	kind:d
GL_PROGRAM_PARAMETERS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_PARAMETERS_ARB /;"	kind:d
GL_PROGRAM_PARAMETER_NV	SDL_opengl_glext.h	/^#define GL_PROGRAM_PARAMETER_NV /;"	kind:d
GL_PROGRAM_PIPELINE	SDL_opengl_glext.h	/^#define GL_PROGRAM_PIPELINE /;"	kind:d
GL_PROGRAM_PIPELINE_BINDING	SDL_opengl_glext.h	/^#define GL_PROGRAM_PIPELINE_BINDING /;"	kind:d
GL_PROGRAM_PIPELINE_BINDING_EXT	SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_PIPELINE_BINDING_EXT /;"	kind:d
GL_PROGRAM_PIPELINE_OBJECT_EXT	SDL_opengl_glext.h	/^#define GL_PROGRAM_PIPELINE_OBJECT_EXT /;"	kind:d
GL_PROGRAM_PIPELINE_OBJECT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_PIPELINE_OBJECT_EXT /;"	kind:d
GL_PROGRAM_POINT_SIZE	SDL_opengl_glext.h	/^#define GL_PROGRAM_POINT_SIZE /;"	kind:d
GL_PROGRAM_POINT_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_POINT_SIZE_ARB /;"	kind:d
GL_PROGRAM_POINT_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_PROGRAM_POINT_SIZE_EXT /;"	kind:d
GL_PROGRAM_RESIDENT_NV	SDL_opengl_glext.h	/^#define GL_PROGRAM_RESIDENT_NV /;"	kind:d
GL_PROGRAM_RESULT_COMPONENTS_NV	SDL_opengl_glext.h	/^#define GL_PROGRAM_RESULT_COMPONENTS_NV /;"	kind:d
GL_PROGRAM_SEPARABLE	SDL_opengl_glext.h	/^#define GL_PROGRAM_SEPARABLE /;"	kind:d
GL_PROGRAM_SEPARABLE_EXT	SDL_opengles2_gl2ext.h	/^#define GL_PROGRAM_SEPARABLE_EXT /;"	kind:d
GL_PROGRAM_STRING_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_STRING_ARB /;"	kind:d
GL_PROGRAM_STRING_NV	SDL_opengl_glext.h	/^#define GL_PROGRAM_STRING_NV /;"	kind:d
GL_PROGRAM_TARGET_NV	SDL_opengl_glext.h	/^#define GL_PROGRAM_TARGET_NV /;"	kind:d
GL_PROGRAM_TEMPORARIES_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_TEMPORARIES_ARB /;"	kind:d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_TEX_INDIRECTIONS_ARB /;"	kind:d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	kind:d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	SDL_opengl_glext.h	/^#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB /;"	kind:d
GL_PROJECTION	SDL_opengl.h	/^#define GL_PROJECTION	/;"	kind:d
GL_PROJECTION_MATRIX	SDL_opengl.h	/^#define GL_PROJECTION_MATRIX	/;"	kind:d
GL_PROJECTION_STACK_DEPTH	SDL_opengl.h	/^#define GL_PROJECTION_STACK_DEPTH	/;"	kind:d
GL_PROVOKING_VERTEX	SDL_opengl_glext.h	/^#define GL_PROVOKING_VERTEX /;"	kind:d
GL_PROVOKING_VERTEX_EXT	SDL_opengl_glext.h	/^#define GL_PROVOKING_VERTEX_EXT /;"	kind:d
GL_PROXY_COLOR_TABLE	SDL_opengl.h	/^#define GL_PROXY_COLOR_TABLE	/;"	kind:d
GL_PROXY_COLOR_TABLE	SDL_opengl_glext.h	/^#define GL_PROXY_COLOR_TABLE /;"	kind:d
GL_PROXY_COLOR_TABLE_SGI	SDL_opengl_glext.h	/^#define GL_PROXY_COLOR_TABLE_SGI /;"	kind:d
GL_PROXY_HISTOGRAM	SDL_opengl.h	/^#define GL_PROXY_HISTOGRAM	/;"	kind:d
GL_PROXY_HISTOGRAM	SDL_opengl_glext.h	/^#define GL_PROXY_HISTOGRAM /;"	kind:d
GL_PROXY_HISTOGRAM_EXT	SDL_opengl_glext.h	/^#define GL_PROXY_HISTOGRAM_EXT /;"	kind:d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	SDL_opengl.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	/;"	kind:d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	SDL_opengl_glext.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE /;"	kind:d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	SDL_opengl_glext.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	kind:d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	SDL_opengl.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	/;"	kind:d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	SDL_opengl_glext.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE /;"	kind:d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	SDL_opengl_glext.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	kind:d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	SDL_opengl_glext.h	/^#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP /;"	kind:d
GL_PROXY_TEXTURE_1D	SDL_opengl.h	/^#define GL_PROXY_TEXTURE_1D	/;"	kind:d
GL_PROXY_TEXTURE_1D_ARRAY	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY /;"	kind:d
GL_PROXY_TEXTURE_1D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY_EXT /;"	kind:d
GL_PROXY_TEXTURE_1D_EXT	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_1D_EXT /;"	kind:d
GL_PROXY_TEXTURE_1D_STACK_MESAX	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_1D_STACK_MESAX /;"	kind:d
GL_PROXY_TEXTURE_2D	SDL_opengl.h	/^#define GL_PROXY_TEXTURE_2D	/;"	kind:d
GL_PROXY_TEXTURE_2D_ARRAY	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY /;"	kind:d
GL_PROXY_TEXTURE_2D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY_EXT /;"	kind:d
GL_PROXY_TEXTURE_2D_EXT	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_2D_EXT /;"	kind:d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE /;"	kind:d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	kind:d
GL_PROXY_TEXTURE_2D_STACK_MESAX	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_2D_STACK_MESAX /;"	kind:d
GL_PROXY_TEXTURE_3D	SDL_opengl.h	/^#define GL_PROXY_TEXTURE_3D	/;"	kind:d
GL_PROXY_TEXTURE_3D	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_3D /;"	kind:d
GL_PROXY_TEXTURE_3D_EXT	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_3D_EXT /;"	kind:d
GL_PROXY_TEXTURE_4D_SGIS	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_4D_SGIS /;"	kind:d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI /;"	kind:d
GL_PROXY_TEXTURE_CUBE_MAP	SDL_opengl.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP	/;"	kind:d
GL_PROXY_TEXTURE_CUBE_MAP	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP /;"	kind:d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARB /;"	kind:d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY /;"	kind:d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	kind:d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_EXT /;"	kind:d
GL_PROXY_TEXTURE_RECTANGLE	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE /;"	kind:d
GL_PROXY_TEXTURE_RECTANGLE_ARB	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_ARB /;"	kind:d
GL_PROXY_TEXTURE_RECTANGLE_NV	SDL_opengl_glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_NV /;"	kind:d
GL_PURGEABLE_APPLE	SDL_opengl_glext.h	/^#define GL_PURGEABLE_APPLE /;"	kind:d
GL_Q	SDL_opengl.h	/^#define GL_Q	/;"	kind:d
GL_QCOM_alpha_test	SDL_opengles2_gl2ext.h	/^#define GL_QCOM_alpha_test /;"	kind:d
GL_QCOM_binning_control	SDL_opengles2_gl2ext.h	/^#define GL_QCOM_binning_control /;"	kind:d
GL_QCOM_driver_control	SDL_opengles2_gl2ext.h	/^#define GL_QCOM_driver_control /;"	kind:d
GL_QCOM_extended_get	SDL_opengles2_gl2ext.h	/^#define GL_QCOM_extended_get /;"	kind:d
GL_QCOM_extended_get2	SDL_opengles2_gl2ext.h	/^#define GL_QCOM_extended_get2 /;"	kind:d
GL_QCOM_perfmon_global_mode	SDL_opengles2_gl2ext.h	/^#define GL_QCOM_perfmon_global_mode /;"	kind:d
GL_QCOM_tiled_rendering	SDL_opengles2_gl2ext.h	/^#define GL_QCOM_tiled_rendering /;"	kind:d
GL_QCOM_writeonly_rendering	SDL_opengles2_gl2ext.h	/^#define GL_QCOM_writeonly_rendering /;"	kind:d
GL_QUADRATIC_ATTENUATION	SDL_opengl.h	/^#define GL_QUADRATIC_ATTENUATION	/;"	kind:d
GL_QUADRATIC_CURVE_TO_NV	SDL_opengl_glext.h	/^#define GL_QUADRATIC_CURVE_TO_NV /;"	kind:d
GL_QUADS	SDL_opengl.h	/^#define GL_QUADS	/;"	kind:d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	SDL_opengl_glext.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION /;"	kind:d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT	SDL_opengl_glext.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT /;"	kind:d
GL_QUAD_ALPHA4_SGIS	SDL_opengl_glext.h	/^#define GL_QUAD_ALPHA4_SGIS /;"	kind:d
GL_QUAD_ALPHA8_SGIS	SDL_opengl_glext.h	/^#define GL_QUAD_ALPHA8_SGIS /;"	kind:d
GL_QUAD_INTENSITY4_SGIS	SDL_opengl_glext.h	/^#define GL_QUAD_INTENSITY4_SGIS /;"	kind:d
GL_QUAD_INTENSITY8_SGIS	SDL_opengl_glext.h	/^#define GL_QUAD_INTENSITY8_SGIS /;"	kind:d
GL_QUAD_LUMINANCE4_SGIS	SDL_opengl_glext.h	/^#define GL_QUAD_LUMINANCE4_SGIS /;"	kind:d
GL_QUAD_LUMINANCE8_SGIS	SDL_opengl_glext.h	/^#define GL_QUAD_LUMINANCE8_SGIS /;"	kind:d
GL_QUAD_MESH_SUN	SDL_opengl_glext.h	/^#define GL_QUAD_MESH_SUN /;"	kind:d
GL_QUAD_STRIP	SDL_opengl.h	/^#define GL_QUAD_STRIP	/;"	kind:d
GL_QUAD_TEXTURE_SELECT_SGIS	SDL_opengl_glext.h	/^#define GL_QUAD_TEXTURE_SELECT_SGIS /;"	kind:d
GL_QUARTER_BIT_ATI	SDL_opengl_glext.h	/^#define GL_QUARTER_BIT_ATI /;"	kind:d
GL_QUERY	SDL_opengl_glext.h	/^#define GL_QUERY /;"	kind:d
GL_QUERY_ALL_EVENT_BITS_AMD	SDL_opengl_glext.h	/^#define GL_QUERY_ALL_EVENT_BITS_AMD /;"	kind:d
GL_QUERY_BUFFER	SDL_opengl_glext.h	/^#define GL_QUERY_BUFFER /;"	kind:d
GL_QUERY_BUFFER_AMD	SDL_opengl_glext.h	/^#define GL_QUERY_BUFFER_AMD /;"	kind:d
GL_QUERY_BUFFER_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_QUERY_BUFFER_BARRIER_BIT /;"	kind:d
GL_QUERY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_QUERY_BUFFER_BINDING /;"	kind:d
GL_QUERY_BUFFER_BINDING_AMD	SDL_opengl_glext.h	/^#define GL_QUERY_BUFFER_BINDING_AMD /;"	kind:d
GL_QUERY_BY_REGION_NO_WAIT	SDL_opengl_glext.h	/^#define GL_QUERY_BY_REGION_NO_WAIT /;"	kind:d
GL_QUERY_BY_REGION_NO_WAIT_NV	SDL_opengl_glext.h	/^#define GL_QUERY_BY_REGION_NO_WAIT_NV /;"	kind:d
GL_QUERY_BY_REGION_WAIT	SDL_opengl_glext.h	/^#define GL_QUERY_BY_REGION_WAIT /;"	kind:d
GL_QUERY_BY_REGION_WAIT_NV	SDL_opengl_glext.h	/^#define GL_QUERY_BY_REGION_WAIT_NV /;"	kind:d
GL_QUERY_COUNTER_BITS	SDL_opengl_glext.h	/^#define GL_QUERY_COUNTER_BITS /;"	kind:d
GL_QUERY_COUNTER_BITS_ARB	SDL_opengl_glext.h	/^#define GL_QUERY_COUNTER_BITS_ARB /;"	kind:d
GL_QUERY_COUNTER_BITS_EXT	SDL_opengles2_gl2ext.h	/^#define GL_QUERY_COUNTER_BITS_EXT /;"	kind:d
GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD	SDL_opengl_glext.h	/^#define GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD /;"	kind:d
GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD	SDL_opengl_glext.h	/^#define GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD /;"	kind:d
GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD	SDL_opengl_glext.h	/^#define GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD /;"	kind:d
GL_QUERY_KHR	SDL_opengles2_gl2ext.h	/^#define GL_QUERY_KHR /;"	kind:d
GL_QUERY_NO_WAIT	SDL_opengl_glext.h	/^#define GL_QUERY_NO_WAIT /;"	kind:d
GL_QUERY_NO_WAIT_NV	SDL_opengl_glext.h	/^#define GL_QUERY_NO_WAIT_NV /;"	kind:d
GL_QUERY_OBJECT_AMD	SDL_opengl_glext.h	/^#define GL_QUERY_OBJECT_AMD /;"	kind:d
GL_QUERY_OBJECT_EXT	SDL_opengl_glext.h	/^#define GL_QUERY_OBJECT_EXT /;"	kind:d
GL_QUERY_OBJECT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_QUERY_OBJECT_EXT /;"	kind:d
GL_QUERY_RESULT	SDL_opengl_glext.h	/^#define GL_QUERY_RESULT /;"	kind:d
GL_QUERY_RESULT_ARB	SDL_opengl_glext.h	/^#define GL_QUERY_RESULT_ARB /;"	kind:d
GL_QUERY_RESULT_AVAILABLE	SDL_opengl_glext.h	/^#define GL_QUERY_RESULT_AVAILABLE /;"	kind:d
GL_QUERY_RESULT_AVAILABLE_ARB	SDL_opengl_glext.h	/^#define GL_QUERY_RESULT_AVAILABLE_ARB /;"	kind:d
GL_QUERY_RESULT_AVAILABLE_EXT	SDL_opengles2_gl2ext.h	/^#define GL_QUERY_RESULT_AVAILABLE_EXT /;"	kind:d
GL_QUERY_RESULT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_QUERY_RESULT_EXT /;"	kind:d
GL_QUERY_RESULT_NO_WAIT	SDL_opengl_glext.h	/^#define GL_QUERY_RESULT_NO_WAIT /;"	kind:d
GL_QUERY_RESULT_NO_WAIT_AMD	SDL_opengl_glext.h	/^#define GL_QUERY_RESULT_NO_WAIT_AMD /;"	kind:d
GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD	SDL_opengl_glext.h	/^#define GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD /;"	kind:d
GL_QUERY_WAIT	SDL_opengl_glext.h	/^#define GL_QUERY_WAIT /;"	kind:d
GL_QUERY_WAIT_NV	SDL_opengl_glext.h	/^#define GL_QUERY_WAIT_NV /;"	kind:d
GL_R	SDL_opengl.h	/^#define GL_R	/;"	kind:d
GL_R11F_G11F_B10F	SDL_opengl_glext.h	/^#define GL_R11F_G11F_B10F /;"	kind:d
GL_R11F_G11F_B10F_EXT	SDL_opengl_glext.h	/^#define GL_R11F_G11F_B10F_EXT /;"	kind:d
GL_R16	SDL_opengl_glext.h	/^#define GL_R16 /;"	kind:d
GL_R16F	SDL_opengl_glext.h	/^#define GL_R16F /;"	kind:d
GL_R16F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_R16F_EXT /;"	kind:d
GL_R16I	SDL_opengl_glext.h	/^#define GL_R16I /;"	kind:d
GL_R16UI	SDL_opengl_glext.h	/^#define GL_R16UI /;"	kind:d
GL_R16_SNORM	SDL_opengl_glext.h	/^#define GL_R16_SNORM /;"	kind:d
GL_R1UI_C3F_V3F_SUN	SDL_opengl_glext.h	/^#define GL_R1UI_C3F_V3F_SUN /;"	kind:d
GL_R1UI_C4F_N3F_V3F_SUN	SDL_opengl_glext.h	/^#define GL_R1UI_C4F_N3F_V3F_SUN /;"	kind:d
GL_R1UI_C4UB_V3F_SUN	SDL_opengl_glext.h	/^#define GL_R1UI_C4UB_V3F_SUN /;"	kind:d
GL_R1UI_N3F_V3F_SUN	SDL_opengl_glext.h	/^#define GL_R1UI_N3F_V3F_SUN /;"	kind:d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	SDL_opengl_glext.h	/^#define GL_R1UI_T2F_C4F_N3F_V3F_SUN /;"	kind:d
GL_R1UI_T2F_N3F_V3F_SUN	SDL_opengl_glext.h	/^#define GL_R1UI_T2F_N3F_V3F_SUN /;"	kind:d
GL_R1UI_T2F_V3F_SUN	SDL_opengl_glext.h	/^#define GL_R1UI_T2F_V3F_SUN /;"	kind:d
GL_R1UI_V3F_SUN	SDL_opengl_glext.h	/^#define GL_R1UI_V3F_SUN /;"	kind:d
GL_R32F	SDL_opengl_glext.h	/^#define GL_R32F /;"	kind:d
GL_R32F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_R32F_EXT /;"	kind:d
GL_R32I	SDL_opengl_glext.h	/^#define GL_R32I /;"	kind:d
GL_R32UI	SDL_opengl_glext.h	/^#define GL_R32UI /;"	kind:d
GL_R3_G3_B2	SDL_opengl.h	/^#define GL_R3_G3_B2	/;"	kind:d
GL_R8	SDL_opengl_glext.h	/^#define GL_R8 /;"	kind:d
GL_R8I	SDL_opengl_glext.h	/^#define GL_R8I /;"	kind:d
GL_R8UI	SDL_opengl_glext.h	/^#define GL_R8UI /;"	kind:d
GL_R8_EXT	SDL_opengles2_gl2ext.h	/^#define GL_R8_EXT /;"	kind:d
GL_R8_SNORM	SDL_opengl_glext.h	/^#define GL_R8_SNORM /;"	kind:d
GL_RASTERIZER_DISCARD	SDL_opengl_glext.h	/^#define GL_RASTERIZER_DISCARD /;"	kind:d
GL_RASTERIZER_DISCARD_EXT	SDL_opengl_glext.h	/^#define GL_RASTERIZER_DISCARD_EXT /;"	kind:d
GL_RASTERIZER_DISCARD_NV	SDL_opengl_glext.h	/^#define GL_RASTERIZER_DISCARD_NV /;"	kind:d
GL_RASTER_POSITION_UNCLIPPED_IBM	SDL_opengl_glext.h	/^#define GL_RASTER_POSITION_UNCLIPPED_IBM /;"	kind:d
GL_READ_BUFFER	SDL_opengl.h	/^#define GL_READ_BUFFER	/;"	kind:d
GL_READ_BUFFER_EXT	SDL_opengles2_gl2ext.h	/^#define GL_READ_BUFFER_EXT /;"	kind:d
GL_READ_BUFFER_NV	SDL_opengles2_gl2ext.h	/^#define GL_READ_BUFFER_NV /;"	kind:d
GL_READ_FRAMEBUFFER	SDL_opengl_glext.h	/^#define GL_READ_FRAMEBUFFER /;"	kind:d
GL_READ_FRAMEBUFFER_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_READ_FRAMEBUFFER_ANGLE /;"	kind:d
GL_READ_FRAMEBUFFER_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_READ_FRAMEBUFFER_APPLE /;"	kind:d
GL_READ_FRAMEBUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_READ_FRAMEBUFFER_BINDING /;"	kind:d
GL_READ_FRAMEBUFFER_BINDING_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_READ_FRAMEBUFFER_BINDING_ANGLE /;"	kind:d
GL_READ_FRAMEBUFFER_BINDING_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_READ_FRAMEBUFFER_BINDING_APPLE /;"	kind:d
GL_READ_FRAMEBUFFER_BINDING_EXT	SDL_opengl_glext.h	/^#define GL_READ_FRAMEBUFFER_BINDING_EXT /;"	kind:d
GL_READ_FRAMEBUFFER_BINDING_NV	SDL_opengles2_gl2ext.h	/^#define GL_READ_FRAMEBUFFER_BINDING_NV /;"	kind:d
GL_READ_FRAMEBUFFER_EXT	SDL_opengl_glext.h	/^#define GL_READ_FRAMEBUFFER_EXT /;"	kind:d
GL_READ_FRAMEBUFFER_NV	SDL_opengles2_gl2ext.h	/^#define GL_READ_FRAMEBUFFER_NV /;"	kind:d
GL_READ_ONLY	SDL_opengl_glext.h	/^#define GL_READ_ONLY /;"	kind:d
GL_READ_ONLY_ARB	SDL_opengl_glext.h	/^#define GL_READ_ONLY_ARB /;"	kind:d
GL_READ_PIXELS	SDL_opengl_glext.h	/^#define GL_READ_PIXELS /;"	kind:d
GL_READ_PIXELS_FORMAT	SDL_opengl_glext.h	/^#define GL_READ_PIXELS_FORMAT /;"	kind:d
GL_READ_PIXELS_TYPE	SDL_opengl_glext.h	/^#define GL_READ_PIXELS_TYPE /;"	kind:d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV /;"	kind:d
GL_READ_PIXEL_DATA_RANGE_NV	SDL_opengl_glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_NV /;"	kind:d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	SDL_opengl_glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV /;"	kind:d
GL_READ_WRITE	SDL_opengl_glext.h	/^#define GL_READ_WRITE /;"	kind:d
GL_READ_WRITE_ARB	SDL_opengl_glext.h	/^#define GL_READ_WRITE_ARB /;"	kind:d
GL_RECLAIM_MEMORY_HINT_PGI	SDL_opengl_glext.h	/^#define GL_RECLAIM_MEMORY_HINT_PGI /;"	kind:d
GL_RECT_NV	SDL_opengl_glext.h	/^#define GL_RECT_NV /;"	kind:d
GL_RED	SDL_opengl.h	/^#define GL_RED	/;"	kind:d
GL_REDUCE	SDL_opengl.h	/^#define GL_REDUCE	/;"	kind:d
GL_REDUCE	SDL_opengl_glext.h	/^#define GL_REDUCE /;"	kind:d
GL_REDUCE_EXT	SDL_opengl_glext.h	/^#define GL_REDUCE_EXT /;"	kind:d
GL_RED_BIAS	SDL_opengl.h	/^#define GL_RED_BIAS	/;"	kind:d
GL_RED_BITS	SDL_opengl.h	/^#define GL_RED_BITS	/;"	kind:d
GL_RED_BITS	SDL_opengles2_gl2.h	/^#define GL_RED_BITS /;"	kind:d
GL_RED_BIT_ATI	SDL_opengl_glext.h	/^#define GL_RED_BIT_ATI /;"	kind:d
GL_RED_EXT	SDL_opengles2_gl2ext.h	/^#define GL_RED_EXT /;"	kind:d
GL_RED_INTEGER	SDL_opengl_glext.h	/^#define GL_RED_INTEGER /;"	kind:d
GL_RED_INTEGER_EXT	SDL_opengl_glext.h	/^#define GL_RED_INTEGER_EXT /;"	kind:d
GL_RED_MAX_CLAMP_INGR	SDL_opengl_glext.h	/^#define GL_RED_MAX_CLAMP_INGR /;"	kind:d
GL_RED_MIN_CLAMP_INGR	SDL_opengl_glext.h	/^#define GL_RED_MIN_CLAMP_INGR /;"	kind:d
GL_RED_NV	SDL_opengl_glext.h	/^#define GL_RED_NV /;"	kind:d
GL_RED_SCALE	SDL_opengl.h	/^#define GL_RED_SCALE	/;"	kind:d
GL_RED_SNORM	SDL_opengl_glext.h	/^#define GL_RED_SNORM /;"	kind:d
GL_REFERENCED_BY_COMPUTE_SHADER	SDL_opengl_glext.h	/^#define GL_REFERENCED_BY_COMPUTE_SHADER /;"	kind:d
GL_REFERENCED_BY_FRAGMENT_SHADER	SDL_opengl_glext.h	/^#define GL_REFERENCED_BY_FRAGMENT_SHADER /;"	kind:d
GL_REFERENCED_BY_GEOMETRY_SHADER	SDL_opengl_glext.h	/^#define GL_REFERENCED_BY_GEOMETRY_SHADER /;"	kind:d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	SDL_opengl_glext.h	/^#define GL_REFERENCED_BY_TESS_CONTROL_SHADER /;"	kind:d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	SDL_opengl_glext.h	/^#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	kind:d
GL_REFERENCED_BY_VERTEX_SHADER	SDL_opengl_glext.h	/^#define GL_REFERENCED_BY_VERTEX_SHADER /;"	kind:d
GL_REFERENCE_PLANE_EQUATION_SGIX	SDL_opengl_glext.h	/^#define GL_REFERENCE_PLANE_EQUATION_SGIX /;"	kind:d
GL_REFERENCE_PLANE_SGIX	SDL_opengl_glext.h	/^#define GL_REFERENCE_PLANE_SGIX /;"	kind:d
GL_REFLECTION_MAP	SDL_opengl.h	/^#define GL_REFLECTION_MAP	/;"	kind:d
GL_REFLECTION_MAP	SDL_opengl_glext.h	/^#define GL_REFLECTION_MAP /;"	kind:d
GL_REFLECTION_MAP_ARB	SDL_opengl_glext.h	/^#define GL_REFLECTION_MAP_ARB /;"	kind:d
GL_REFLECTION_MAP_EXT	SDL_opengl_glext.h	/^#define GL_REFLECTION_MAP_EXT /;"	kind:d
GL_REFLECTION_MAP_NV	SDL_opengl_glext.h	/^#define GL_REFLECTION_MAP_NV /;"	kind:d
GL_REGISTER_COMBINERS_NV	SDL_opengl_glext.h	/^#define GL_REGISTER_COMBINERS_NV /;"	kind:d
GL_REG_0_ATI	SDL_opengl_glext.h	/^#define GL_REG_0_ATI /;"	kind:d
GL_REG_10_ATI	SDL_opengl_glext.h	/^#define GL_REG_10_ATI /;"	kind:d
GL_REG_11_ATI	SDL_opengl_glext.h	/^#define GL_REG_11_ATI /;"	kind:d
GL_REG_12_ATI	SDL_opengl_glext.h	/^#define GL_REG_12_ATI /;"	kind:d
GL_REG_13_ATI	SDL_opengl_glext.h	/^#define GL_REG_13_ATI /;"	kind:d
GL_REG_14_ATI	SDL_opengl_glext.h	/^#define GL_REG_14_ATI /;"	kind:d
GL_REG_15_ATI	SDL_opengl_glext.h	/^#define GL_REG_15_ATI /;"	kind:d
GL_REG_16_ATI	SDL_opengl_glext.h	/^#define GL_REG_16_ATI /;"	kind:d
GL_REG_17_ATI	SDL_opengl_glext.h	/^#define GL_REG_17_ATI /;"	kind:d
GL_REG_18_ATI	SDL_opengl_glext.h	/^#define GL_REG_18_ATI /;"	kind:d
GL_REG_19_ATI	SDL_opengl_glext.h	/^#define GL_REG_19_ATI /;"	kind:d
GL_REG_1_ATI	SDL_opengl_glext.h	/^#define GL_REG_1_ATI /;"	kind:d
GL_REG_20_ATI	SDL_opengl_glext.h	/^#define GL_REG_20_ATI /;"	kind:d
GL_REG_21_ATI	SDL_opengl_glext.h	/^#define GL_REG_21_ATI /;"	kind:d
GL_REG_22_ATI	SDL_opengl_glext.h	/^#define GL_REG_22_ATI /;"	kind:d
GL_REG_23_ATI	SDL_opengl_glext.h	/^#define GL_REG_23_ATI /;"	kind:d
GL_REG_24_ATI	SDL_opengl_glext.h	/^#define GL_REG_24_ATI /;"	kind:d
GL_REG_25_ATI	SDL_opengl_glext.h	/^#define GL_REG_25_ATI /;"	kind:d
GL_REG_26_ATI	SDL_opengl_glext.h	/^#define GL_REG_26_ATI /;"	kind:d
GL_REG_27_ATI	SDL_opengl_glext.h	/^#define GL_REG_27_ATI /;"	kind:d
GL_REG_28_ATI	SDL_opengl_glext.h	/^#define GL_REG_28_ATI /;"	kind:d
GL_REG_29_ATI	SDL_opengl_glext.h	/^#define GL_REG_29_ATI /;"	kind:d
GL_REG_2_ATI	SDL_opengl_glext.h	/^#define GL_REG_2_ATI /;"	kind:d
GL_REG_30_ATI	SDL_opengl_glext.h	/^#define GL_REG_30_ATI /;"	kind:d
GL_REG_31_ATI	SDL_opengl_glext.h	/^#define GL_REG_31_ATI /;"	kind:d
GL_REG_3_ATI	SDL_opengl_glext.h	/^#define GL_REG_3_ATI /;"	kind:d
GL_REG_4_ATI	SDL_opengl_glext.h	/^#define GL_REG_4_ATI /;"	kind:d
GL_REG_5_ATI	SDL_opengl_glext.h	/^#define GL_REG_5_ATI /;"	kind:d
GL_REG_6_ATI	SDL_opengl_glext.h	/^#define GL_REG_6_ATI /;"	kind:d
GL_REG_7_ATI	SDL_opengl_glext.h	/^#define GL_REG_7_ATI /;"	kind:d
GL_REG_8_ATI	SDL_opengl_glext.h	/^#define GL_REG_8_ATI /;"	kind:d
GL_REG_9_ATI	SDL_opengl_glext.h	/^#define GL_REG_9_ATI /;"	kind:d
GL_RELATIVE_ARC_TO_NV	SDL_opengl_glext.h	/^#define GL_RELATIVE_ARC_TO_NV /;"	kind:d
GL_RELATIVE_CUBIC_CURVE_TO_NV	SDL_opengl_glext.h	/^#define GL_RELATIVE_CUBIC_CURVE_TO_NV /;"	kind:d
GL_RELATIVE_HORIZONTAL_LINE_TO_NV	SDL_opengl_glext.h	/^#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV /;"	kind:d
GL_RELATIVE_LARGE_CCW_ARC_TO_NV	SDL_opengl_glext.h	/^#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV /;"	kind:d
GL_RELATIVE_LARGE_CW_ARC_TO_NV	SDL_opengl_glext.h	/^#define GL_RELATIVE_LARGE_CW_ARC_TO_NV /;"	kind:d
GL_RELATIVE_LINE_TO_NV	SDL_opengl_glext.h	/^#define GL_RELATIVE_LINE_TO_NV /;"	kind:d
GL_RELATIVE_MOVE_TO_NV	SDL_opengl_glext.h	/^#define GL_RELATIVE_MOVE_TO_NV /;"	kind:d
GL_RELATIVE_QUADRATIC_CURVE_TO_NV	SDL_opengl_glext.h	/^#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV /;"	kind:d
GL_RELATIVE_SMALL_CCW_ARC_TO_NV	SDL_opengl_glext.h	/^#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV /;"	kind:d
GL_RELATIVE_SMALL_CW_ARC_TO_NV	SDL_opengl_glext.h	/^#define GL_RELATIVE_SMALL_CW_ARC_TO_NV /;"	kind:d
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV	SDL_opengl_glext.h	/^#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV /;"	kind:d
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV	SDL_opengl_glext.h	/^#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	kind:d
GL_RELATIVE_VERTICAL_LINE_TO_NV	SDL_opengl_glext.h	/^#define GL_RELATIVE_VERTICAL_LINE_TO_NV /;"	kind:d
GL_RELEASED_APPLE	SDL_opengl_glext.h	/^#define GL_RELEASED_APPLE /;"	kind:d
GL_RENDER	SDL_opengl.h	/^#define GL_RENDER	/;"	kind:d
GL_RENDERBUFFER	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER /;"	kind:d
GL_RENDERBUFFER	SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER /;"	kind:d
GL_RENDERBUFFER_ALPHA_SIZE	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	kind:d
GL_RENDERBUFFER_ALPHA_SIZE	SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	kind:d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE_EXT /;"	kind:d
GL_RENDERBUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_BINDING /;"	kind:d
GL_RENDERBUFFER_BINDING	SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_BINDING /;"	kind:d
GL_RENDERBUFFER_BINDING_EXT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_BINDING_EXT /;"	kind:d
GL_RENDERBUFFER_BLUE_SIZE	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	kind:d
GL_RENDERBUFFER_BLUE_SIZE	SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	kind:d
GL_RENDERBUFFER_BLUE_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_BLUE_SIZE_EXT /;"	kind:d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_COLOR_SAMPLES_NV /;"	kind:d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV /;"	kind:d
GL_RENDERBUFFER_DEPTH_SIZE	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	kind:d
GL_RENDERBUFFER_DEPTH_SIZE	SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	kind:d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE_EXT /;"	kind:d
GL_RENDERBUFFER_EXT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_EXT /;"	kind:d
GL_RENDERBUFFER_FREE_MEMORY_ATI	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_FREE_MEMORY_ATI /;"	kind:d
GL_RENDERBUFFER_GREEN_SIZE	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	kind:d
GL_RENDERBUFFER_GREEN_SIZE	SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	kind:d
GL_RENDERBUFFER_GREEN_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_GREEN_SIZE_EXT /;"	kind:d
GL_RENDERBUFFER_HEIGHT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	kind:d
GL_RENDERBUFFER_HEIGHT	SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	kind:d
GL_RENDERBUFFER_HEIGHT_EXT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_HEIGHT_EXT /;"	kind:d
GL_RENDERBUFFER_INTERNAL_FORMAT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	kind:d
GL_RENDERBUFFER_INTERNAL_FORMAT	SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	kind:d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT /;"	kind:d
GL_RENDERBUFFER_RED_SIZE	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	kind:d
GL_RENDERBUFFER_RED_SIZE	SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	kind:d
GL_RENDERBUFFER_RED_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_RED_SIZE_EXT /;"	kind:d
GL_RENDERBUFFER_SAMPLES	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_SAMPLES /;"	kind:d
GL_RENDERBUFFER_SAMPLES_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_RENDERBUFFER_SAMPLES_ANGLE /;"	kind:d
GL_RENDERBUFFER_SAMPLES_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_RENDERBUFFER_SAMPLES_APPLE /;"	kind:d
GL_RENDERBUFFER_SAMPLES_EXT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_SAMPLES_EXT /;"	kind:d
GL_RENDERBUFFER_SAMPLES_EXT	SDL_opengles2_gl2ext.h	/^#define GL_RENDERBUFFER_SAMPLES_EXT /;"	kind:d
GL_RENDERBUFFER_SAMPLES_IMG	SDL_opengles2_gl2ext.h	/^#define GL_RENDERBUFFER_SAMPLES_IMG /;"	kind:d
GL_RENDERBUFFER_SAMPLES_NV	SDL_opengles2_gl2ext.h	/^#define GL_RENDERBUFFER_SAMPLES_NV /;"	kind:d
GL_RENDERBUFFER_STENCIL_SIZE	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	kind:d
GL_RENDERBUFFER_STENCIL_SIZE	SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	kind:d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE_EXT /;"	kind:d
GL_RENDERBUFFER_WIDTH	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_WIDTH /;"	kind:d
GL_RENDERBUFFER_WIDTH	SDL_opengles2_gl2.h	/^#define GL_RENDERBUFFER_WIDTH /;"	kind:d
GL_RENDERBUFFER_WIDTH_EXT	SDL_opengl_glext.h	/^#define GL_RENDERBUFFER_WIDTH_EXT /;"	kind:d
GL_RENDERER	SDL_opengl.h	/^#define GL_RENDERER	/;"	kind:d
GL_RENDERER	SDL_opengles2_gl2.h	/^#define GL_RENDERER /;"	kind:d
GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM /;"	kind:d
GL_RENDER_MODE	SDL_opengl.h	/^#define GL_RENDER_MODE	/;"	kind:d
GL_REND_screen_coordinates	SDL_opengl_glext.h	/^#define GL_REND_screen_coordinates /;"	kind:d
GL_REPEAT	SDL_opengl.h	/^#define GL_REPEAT	/;"	kind:d
GL_REPEAT	SDL_opengles2_gl2.h	/^#define GL_REPEAT /;"	kind:d
GL_REPLACE	SDL_opengl.h	/^#define GL_REPLACE	/;"	kind:d
GL_REPLACE	SDL_opengles2_gl2.h	/^#define GL_REPLACE /;"	kind:d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	SDL_opengl_glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN /;"	kind:d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	SDL_opengl_glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN /;"	kind:d
GL_REPLACEMENT_CODE_ARRAY_SUN	SDL_opengl_glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_SUN /;"	kind:d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	SDL_opengl_glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN /;"	kind:d
GL_REPLACEMENT_CODE_SUN	SDL_opengl_glext.h	/^#define GL_REPLACEMENT_CODE_SUN /;"	kind:d
GL_REPLACE_EXT	SDL_opengl_glext.h	/^#define GL_REPLACE_EXT /;"	kind:d
GL_REPLACE_MIDDLE_SUN	SDL_opengl_glext.h	/^#define GL_REPLACE_MIDDLE_SUN /;"	kind:d
GL_REPLACE_OLDEST_SUN	SDL_opengl_glext.h	/^#define GL_REPLACE_OLDEST_SUN /;"	kind:d
GL_REPLACE_VALUE_AMD	SDL_opengl_glext.h	/^#define GL_REPLACE_VALUE_AMD /;"	kind:d
GL_REPLICATE_BORDER	SDL_opengl.h	/^#define GL_REPLICATE_BORDER	/;"	kind:d
GL_REPLICATE_BORDER	SDL_opengl_glext.h	/^#define GL_REPLICATE_BORDER /;"	kind:d
GL_REPLICATE_BORDER_HP	SDL_opengl_glext.h	/^#define GL_REPLICATE_BORDER_HP /;"	kind:d
GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES	SDL_opengles2_gl2ext.h	/^#define GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES /;"	kind:d
GL_RESAMPLE_AVERAGE_OML	SDL_opengl_glext.h	/^#define GL_RESAMPLE_AVERAGE_OML /;"	kind:d
GL_RESAMPLE_DECIMATE_OML	SDL_opengl_glext.h	/^#define GL_RESAMPLE_DECIMATE_OML /;"	kind:d
GL_RESAMPLE_DECIMATE_SGIX	SDL_opengl_glext.h	/^#define GL_RESAMPLE_DECIMATE_SGIX /;"	kind:d
GL_RESAMPLE_REPLICATE_OML	SDL_opengl_glext.h	/^#define GL_RESAMPLE_REPLICATE_OML /;"	kind:d
GL_RESAMPLE_REPLICATE_SGIX	SDL_opengl_glext.h	/^#define GL_RESAMPLE_REPLICATE_SGIX /;"	kind:d
GL_RESAMPLE_ZERO_FILL_OML	SDL_opengl_glext.h	/^#define GL_RESAMPLE_ZERO_FILL_OML /;"	kind:d
GL_RESAMPLE_ZERO_FILL_SGIX	SDL_opengl_glext.h	/^#define GL_RESAMPLE_ZERO_FILL_SGIX /;"	kind:d
GL_RESCALE_NORMAL	SDL_opengl.h	/^#define GL_RESCALE_NORMAL	/;"	kind:d
GL_RESCALE_NORMAL	SDL_opengl_glext.h	/^#define GL_RESCALE_NORMAL /;"	kind:d
GL_RESCALE_NORMAL_EXT	SDL_opengl_glext.h	/^#define GL_RESCALE_NORMAL_EXT /;"	kind:d
GL_RESET_NOTIFICATION_STRATEGY_ARB	SDL_opengl_glext.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_ARB /;"	kind:d
GL_RESET_NOTIFICATION_STRATEGY_EXT	SDL_opengles2_gl2ext.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_EXT /;"	kind:d
GL_RESTART_PATH_NV	SDL_opengl_glext.h	/^#define GL_RESTART_PATH_NV /;"	kind:d
GL_RESTART_SUN	SDL_opengl_glext.h	/^#define GL_RESTART_SUN /;"	kind:d
GL_RETAINED_APPLE	SDL_opengl_glext.h	/^#define GL_RETAINED_APPLE /;"	kind:d
GL_RETURN	SDL_opengl.h	/^#define GL_RETURN	/;"	kind:d
GL_RG	SDL_opengl_glext.h	/^#define GL_RG /;"	kind:d
GL_RG16	SDL_opengl_glext.h	/^#define GL_RG16 /;"	kind:d
GL_RG16F	SDL_opengl_glext.h	/^#define GL_RG16F /;"	kind:d
GL_RG16F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_RG16F_EXT /;"	kind:d
GL_RG16I	SDL_opengl_glext.h	/^#define GL_RG16I /;"	kind:d
GL_RG16UI	SDL_opengl_glext.h	/^#define GL_RG16UI /;"	kind:d
GL_RG16_SNORM	SDL_opengl_glext.h	/^#define GL_RG16_SNORM /;"	kind:d
GL_RG32F	SDL_opengl_glext.h	/^#define GL_RG32F /;"	kind:d
GL_RG32F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_RG32F_EXT /;"	kind:d
GL_RG32I	SDL_opengl_glext.h	/^#define GL_RG32I /;"	kind:d
GL_RG32UI	SDL_opengl_glext.h	/^#define GL_RG32UI /;"	kind:d
GL_RG8	SDL_opengl_glext.h	/^#define GL_RG8 /;"	kind:d
GL_RG8I	SDL_opengl_glext.h	/^#define GL_RG8I /;"	kind:d
GL_RG8UI	SDL_opengl_glext.h	/^#define GL_RG8UI /;"	kind:d
GL_RG8_EXT	SDL_opengles2_gl2ext.h	/^#define GL_RG8_EXT /;"	kind:d
GL_RG8_SNORM	SDL_opengl_glext.h	/^#define GL_RG8_SNORM /;"	kind:d
GL_RGB	SDL_opengl.h	/^#define GL_RGB	/;"	kind:d
GL_RGB	SDL_opengles2_gl2.h	/^#define GL_RGB /;"	kind:d
GL_RGB10	SDL_opengl.h	/^#define GL_RGB10	/;"	kind:d
GL_RGB10_A2	SDL_opengl.h	/^#define GL_RGB10_A2	/;"	kind:d
GL_RGB10_A2UI	SDL_opengl_glext.h	/^#define GL_RGB10_A2UI /;"	kind:d
GL_RGB10_A2_EXT	SDL_opengl_glext.h	/^#define GL_RGB10_A2_EXT /;"	kind:d
GL_RGB10_A2_EXT	SDL_opengles2_gl2ext.h	/^#define GL_RGB10_A2_EXT /;"	kind:d
GL_RGB10_EXT	SDL_opengl_glext.h	/^#define GL_RGB10_EXT /;"	kind:d
GL_RGB10_EXT	SDL_opengles2_gl2ext.h	/^#define GL_RGB10_EXT /;"	kind:d
GL_RGB12	SDL_opengl.h	/^#define GL_RGB12	/;"	kind:d
GL_RGB12_EXT	SDL_opengl_glext.h	/^#define GL_RGB12_EXT /;"	kind:d
GL_RGB16	SDL_opengl.h	/^#define GL_RGB16	/;"	kind:d
GL_RGB16F	SDL_opengl_glext.h	/^#define GL_RGB16F /;"	kind:d
GL_RGB16F_ARB	SDL_opengl_glext.h	/^#define GL_RGB16F_ARB /;"	kind:d
GL_RGB16F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_RGB16F_EXT /;"	kind:d
GL_RGB16I	SDL_opengl_glext.h	/^#define GL_RGB16I /;"	kind:d
GL_RGB16I_EXT	SDL_opengl_glext.h	/^#define GL_RGB16I_EXT /;"	kind:d
GL_RGB16UI	SDL_opengl_glext.h	/^#define GL_RGB16UI /;"	kind:d
GL_RGB16UI_EXT	SDL_opengl_glext.h	/^#define GL_RGB16UI_EXT /;"	kind:d
GL_RGB16_EXT	SDL_opengl_glext.h	/^#define GL_RGB16_EXT /;"	kind:d
GL_RGB16_SNORM	SDL_opengl_glext.h	/^#define GL_RGB16_SNORM /;"	kind:d
GL_RGB2_EXT	SDL_opengl_glext.h	/^#define GL_RGB2_EXT /;"	kind:d
GL_RGB32F	SDL_opengl_glext.h	/^#define GL_RGB32F /;"	kind:d
GL_RGB32F_ARB	SDL_opengl_glext.h	/^#define GL_RGB32F_ARB /;"	kind:d
GL_RGB32F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_RGB32F_EXT /;"	kind:d
GL_RGB32I	SDL_opengl_glext.h	/^#define GL_RGB32I /;"	kind:d
GL_RGB32I_EXT	SDL_opengl_glext.h	/^#define GL_RGB32I_EXT /;"	kind:d
GL_RGB32UI	SDL_opengl_glext.h	/^#define GL_RGB32UI /;"	kind:d
GL_RGB32UI_EXT	SDL_opengl_glext.h	/^#define GL_RGB32UI_EXT /;"	kind:d
GL_RGB4	SDL_opengl.h	/^#define GL_RGB4	/;"	kind:d
GL_RGB4_EXT	SDL_opengl_glext.h	/^#define GL_RGB4_EXT /;"	kind:d
GL_RGB4_S3TC	SDL_opengl_glext.h	/^#define GL_RGB4_S3TC /;"	kind:d
GL_RGB5	SDL_opengl.h	/^#define GL_RGB5	/;"	kind:d
GL_RGB565	SDL_opengl_glext.h	/^#define GL_RGB565 /;"	kind:d
GL_RGB565	SDL_opengles2_gl2.h	/^#define GL_RGB565 /;"	kind:d
GL_RGB565_OES	SDL_opengles2_gl2ext.h	/^#define GL_RGB565_OES /;"	kind:d
GL_RGB5_A1	SDL_opengl.h	/^#define GL_RGB5_A1	/;"	kind:d
GL_RGB5_A1	SDL_opengles2_gl2.h	/^#define GL_RGB5_A1 /;"	kind:d
GL_RGB5_A1_EXT	SDL_opengl_glext.h	/^#define GL_RGB5_A1_EXT /;"	kind:d
GL_RGB5_A1_OES	SDL_opengles2_gl2ext.h	/^#define GL_RGB5_A1_OES /;"	kind:d
GL_RGB5_EXT	SDL_opengl_glext.h	/^#define GL_RGB5_EXT /;"	kind:d
GL_RGB8	SDL_opengl.h	/^#define GL_RGB8	/;"	kind:d
GL_RGB8I	SDL_opengl_glext.h	/^#define GL_RGB8I /;"	kind:d
GL_RGB8I_EXT	SDL_opengl_glext.h	/^#define GL_RGB8I_EXT /;"	kind:d
GL_RGB8UI	SDL_opengl_glext.h	/^#define GL_RGB8UI /;"	kind:d
GL_RGB8UI_EXT	SDL_opengl_glext.h	/^#define GL_RGB8UI_EXT /;"	kind:d
GL_RGB8_EXT	SDL_opengl_glext.h	/^#define GL_RGB8_EXT /;"	kind:d
GL_RGB8_OES	SDL_opengles2_gl2ext.h	/^#define GL_RGB8_OES /;"	kind:d
GL_RGB8_SNORM	SDL_opengl_glext.h	/^#define GL_RGB8_SNORM /;"	kind:d
GL_RGB9_E5	SDL_opengl_glext.h	/^#define GL_RGB9_E5 /;"	kind:d
GL_RGB9_E5_EXT	SDL_opengl_glext.h	/^#define GL_RGB9_E5_EXT /;"	kind:d
GL_RGBA	SDL_opengl.h	/^#define GL_RGBA	/;"	kind:d
GL_RGBA	SDL_opengles2_gl2.h	/^#define GL_RGBA /;"	kind:d
GL_RGBA12	SDL_opengl.h	/^#define GL_RGBA12	/;"	kind:d
GL_RGBA12_EXT	SDL_opengl_glext.h	/^#define GL_RGBA12_EXT /;"	kind:d
GL_RGBA16	SDL_opengl.h	/^#define GL_RGBA16	/;"	kind:d
GL_RGBA16F	SDL_opengl_glext.h	/^#define GL_RGBA16F /;"	kind:d
GL_RGBA16F_ARB	SDL_opengl_glext.h	/^#define GL_RGBA16F_ARB /;"	kind:d
GL_RGBA16F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_RGBA16F_EXT /;"	kind:d
GL_RGBA16I	SDL_opengl_glext.h	/^#define GL_RGBA16I /;"	kind:d
GL_RGBA16I_EXT	SDL_opengl_glext.h	/^#define GL_RGBA16I_EXT /;"	kind:d
GL_RGBA16UI	SDL_opengl_glext.h	/^#define GL_RGBA16UI /;"	kind:d
GL_RGBA16UI_EXT	SDL_opengl_glext.h	/^#define GL_RGBA16UI_EXT /;"	kind:d
GL_RGBA16_EXT	SDL_opengl_glext.h	/^#define GL_RGBA16_EXT /;"	kind:d
GL_RGBA16_SNORM	SDL_opengl_glext.h	/^#define GL_RGBA16_SNORM /;"	kind:d
GL_RGBA2	SDL_opengl.h	/^#define GL_RGBA2	/;"	kind:d
GL_RGBA2_EXT	SDL_opengl_glext.h	/^#define GL_RGBA2_EXT /;"	kind:d
GL_RGBA32F	SDL_opengl_glext.h	/^#define GL_RGBA32F /;"	kind:d
GL_RGBA32F_ARB	SDL_opengl_glext.h	/^#define GL_RGBA32F_ARB /;"	kind:d
GL_RGBA32F_EXT	SDL_opengles2_gl2ext.h	/^#define GL_RGBA32F_EXT /;"	kind:d
GL_RGBA32I	SDL_opengl_glext.h	/^#define GL_RGBA32I /;"	kind:d
GL_RGBA32I_EXT	SDL_opengl_glext.h	/^#define GL_RGBA32I_EXT /;"	kind:d
GL_RGBA32UI	SDL_opengl_glext.h	/^#define GL_RGBA32UI /;"	kind:d
GL_RGBA32UI_EXT	SDL_opengl_glext.h	/^#define GL_RGBA32UI_EXT /;"	kind:d
GL_RGBA4	SDL_opengl.h	/^#define GL_RGBA4	/;"	kind:d
GL_RGBA4	SDL_opengles2_gl2.h	/^#define GL_RGBA4 /;"	kind:d
GL_RGBA4_DXT5_S3TC	SDL_opengl_glext.h	/^#define GL_RGBA4_DXT5_S3TC /;"	kind:d
GL_RGBA4_EXT	SDL_opengl_glext.h	/^#define GL_RGBA4_EXT /;"	kind:d
GL_RGBA4_OES	SDL_opengles2_gl2ext.h	/^#define GL_RGBA4_OES /;"	kind:d
GL_RGBA4_S3TC	SDL_opengl_glext.h	/^#define GL_RGBA4_S3TC /;"	kind:d
GL_RGBA8	SDL_opengl.h	/^#define GL_RGBA8	/;"	kind:d
GL_RGBA8I	SDL_opengl_glext.h	/^#define GL_RGBA8I /;"	kind:d
GL_RGBA8I_EXT	SDL_opengl_glext.h	/^#define GL_RGBA8I_EXT /;"	kind:d
GL_RGBA8UI	SDL_opengl_glext.h	/^#define GL_RGBA8UI /;"	kind:d
GL_RGBA8UI_EXT	SDL_opengl_glext.h	/^#define GL_RGBA8UI_EXT /;"	kind:d
GL_RGBA8_EXT	SDL_opengl_glext.h	/^#define GL_RGBA8_EXT /;"	kind:d
GL_RGBA8_OES	SDL_opengles2_gl2ext.h	/^#define GL_RGBA8_OES /;"	kind:d
GL_RGBA8_SNORM	SDL_opengl_glext.h	/^#define GL_RGBA8_SNORM /;"	kind:d
GL_RGBA_DXT5_S3TC	SDL_opengl_glext.h	/^#define GL_RGBA_DXT5_S3TC /;"	kind:d
GL_RGBA_FLOAT16_APPLE	SDL_opengl_glext.h	/^#define GL_RGBA_FLOAT16_APPLE /;"	kind:d
GL_RGBA_FLOAT16_ATI	SDL_opengl_glext.h	/^#define GL_RGBA_FLOAT16_ATI /;"	kind:d
GL_RGBA_FLOAT32_APPLE	SDL_opengl_glext.h	/^#define GL_RGBA_FLOAT32_APPLE /;"	kind:d
GL_RGBA_FLOAT32_ATI	SDL_opengl_glext.h	/^#define GL_RGBA_FLOAT32_ATI /;"	kind:d
GL_RGBA_FLOAT_MODE_ARB	SDL_opengl_glext.h	/^#define GL_RGBA_FLOAT_MODE_ARB /;"	kind:d
GL_RGBA_FLOAT_MODE_ATI	SDL_opengl_glext.h	/^#define GL_RGBA_FLOAT_MODE_ATI /;"	kind:d
GL_RGBA_INTEGER	SDL_opengl_glext.h	/^#define GL_RGBA_INTEGER /;"	kind:d
GL_RGBA_INTEGER_EXT	SDL_opengl_glext.h	/^#define GL_RGBA_INTEGER_EXT /;"	kind:d
GL_RGBA_INTEGER_MODE_EXT	SDL_opengl_glext.h	/^#define GL_RGBA_INTEGER_MODE_EXT /;"	kind:d
GL_RGBA_MODE	SDL_opengl.h	/^#define GL_RGBA_MODE	/;"	kind:d
GL_RGBA_S3TC	SDL_opengl_glext.h	/^#define GL_RGBA_S3TC /;"	kind:d
GL_RGBA_SIGNED_COMPONENTS_EXT	SDL_opengl_glext.h	/^#define GL_RGBA_SIGNED_COMPONENTS_EXT /;"	kind:d
GL_RGBA_SNORM	SDL_opengl_glext.h	/^#define GL_RGBA_SNORM /;"	kind:d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	SDL_opengl_glext.h	/^#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV /;"	kind:d
GL_RGB_422_APPLE	SDL_opengl_glext.h	/^#define GL_RGB_422_APPLE /;"	kind:d
GL_RGB_422_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_RGB_422_APPLE /;"	kind:d
GL_RGB_FLOAT16_APPLE	SDL_opengl_glext.h	/^#define GL_RGB_FLOAT16_APPLE /;"	kind:d
GL_RGB_FLOAT16_ATI	SDL_opengl_glext.h	/^#define GL_RGB_FLOAT16_ATI /;"	kind:d
GL_RGB_FLOAT32_APPLE	SDL_opengl_glext.h	/^#define GL_RGB_FLOAT32_APPLE /;"	kind:d
GL_RGB_FLOAT32_ATI	SDL_opengl_glext.h	/^#define GL_RGB_FLOAT32_ATI /;"	kind:d
GL_RGB_INTEGER	SDL_opengl_glext.h	/^#define GL_RGB_INTEGER /;"	kind:d
GL_RGB_INTEGER_EXT	SDL_opengl_glext.h	/^#define GL_RGB_INTEGER_EXT /;"	kind:d
GL_RGB_RAW_422_APPLE	SDL_opengl_glext.h	/^#define GL_RGB_RAW_422_APPLE /;"	kind:d
GL_RGB_S3TC	SDL_opengl_glext.h	/^#define GL_RGB_S3TC /;"	kind:d
GL_RGB_SCALE	SDL_opengl.h	/^#define GL_RGB_SCALE	/;"	kind:d
GL_RGB_SCALE	SDL_opengl_glext.h	/^#define GL_RGB_SCALE /;"	kind:d
GL_RGB_SCALE_ARB	SDL_opengl_glext.h	/^#define GL_RGB_SCALE_ARB /;"	kind:d
GL_RGB_SCALE_EXT	SDL_opengl_glext.h	/^#define GL_RGB_SCALE_EXT /;"	kind:d
GL_RGB_SNORM	SDL_opengl_glext.h	/^#define GL_RGB_SNORM /;"	kind:d
GL_RG_EXT	SDL_opengles2_gl2ext.h	/^#define GL_RG_EXT /;"	kind:d
GL_RG_INTEGER	SDL_opengl_glext.h	/^#define GL_RG_INTEGER /;"	kind:d
GL_RG_SNORM	SDL_opengl_glext.h	/^#define GL_RG_SNORM /;"	kind:d
GL_RIGHT	SDL_opengl.h	/^#define GL_RIGHT	/;"	kind:d
GL_ROUND_NV	SDL_opengl_glext.h	/^#define GL_ROUND_NV /;"	kind:d
GL_S	SDL_opengl.h	/^#define GL_S	/;"	kind:d
GL_S3_s3tc	SDL_opengl_glext.h	/^#define GL_S3_s3tc /;"	kind:d
GL_SAMPLER	SDL_opengl_glext.h	/^#define GL_SAMPLER /;"	kind:d
GL_SAMPLER_1D	SDL_opengl_glext.h	/^#define GL_SAMPLER_1D /;"	kind:d
GL_SAMPLER_1D_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_ARB /;"	kind:d
GL_SAMPLER_1D_ARRAY	SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_ARRAY /;"	kind:d
GL_SAMPLER_1D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_ARRAY_EXT /;"	kind:d
GL_SAMPLER_1D_ARRAY_SHADOW	SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW /;"	kind:d
GL_SAMPLER_1D_ARRAY_SHADOW_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT /;"	kind:d
GL_SAMPLER_1D_SHADOW	SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_SHADOW /;"	kind:d
GL_SAMPLER_1D_SHADOW_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLER_1D_SHADOW_ARB /;"	kind:d
GL_SAMPLER_2D	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D /;"	kind:d
GL_SAMPLER_2D	SDL_opengles2_gl2.h	/^#define GL_SAMPLER_2D /;"	kind:d
GL_SAMPLER_2D_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_ARB /;"	kind:d
GL_SAMPLER_2D_ARRAY	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_ARRAY /;"	kind:d
GL_SAMPLER_2D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_ARRAY_EXT /;"	kind:d
GL_SAMPLER_2D_ARRAY_SHADOW	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW /;"	kind:d
GL_SAMPLER_2D_ARRAY_SHADOW_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT /;"	kind:d
GL_SAMPLER_2D_ARRAY_SHADOW_NV	SDL_opengles2_gl2ext.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW_NV /;"	kind:d
GL_SAMPLER_2D_MULTISAMPLE	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_MULTISAMPLE /;"	kind:d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	kind:d
GL_SAMPLER_2D_RECT	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_RECT /;"	kind:d
GL_SAMPLER_2D_RECT_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_RECT_ARB /;"	kind:d
GL_SAMPLER_2D_RECT_SHADOW	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_RECT_SHADOW /;"	kind:d
GL_SAMPLER_2D_RECT_SHADOW_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_RECT_SHADOW_ARB /;"	kind:d
GL_SAMPLER_2D_SHADOW	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_SHADOW /;"	kind:d
GL_SAMPLER_2D_SHADOW_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLER_2D_SHADOW_ARB /;"	kind:d
GL_SAMPLER_2D_SHADOW_EXT	SDL_opengles2_gl2ext.h	/^#define GL_SAMPLER_2D_SHADOW_EXT /;"	kind:d
GL_SAMPLER_3D	SDL_opengl_glext.h	/^#define GL_SAMPLER_3D /;"	kind:d
GL_SAMPLER_3D_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLER_3D_ARB /;"	kind:d
GL_SAMPLER_3D_OES	SDL_opengles2_gl2ext.h	/^#define GL_SAMPLER_3D_OES /;"	kind:d
GL_SAMPLER_BINDING	SDL_opengl_glext.h	/^#define GL_SAMPLER_BINDING /;"	kind:d
GL_SAMPLER_BUFFER	SDL_opengl_glext.h	/^#define GL_SAMPLER_BUFFER /;"	kind:d
GL_SAMPLER_BUFFER_AMD	SDL_opengl_glext.h	/^#define GL_SAMPLER_BUFFER_AMD /;"	kind:d
GL_SAMPLER_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLER_BUFFER_EXT /;"	kind:d
GL_SAMPLER_CUBE	SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE /;"	kind:d
GL_SAMPLER_CUBE	SDL_opengles2_gl2.h	/^#define GL_SAMPLER_CUBE /;"	kind:d
GL_SAMPLER_CUBE_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_ARB /;"	kind:d
GL_SAMPLER_CUBE_MAP_ARRAY	SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY /;"	kind:d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	kind:d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW /;"	kind:d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB /;"	kind:d
GL_SAMPLER_CUBE_SHADOW	SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_SHADOW /;"	kind:d
GL_SAMPLER_CUBE_SHADOW_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLER_CUBE_SHADOW_EXT /;"	kind:d
GL_SAMPLER_CUBE_SHADOW_NV	SDL_opengles2_gl2ext.h	/^#define GL_SAMPLER_CUBE_SHADOW_NV /;"	kind:d
GL_SAMPLER_EXTERNAL_OES	SDL_opengles2_gl2ext.h	/^#define GL_SAMPLER_EXTERNAL_OES /;"	kind:d
GL_SAMPLER_KHR	SDL_opengles2_gl2ext.h	/^#define GL_SAMPLER_KHR /;"	kind:d
GL_SAMPLER_OBJECT_AMD	SDL_opengl_glext.h	/^#define GL_SAMPLER_OBJECT_AMD /;"	kind:d
GL_SAMPLER_RENDERBUFFER_NV	SDL_opengl_glext.h	/^#define GL_SAMPLER_RENDERBUFFER_NV /;"	kind:d
GL_SAMPLES	SDL_opengl.h	/^#define GL_SAMPLES	/;"	kind:d
GL_SAMPLES	SDL_opengl_glext.h	/^#define GL_SAMPLES /;"	kind:d
GL_SAMPLES	SDL_opengles2_gl2.h	/^#define GL_SAMPLES /;"	kind:d
GL_SAMPLES_3DFX	SDL_opengl_glext.h	/^#define GL_SAMPLES_3DFX /;"	kind:d
GL_SAMPLES_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLES_ARB /;"	kind:d
GL_SAMPLES_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLES_EXT /;"	kind:d
GL_SAMPLES_PASSED	SDL_opengl_glext.h	/^#define GL_SAMPLES_PASSED /;"	kind:d
GL_SAMPLES_PASSED_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLES_PASSED_ARB /;"	kind:d
GL_SAMPLES_SGIS	SDL_opengl_glext.h	/^#define GL_SAMPLES_SGIS /;"	kind:d
GL_SAMPLE_ALPHA_TO_COVERAGE	SDL_opengl.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE	/;"	kind:d
GL_SAMPLE_ALPHA_TO_COVERAGE	SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	kind:d
GL_SAMPLE_ALPHA_TO_COVERAGE	SDL_opengles2_gl2.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	kind:d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB /;"	kind:d
GL_SAMPLE_ALPHA_TO_MASK_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_EXT /;"	kind:d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_SGIS /;"	kind:d
GL_SAMPLE_ALPHA_TO_ONE	SDL_opengl.h	/^#define GL_SAMPLE_ALPHA_TO_ONE	/;"	kind:d
GL_SAMPLE_ALPHA_TO_ONE	SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE /;"	kind:d
GL_SAMPLE_ALPHA_TO_ONE_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_ARB /;"	kind:d
GL_SAMPLE_ALPHA_TO_ONE_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_EXT /;"	kind:d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	SDL_opengl_glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_SGIS /;"	kind:d
GL_SAMPLE_BUFFERS	SDL_opengl.h	/^#define GL_SAMPLE_BUFFERS	/;"	kind:d
GL_SAMPLE_BUFFERS	SDL_opengl_glext.h	/^#define GL_SAMPLE_BUFFERS /;"	kind:d
GL_SAMPLE_BUFFERS	SDL_opengles2_gl2.h	/^#define GL_SAMPLE_BUFFERS /;"	kind:d
GL_SAMPLE_BUFFERS_3DFX	SDL_opengl_glext.h	/^#define GL_SAMPLE_BUFFERS_3DFX /;"	kind:d
GL_SAMPLE_BUFFERS_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLE_BUFFERS_ARB /;"	kind:d
GL_SAMPLE_BUFFERS_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLE_BUFFERS_EXT /;"	kind:d
GL_SAMPLE_BUFFERS_SGIS	SDL_opengl_glext.h	/^#define GL_SAMPLE_BUFFERS_SGIS /;"	kind:d
GL_SAMPLE_COVERAGE	SDL_opengl.h	/^#define GL_SAMPLE_COVERAGE	/;"	kind:d
GL_SAMPLE_COVERAGE	SDL_opengl_glext.h	/^#define GL_SAMPLE_COVERAGE /;"	kind:d
GL_SAMPLE_COVERAGE	SDL_opengles2_gl2.h	/^#define GL_SAMPLE_COVERAGE /;"	kind:d
GL_SAMPLE_COVERAGE_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLE_COVERAGE_ARB /;"	kind:d
GL_SAMPLE_COVERAGE_INVERT	SDL_opengl.h	/^#define GL_SAMPLE_COVERAGE_INVERT	/;"	kind:d
GL_SAMPLE_COVERAGE_INVERT	SDL_opengl_glext.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	kind:d
GL_SAMPLE_COVERAGE_INVERT	SDL_opengles2_gl2.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	kind:d
GL_SAMPLE_COVERAGE_INVERT_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLE_COVERAGE_INVERT_ARB /;"	kind:d
GL_SAMPLE_COVERAGE_VALUE	SDL_opengl.h	/^#define GL_SAMPLE_COVERAGE_VALUE	/;"	kind:d
GL_SAMPLE_COVERAGE_VALUE	SDL_opengl_glext.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	kind:d
GL_SAMPLE_COVERAGE_VALUE	SDL_opengles2_gl2.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	kind:d
GL_SAMPLE_COVERAGE_VALUE_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLE_COVERAGE_VALUE_ARB /;"	kind:d
GL_SAMPLE_MASK	SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK /;"	kind:d
GL_SAMPLE_MASK_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_EXT /;"	kind:d
GL_SAMPLE_MASK_INVERT_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_INVERT_EXT /;"	kind:d
GL_SAMPLE_MASK_INVERT_SGIS	SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_INVERT_SGIS /;"	kind:d
GL_SAMPLE_MASK_NV	SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_NV /;"	kind:d
GL_SAMPLE_MASK_SGIS	SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_SGIS /;"	kind:d
GL_SAMPLE_MASK_VALUE	SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_VALUE /;"	kind:d
GL_SAMPLE_MASK_VALUE_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_VALUE_EXT /;"	kind:d
GL_SAMPLE_MASK_VALUE_NV	SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_VALUE_NV /;"	kind:d
GL_SAMPLE_MASK_VALUE_SGIS	SDL_opengl_glext.h	/^#define GL_SAMPLE_MASK_VALUE_SGIS /;"	kind:d
GL_SAMPLE_PATTERN_EXT	SDL_opengl_glext.h	/^#define GL_SAMPLE_PATTERN_EXT /;"	kind:d
GL_SAMPLE_PATTERN_SGIS	SDL_opengl_glext.h	/^#define GL_SAMPLE_PATTERN_SGIS /;"	kind:d
GL_SAMPLE_POSITION	SDL_opengl_glext.h	/^#define GL_SAMPLE_POSITION /;"	kind:d
GL_SAMPLE_POSITION_NV	SDL_opengl_glext.h	/^#define GL_SAMPLE_POSITION_NV /;"	kind:d
GL_SAMPLE_SHADING	SDL_opengl_glext.h	/^#define GL_SAMPLE_SHADING /;"	kind:d
GL_SAMPLE_SHADING_ARB	SDL_opengl_glext.h	/^#define GL_SAMPLE_SHADING_ARB /;"	kind:d
GL_SATURATE_BIT_ATI	SDL_opengl_glext.h	/^#define GL_SATURATE_BIT_ATI /;"	kind:d
GL_SCALAR_EXT	SDL_opengl_glext.h	/^#define GL_SCALAR_EXT /;"	kind:d
GL_SCALEBIAS_HINT_SGIX	SDL_opengl_glext.h	/^#define GL_SCALEBIAS_HINT_SGIX /;"	kind:d
GL_SCALED_RESOLVE_FASTEST_EXT	SDL_opengl_glext.h	/^#define GL_SCALED_RESOLVE_FASTEST_EXT /;"	kind:d
GL_SCALED_RESOLVE_NICEST_EXT	SDL_opengl_glext.h	/^#define GL_SCALED_RESOLVE_NICEST_EXT /;"	kind:d
GL_SCALE_BY_FOUR_NV	SDL_opengl_glext.h	/^#define GL_SCALE_BY_FOUR_NV /;"	kind:d
GL_SCALE_BY_ONE_HALF_NV	SDL_opengl_glext.h	/^#define GL_SCALE_BY_ONE_HALF_NV /;"	kind:d
GL_SCALE_BY_TWO_NV	SDL_opengl_glext.h	/^#define GL_SCALE_BY_TWO_NV /;"	kind:d
GL_SCISSOR_BIT	SDL_opengl.h	/^#define GL_SCISSOR_BIT	/;"	kind:d
GL_SCISSOR_BOX	SDL_opengl.h	/^#define GL_SCISSOR_BOX	/;"	kind:d
GL_SCISSOR_BOX	SDL_opengles2_gl2.h	/^#define GL_SCISSOR_BOX /;"	kind:d
GL_SCISSOR_TEST	SDL_opengl.h	/^#define GL_SCISSOR_TEST	/;"	kind:d
GL_SCISSOR_TEST	SDL_opengles2_gl2.h	/^#define GL_SCISSOR_TEST /;"	kind:d
GL_SCREEN_COORDINATES_REND	SDL_opengl_glext.h	/^#define GL_SCREEN_COORDINATES_REND /;"	kind:d
GL_SCREEN_NV	SDL_opengl_glext.h	/^#define GL_SCREEN_NV /;"	kind:d
GL_SECONDARY_COLOR_ARRAY	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_EXT /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_POINTER	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_SIZE	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_STRIDE	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_TYPE	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE /;"	kind:d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT /;"	kind:d
GL_SECONDARY_COLOR_NV	SDL_opengl_glext.h	/^#define GL_SECONDARY_COLOR_NV /;"	kind:d
GL_SECONDARY_INTERPOLATOR_ATI	SDL_opengl_glext.h	/^#define GL_SECONDARY_INTERPOLATOR_ATI /;"	kind:d
GL_SELECT	SDL_opengl.h	/^#define GL_SELECT	/;"	kind:d
GL_SELECTION_BUFFER_POINTER	SDL_opengl.h	/^#define GL_SELECTION_BUFFER_POINTER	/;"	kind:d
GL_SELECTION_BUFFER_SIZE	SDL_opengl.h	/^#define GL_SELECTION_BUFFER_SIZE	/;"	kind:d
GL_SEPARABLE_2D	SDL_opengl.h	/^#define GL_SEPARABLE_2D	/;"	kind:d
GL_SEPARABLE_2D	SDL_opengl_glext.h	/^#define GL_SEPARABLE_2D /;"	kind:d
GL_SEPARABLE_2D_EXT	SDL_opengl_glext.h	/^#define GL_SEPARABLE_2D_EXT /;"	kind:d
GL_SEPARATE_ATTRIBS	SDL_opengl_glext.h	/^#define GL_SEPARATE_ATTRIBS /;"	kind:d
GL_SEPARATE_ATTRIBS_EXT	SDL_opengl_glext.h	/^#define GL_SEPARATE_ATTRIBS_EXT /;"	kind:d
GL_SEPARATE_ATTRIBS_NV	SDL_opengl_glext.h	/^#define GL_SEPARATE_ATTRIBS_NV /;"	kind:d
GL_SEPARATE_SPECULAR_COLOR	SDL_opengl.h	/^#define GL_SEPARATE_SPECULAR_COLOR	/;"	kind:d
GL_SEPARATE_SPECULAR_COLOR	SDL_opengl_glext.h	/^#define GL_SEPARATE_SPECULAR_COLOR /;"	kind:d
GL_SEPARATE_SPECULAR_COLOR_EXT	SDL_opengl_glext.h	/^#define GL_SEPARATE_SPECULAR_COLOR_EXT /;"	kind:d
GL_SET	SDL_opengl.h	/^#define GL_SET	/;"	kind:d
GL_SET_AMD	SDL_opengl_glext.h	/^#define GL_SET_AMD /;"	kind:d
GL_SGIS_detail_texture	SDL_opengl_glext.h	/^#define GL_SGIS_detail_texture /;"	kind:d
GL_SGIS_fog_function	SDL_opengl_glext.h	/^#define GL_SGIS_fog_function /;"	kind:d
GL_SGIS_generate_mipmap	SDL_opengl_glext.h	/^#define GL_SGIS_generate_mipmap /;"	kind:d
GL_SGIS_multisample	SDL_opengl_glext.h	/^#define GL_SGIS_multisample /;"	kind:d
GL_SGIS_pixel_texture	SDL_opengl_glext.h	/^#define GL_SGIS_pixel_texture /;"	kind:d
GL_SGIS_point_line_texgen	SDL_opengl_glext.h	/^#define GL_SGIS_point_line_texgen /;"	kind:d
GL_SGIS_point_parameters	SDL_opengl_glext.h	/^#define GL_SGIS_point_parameters /;"	kind:d
GL_SGIS_sharpen_texture	SDL_opengl_glext.h	/^#define GL_SGIS_sharpen_texture /;"	kind:d
GL_SGIS_texture4D	SDL_opengl_glext.h	/^#define GL_SGIS_texture4D /;"	kind:d
GL_SGIS_texture_border_clamp	SDL_opengl_glext.h	/^#define GL_SGIS_texture_border_clamp /;"	kind:d
GL_SGIS_texture_color_mask	SDL_opengl_glext.h	/^#define GL_SGIS_texture_color_mask /;"	kind:d
GL_SGIS_texture_edge_clamp	SDL_opengl_glext.h	/^#define GL_SGIS_texture_edge_clamp /;"	kind:d
GL_SGIS_texture_filter4	SDL_opengl_glext.h	/^#define GL_SGIS_texture_filter4 /;"	kind:d
GL_SGIS_texture_lod	SDL_opengl_glext.h	/^#define GL_SGIS_texture_lod /;"	kind:d
GL_SGIS_texture_select	SDL_opengl_glext.h	/^#define GL_SGIS_texture_select /;"	kind:d
GL_SGIX_async	SDL_opengl_glext.h	/^#define GL_SGIX_async /;"	kind:d
GL_SGIX_async_histogram	SDL_opengl_glext.h	/^#define GL_SGIX_async_histogram /;"	kind:d
GL_SGIX_async_pixel	SDL_opengl_glext.h	/^#define GL_SGIX_async_pixel /;"	kind:d
GL_SGIX_blend_alpha_minmax	SDL_opengl_glext.h	/^#define GL_SGIX_blend_alpha_minmax /;"	kind:d
GL_SGIX_calligraphic_fragment	SDL_opengl_glext.h	/^#define GL_SGIX_calligraphic_fragment /;"	kind:d
GL_SGIX_clipmap	SDL_opengl_glext.h	/^#define GL_SGIX_clipmap /;"	kind:d
GL_SGIX_convolution_accuracy	SDL_opengl_glext.h	/^#define GL_SGIX_convolution_accuracy /;"	kind:d
GL_SGIX_depth_pass_instrument	SDL_opengl_glext.h	/^#define GL_SGIX_depth_pass_instrument /;"	kind:d
GL_SGIX_depth_texture	SDL_opengl_glext.h	/^#define GL_SGIX_depth_texture /;"	kind:d
GL_SGIX_flush_raster	SDL_opengl_glext.h	/^#define GL_SGIX_flush_raster /;"	kind:d
GL_SGIX_fog_offset	SDL_opengl_glext.h	/^#define GL_SGIX_fog_offset /;"	kind:d
GL_SGIX_fragment_lighting	SDL_opengl_glext.h	/^#define GL_SGIX_fragment_lighting /;"	kind:d
GL_SGIX_framezoom	SDL_opengl_glext.h	/^#define GL_SGIX_framezoom /;"	kind:d
GL_SGIX_igloo_interface	SDL_opengl_glext.h	/^#define GL_SGIX_igloo_interface /;"	kind:d
GL_SGIX_instruments	SDL_opengl_glext.h	/^#define GL_SGIX_instruments /;"	kind:d
GL_SGIX_interlace	SDL_opengl_glext.h	/^#define GL_SGIX_interlace /;"	kind:d
GL_SGIX_ir_instrument1	SDL_opengl_glext.h	/^#define GL_SGIX_ir_instrument1 /;"	kind:d
GL_SGIX_list_priority	SDL_opengl_glext.h	/^#define GL_SGIX_list_priority /;"	kind:d
GL_SGIX_pixel_texture	SDL_opengl_glext.h	/^#define GL_SGIX_pixel_texture /;"	kind:d
GL_SGIX_pixel_tiles	SDL_opengl_glext.h	/^#define GL_SGIX_pixel_tiles /;"	kind:d
GL_SGIX_polynomial_ffd	SDL_opengl_glext.h	/^#define GL_SGIX_polynomial_ffd /;"	kind:d
GL_SGIX_reference_plane	SDL_opengl_glext.h	/^#define GL_SGIX_reference_plane /;"	kind:d
GL_SGIX_resample	SDL_opengl_glext.h	/^#define GL_SGIX_resample /;"	kind:d
GL_SGIX_scalebias_hint	SDL_opengl_glext.h	/^#define GL_SGIX_scalebias_hint /;"	kind:d
GL_SGIX_shadow	SDL_opengl_glext.h	/^#define GL_SGIX_shadow /;"	kind:d
GL_SGIX_shadow_ambient	SDL_opengl_glext.h	/^#define GL_SGIX_shadow_ambient /;"	kind:d
GL_SGIX_sprite	SDL_opengl_glext.h	/^#define GL_SGIX_sprite /;"	kind:d
GL_SGIX_subsample	SDL_opengl_glext.h	/^#define GL_SGIX_subsample /;"	kind:d
GL_SGIX_tag_sample_buffer	SDL_opengl_glext.h	/^#define GL_SGIX_tag_sample_buffer /;"	kind:d
GL_SGIX_texture_add_env	SDL_opengl_glext.h	/^#define GL_SGIX_texture_add_env /;"	kind:d
GL_SGIX_texture_coordinate_clamp	SDL_opengl_glext.h	/^#define GL_SGIX_texture_coordinate_clamp /;"	kind:d
GL_SGIX_texture_lod_bias	SDL_opengl_glext.h	/^#define GL_SGIX_texture_lod_bias /;"	kind:d
GL_SGIX_texture_multi_buffer	SDL_opengl_glext.h	/^#define GL_SGIX_texture_multi_buffer /;"	kind:d
GL_SGIX_texture_scale_bias	SDL_opengl_glext.h	/^#define GL_SGIX_texture_scale_bias /;"	kind:d
GL_SGIX_vertex_preclip	SDL_opengl_glext.h	/^#define GL_SGIX_vertex_preclip /;"	kind:d
GL_SGIX_ycrcb	SDL_opengl_glext.h	/^#define GL_SGIX_ycrcb /;"	kind:d
GL_SGIX_ycrcb_subsample	SDL_opengl_glext.h	/^#define GL_SGIX_ycrcb_subsample /;"	kind:d
GL_SGIX_ycrcba	SDL_opengl_glext.h	/^#define GL_SGIX_ycrcba /;"	kind:d
GL_SGI_color_matrix	SDL_opengl_glext.h	/^#define GL_SGI_color_matrix /;"	kind:d
GL_SGI_color_table	SDL_opengl_glext.h	/^#define GL_SGI_color_table /;"	kind:d
GL_SGI_texture_color_table	SDL_opengl_glext.h	/^#define GL_SGI_texture_color_table /;"	kind:d
GL_SGX_BINARY_IMG	SDL_opengles2_gl2ext.h	/^#define GL_SGX_BINARY_IMG /;"	kind:d
GL_SGX_PROGRAM_BINARY_IMG	SDL_opengles2_gl2ext.h	/^#define GL_SGX_PROGRAM_BINARY_IMG /;"	kind:d
GL_SHADER	SDL_opengl_glext.h	/^#define GL_SHADER /;"	kind:d
GL_SHADER_BINARY_DMP	SDL_opengles2_gl2ext.h	/^#define GL_SHADER_BINARY_DMP /;"	kind:d
GL_SHADER_BINARY_FORMATS	SDL_opengl_glext.h	/^#define GL_SHADER_BINARY_FORMATS /;"	kind:d
GL_SHADER_BINARY_FORMATS	SDL_opengles2_gl2.h	/^#define GL_SHADER_BINARY_FORMATS /;"	kind:d
GL_SHADER_BINARY_VIV	SDL_opengles2_gl2ext.h	/^#define GL_SHADER_BINARY_VIV /;"	kind:d
GL_SHADER_COMPILER	SDL_opengl_glext.h	/^#define GL_SHADER_COMPILER /;"	kind:d
GL_SHADER_COMPILER	SDL_opengles2_gl2.h	/^#define GL_SHADER_COMPILER /;"	kind:d
GL_SHADER_CONSISTENT_NV	SDL_opengl_glext.h	/^#define GL_SHADER_CONSISTENT_NV /;"	kind:d
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV	SDL_opengl_glext.h	/^#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV /;"	kind:d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT /;"	kind:d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT	SDL_opengl_glext.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT /;"	kind:d
GL_SHADER_IMAGE_ATOMIC	SDL_opengl_glext.h	/^#define GL_SHADER_IMAGE_ATOMIC /;"	kind:d
GL_SHADER_IMAGE_LOAD	SDL_opengl_glext.h	/^#define GL_SHADER_IMAGE_LOAD /;"	kind:d
GL_SHADER_IMAGE_STORE	SDL_opengl_glext.h	/^#define GL_SHADER_IMAGE_STORE /;"	kind:d
GL_SHADER_INCLUDE_ARB	SDL_opengl_glext.h	/^#define GL_SHADER_INCLUDE_ARB /;"	kind:d
GL_SHADER_KHR	SDL_opengles2_gl2ext.h	/^#define GL_SHADER_KHR /;"	kind:d
GL_SHADER_OBJECT_ARB	SDL_opengl_glext.h	/^#define GL_SHADER_OBJECT_ARB /;"	kind:d
GL_SHADER_OBJECT_EXT	SDL_opengl_glext.h	/^#define GL_SHADER_OBJECT_EXT /;"	kind:d
GL_SHADER_OBJECT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_SHADER_OBJECT_EXT /;"	kind:d
GL_SHADER_OPERATION_NV	SDL_opengl_glext.h	/^#define GL_SHADER_OPERATION_NV /;"	kind:d
GL_SHADER_SOURCE_LENGTH	SDL_opengl_glext.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	kind:d
GL_SHADER_SOURCE_LENGTH	SDL_opengles2_gl2.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	kind:d
GL_SHADER_STORAGE_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BARRIER_BIT /;"	kind:d
GL_SHADER_STORAGE_BLOCK	SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BLOCK /;"	kind:d
GL_SHADER_STORAGE_BUFFER	SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BUFFER /;"	kind:d
GL_SHADER_STORAGE_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BUFFER_BINDING /;"	kind:d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT /;"	kind:d
GL_SHADER_STORAGE_BUFFER_SIZE	SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BUFFER_SIZE /;"	kind:d
GL_SHADER_STORAGE_BUFFER_START	SDL_opengl_glext.h	/^#define GL_SHADER_STORAGE_BUFFER_START /;"	kind:d
GL_SHADER_TYPE	SDL_opengl_glext.h	/^#define GL_SHADER_TYPE /;"	kind:d
GL_SHADER_TYPE	SDL_opengles2_gl2.h	/^#define GL_SHADER_TYPE /;"	kind:d
GL_SHADE_MODEL	SDL_opengl.h	/^#define GL_SHADE_MODEL	/;"	kind:d
GL_SHADING_LANGUAGE_VERSION	SDL_opengl_glext.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	kind:d
GL_SHADING_LANGUAGE_VERSION	SDL_opengles2_gl2.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	kind:d
GL_SHADING_LANGUAGE_VERSION_ARB	SDL_opengl_glext.h	/^#define GL_SHADING_LANGUAGE_VERSION_ARB /;"	kind:d
GL_SHADOW_AMBIENT_SGIX	SDL_opengl_glext.h	/^#define GL_SHADOW_AMBIENT_SGIX /;"	kind:d
GL_SHADOW_ATTENUATION_EXT	SDL_opengl_glext.h	/^#define GL_SHADOW_ATTENUATION_EXT /;"	kind:d
GL_SHARED_TEXTURE_PALETTE_EXT	SDL_opengl_glext.h	/^#define GL_SHARED_TEXTURE_PALETTE_EXT /;"	kind:d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	SDL_opengl_glext.h	/^#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS /;"	kind:d
GL_SHININESS	SDL_opengl.h	/^#define GL_SHININESS	/;"	kind:d
GL_SHORT	SDL_opengl.h	/^#define GL_SHORT	/;"	kind:d
GL_SHORT	SDL_opengles2_gl2.h	/^#define GL_SHORT /;"	kind:d
GL_SIGNALED	SDL_opengl_glext.h	/^#define GL_SIGNALED /;"	kind:d
GL_SIGNALED_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_SIGNALED_APPLE /;"	kind:d
GL_SIGNED_ALPHA8_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_ALPHA8_NV /;"	kind:d
GL_SIGNED_ALPHA_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_ALPHA_NV /;"	kind:d
GL_SIGNED_HILO16_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_HILO16_NV /;"	kind:d
GL_SIGNED_HILO8_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_HILO8_NV /;"	kind:d
GL_SIGNED_HILO_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_HILO_NV /;"	kind:d
GL_SIGNED_IDENTITY_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_IDENTITY_NV /;"	kind:d
GL_SIGNED_INTENSITY8_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_INTENSITY8_NV /;"	kind:d
GL_SIGNED_INTENSITY_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_INTENSITY_NV /;"	kind:d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_LUMINANCE8_ALPHA8_NV /;"	kind:d
GL_SIGNED_LUMINANCE8_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_LUMINANCE8_NV /;"	kind:d
GL_SIGNED_LUMINANCE_ALPHA_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_LUMINANCE_ALPHA_NV /;"	kind:d
GL_SIGNED_LUMINANCE_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_LUMINANCE_NV /;"	kind:d
GL_SIGNED_NEGATE_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_NEGATE_NV /;"	kind:d
GL_SIGNED_NORMALIZED	SDL_opengl_glext.h	/^#define GL_SIGNED_NORMALIZED /;"	kind:d
GL_SIGNED_RGB8_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_RGB8_NV /;"	kind:d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV /;"	kind:d
GL_SIGNED_RGBA8_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_RGBA8_NV /;"	kind:d
GL_SIGNED_RGBA_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_RGBA_NV /;"	kind:d
GL_SIGNED_RGB_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_RGB_NV /;"	kind:d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	SDL_opengl_glext.h	/^#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV /;"	kind:d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	SDL_opengl_glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST /;"	kind:d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	SDL_opengl_glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE /;"	kind:d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	SDL_opengl_glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST /;"	kind:d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	SDL_opengl_glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE /;"	kind:d
GL_SINGLE_COLOR	SDL_opengl.h	/^#define GL_SINGLE_COLOR	/;"	kind:d
GL_SINGLE_COLOR	SDL_opengl_glext.h	/^#define GL_SINGLE_COLOR /;"	kind:d
GL_SINGLE_COLOR_EXT	SDL_opengl_glext.h	/^#define GL_SINGLE_COLOR_EXT /;"	kind:d
GL_SKIP_COMPONENTS1_NV	SDL_opengl_glext.h	/^#define GL_SKIP_COMPONENTS1_NV /;"	kind:d
GL_SKIP_COMPONENTS2_NV	SDL_opengl_glext.h	/^#define GL_SKIP_COMPONENTS2_NV /;"	kind:d
GL_SKIP_COMPONENTS3_NV	SDL_opengl_glext.h	/^#define GL_SKIP_COMPONENTS3_NV /;"	kind:d
GL_SKIP_COMPONENTS4_NV	SDL_opengl_glext.h	/^#define GL_SKIP_COMPONENTS4_NV /;"	kind:d
GL_SKIP_DECODE_EXT	SDL_opengl_glext.h	/^#define GL_SKIP_DECODE_EXT /;"	kind:d
GL_SKIP_DECODE_EXT	SDL_opengles2_gl2ext.h	/^#define GL_SKIP_DECODE_EXT /;"	kind:d
GL_SKIP_MISSING_GLYPH_NV	SDL_opengl_glext.h	/^#define GL_SKIP_MISSING_GLYPH_NV /;"	kind:d
GL_SLICE_ACCUM_SUN	SDL_opengl_glext.h	/^#define GL_SLICE_ACCUM_SUN /;"	kind:d
GL_SLUMINANCE	SDL_opengl_glext.h	/^#define GL_SLUMINANCE /;"	kind:d
GL_SLUMINANCE8	SDL_opengl_glext.h	/^#define GL_SLUMINANCE8 /;"	kind:d
GL_SLUMINANCE8_ALPHA8	SDL_opengl_glext.h	/^#define GL_SLUMINANCE8_ALPHA8 /;"	kind:d
GL_SLUMINANCE8_ALPHA8_EXT	SDL_opengl_glext.h	/^#define GL_SLUMINANCE8_ALPHA8_EXT /;"	kind:d
GL_SLUMINANCE8_ALPHA8_NV	SDL_opengles2_gl2ext.h	/^#define GL_SLUMINANCE8_ALPHA8_NV /;"	kind:d
GL_SLUMINANCE8_EXT	SDL_opengl_glext.h	/^#define GL_SLUMINANCE8_EXT /;"	kind:d
GL_SLUMINANCE8_NV	SDL_opengles2_gl2ext.h	/^#define GL_SLUMINANCE8_NV /;"	kind:d
GL_SLUMINANCE_ALPHA	SDL_opengl_glext.h	/^#define GL_SLUMINANCE_ALPHA /;"	kind:d
GL_SLUMINANCE_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_SLUMINANCE_ALPHA_EXT /;"	kind:d
GL_SLUMINANCE_ALPHA_NV	SDL_opengles2_gl2ext.h	/^#define GL_SLUMINANCE_ALPHA_NV /;"	kind:d
GL_SLUMINANCE_EXT	SDL_opengl_glext.h	/^#define GL_SLUMINANCE_EXT /;"	kind:d
GL_SLUMINANCE_NV	SDL_opengles2_gl2ext.h	/^#define GL_SLUMINANCE_NV /;"	kind:d
GL_SMALL_CCW_ARC_TO_NV	SDL_opengl_glext.h	/^#define GL_SMALL_CCW_ARC_TO_NV /;"	kind:d
GL_SMALL_CW_ARC_TO_NV	SDL_opengl_glext.h	/^#define GL_SMALL_CW_ARC_TO_NV /;"	kind:d
GL_SMOOTH	SDL_opengl.h	/^#define GL_SMOOTH	/;"	kind:d
GL_SMOOTH_CUBIC_CURVE_TO_NV	SDL_opengl_glext.h	/^#define GL_SMOOTH_CUBIC_CURVE_TO_NV /;"	kind:d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	SDL_opengl.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY	/;"	kind:d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	SDL_opengl_glext.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	kind:d
GL_SMOOTH_LINE_WIDTH_RANGE	SDL_opengl.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE	/;"	kind:d
GL_SMOOTH_LINE_WIDTH_RANGE	SDL_opengl_glext.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	kind:d
GL_SMOOTH_POINT_SIZE_GRANULARITY	SDL_opengl.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY	/;"	kind:d
GL_SMOOTH_POINT_SIZE_GRANULARITY	SDL_opengl_glext.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	kind:d
GL_SMOOTH_POINT_SIZE_RANGE	SDL_opengl.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE	/;"	kind:d
GL_SMOOTH_POINT_SIZE_RANGE	SDL_opengl_glext.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE /;"	kind:d
GL_SMOOTH_QUADRATIC_CURVE_TO_NV	SDL_opengl_glext.h	/^#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	kind:d
GL_SM_COUNT_NV	SDL_opengl_glext.h	/^#define GL_SM_COUNT_NV /;"	kind:d
GL_SOFTLIGHT_NV	SDL_opengl_glext.h	/^#define GL_SOFTLIGHT_NV /;"	kind:d
GL_SOURCE0_ALPHA	SDL_opengl.h	/^#define GL_SOURCE0_ALPHA	/;"	kind:d
GL_SOURCE0_ALPHA	SDL_opengl_glext.h	/^#define GL_SOURCE0_ALPHA /;"	kind:d
GL_SOURCE0_ALPHA_ARB	SDL_opengl_glext.h	/^#define GL_SOURCE0_ALPHA_ARB /;"	kind:d
GL_SOURCE0_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_SOURCE0_ALPHA_EXT /;"	kind:d
GL_SOURCE0_RGB	SDL_opengl.h	/^#define GL_SOURCE0_RGB	/;"	kind:d
GL_SOURCE0_RGB	SDL_opengl_glext.h	/^#define GL_SOURCE0_RGB /;"	kind:d
GL_SOURCE0_RGB_ARB	SDL_opengl_glext.h	/^#define GL_SOURCE0_RGB_ARB /;"	kind:d
GL_SOURCE0_RGB_EXT	SDL_opengl_glext.h	/^#define GL_SOURCE0_RGB_EXT /;"	kind:d
GL_SOURCE1_ALPHA	SDL_opengl.h	/^#define GL_SOURCE1_ALPHA	/;"	kind:d
GL_SOURCE1_ALPHA	SDL_opengl_glext.h	/^#define GL_SOURCE1_ALPHA /;"	kind:d
GL_SOURCE1_ALPHA_ARB	SDL_opengl_glext.h	/^#define GL_SOURCE1_ALPHA_ARB /;"	kind:d
GL_SOURCE1_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_SOURCE1_ALPHA_EXT /;"	kind:d
GL_SOURCE1_RGB	SDL_opengl.h	/^#define GL_SOURCE1_RGB	/;"	kind:d
GL_SOURCE1_RGB	SDL_opengl_glext.h	/^#define GL_SOURCE1_RGB /;"	kind:d
GL_SOURCE1_RGB_ARB	SDL_opengl_glext.h	/^#define GL_SOURCE1_RGB_ARB /;"	kind:d
GL_SOURCE1_RGB_EXT	SDL_opengl_glext.h	/^#define GL_SOURCE1_RGB_EXT /;"	kind:d
GL_SOURCE2_ALPHA	SDL_opengl.h	/^#define GL_SOURCE2_ALPHA	/;"	kind:d
GL_SOURCE2_ALPHA	SDL_opengl_glext.h	/^#define GL_SOURCE2_ALPHA /;"	kind:d
GL_SOURCE2_ALPHA_ARB	SDL_opengl_glext.h	/^#define GL_SOURCE2_ALPHA_ARB /;"	kind:d
GL_SOURCE2_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_SOURCE2_ALPHA_EXT /;"	kind:d
GL_SOURCE2_RGB	SDL_opengl.h	/^#define GL_SOURCE2_RGB	/;"	kind:d
GL_SOURCE2_RGB	SDL_opengl_glext.h	/^#define GL_SOURCE2_RGB /;"	kind:d
GL_SOURCE2_RGB_ARB	SDL_opengl_glext.h	/^#define GL_SOURCE2_RGB_ARB /;"	kind:d
GL_SOURCE2_RGB_EXT	SDL_opengl_glext.h	/^#define GL_SOURCE2_RGB_EXT /;"	kind:d
GL_SOURCE3_ALPHA_NV	SDL_opengl_glext.h	/^#define GL_SOURCE3_ALPHA_NV /;"	kind:d
GL_SOURCE3_RGB_NV	SDL_opengl_glext.h	/^#define GL_SOURCE3_RGB_NV /;"	kind:d
GL_SPARE0_NV	SDL_opengl_glext.h	/^#define GL_SPARE0_NV /;"	kind:d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	SDL_opengl_glext.h	/^#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV /;"	kind:d
GL_SPARE1_NV	SDL_opengl_glext.h	/^#define GL_SPARE1_NV /;"	kind:d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB	SDL_opengl_glext.h	/^#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB /;"	kind:d
GL_SPECULAR	SDL_opengl.h	/^#define GL_SPECULAR	/;"	kind:d
GL_SPHERE_MAP	SDL_opengl.h	/^#define GL_SPHERE_MAP	/;"	kind:d
GL_SPOT_CUTOFF	SDL_opengl.h	/^#define GL_SPOT_CUTOFF	/;"	kind:d
GL_SPOT_DIRECTION	SDL_opengl.h	/^#define GL_SPOT_DIRECTION	/;"	kind:d
GL_SPOT_EXPONENT	SDL_opengl.h	/^#define GL_SPOT_EXPONENT	/;"	kind:d
GL_SPRITE_AXIAL_SGIX	SDL_opengl_glext.h	/^#define GL_SPRITE_AXIAL_SGIX /;"	kind:d
GL_SPRITE_AXIS_SGIX	SDL_opengl_glext.h	/^#define GL_SPRITE_AXIS_SGIX /;"	kind:d
GL_SPRITE_EYE_ALIGNED_SGIX	SDL_opengl_glext.h	/^#define GL_SPRITE_EYE_ALIGNED_SGIX /;"	kind:d
GL_SPRITE_MODE_SGIX	SDL_opengl_glext.h	/^#define GL_SPRITE_MODE_SGIX /;"	kind:d
GL_SPRITE_OBJECT_ALIGNED_SGIX	SDL_opengl_glext.h	/^#define GL_SPRITE_OBJECT_ALIGNED_SGIX /;"	kind:d
GL_SPRITE_SGIX	SDL_opengl_glext.h	/^#define GL_SPRITE_SGIX /;"	kind:d
GL_SPRITE_TRANSLATION_SGIX	SDL_opengl_glext.h	/^#define GL_SPRITE_TRANSLATION_SGIX /;"	kind:d
GL_SQUARE_NV	SDL_opengl_glext.h	/^#define GL_SQUARE_NV /;"	kind:d
GL_SRC0_ALPHA	SDL_opengl_glext.h	/^#define GL_SRC0_ALPHA /;"	kind:d
GL_SRC0_RGB	SDL_opengl_glext.h	/^#define GL_SRC0_RGB /;"	kind:d
GL_SRC1_ALPHA	SDL_opengl_glext.h	/^#define GL_SRC1_ALPHA /;"	kind:d
GL_SRC1_COLOR	SDL_opengl_glext.h	/^#define GL_SRC1_COLOR /;"	kind:d
GL_SRC1_RGB	SDL_opengl_glext.h	/^#define GL_SRC1_RGB /;"	kind:d
GL_SRC2_ALPHA	SDL_opengl_glext.h	/^#define GL_SRC2_ALPHA /;"	kind:d
GL_SRC2_RGB	SDL_opengl_glext.h	/^#define GL_SRC2_RGB /;"	kind:d
GL_SRC_ALPHA	SDL_opengl.h	/^#define GL_SRC_ALPHA	/;"	kind:d
GL_SRC_ALPHA	SDL_opengles2_gl2.h	/^#define GL_SRC_ALPHA /;"	kind:d
GL_SRC_ALPHA_SATURATE	SDL_opengl.h	/^#define GL_SRC_ALPHA_SATURATE	/;"	kind:d
GL_SRC_ALPHA_SATURATE	SDL_opengles2_gl2.h	/^#define GL_SRC_ALPHA_SATURATE /;"	kind:d
GL_SRC_ATOP_NV	SDL_opengl_glext.h	/^#define GL_SRC_ATOP_NV /;"	kind:d
GL_SRC_COLOR	SDL_opengl.h	/^#define GL_SRC_COLOR	/;"	kind:d
GL_SRC_COLOR	SDL_opengles2_gl2.h	/^#define GL_SRC_COLOR /;"	kind:d
GL_SRC_IN_NV	SDL_opengl_glext.h	/^#define GL_SRC_IN_NV /;"	kind:d
GL_SRC_NV	SDL_opengl_glext.h	/^#define GL_SRC_NV /;"	kind:d
GL_SRC_OUT_NV	SDL_opengl_glext.h	/^#define GL_SRC_OUT_NV /;"	kind:d
GL_SRC_OVER_NV	SDL_opengl_glext.h	/^#define GL_SRC_OVER_NV /;"	kind:d
GL_SRGB	SDL_opengl_glext.h	/^#define GL_SRGB /;"	kind:d
GL_SRGB8	SDL_opengl_glext.h	/^#define GL_SRGB8 /;"	kind:d
GL_SRGB8_ALPHA8	SDL_opengl_glext.h	/^#define GL_SRGB8_ALPHA8 /;"	kind:d
GL_SRGB8_ALPHA8_EXT	SDL_opengl_glext.h	/^#define GL_SRGB8_ALPHA8_EXT /;"	kind:d
GL_SRGB8_ALPHA8_EXT	SDL_opengles2_gl2ext.h	/^#define GL_SRGB8_ALPHA8_EXT /;"	kind:d
GL_SRGB8_EXT	SDL_opengl_glext.h	/^#define GL_SRGB8_EXT /;"	kind:d
GL_SRGB8_NV	SDL_opengles2_gl2ext.h	/^#define GL_SRGB8_NV /;"	kind:d
GL_SRGB_ALPHA	SDL_opengl_glext.h	/^#define GL_SRGB_ALPHA /;"	kind:d
GL_SRGB_ALPHA_EXT	SDL_opengl_glext.h	/^#define GL_SRGB_ALPHA_EXT /;"	kind:d
GL_SRGB_ALPHA_EXT	SDL_opengles2_gl2ext.h	/^#define GL_SRGB_ALPHA_EXT /;"	kind:d
GL_SRGB_DECODE_ARB	SDL_opengl_glext.h	/^#define GL_SRGB_DECODE_ARB /;"	kind:d
GL_SRGB_EXT	SDL_opengl_glext.h	/^#define GL_SRGB_EXT /;"	kind:d
GL_SRGB_EXT	SDL_opengles2_gl2ext.h	/^#define GL_SRGB_EXT /;"	kind:d
GL_SRGB_READ	SDL_opengl_glext.h	/^#define GL_SRGB_READ /;"	kind:d
GL_SRGB_WRITE	SDL_opengl_glext.h	/^#define GL_SRGB_WRITE /;"	kind:d
GL_STACK_OVERFLOW	SDL_opengl.h	/^#define GL_STACK_OVERFLOW	/;"	kind:d
GL_STACK_OVERFLOW_KHR	SDL_opengles2_gl2ext.h	/^#define GL_STACK_OVERFLOW_KHR /;"	kind:d
GL_STACK_UNDERFLOW	SDL_opengl.h	/^#define GL_STACK_UNDERFLOW	/;"	kind:d
GL_STACK_UNDERFLOW_KHR	SDL_opengles2_gl2ext.h	/^#define GL_STACK_UNDERFLOW_KHR /;"	kind:d
GL_STANDARD_FONT_NAME_NV	SDL_opengl_glext.h	/^#define GL_STANDARD_FONT_NAME_NV /;"	kind:d
GL_STATE_RESTORE	SDL_opengles2_gl2ext.h	/^#define GL_STATE_RESTORE /;"	kind:d
GL_STATIC_ATI	SDL_opengl_glext.h	/^#define GL_STATIC_ATI /;"	kind:d
GL_STATIC_COPY	SDL_opengl_glext.h	/^#define GL_STATIC_COPY /;"	kind:d
GL_STATIC_COPY_ARB	SDL_opengl_glext.h	/^#define GL_STATIC_COPY_ARB /;"	kind:d
GL_STATIC_DRAW	SDL_opengl_glext.h	/^#define GL_STATIC_DRAW /;"	kind:d
GL_STATIC_DRAW	SDL_opengles2_gl2.h	/^#define GL_STATIC_DRAW /;"	kind:d
GL_STATIC_DRAW_ARB	SDL_opengl_glext.h	/^#define GL_STATIC_DRAW_ARB /;"	kind:d
GL_STATIC_READ	SDL_opengl_glext.h	/^#define GL_STATIC_READ /;"	kind:d
GL_STATIC_READ_ARB	SDL_opengl_glext.h	/^#define GL_STATIC_READ_ARB /;"	kind:d
GL_STATIC_VERTEX_ARRAY_IBM	SDL_opengl_glext.h	/^#define GL_STATIC_VERTEX_ARRAY_IBM /;"	kind:d
GL_STENCIL	SDL_opengl.h	/^#define GL_STENCIL	/;"	kind:d
GL_STENCIL_ATTACHMENT	SDL_opengl_glext.h	/^#define GL_STENCIL_ATTACHMENT /;"	kind:d
GL_STENCIL_ATTACHMENT	SDL_opengles2_gl2.h	/^#define GL_STENCIL_ATTACHMENT /;"	kind:d
GL_STENCIL_ATTACHMENT_EXT	SDL_opengl_glext.h	/^#define GL_STENCIL_ATTACHMENT_EXT /;"	kind:d
GL_STENCIL_BACK_FAIL	SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_FAIL /;"	kind:d
GL_STENCIL_BACK_FAIL	SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_FAIL /;"	kind:d
GL_STENCIL_BACK_FAIL_ATI	SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_FAIL_ATI /;"	kind:d
GL_STENCIL_BACK_FUNC	SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_FUNC /;"	kind:d
GL_STENCIL_BACK_FUNC	SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_FUNC /;"	kind:d
GL_STENCIL_BACK_FUNC_ATI	SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_FUNC_ATI /;"	kind:d
GL_STENCIL_BACK_OP_VALUE_AMD	SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_OP_VALUE_AMD /;"	kind:d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	kind:d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	kind:d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI /;"	kind:d
GL_STENCIL_BACK_PASS_DEPTH_PASS	SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	kind:d
GL_STENCIL_BACK_PASS_DEPTH_PASS	SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	kind:d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI /;"	kind:d
GL_STENCIL_BACK_REF	SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_REF /;"	kind:d
GL_STENCIL_BACK_REF	SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_REF /;"	kind:d
GL_STENCIL_BACK_VALUE_MASK	SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	kind:d
GL_STENCIL_BACK_VALUE_MASK	SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	kind:d
GL_STENCIL_BACK_WRITEMASK	SDL_opengl_glext.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	kind:d
GL_STENCIL_BACK_WRITEMASK	SDL_opengles2_gl2.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	kind:d
GL_STENCIL_BITS	SDL_opengl.h	/^#define GL_STENCIL_BITS	/;"	kind:d
GL_STENCIL_BITS	SDL_opengles2_gl2.h	/^#define GL_STENCIL_BITS /;"	kind:d
GL_STENCIL_BUFFER_BIT	SDL_opengl.h	/^#define GL_STENCIL_BUFFER_BIT	/;"	kind:d
GL_STENCIL_BUFFER_BIT	SDL_opengles2_gl2.h	/^#define GL_STENCIL_BUFFER_BIT /;"	kind:d
GL_STENCIL_BUFFER_BIT0_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT0_QCOM /;"	kind:d
GL_STENCIL_BUFFER_BIT1_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT1_QCOM /;"	kind:d
GL_STENCIL_BUFFER_BIT2_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT2_QCOM /;"	kind:d
GL_STENCIL_BUFFER_BIT3_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT3_QCOM /;"	kind:d
GL_STENCIL_BUFFER_BIT4_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT4_QCOM /;"	kind:d
GL_STENCIL_BUFFER_BIT5_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT5_QCOM /;"	kind:d
GL_STENCIL_BUFFER_BIT6_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT6_QCOM /;"	kind:d
GL_STENCIL_BUFFER_BIT7_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_BUFFER_BIT7_QCOM /;"	kind:d
GL_STENCIL_CLEAR_TAG_VALUE_EXT	SDL_opengl_glext.h	/^#define GL_STENCIL_CLEAR_TAG_VALUE_EXT /;"	kind:d
GL_STENCIL_CLEAR_VALUE	SDL_opengl.h	/^#define GL_STENCIL_CLEAR_VALUE	/;"	kind:d
GL_STENCIL_CLEAR_VALUE	SDL_opengles2_gl2.h	/^#define GL_STENCIL_CLEAR_VALUE /;"	kind:d
GL_STENCIL_COMPONENTS	SDL_opengl_glext.h	/^#define GL_STENCIL_COMPONENTS /;"	kind:d
GL_STENCIL_EXT	SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_EXT /;"	kind:d
GL_STENCIL_FAIL	SDL_opengl.h	/^#define GL_STENCIL_FAIL	/;"	kind:d
GL_STENCIL_FAIL	SDL_opengles2_gl2.h	/^#define GL_STENCIL_FAIL /;"	kind:d
GL_STENCIL_FUNC	SDL_opengl.h	/^#define GL_STENCIL_FUNC	/;"	kind:d
GL_STENCIL_FUNC	SDL_opengles2_gl2.h	/^#define GL_STENCIL_FUNC /;"	kind:d
GL_STENCIL_INDEX	SDL_opengl.h	/^#define GL_STENCIL_INDEX	/;"	kind:d
GL_STENCIL_INDEX1	SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX1 /;"	kind:d
GL_STENCIL_INDEX16	SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX16 /;"	kind:d
GL_STENCIL_INDEX16_EXT	SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX16_EXT /;"	kind:d
GL_STENCIL_INDEX1_EXT	SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX1_EXT /;"	kind:d
GL_STENCIL_INDEX1_OES	SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_INDEX1_OES /;"	kind:d
GL_STENCIL_INDEX4	SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX4 /;"	kind:d
GL_STENCIL_INDEX4_EXT	SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX4_EXT /;"	kind:d
GL_STENCIL_INDEX4_OES	SDL_opengles2_gl2ext.h	/^#define GL_STENCIL_INDEX4_OES /;"	kind:d
GL_STENCIL_INDEX8	SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX8 /;"	kind:d
GL_STENCIL_INDEX8	SDL_opengles2_gl2.h	/^#define GL_STENCIL_INDEX8 /;"	kind:d
GL_STENCIL_INDEX8_EXT	SDL_opengl_glext.h	/^#define GL_STENCIL_INDEX8_EXT /;"	kind:d
GL_STENCIL_OP_VALUE_AMD	SDL_opengl_glext.h	/^#define GL_STENCIL_OP_VALUE_AMD /;"	kind:d
GL_STENCIL_PASS_DEPTH_FAIL	SDL_opengl.h	/^#define GL_STENCIL_PASS_DEPTH_FAIL	/;"	kind:d
GL_STENCIL_PASS_DEPTH_FAIL	SDL_opengles2_gl2.h	/^#define GL_STENCIL_PASS_DEPTH_FAIL /;"	kind:d
GL_STENCIL_PASS_DEPTH_PASS	SDL_opengl.h	/^#define GL_STENCIL_PASS_DEPTH_PASS	/;"	kind:d
GL_STENCIL_PASS_DEPTH_PASS	SDL_opengles2_gl2.h	/^#define GL_STENCIL_PASS_DEPTH_PASS /;"	kind:d
GL_STENCIL_REF	SDL_opengl.h	/^#define GL_STENCIL_REF	/;"	kind:d
GL_STENCIL_REF	SDL_opengles2_gl2.h	/^#define GL_STENCIL_REF /;"	kind:d
GL_STENCIL_RENDERABLE	SDL_opengl_glext.h	/^#define GL_STENCIL_RENDERABLE /;"	kind:d
GL_STENCIL_TAG_BITS_EXT	SDL_opengl_glext.h	/^#define GL_STENCIL_TAG_BITS_EXT /;"	kind:d
GL_STENCIL_TEST	SDL_opengl.h	/^#define GL_STENCIL_TEST	/;"	kind:d
GL_STENCIL_TEST	SDL_opengles2_gl2.h	/^#define GL_STENCIL_TEST /;"	kind:d
GL_STENCIL_TEST_TWO_SIDE_EXT	SDL_opengl_glext.h	/^#define GL_STENCIL_TEST_TWO_SIDE_EXT /;"	kind:d
GL_STENCIL_VALUE_MASK	SDL_opengl.h	/^#define GL_STENCIL_VALUE_MASK	/;"	kind:d
GL_STENCIL_VALUE_MASK	SDL_opengles2_gl2.h	/^#define GL_STENCIL_VALUE_MASK /;"	kind:d
GL_STENCIL_WRITEMASK	SDL_opengl.h	/^#define GL_STENCIL_WRITEMASK	/;"	kind:d
GL_STENCIL_WRITEMASK	SDL_opengles2_gl2.h	/^#define GL_STENCIL_WRITEMASK /;"	kind:d
GL_STEREO	SDL_opengl.h	/^#define GL_STEREO	/;"	kind:d
GL_STORAGE_CACHED_APPLE	SDL_opengl_glext.h	/^#define GL_STORAGE_CACHED_APPLE /;"	kind:d
GL_STORAGE_CLIENT_APPLE	SDL_opengl_glext.h	/^#define GL_STORAGE_CLIENT_APPLE /;"	kind:d
GL_STORAGE_PRIVATE_APPLE	SDL_opengl_glext.h	/^#define GL_STORAGE_PRIVATE_APPLE /;"	kind:d
GL_STORAGE_SHARED_APPLE	SDL_opengl_glext.h	/^#define GL_STORAGE_SHARED_APPLE /;"	kind:d
GL_STREAM_COPY	SDL_opengl_glext.h	/^#define GL_STREAM_COPY /;"	kind:d
GL_STREAM_COPY_ARB	SDL_opengl_glext.h	/^#define GL_STREAM_COPY_ARB /;"	kind:d
GL_STREAM_DRAW	SDL_opengl_glext.h	/^#define GL_STREAM_DRAW /;"	kind:d
GL_STREAM_DRAW	SDL_opengles2_gl2.h	/^#define GL_STREAM_DRAW /;"	kind:d
GL_STREAM_DRAW_ARB	SDL_opengl_glext.h	/^#define GL_STREAM_DRAW_ARB /;"	kind:d
GL_STREAM_RASTERIZATION_AMD	SDL_opengl_glext.h	/^#define GL_STREAM_RASTERIZATION_AMD /;"	kind:d
GL_STREAM_READ	SDL_opengl_glext.h	/^#define GL_STREAM_READ /;"	kind:d
GL_STREAM_READ_ARB	SDL_opengl_glext.h	/^#define GL_STREAM_READ_ARB /;"	kind:d
GL_STRICT_DEPTHFUNC_HINT_PGI	SDL_opengl_glext.h	/^#define GL_STRICT_DEPTHFUNC_HINT_PGI /;"	kind:d
GL_STRICT_LIGHTING_HINT_PGI	SDL_opengl_glext.h	/^#define GL_STRICT_LIGHTING_HINT_PGI /;"	kind:d
GL_STRICT_SCISSOR_HINT_PGI	SDL_opengl_glext.h	/^#define GL_STRICT_SCISSOR_HINT_PGI /;"	kind:d
GL_SUBPIXEL_BITS	SDL_opengl.h	/^#define GL_SUBPIXEL_BITS	/;"	kind:d
GL_SUBPIXEL_BITS	SDL_opengles2_gl2.h	/^#define GL_SUBPIXEL_BITS /;"	kind:d
GL_SUBSAMPLE_DISTANCE_AMD	SDL_opengl_glext.h	/^#define GL_SUBSAMPLE_DISTANCE_AMD /;"	kind:d
GL_SUBTRACT	SDL_opengl.h	/^#define GL_SUBTRACT	/;"	kind:d
GL_SUBTRACT	SDL_opengl_glext.h	/^#define GL_SUBTRACT /;"	kind:d
GL_SUBTRACT_ARB	SDL_opengl_glext.h	/^#define GL_SUBTRACT_ARB /;"	kind:d
GL_SUB_ATI	SDL_opengl_glext.h	/^#define GL_SUB_ATI /;"	kind:d
GL_SUCCESS_NV	SDL_opengl_glext.h	/^#define GL_SUCCESS_NV /;"	kind:d
GL_SUNX_constant_data	SDL_opengl_glext.h	/^#define GL_SUNX_constant_data /;"	kind:d
GL_SUN_convolution_border_modes	SDL_opengl_glext.h	/^#define GL_SUN_convolution_border_modes /;"	kind:d
GL_SUN_global_alpha	SDL_opengl_glext.h	/^#define GL_SUN_global_alpha /;"	kind:d
GL_SUN_mesh_array	SDL_opengl_glext.h	/^#define GL_SUN_mesh_array /;"	kind:d
GL_SUN_slice_accum	SDL_opengl_glext.h	/^#define GL_SUN_slice_accum /;"	kind:d
GL_SUN_triangle_list	SDL_opengl_glext.h	/^#define GL_SUN_triangle_list /;"	kind:d
GL_SUN_vertex	SDL_opengl_glext.h	/^#define GL_SUN_vertex /;"	kind:d
GL_SURFACE_MAPPED_NV	SDL_opengl_glext.h	/^#define GL_SURFACE_MAPPED_NV /;"	kind:d
GL_SURFACE_REGISTERED_NV	SDL_opengl_glext.h	/^#define GL_SURFACE_REGISTERED_NV /;"	kind:d
GL_SURFACE_STATE_NV	SDL_opengl_glext.h	/^#define GL_SURFACE_STATE_NV /;"	kind:d
GL_SWIZZLE_STQ_ATI	SDL_opengl_glext.h	/^#define GL_SWIZZLE_STQ_ATI /;"	kind:d
GL_SWIZZLE_STQ_DQ_ATI	SDL_opengl_glext.h	/^#define GL_SWIZZLE_STQ_DQ_ATI /;"	kind:d
GL_SWIZZLE_STRQ_ATI	SDL_opengl_glext.h	/^#define GL_SWIZZLE_STRQ_ATI /;"	kind:d
GL_SWIZZLE_STRQ_DQ_ATI	SDL_opengl_glext.h	/^#define GL_SWIZZLE_STRQ_DQ_ATI /;"	kind:d
GL_SWIZZLE_STR_ATI	SDL_opengl_glext.h	/^#define GL_SWIZZLE_STR_ATI /;"	kind:d
GL_SWIZZLE_STR_DR_ATI	SDL_opengl_glext.h	/^#define GL_SWIZZLE_STR_DR_ATI /;"	kind:d
GL_SYNC_CL_EVENT_ARB	SDL_opengl_glext.h	/^#define GL_SYNC_CL_EVENT_ARB /;"	kind:d
GL_SYNC_CL_EVENT_COMPLETE_ARB	SDL_opengl_glext.h	/^#define GL_SYNC_CL_EVENT_COMPLETE_ARB /;"	kind:d
GL_SYNC_CONDITION	SDL_opengl_glext.h	/^#define GL_SYNC_CONDITION /;"	kind:d
GL_SYNC_CONDITION_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_SYNC_CONDITION_APPLE /;"	kind:d
GL_SYNC_FENCE	SDL_opengl_glext.h	/^#define GL_SYNC_FENCE /;"	kind:d
GL_SYNC_FENCE_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_SYNC_FENCE_APPLE /;"	kind:d
GL_SYNC_FLAGS	SDL_opengl_glext.h	/^#define GL_SYNC_FLAGS /;"	kind:d
GL_SYNC_FLAGS_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_SYNC_FLAGS_APPLE /;"	kind:d
GL_SYNC_FLUSH_COMMANDS_BIT	SDL_opengl_glext.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT /;"	kind:d
GL_SYNC_FLUSH_COMMANDS_BIT_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT_APPLE /;"	kind:d
GL_SYNC_GPU_COMMANDS_COMPLETE	SDL_opengl_glext.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE /;"	kind:d
GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE /;"	kind:d
GL_SYNC_OBJECT_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_SYNC_OBJECT_APPLE /;"	kind:d
GL_SYNC_STATUS	SDL_opengl_glext.h	/^#define GL_SYNC_STATUS /;"	kind:d
GL_SYNC_STATUS_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_SYNC_STATUS_APPLE /;"	kind:d
GL_SYNC_X11_FENCE_EXT	SDL_opengl_glext.h	/^#define GL_SYNC_X11_FENCE_EXT /;"	kind:d
GL_SYSTEM_FONT_NAME_NV	SDL_opengl_glext.h	/^#define GL_SYSTEM_FONT_NAME_NV /;"	kind:d
GL_T	SDL_opengl.h	/^#define GL_T	/;"	kind:d
GL_T2F_C3F_V3F	SDL_opengl.h	/^#define GL_T2F_C3F_V3F	/;"	kind:d
GL_T2F_C4F_N3F_V3F	SDL_opengl.h	/^#define GL_T2F_C4F_N3F_V3F	/;"	kind:d
GL_T2F_C4UB_V3F	SDL_opengl.h	/^#define GL_T2F_C4UB_V3F	/;"	kind:d
GL_T2F_IUI_N3F_V2F_EXT	SDL_opengl_glext.h	/^#define GL_T2F_IUI_N3F_V2F_EXT /;"	kind:d
GL_T2F_IUI_N3F_V3F_EXT	SDL_opengl_glext.h	/^#define GL_T2F_IUI_N3F_V3F_EXT /;"	kind:d
GL_T2F_IUI_V2F_EXT	SDL_opengl_glext.h	/^#define GL_T2F_IUI_V2F_EXT /;"	kind:d
GL_T2F_IUI_V3F_EXT	SDL_opengl_glext.h	/^#define GL_T2F_IUI_V3F_EXT /;"	kind:d
GL_T2F_N3F_V3F	SDL_opengl.h	/^#define GL_T2F_N3F_V3F	/;"	kind:d
GL_T2F_V3F	SDL_opengl.h	/^#define GL_T2F_V3F	/;"	kind:d
GL_T4F_C4F_N3F_V4F	SDL_opengl.h	/^#define GL_T4F_C4F_N3F_V4F	/;"	kind:d
GL_T4F_V4F	SDL_opengl.h	/^#define GL_T4F_V4F	/;"	kind:d
GL_TABLE_TOO_LARGE	SDL_opengl.h	/^#define GL_TABLE_TOO_LARGE	/;"	kind:d
GL_TABLE_TOO_LARGE	SDL_opengl_glext.h	/^#define GL_TABLE_TOO_LARGE /;"	kind:d
GL_TABLE_TOO_LARGE_EXT	SDL_opengl_glext.h	/^#define GL_TABLE_TOO_LARGE_EXT /;"	kind:d
GL_TANGENT_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_TANGENT_ARRAY_EXT /;"	kind:d
GL_TANGENT_ARRAY_POINTER_EXT	SDL_opengl_glext.h	/^#define GL_TANGENT_ARRAY_POINTER_EXT /;"	kind:d
GL_TANGENT_ARRAY_STRIDE_EXT	SDL_opengl_glext.h	/^#define GL_TANGENT_ARRAY_STRIDE_EXT /;"	kind:d
GL_TANGENT_ARRAY_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_TANGENT_ARRAY_TYPE_EXT /;"	kind:d
GL_TESSELLATION_FACTOR_AMD	SDL_opengl_glext.h	/^#define GL_TESSELLATION_FACTOR_AMD /;"	kind:d
GL_TESSELLATION_MODE_AMD	SDL_opengl_glext.h	/^#define GL_TESSELLATION_MODE_AMD /;"	kind:d
GL_TESS_CONTROL_OUTPUT_VERTICES	SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_OUTPUT_VERTICES /;"	kind:d
GL_TESS_CONTROL_PROGRAM_NV	SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_PROGRAM_NV /;"	kind:d
GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV	SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV /;"	kind:d
GL_TESS_CONTROL_SHADER	SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_SHADER /;"	kind:d
GL_TESS_CONTROL_SHADER_BIT	SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_SHADER_BIT /;"	kind:d
GL_TESS_CONTROL_SUBROUTINE	SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_SUBROUTINE /;"	kind:d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM /;"	kind:d
GL_TESS_CONTROL_TEXTURE	SDL_opengl_glext.h	/^#define GL_TESS_CONTROL_TEXTURE /;"	kind:d
GL_TESS_EVALUATION_PROGRAM_NV	SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_PROGRAM_NV /;"	kind:d
GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV	SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV /;"	kind:d
GL_TESS_EVALUATION_SHADER	SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_SHADER /;"	kind:d
GL_TESS_EVALUATION_SHADER_BIT	SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_SHADER_BIT /;"	kind:d
GL_TESS_EVALUATION_SUBROUTINE	SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_SUBROUTINE /;"	kind:d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM /;"	kind:d
GL_TESS_EVALUATION_TEXTURE	SDL_opengl_glext.h	/^#define GL_TESS_EVALUATION_TEXTURE /;"	kind:d
GL_TESS_GEN_MODE	SDL_opengl_glext.h	/^#define GL_TESS_GEN_MODE /;"	kind:d
GL_TESS_GEN_POINT_MODE	SDL_opengl_glext.h	/^#define GL_TESS_GEN_POINT_MODE /;"	kind:d
GL_TESS_GEN_SPACING	SDL_opengl_glext.h	/^#define GL_TESS_GEN_SPACING /;"	kind:d
GL_TESS_GEN_VERTEX_ORDER	SDL_opengl_glext.h	/^#define GL_TESS_GEN_VERTEX_ORDER /;"	kind:d
GL_TEXCOORD1_BIT_PGI	SDL_opengl_glext.h	/^#define GL_TEXCOORD1_BIT_PGI /;"	kind:d
GL_TEXCOORD2_BIT_PGI	SDL_opengl_glext.h	/^#define GL_TEXCOORD2_BIT_PGI /;"	kind:d
GL_TEXCOORD3_BIT_PGI	SDL_opengl_glext.h	/^#define GL_TEXCOORD3_BIT_PGI /;"	kind:d
GL_TEXCOORD4_BIT_PGI	SDL_opengl_glext.h	/^#define GL_TEXCOORD4_BIT_PGI /;"	kind:d
GL_TEXTURE	SDL_opengl.h	/^#define GL_TEXTURE	/;"	kind:d
GL_TEXTURE	SDL_opengles2_gl2.h	/^#define GL_TEXTURE /;"	kind:d
GL_TEXTURE0	SDL_opengl.h	/^#define GL_TEXTURE0	/;"	kind:d
GL_TEXTURE0	SDL_opengl_glext.h	/^#define GL_TEXTURE0 /;"	kind:d
GL_TEXTURE0	SDL_opengles2_gl2.h	/^#define GL_TEXTURE0 /;"	kind:d
GL_TEXTURE0_ARB	SDL_opengl.h	/^#define GL_TEXTURE0_ARB	/;"	kind:d
GL_TEXTURE0_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE0_ARB /;"	kind:d
GL_TEXTURE1	SDL_opengl.h	/^#define GL_TEXTURE1	/;"	kind:d
GL_TEXTURE1	SDL_opengl_glext.h	/^#define GL_TEXTURE1 /;"	kind:d
GL_TEXTURE1	SDL_opengles2_gl2.h	/^#define GL_TEXTURE1 /;"	kind:d
GL_TEXTURE10	SDL_opengl.h	/^#define GL_TEXTURE10	/;"	kind:d
GL_TEXTURE10	SDL_opengl_glext.h	/^#define GL_TEXTURE10 /;"	kind:d
GL_TEXTURE10	SDL_opengles2_gl2.h	/^#define GL_TEXTURE10 /;"	kind:d
GL_TEXTURE10_ARB	SDL_opengl.h	/^#define GL_TEXTURE10_ARB	/;"	kind:d
GL_TEXTURE10_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE10_ARB /;"	kind:d
GL_TEXTURE11	SDL_opengl.h	/^#define GL_TEXTURE11	/;"	kind:d
GL_TEXTURE11	SDL_opengl_glext.h	/^#define GL_TEXTURE11 /;"	kind:d
GL_TEXTURE11	SDL_opengles2_gl2.h	/^#define GL_TEXTURE11 /;"	kind:d
GL_TEXTURE11_ARB	SDL_opengl.h	/^#define GL_TEXTURE11_ARB	/;"	kind:d
GL_TEXTURE11_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE11_ARB /;"	kind:d
GL_TEXTURE12	SDL_opengl.h	/^#define GL_TEXTURE12	/;"	kind:d
GL_TEXTURE12	SDL_opengl_glext.h	/^#define GL_TEXTURE12 /;"	kind:d
GL_TEXTURE12	SDL_opengles2_gl2.h	/^#define GL_TEXTURE12 /;"	kind:d
GL_TEXTURE12_ARB	SDL_opengl.h	/^#define GL_TEXTURE12_ARB	/;"	kind:d
GL_TEXTURE12_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE12_ARB /;"	kind:d
GL_TEXTURE13	SDL_opengl.h	/^#define GL_TEXTURE13	/;"	kind:d
GL_TEXTURE13	SDL_opengl_glext.h	/^#define GL_TEXTURE13 /;"	kind:d
GL_TEXTURE13	SDL_opengles2_gl2.h	/^#define GL_TEXTURE13 /;"	kind:d
GL_TEXTURE13_ARB	SDL_opengl.h	/^#define GL_TEXTURE13_ARB	/;"	kind:d
GL_TEXTURE13_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE13_ARB /;"	kind:d
GL_TEXTURE14	SDL_opengl.h	/^#define GL_TEXTURE14	/;"	kind:d
GL_TEXTURE14	SDL_opengl_glext.h	/^#define GL_TEXTURE14 /;"	kind:d
GL_TEXTURE14	SDL_opengles2_gl2.h	/^#define GL_TEXTURE14 /;"	kind:d
GL_TEXTURE14_ARB	SDL_opengl.h	/^#define GL_TEXTURE14_ARB	/;"	kind:d
GL_TEXTURE14_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE14_ARB /;"	kind:d
GL_TEXTURE15	SDL_opengl.h	/^#define GL_TEXTURE15	/;"	kind:d
GL_TEXTURE15	SDL_opengl_glext.h	/^#define GL_TEXTURE15 /;"	kind:d
GL_TEXTURE15	SDL_opengles2_gl2.h	/^#define GL_TEXTURE15 /;"	kind:d
GL_TEXTURE15_ARB	SDL_opengl.h	/^#define GL_TEXTURE15_ARB	/;"	kind:d
GL_TEXTURE15_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE15_ARB /;"	kind:d
GL_TEXTURE16	SDL_opengl.h	/^#define GL_TEXTURE16	/;"	kind:d
GL_TEXTURE16	SDL_opengl_glext.h	/^#define GL_TEXTURE16 /;"	kind:d
GL_TEXTURE16	SDL_opengles2_gl2.h	/^#define GL_TEXTURE16 /;"	kind:d
GL_TEXTURE16_ARB	SDL_opengl.h	/^#define GL_TEXTURE16_ARB	/;"	kind:d
GL_TEXTURE16_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE16_ARB /;"	kind:d
GL_TEXTURE17	SDL_opengl.h	/^#define GL_TEXTURE17	/;"	kind:d
GL_TEXTURE17	SDL_opengl_glext.h	/^#define GL_TEXTURE17 /;"	kind:d
GL_TEXTURE17	SDL_opengles2_gl2.h	/^#define GL_TEXTURE17 /;"	kind:d
GL_TEXTURE17_ARB	SDL_opengl.h	/^#define GL_TEXTURE17_ARB	/;"	kind:d
GL_TEXTURE17_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE17_ARB /;"	kind:d
GL_TEXTURE18	SDL_opengl.h	/^#define GL_TEXTURE18	/;"	kind:d
GL_TEXTURE18	SDL_opengl_glext.h	/^#define GL_TEXTURE18 /;"	kind:d
GL_TEXTURE18	SDL_opengles2_gl2.h	/^#define GL_TEXTURE18 /;"	kind:d
GL_TEXTURE18_ARB	SDL_opengl.h	/^#define GL_TEXTURE18_ARB	/;"	kind:d
GL_TEXTURE18_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE18_ARB /;"	kind:d
GL_TEXTURE19	SDL_opengl.h	/^#define GL_TEXTURE19	/;"	kind:d
GL_TEXTURE19	SDL_opengl_glext.h	/^#define GL_TEXTURE19 /;"	kind:d
GL_TEXTURE19	SDL_opengles2_gl2.h	/^#define GL_TEXTURE19 /;"	kind:d
GL_TEXTURE19_ARB	SDL_opengl.h	/^#define GL_TEXTURE19_ARB	/;"	kind:d
GL_TEXTURE19_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE19_ARB /;"	kind:d
GL_TEXTURE1_ARB	SDL_opengl.h	/^#define GL_TEXTURE1_ARB	/;"	kind:d
GL_TEXTURE1_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE1_ARB /;"	kind:d
GL_TEXTURE2	SDL_opengl.h	/^#define GL_TEXTURE2	/;"	kind:d
GL_TEXTURE2	SDL_opengl_glext.h	/^#define GL_TEXTURE2 /;"	kind:d
GL_TEXTURE2	SDL_opengles2_gl2.h	/^#define GL_TEXTURE2 /;"	kind:d
GL_TEXTURE20	SDL_opengl.h	/^#define GL_TEXTURE20	/;"	kind:d
GL_TEXTURE20	SDL_opengl_glext.h	/^#define GL_TEXTURE20 /;"	kind:d
GL_TEXTURE20	SDL_opengles2_gl2.h	/^#define GL_TEXTURE20 /;"	kind:d
GL_TEXTURE20_ARB	SDL_opengl.h	/^#define GL_TEXTURE20_ARB	/;"	kind:d
GL_TEXTURE20_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE20_ARB /;"	kind:d
GL_TEXTURE21	SDL_opengl.h	/^#define GL_TEXTURE21	/;"	kind:d
GL_TEXTURE21	SDL_opengl_glext.h	/^#define GL_TEXTURE21 /;"	kind:d
GL_TEXTURE21	SDL_opengles2_gl2.h	/^#define GL_TEXTURE21 /;"	kind:d
GL_TEXTURE21_ARB	SDL_opengl.h	/^#define GL_TEXTURE21_ARB	/;"	kind:d
GL_TEXTURE21_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE21_ARB /;"	kind:d
GL_TEXTURE22	SDL_opengl.h	/^#define GL_TEXTURE22	/;"	kind:d
GL_TEXTURE22	SDL_opengl_glext.h	/^#define GL_TEXTURE22 /;"	kind:d
GL_TEXTURE22	SDL_opengles2_gl2.h	/^#define GL_TEXTURE22 /;"	kind:d
GL_TEXTURE22_ARB	SDL_opengl.h	/^#define GL_TEXTURE22_ARB	/;"	kind:d
GL_TEXTURE22_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE22_ARB /;"	kind:d
GL_TEXTURE23	SDL_opengl.h	/^#define GL_TEXTURE23	/;"	kind:d
GL_TEXTURE23	SDL_opengl_glext.h	/^#define GL_TEXTURE23 /;"	kind:d
GL_TEXTURE23	SDL_opengles2_gl2.h	/^#define GL_TEXTURE23 /;"	kind:d
GL_TEXTURE23_ARB	SDL_opengl.h	/^#define GL_TEXTURE23_ARB	/;"	kind:d
GL_TEXTURE23_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE23_ARB /;"	kind:d
GL_TEXTURE24	SDL_opengl.h	/^#define GL_TEXTURE24	/;"	kind:d
GL_TEXTURE24	SDL_opengl_glext.h	/^#define GL_TEXTURE24 /;"	kind:d
GL_TEXTURE24	SDL_opengles2_gl2.h	/^#define GL_TEXTURE24 /;"	kind:d
GL_TEXTURE24_ARB	SDL_opengl.h	/^#define GL_TEXTURE24_ARB	/;"	kind:d
GL_TEXTURE24_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE24_ARB /;"	kind:d
GL_TEXTURE25	SDL_opengl.h	/^#define GL_TEXTURE25	/;"	kind:d
GL_TEXTURE25	SDL_opengl_glext.h	/^#define GL_TEXTURE25 /;"	kind:d
GL_TEXTURE25	SDL_opengles2_gl2.h	/^#define GL_TEXTURE25 /;"	kind:d
GL_TEXTURE25_ARB	SDL_opengl.h	/^#define GL_TEXTURE25_ARB	/;"	kind:d
GL_TEXTURE25_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE25_ARB /;"	kind:d
GL_TEXTURE26	SDL_opengl.h	/^#define GL_TEXTURE26	/;"	kind:d
GL_TEXTURE26	SDL_opengl_glext.h	/^#define GL_TEXTURE26 /;"	kind:d
GL_TEXTURE26	SDL_opengles2_gl2.h	/^#define GL_TEXTURE26 /;"	kind:d
GL_TEXTURE26_ARB	SDL_opengl.h	/^#define GL_TEXTURE26_ARB	/;"	kind:d
GL_TEXTURE26_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE26_ARB /;"	kind:d
GL_TEXTURE27	SDL_opengl.h	/^#define GL_TEXTURE27	/;"	kind:d
GL_TEXTURE27	SDL_opengl_glext.h	/^#define GL_TEXTURE27 /;"	kind:d
GL_TEXTURE27	SDL_opengles2_gl2.h	/^#define GL_TEXTURE27 /;"	kind:d
GL_TEXTURE27_ARB	SDL_opengl.h	/^#define GL_TEXTURE27_ARB	/;"	kind:d
GL_TEXTURE27_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE27_ARB /;"	kind:d
GL_TEXTURE28	SDL_opengl.h	/^#define GL_TEXTURE28	/;"	kind:d
GL_TEXTURE28	SDL_opengl_glext.h	/^#define GL_TEXTURE28 /;"	kind:d
GL_TEXTURE28	SDL_opengles2_gl2.h	/^#define GL_TEXTURE28 /;"	kind:d
GL_TEXTURE28_ARB	SDL_opengl.h	/^#define GL_TEXTURE28_ARB	/;"	kind:d
GL_TEXTURE28_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE28_ARB /;"	kind:d
GL_TEXTURE29	SDL_opengl.h	/^#define GL_TEXTURE29	/;"	kind:d
GL_TEXTURE29	SDL_opengl_glext.h	/^#define GL_TEXTURE29 /;"	kind:d
GL_TEXTURE29	SDL_opengles2_gl2.h	/^#define GL_TEXTURE29 /;"	kind:d
GL_TEXTURE29_ARB	SDL_opengl.h	/^#define GL_TEXTURE29_ARB	/;"	kind:d
GL_TEXTURE29_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE29_ARB /;"	kind:d
GL_TEXTURE2_ARB	SDL_opengl.h	/^#define GL_TEXTURE2_ARB	/;"	kind:d
GL_TEXTURE2_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE2_ARB /;"	kind:d
GL_TEXTURE3	SDL_opengl.h	/^#define GL_TEXTURE3	/;"	kind:d
GL_TEXTURE3	SDL_opengl_glext.h	/^#define GL_TEXTURE3 /;"	kind:d
GL_TEXTURE3	SDL_opengles2_gl2.h	/^#define GL_TEXTURE3 /;"	kind:d
GL_TEXTURE30	SDL_opengl.h	/^#define GL_TEXTURE30	/;"	kind:d
GL_TEXTURE30	SDL_opengl_glext.h	/^#define GL_TEXTURE30 /;"	kind:d
GL_TEXTURE30	SDL_opengles2_gl2.h	/^#define GL_TEXTURE30 /;"	kind:d
GL_TEXTURE30_ARB	SDL_opengl.h	/^#define GL_TEXTURE30_ARB	/;"	kind:d
GL_TEXTURE30_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE30_ARB /;"	kind:d
GL_TEXTURE31	SDL_opengl.h	/^#define GL_TEXTURE31	/;"	kind:d
GL_TEXTURE31	SDL_opengl_glext.h	/^#define GL_TEXTURE31 /;"	kind:d
GL_TEXTURE31	SDL_opengles2_gl2.h	/^#define GL_TEXTURE31 /;"	kind:d
GL_TEXTURE31_ARB	SDL_opengl.h	/^#define GL_TEXTURE31_ARB	/;"	kind:d
GL_TEXTURE31_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE31_ARB /;"	kind:d
GL_TEXTURE3_ARB	SDL_opengl.h	/^#define GL_TEXTURE3_ARB	/;"	kind:d
GL_TEXTURE3_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE3_ARB /;"	kind:d
GL_TEXTURE4	SDL_opengl.h	/^#define GL_TEXTURE4	/;"	kind:d
GL_TEXTURE4	SDL_opengl_glext.h	/^#define GL_TEXTURE4 /;"	kind:d
GL_TEXTURE4	SDL_opengles2_gl2.h	/^#define GL_TEXTURE4 /;"	kind:d
GL_TEXTURE4_ARB	SDL_opengl.h	/^#define GL_TEXTURE4_ARB	/;"	kind:d
GL_TEXTURE4_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE4_ARB /;"	kind:d
GL_TEXTURE5	SDL_opengl.h	/^#define GL_TEXTURE5	/;"	kind:d
GL_TEXTURE5	SDL_opengl_glext.h	/^#define GL_TEXTURE5 /;"	kind:d
GL_TEXTURE5	SDL_opengles2_gl2.h	/^#define GL_TEXTURE5 /;"	kind:d
GL_TEXTURE5_ARB	SDL_opengl.h	/^#define GL_TEXTURE5_ARB	/;"	kind:d
GL_TEXTURE5_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE5_ARB /;"	kind:d
GL_TEXTURE6	SDL_opengl.h	/^#define GL_TEXTURE6	/;"	kind:d
GL_TEXTURE6	SDL_opengl_glext.h	/^#define GL_TEXTURE6 /;"	kind:d
GL_TEXTURE6	SDL_opengles2_gl2.h	/^#define GL_TEXTURE6 /;"	kind:d
GL_TEXTURE6_ARB	SDL_opengl.h	/^#define GL_TEXTURE6_ARB	/;"	kind:d
GL_TEXTURE6_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE6_ARB /;"	kind:d
GL_TEXTURE7	SDL_opengl.h	/^#define GL_TEXTURE7	/;"	kind:d
GL_TEXTURE7	SDL_opengl_glext.h	/^#define GL_TEXTURE7 /;"	kind:d
GL_TEXTURE7	SDL_opengles2_gl2.h	/^#define GL_TEXTURE7 /;"	kind:d
GL_TEXTURE7_ARB	SDL_opengl.h	/^#define GL_TEXTURE7_ARB	/;"	kind:d
GL_TEXTURE7_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE7_ARB /;"	kind:d
GL_TEXTURE8	SDL_opengl.h	/^#define GL_TEXTURE8	/;"	kind:d
GL_TEXTURE8	SDL_opengl_glext.h	/^#define GL_TEXTURE8 /;"	kind:d
GL_TEXTURE8	SDL_opengles2_gl2.h	/^#define GL_TEXTURE8 /;"	kind:d
GL_TEXTURE8_ARB	SDL_opengl.h	/^#define GL_TEXTURE8_ARB	/;"	kind:d
GL_TEXTURE8_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE8_ARB /;"	kind:d
GL_TEXTURE9	SDL_opengl.h	/^#define GL_TEXTURE9	/;"	kind:d
GL_TEXTURE9	SDL_opengl_glext.h	/^#define GL_TEXTURE9 /;"	kind:d
GL_TEXTURE9	SDL_opengles2_gl2.h	/^#define GL_TEXTURE9 /;"	kind:d
GL_TEXTURE9_ARB	SDL_opengl.h	/^#define GL_TEXTURE9_ARB	/;"	kind:d
GL_TEXTURE9_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE9_ARB /;"	kind:d
GL_TEXTURE_1D	SDL_opengl.h	/^#define GL_TEXTURE_1D	/;"	kind:d
GL_TEXTURE_1D_ARRAY	SDL_opengl_glext.h	/^#define GL_TEXTURE_1D_ARRAY /;"	kind:d
GL_TEXTURE_1D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_1D_ARRAY_EXT /;"	kind:d
GL_TEXTURE_1D_BINDING_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_1D_BINDING_EXT /;"	kind:d
GL_TEXTURE_1D_STACK_BINDING_MESAX	SDL_opengl_glext.h	/^#define GL_TEXTURE_1D_STACK_BINDING_MESAX /;"	kind:d
GL_TEXTURE_1D_STACK_MESAX	SDL_opengl_glext.h	/^#define GL_TEXTURE_1D_STACK_MESAX /;"	kind:d
GL_TEXTURE_2D	SDL_opengl.h	/^#define GL_TEXTURE_2D	/;"	kind:d
GL_TEXTURE_2D	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_2D /;"	kind:d
GL_TEXTURE_2D_ARRAY	SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_ARRAY /;"	kind:d
GL_TEXTURE_2D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_ARRAY_EXT /;"	kind:d
GL_TEXTURE_2D_BINDING_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_BINDING_EXT /;"	kind:d
GL_TEXTURE_2D_MULTISAMPLE	SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_MULTISAMPLE /;"	kind:d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	kind:d
GL_TEXTURE_2D_STACK_BINDING_MESAX	SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_STACK_BINDING_MESAX /;"	kind:d
GL_TEXTURE_2D_STACK_MESAX	SDL_opengl_glext.h	/^#define GL_TEXTURE_2D_STACK_MESAX /;"	kind:d
GL_TEXTURE_3D	SDL_opengl.h	/^#define GL_TEXTURE_3D	/;"	kind:d
GL_TEXTURE_3D	SDL_opengl_glext.h	/^#define GL_TEXTURE_3D /;"	kind:d
GL_TEXTURE_3D_BINDING_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_3D_BINDING_EXT /;"	kind:d
GL_TEXTURE_3D_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_3D_EXT /;"	kind:d
GL_TEXTURE_3D_OES	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_3D_OES /;"	kind:d
GL_TEXTURE_4DSIZE_SGIS	SDL_opengl_glext.h	/^#define GL_TEXTURE_4DSIZE_SGIS /;"	kind:d
GL_TEXTURE_4D_BINDING_SGIS	SDL_opengl_glext.h	/^#define GL_TEXTURE_4D_BINDING_SGIS /;"	kind:d
GL_TEXTURE_4D_SGIS	SDL_opengl_glext.h	/^#define GL_TEXTURE_4D_SGIS /;"	kind:d
GL_TEXTURE_ALPHA_SIZE	SDL_opengl.h	/^#define GL_TEXTURE_ALPHA_SIZE	/;"	kind:d
GL_TEXTURE_ALPHA_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_ALPHA_SIZE_EXT /;"	kind:d
GL_TEXTURE_ALPHA_TYPE	SDL_opengl_glext.h	/^#define GL_TEXTURE_ALPHA_TYPE /;"	kind:d
GL_TEXTURE_ALPHA_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_ALPHA_TYPE_ARB /;"	kind:d
GL_TEXTURE_APPLICATION_MODE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_APPLICATION_MODE_EXT /;"	kind:d
GL_TEXTURE_BASE_LEVEL	SDL_opengl.h	/^#define GL_TEXTURE_BASE_LEVEL	/;"	kind:d
GL_TEXTURE_BASE_LEVEL	SDL_opengl_glext.h	/^#define GL_TEXTURE_BASE_LEVEL /;"	kind:d
GL_TEXTURE_BASE_LEVEL_SGIS	SDL_opengl_glext.h	/^#define GL_TEXTURE_BASE_LEVEL_SGIS /;"	kind:d
GL_TEXTURE_BINDING_1D	SDL_opengl.h	/^#define GL_TEXTURE_BINDING_1D	/;"	kind:d
GL_TEXTURE_BINDING_1D_ARRAY	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY /;"	kind:d
GL_TEXTURE_BINDING_1D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY_EXT /;"	kind:d
GL_TEXTURE_BINDING_2D	SDL_opengl.h	/^#define GL_TEXTURE_BINDING_2D	/;"	kind:d
GL_TEXTURE_BINDING_2D	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_BINDING_2D /;"	kind:d
GL_TEXTURE_BINDING_2D_ARRAY	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY /;"	kind:d
GL_TEXTURE_BINDING_2D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY_EXT /;"	kind:d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE /;"	kind:d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY /;"	kind:d
GL_TEXTURE_BINDING_3D	SDL_opengl.h	/^#define GL_TEXTURE_BINDING_3D	/;"	kind:d
GL_TEXTURE_BINDING_3D	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_3D /;"	kind:d
GL_TEXTURE_BINDING_3D_OES	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_BINDING_3D_OES /;"	kind:d
GL_TEXTURE_BINDING_BUFFER	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_BUFFER /;"	kind:d
GL_TEXTURE_BINDING_BUFFER_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_BUFFER_ARB /;"	kind:d
GL_TEXTURE_BINDING_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_BUFFER_EXT /;"	kind:d
GL_TEXTURE_BINDING_CUBE_MAP	SDL_opengl.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP	/;"	kind:d
GL_TEXTURE_BINDING_CUBE_MAP	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	kind:d
GL_TEXTURE_BINDING_CUBE_MAP	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	kind:d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARB /;"	kind:d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY /;"	kind:d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB /;"	kind:d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_EXT /;"	kind:d
GL_TEXTURE_BINDING_EXTERNAL_OES	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_BINDING_EXTERNAL_OES /;"	kind:d
GL_TEXTURE_BINDING_RECTANGLE	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE /;"	kind:d
GL_TEXTURE_BINDING_RECTANGLE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_ARB /;"	kind:d
GL_TEXTURE_BINDING_RECTANGLE_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_NV /;"	kind:d
GL_TEXTURE_BINDING_RENDERBUFFER_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_BINDING_RENDERBUFFER_NV /;"	kind:d
GL_TEXTURE_BIT	SDL_opengl.h	/^#define GL_TEXTURE_BIT	/;"	kind:d
GL_TEXTURE_BLUE_SIZE	SDL_opengl.h	/^#define GL_TEXTURE_BLUE_SIZE	/;"	kind:d
GL_TEXTURE_BLUE_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_BLUE_SIZE_EXT /;"	kind:d
GL_TEXTURE_BLUE_TYPE	SDL_opengl_glext.h	/^#define GL_TEXTURE_BLUE_TYPE /;"	kind:d
GL_TEXTURE_BLUE_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_BLUE_TYPE_ARB /;"	kind:d
GL_TEXTURE_BORDER	SDL_opengl.h	/^#define GL_TEXTURE_BORDER	/;"	kind:d
GL_TEXTURE_BORDER_COLOR	SDL_opengl.h	/^#define GL_TEXTURE_BORDER_COLOR	/;"	kind:d
GL_TEXTURE_BORDER_COLOR_NV	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_BORDER_COLOR_NV /;"	kind:d
GL_TEXTURE_BORDER_VALUES_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_BORDER_VALUES_NV /;"	kind:d
GL_TEXTURE_BUFFER	SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER /;"	kind:d
GL_TEXTURE_BUFFER_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_ARB /;"	kind:d
GL_TEXTURE_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_BINDING /;"	kind:d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING /;"	kind:d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB /;"	kind:d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT /;"	kind:d
GL_TEXTURE_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_EXT /;"	kind:d
GL_TEXTURE_BUFFER_FORMAT_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_FORMAT_ARB /;"	kind:d
GL_TEXTURE_BUFFER_FORMAT_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_FORMAT_EXT /;"	kind:d
GL_TEXTURE_BUFFER_OFFSET	SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_OFFSET /;"	kind:d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT /;"	kind:d
GL_TEXTURE_BUFFER_SIZE	SDL_opengl_glext.h	/^#define GL_TEXTURE_BUFFER_SIZE /;"	kind:d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_CLIPMAP_CENTER_SGIX /;"	kind:d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX /;"	kind:d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_CLIPMAP_FRAME_SGIX /;"	kind:d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX /;"	kind:d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX /;"	kind:d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX /;"	kind:d
GL_TEXTURE_COLOR_SAMPLES_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_COLOR_SAMPLES_NV /;"	kind:d
GL_TEXTURE_COLOR_TABLE_SGI	SDL_opengl_glext.h	/^#define GL_TEXTURE_COLOR_TABLE_SGI /;"	kind:d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	SDL_opengl_glext.h	/^#define GL_TEXTURE_COLOR_WRITEMASK_SGIS /;"	kind:d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB /;"	kind:d
GL_TEXTURE_COMPARE_FUNC	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_FUNC /;"	kind:d
GL_TEXTURE_COMPARE_FUNC_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_FUNC_ARB /;"	kind:d
GL_TEXTURE_COMPARE_FUNC_EXT	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_COMPARE_FUNC_EXT /;"	kind:d
GL_TEXTURE_COMPARE_MODE	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_MODE /;"	kind:d
GL_TEXTURE_COMPARE_MODE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_MODE_ARB /;"	kind:d
GL_TEXTURE_COMPARE_MODE_EXT	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_COMPARE_MODE_EXT /;"	kind:d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_OPERATOR_SGIX /;"	kind:d
GL_TEXTURE_COMPARE_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPARE_SGIX /;"	kind:d
GL_TEXTURE_COMPONENTS	SDL_opengl.h	/^#define GL_TEXTURE_COMPONENTS	/;"	kind:d
GL_TEXTURE_COMPRESSED	SDL_opengl.h	/^#define GL_TEXTURE_COMPRESSED	/;"	kind:d
GL_TEXTURE_COMPRESSED	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED /;"	kind:d
GL_TEXTURE_COMPRESSED_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED_ARB /;"	kind:d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT /;"	kind:d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE /;"	kind:d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH /;"	kind:d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	SDL_opengl.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE	/;"	kind:d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	kind:d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB /;"	kind:d
GL_TEXTURE_COMPRESSION_HINT	SDL_opengl.h	/^#define GL_TEXTURE_COMPRESSION_HINT	/;"	kind:d
GL_TEXTURE_COMPRESSION_HINT	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSION_HINT /;"	kind:d
GL_TEXTURE_COMPRESSION_HINT_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_COMPRESSION_HINT_ARB /;"	kind:d
GL_TEXTURE_CONSTANT_DATA_SUNX	SDL_opengl_glext.h	/^#define GL_TEXTURE_CONSTANT_DATA_SUNX /;"	kind:d
GL_TEXTURE_COORD_ARRAY	SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY	/;"	kind:d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV /;"	kind:d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING /;"	kind:d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB /;"	kind:d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT /;"	kind:d
GL_TEXTURE_COORD_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_EXT /;"	kind:d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV /;"	kind:d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_IBM /;"	kind:d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM /;"	kind:d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL /;"	kind:d
GL_TEXTURE_COORD_ARRAY_POINTER	SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_POINTER	/;"	kind:d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT /;"	kind:d
GL_TEXTURE_COORD_ARRAY_SIZE	SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_SIZE	/;"	kind:d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT /;"	kind:d
GL_TEXTURE_COORD_ARRAY_STRIDE	SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_STRIDE	/;"	kind:d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT /;"	kind:d
GL_TEXTURE_COORD_ARRAY_TYPE	SDL_opengl.h	/^#define GL_TEXTURE_COORD_ARRAY_TYPE	/;"	kind:d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT /;"	kind:d
GL_TEXTURE_COORD_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_COORD_NV /;"	kind:d
GL_TEXTURE_COVERAGE_SAMPLES_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_COVERAGE_SAMPLES_NV /;"	kind:d
GL_TEXTURE_CUBE_MAP	SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP	/;"	kind:d
GL_TEXTURE_CUBE_MAP	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP /;"	kind:d
GL_TEXTURE_CUBE_MAP	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP /;"	kind:d
GL_TEXTURE_CUBE_MAP_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARB /;"	kind:d
GL_TEXTURE_CUBE_MAP_ARRAY	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY /;"	kind:d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	kind:d
GL_TEXTURE_CUBE_MAP_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_EXT /;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X	/;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB /;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT /;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	/;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB /;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT /;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	/;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB /;"	kind:d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT /;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X	/;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB /;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT /;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y	/;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB /;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT /;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	SDL_opengl.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z	/;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB /;"	kind:d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT /;"	kind:d
GL_TEXTURE_CUBE_MAP_SEAMLESS	SDL_opengl_glext.h	/^#define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	kind:d
GL_TEXTURE_DEFORMATION_BIT_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_DEFORMATION_BIT_SGIX /;"	kind:d
GL_TEXTURE_DEFORMATION_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_DEFORMATION_SGIX /;"	kind:d
GL_TEXTURE_DEPTH	SDL_opengl.h	/^#define GL_TEXTURE_DEPTH	/;"	kind:d
GL_TEXTURE_DEPTH	SDL_opengl_glext.h	/^#define GL_TEXTURE_DEPTH /;"	kind:d
GL_TEXTURE_DEPTH_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_DEPTH_EXT /;"	kind:d
GL_TEXTURE_DEPTH_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_DEPTH_QCOM /;"	kind:d
GL_TEXTURE_DEPTH_SIZE	SDL_opengl_glext.h	/^#define GL_TEXTURE_DEPTH_SIZE /;"	kind:d
GL_TEXTURE_DEPTH_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_DEPTH_SIZE_ARB /;"	kind:d
GL_TEXTURE_DEPTH_TYPE	SDL_opengl_glext.h	/^#define GL_TEXTURE_DEPTH_TYPE /;"	kind:d
GL_TEXTURE_DEPTH_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_DEPTH_TYPE_ARB /;"	kind:d
GL_TEXTURE_DS_SIZE_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_DS_SIZE_NV /;"	kind:d
GL_TEXTURE_DT_SIZE_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_DT_SIZE_NV /;"	kind:d
GL_TEXTURE_ENV	SDL_opengl.h	/^#define GL_TEXTURE_ENV	/;"	kind:d
GL_TEXTURE_ENV_BIAS_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_ENV_BIAS_SGIX /;"	kind:d
GL_TEXTURE_ENV_COLOR	SDL_opengl.h	/^#define GL_TEXTURE_ENV_COLOR	/;"	kind:d
GL_TEXTURE_ENV_MODE	SDL_opengl.h	/^#define GL_TEXTURE_ENV_MODE	/;"	kind:d
GL_TEXTURE_EXTERNAL_OES	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_EXTERNAL_OES /;"	kind:d
GL_TEXTURE_FETCH_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT /;"	kind:d
GL_TEXTURE_FETCH_BARRIER_BIT_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT /;"	kind:d
GL_TEXTURE_FILTER4_SIZE_SGIS	SDL_opengl_glext.h	/^#define GL_TEXTURE_FILTER4_SIZE_SGIS /;"	kind:d
GL_TEXTURE_FILTER_CONTROL	SDL_opengl_glext.h	/^#define GL_TEXTURE_FILTER_CONTROL /;"	kind:d
GL_TEXTURE_FILTER_CONTROL_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_FILTER_CONTROL_EXT /;"	kind:d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	SDL_opengl_glext.h	/^#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS /;"	kind:d
GL_TEXTURE_FLOAT_COMPONENTS_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_FLOAT_COMPONENTS_NV /;"	kind:d
GL_TEXTURE_FORMAT_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_FORMAT_QCOM /;"	kind:d
GL_TEXTURE_FREE_MEMORY_ATI	SDL_opengl_glext.h	/^#define GL_TEXTURE_FREE_MEMORY_ATI /;"	kind:d
GL_TEXTURE_GATHER	SDL_opengl_glext.h	/^#define GL_TEXTURE_GATHER /;"	kind:d
GL_TEXTURE_GATHER_SHADOW	SDL_opengl_glext.h	/^#define GL_TEXTURE_GATHER_SHADOW /;"	kind:d
GL_TEXTURE_GEN_MODE	SDL_opengl.h	/^#define GL_TEXTURE_GEN_MODE	/;"	kind:d
GL_TEXTURE_GEN_Q	SDL_opengl.h	/^#define GL_TEXTURE_GEN_Q	/;"	kind:d
GL_TEXTURE_GEN_R	SDL_opengl.h	/^#define GL_TEXTURE_GEN_R	/;"	kind:d
GL_TEXTURE_GEN_S	SDL_opengl.h	/^#define GL_TEXTURE_GEN_S	/;"	kind:d
GL_TEXTURE_GEN_T	SDL_opengl.h	/^#define GL_TEXTURE_GEN_T	/;"	kind:d
GL_TEXTURE_GEQUAL_R_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_GEQUAL_R_SGIX /;"	kind:d
GL_TEXTURE_GREEN_SIZE	SDL_opengl.h	/^#define GL_TEXTURE_GREEN_SIZE	/;"	kind:d
GL_TEXTURE_GREEN_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_GREEN_SIZE_EXT /;"	kind:d
GL_TEXTURE_GREEN_TYPE	SDL_opengl_glext.h	/^#define GL_TEXTURE_GREEN_TYPE /;"	kind:d
GL_TEXTURE_GREEN_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_GREEN_TYPE_ARB /;"	kind:d
GL_TEXTURE_HEIGHT	SDL_opengl.h	/^#define GL_TEXTURE_HEIGHT	/;"	kind:d
GL_TEXTURE_HEIGHT_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_HEIGHT_QCOM /;"	kind:d
GL_TEXTURE_HI_SIZE_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_HI_SIZE_NV /;"	kind:d
GL_TEXTURE_IMAGE_FORMAT	SDL_opengl_glext.h	/^#define GL_TEXTURE_IMAGE_FORMAT /;"	kind:d
GL_TEXTURE_IMAGE_TYPE	SDL_opengl_glext.h	/^#define GL_TEXTURE_IMAGE_TYPE /;"	kind:d
GL_TEXTURE_IMAGE_VALID_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_IMAGE_VALID_QCOM /;"	kind:d
GL_TEXTURE_IMMUTABLE_FORMAT	SDL_opengl_glext.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT /;"	kind:d
GL_TEXTURE_IMMUTABLE_FORMAT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT_EXT /;"	kind:d
GL_TEXTURE_IMMUTABLE_LEVELS	SDL_opengl_glext.h	/^#define GL_TEXTURE_IMMUTABLE_LEVELS /;"	kind:d
GL_TEXTURE_INDEX_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_INDEX_SIZE_EXT /;"	kind:d
GL_TEXTURE_INTENSITY_SIZE	SDL_opengl.h	/^#define GL_TEXTURE_INTENSITY_SIZE	/;"	kind:d
GL_TEXTURE_INTENSITY_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_INTENSITY_SIZE_EXT /;"	kind:d
GL_TEXTURE_INTENSITY_TYPE	SDL_opengl_glext.h	/^#define GL_TEXTURE_INTENSITY_TYPE /;"	kind:d
GL_TEXTURE_INTENSITY_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_INTENSITY_TYPE_ARB /;"	kind:d
GL_TEXTURE_INTERNAL_FORMAT	SDL_opengl.h	/^#define GL_TEXTURE_INTERNAL_FORMAT	/;"	kind:d
GL_TEXTURE_INTERNAL_FORMAT_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_INTERNAL_FORMAT_QCOM /;"	kind:d
GL_TEXTURE_LEQUAL_R_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_LEQUAL_R_SGIX /;"	kind:d
GL_TEXTURE_LIGHTING_MODE_HP	SDL_opengl_glext.h	/^#define GL_TEXTURE_LIGHTING_MODE_HP /;"	kind:d
GL_TEXTURE_LIGHT_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_LIGHT_EXT /;"	kind:d
GL_TEXTURE_LOD_BIAS	SDL_opengl_glext.h	/^#define GL_TEXTURE_LOD_BIAS /;"	kind:d
GL_TEXTURE_LOD_BIAS_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_LOD_BIAS_EXT /;"	kind:d
GL_TEXTURE_LOD_BIAS_R_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_LOD_BIAS_R_SGIX /;"	kind:d
GL_TEXTURE_LOD_BIAS_S_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_LOD_BIAS_S_SGIX /;"	kind:d
GL_TEXTURE_LOD_BIAS_T_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_LOD_BIAS_T_SGIX /;"	kind:d
GL_TEXTURE_LO_SIZE_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_LO_SIZE_NV /;"	kind:d
GL_TEXTURE_LUMINANCE_SIZE	SDL_opengl.h	/^#define GL_TEXTURE_LUMINANCE_SIZE	/;"	kind:d
GL_TEXTURE_LUMINANCE_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_LUMINANCE_SIZE_EXT /;"	kind:d
GL_TEXTURE_LUMINANCE_TYPE	SDL_opengl_glext.h	/^#define GL_TEXTURE_LUMINANCE_TYPE /;"	kind:d
GL_TEXTURE_LUMINANCE_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_LUMINANCE_TYPE_ARB /;"	kind:d
GL_TEXTURE_MAG_FILTER	SDL_opengl.h	/^#define GL_TEXTURE_MAG_FILTER	/;"	kind:d
GL_TEXTURE_MAG_FILTER	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_MAG_FILTER /;"	kind:d
GL_TEXTURE_MAG_SIZE_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_MAG_SIZE_NV /;"	kind:d
GL_TEXTURE_MATERIAL_FACE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_MATERIAL_FACE_EXT /;"	kind:d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_MATERIAL_PARAMETER_EXT /;"	kind:d
GL_TEXTURE_MATRIX	SDL_opengl.h	/^#define GL_TEXTURE_MATRIX	/;"	kind:d
GL_TEXTURE_MAX_ANISOTROPY_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_ANISOTROPY_EXT /;"	kind:d
GL_TEXTURE_MAX_ANISOTROPY_EXT	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_MAX_ANISOTROPY_EXT /;"	kind:d
GL_TEXTURE_MAX_CLAMP_R_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_CLAMP_R_SGIX /;"	kind:d
GL_TEXTURE_MAX_CLAMP_S_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_CLAMP_S_SGIX /;"	kind:d
GL_TEXTURE_MAX_CLAMP_T_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_CLAMP_T_SGIX /;"	kind:d
GL_TEXTURE_MAX_LEVEL	SDL_opengl.h	/^#define GL_TEXTURE_MAX_LEVEL	/;"	kind:d
GL_TEXTURE_MAX_LEVEL	SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_LEVEL /;"	kind:d
GL_TEXTURE_MAX_LEVEL_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_MAX_LEVEL_APPLE /;"	kind:d
GL_TEXTURE_MAX_LEVEL_SGIS	SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_LEVEL_SGIS /;"	kind:d
GL_TEXTURE_MAX_LOD	SDL_opengl.h	/^#define GL_TEXTURE_MAX_LOD	/;"	kind:d
GL_TEXTURE_MAX_LOD	SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_LOD /;"	kind:d
GL_TEXTURE_MAX_LOD_SGIS	SDL_opengl_glext.h	/^#define GL_TEXTURE_MAX_LOD_SGIS /;"	kind:d
GL_TEXTURE_MEMORY_LAYOUT_INTEL	SDL_opengl_glext.h	/^#define GL_TEXTURE_MEMORY_LAYOUT_INTEL /;"	kind:d
GL_TEXTURE_MIN_FILTER	SDL_opengl.h	/^#define GL_TEXTURE_MIN_FILTER	/;"	kind:d
GL_TEXTURE_MIN_FILTER	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_MIN_FILTER /;"	kind:d
GL_TEXTURE_MIN_LOD	SDL_opengl.h	/^#define GL_TEXTURE_MIN_LOD	/;"	kind:d
GL_TEXTURE_MIN_LOD	SDL_opengl_glext.h	/^#define GL_TEXTURE_MIN_LOD /;"	kind:d
GL_TEXTURE_MIN_LOD_SGIS	SDL_opengl_glext.h	/^#define GL_TEXTURE_MIN_LOD_SGIS /;"	kind:d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	SDL_opengl_glext.h	/^#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX /;"	kind:d
GL_TEXTURE_NORMAL_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_NORMAL_EXT /;"	kind:d
GL_TEXTURE_NUM_LEVELS_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_NUM_LEVELS_QCOM /;"	kind:d
GL_TEXTURE_OBJECT_VALID_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_OBJECT_VALID_QCOM /;"	kind:d
GL_TEXTURE_POST_SPECULAR_HP	SDL_opengl_glext.h	/^#define GL_TEXTURE_POST_SPECULAR_HP /;"	kind:d
GL_TEXTURE_PRE_SPECULAR_HP	SDL_opengl_glext.h	/^#define GL_TEXTURE_PRE_SPECULAR_HP /;"	kind:d
GL_TEXTURE_PRIORITY	SDL_opengl.h	/^#define GL_TEXTURE_PRIORITY	/;"	kind:d
GL_TEXTURE_PRIORITY_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_PRIORITY_EXT /;"	kind:d
GL_TEXTURE_RANGE_LENGTH_APPLE	SDL_opengl_glext.h	/^#define GL_TEXTURE_RANGE_LENGTH_APPLE /;"	kind:d
GL_TEXTURE_RANGE_POINTER_APPLE	SDL_opengl_glext.h	/^#define GL_TEXTURE_RANGE_POINTER_APPLE /;"	kind:d
GL_TEXTURE_RECTANGLE	SDL_opengl_glext.h	/^#define GL_TEXTURE_RECTANGLE /;"	kind:d
GL_TEXTURE_RECTANGLE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_RECTANGLE_ARB /;"	kind:d
GL_TEXTURE_RECTANGLE_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_RECTANGLE_NV /;"	kind:d
GL_TEXTURE_RED_SIZE	SDL_opengl.h	/^#define GL_TEXTURE_RED_SIZE	/;"	kind:d
GL_TEXTURE_RED_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_RED_SIZE_EXT /;"	kind:d
GL_TEXTURE_RED_TYPE	SDL_opengl_glext.h	/^#define GL_TEXTURE_RED_TYPE /;"	kind:d
GL_TEXTURE_RED_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_RED_TYPE_ARB /;"	kind:d
GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV /;"	kind:d
GL_TEXTURE_RENDERBUFFER_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_RENDERBUFFER_NV /;"	kind:d
GL_TEXTURE_RESIDENT	SDL_opengl.h	/^#define GL_TEXTURE_RESIDENT	/;"	kind:d
GL_TEXTURE_RESIDENT_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_RESIDENT_EXT /;"	kind:d
GL_TEXTURE_SAMPLES	SDL_opengl_glext.h	/^#define GL_TEXTURE_SAMPLES /;"	kind:d
GL_TEXTURE_SAMPLES_IMG	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_SAMPLES_IMG /;"	kind:d
GL_TEXTURE_SHADER_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_SHADER_NV /;"	kind:d
GL_TEXTURE_SHADOW	SDL_opengl_glext.h	/^#define GL_TEXTURE_SHADOW /;"	kind:d
GL_TEXTURE_SHARED_SIZE	SDL_opengl_glext.h	/^#define GL_TEXTURE_SHARED_SIZE /;"	kind:d
GL_TEXTURE_SHARED_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_SHARED_SIZE_EXT /;"	kind:d
GL_TEXTURE_SPARSE_ARB	SDL_opengl_glext.h	/^#define GL_TEXTURE_SPARSE_ARB /;"	kind:d
GL_TEXTURE_SRGB_DECODE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_SRGB_DECODE_EXT /;"	kind:d
GL_TEXTURE_SRGB_DECODE_EXT	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_SRGB_DECODE_EXT /;"	kind:d
GL_TEXTURE_STACK_DEPTH	SDL_opengl.h	/^#define GL_TEXTURE_STACK_DEPTH	/;"	kind:d
GL_TEXTURE_STENCIL_SIZE	SDL_opengl_glext.h	/^#define GL_TEXTURE_STENCIL_SIZE /;"	kind:d
GL_TEXTURE_STENCIL_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_STENCIL_SIZE_EXT /;"	kind:d
GL_TEXTURE_STORAGE_HINT_APPLE	SDL_opengl_glext.h	/^#define GL_TEXTURE_STORAGE_HINT_APPLE /;"	kind:d
GL_TEXTURE_STORAGE_SPARSE_BIT_AMD	SDL_opengl_glext.h	/^#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD /;"	kind:d
GL_TEXTURE_SWIZZLE_A	SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_A /;"	kind:d
GL_TEXTURE_SWIZZLE_A_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_A_EXT /;"	kind:d
GL_TEXTURE_SWIZZLE_B	SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_B /;"	kind:d
GL_TEXTURE_SWIZZLE_B_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_B_EXT /;"	kind:d
GL_TEXTURE_SWIZZLE_G	SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_G /;"	kind:d
GL_TEXTURE_SWIZZLE_G_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_G_EXT /;"	kind:d
GL_TEXTURE_SWIZZLE_R	SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_R /;"	kind:d
GL_TEXTURE_SWIZZLE_RGBA	SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_RGBA /;"	kind:d
GL_TEXTURE_SWIZZLE_RGBA_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_RGBA_EXT /;"	kind:d
GL_TEXTURE_SWIZZLE_R_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_SWIZZLE_R_EXT /;"	kind:d
GL_TEXTURE_TARGET_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_TARGET_QCOM /;"	kind:d
GL_TEXTURE_TOO_LARGE_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_TOO_LARGE_EXT /;"	kind:d
GL_TEXTURE_TYPE_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_TYPE_QCOM /;"	kind:d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	SDL_opengl_glext.h	/^#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV /;"	kind:d
GL_TEXTURE_UPDATE_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT /;"	kind:d
GL_TEXTURE_UPDATE_BARRIER_BIT_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT /;"	kind:d
GL_TEXTURE_USAGE_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_USAGE_ANGLE /;"	kind:d
GL_TEXTURE_VIEW	SDL_opengl_glext.h	/^#define GL_TEXTURE_VIEW /;"	kind:d
GL_TEXTURE_VIEW_MIN_LAYER	SDL_opengl_glext.h	/^#define GL_TEXTURE_VIEW_MIN_LAYER /;"	kind:d
GL_TEXTURE_VIEW_MIN_LEVEL	SDL_opengl_glext.h	/^#define GL_TEXTURE_VIEW_MIN_LEVEL /;"	kind:d
GL_TEXTURE_VIEW_NUM_LAYERS	SDL_opengl_glext.h	/^#define GL_TEXTURE_VIEW_NUM_LAYERS /;"	kind:d
GL_TEXTURE_VIEW_NUM_LEVELS	SDL_opengl_glext.h	/^#define GL_TEXTURE_VIEW_NUM_LEVELS /;"	kind:d
GL_TEXTURE_WIDTH	SDL_opengl.h	/^#define GL_TEXTURE_WIDTH	/;"	kind:d
GL_TEXTURE_WIDTH_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_WIDTH_QCOM /;"	kind:d
GL_TEXTURE_WRAP_Q_SGIS	SDL_opengl_glext.h	/^#define GL_TEXTURE_WRAP_Q_SGIS /;"	kind:d
GL_TEXTURE_WRAP_R	SDL_opengl.h	/^#define GL_TEXTURE_WRAP_R	/;"	kind:d
GL_TEXTURE_WRAP_R	SDL_opengl_glext.h	/^#define GL_TEXTURE_WRAP_R /;"	kind:d
GL_TEXTURE_WRAP_R_EXT	SDL_opengl_glext.h	/^#define GL_TEXTURE_WRAP_R_EXT /;"	kind:d
GL_TEXTURE_WRAP_R_OES	SDL_opengles2_gl2ext.h	/^#define GL_TEXTURE_WRAP_R_OES /;"	kind:d
GL_TEXTURE_WRAP_S	SDL_opengl.h	/^#define GL_TEXTURE_WRAP_S	/;"	kind:d
GL_TEXTURE_WRAP_S	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_WRAP_S /;"	kind:d
GL_TEXTURE_WRAP_T	SDL_opengl.h	/^#define GL_TEXTURE_WRAP_T	/;"	kind:d
GL_TEXTURE_WRAP_T	SDL_opengles2_gl2.h	/^#define GL_TEXTURE_WRAP_T /;"	kind:d
GL_TEXT_FRAGMENT_SHADER_ATI	SDL_opengl_glext.h	/^#define GL_TEXT_FRAGMENT_SHADER_ATI /;"	kind:d
GL_TIMEOUT_EXPIRED	SDL_opengl_glext.h	/^#define GL_TIMEOUT_EXPIRED /;"	kind:d
GL_TIMEOUT_EXPIRED_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_TIMEOUT_EXPIRED_APPLE /;"	kind:d
GL_TIMEOUT_IGNORED	SDL_opengl_glext.h	/^#define GL_TIMEOUT_IGNORED /;"	kind:d
GL_TIMEOUT_IGNORED_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_TIMEOUT_IGNORED_APPLE /;"	kind:d
GL_TIMESTAMP	SDL_opengl_glext.h	/^#define GL_TIMESTAMP /;"	kind:d
GL_TIMESTAMP_EXT	SDL_opengles2_gl2ext.h	/^#define GL_TIMESTAMP_EXT /;"	kind:d
GL_TIME_ELAPSED	SDL_opengl_glext.h	/^#define GL_TIME_ELAPSED /;"	kind:d
GL_TIME_ELAPSED_EXT	SDL_opengl_glext.h	/^#define GL_TIME_ELAPSED_EXT /;"	kind:d
GL_TIME_ELAPSED_EXT	SDL_opengles2_gl2ext.h	/^#define GL_TIME_ELAPSED_EXT /;"	kind:d
GL_TOP_LEVEL_ARRAY_SIZE	SDL_opengl_glext.h	/^#define GL_TOP_LEVEL_ARRAY_SIZE /;"	kind:d
GL_TOP_LEVEL_ARRAY_STRIDE	SDL_opengl_glext.h	/^#define GL_TOP_LEVEL_ARRAY_STRIDE /;"	kind:d
GL_TRACK_MATRIX_NV	SDL_opengl_glext.h	/^#define GL_TRACK_MATRIX_NV /;"	kind:d
GL_TRACK_MATRIX_TRANSFORM_NV	SDL_opengl_glext.h	/^#define GL_TRACK_MATRIX_TRANSFORM_NV /;"	kind:d
GL_TRANSFORM_BIT	SDL_opengl.h	/^#define GL_TRANSFORM_BIT	/;"	kind:d
GL_TRANSFORM_FEEDBACK	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK /;"	kind:d
GL_TRANSFORM_FEEDBACK_ACTIVE	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_ACTIVE /;"	kind:d
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV /;"	kind:d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT /;"	kind:d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT /;"	kind:d
GL_TRANSFORM_FEEDBACK_BINDING	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING /;"	kind:d
GL_TRANSFORM_FEEDBACK_BINDING_NV	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING_NV /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_NV	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_NV /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_START	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV /;"	kind:d
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE /;"	kind:d
GL_TRANSFORM_FEEDBACK_NV	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_NV /;"	kind:d
GL_TRANSFORM_FEEDBACK_PAUSED	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_PAUSED /;"	kind:d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN /;"	kind:d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT /;"	kind:d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV /;"	kind:d
GL_TRANSFORM_FEEDBACK_RECORD_NV	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_RECORD_NV /;"	kind:d
GL_TRANSFORM_FEEDBACK_VARYING	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING /;"	kind:d
GL_TRANSFORM_FEEDBACK_VARYINGS	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS /;"	kind:d
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT /;"	kind:d
GL_TRANSFORM_FEEDBACK_VARYINGS_NV	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV /;"	kind:d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH /;"	kind:d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT	SDL_opengl_glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT /;"	kind:d
GL_TRANSFORM_HINT_APPLE	SDL_opengl_glext.h	/^#define GL_TRANSFORM_HINT_APPLE /;"	kind:d
GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE /;"	kind:d
GL_TRANSLATE_2D_NV	SDL_opengl_glext.h	/^#define GL_TRANSLATE_2D_NV /;"	kind:d
GL_TRANSLATE_3D_NV	SDL_opengl_glext.h	/^#define GL_TRANSLATE_3D_NV /;"	kind:d
GL_TRANSLATE_X_NV	SDL_opengl_glext.h	/^#define GL_TRANSLATE_X_NV /;"	kind:d
GL_TRANSLATE_Y_NV	SDL_opengl_glext.h	/^#define GL_TRANSLATE_Y_NV /;"	kind:d
GL_TRANSPOSE_AFFINE_2D_NV	SDL_opengl_glext.h	/^#define GL_TRANSPOSE_AFFINE_2D_NV /;"	kind:d
GL_TRANSPOSE_AFFINE_3D_NV	SDL_opengl_glext.h	/^#define GL_TRANSPOSE_AFFINE_3D_NV /;"	kind:d
GL_TRANSPOSE_COLOR_MATRIX	SDL_opengl.h	/^#define GL_TRANSPOSE_COLOR_MATRIX	/;"	kind:d
GL_TRANSPOSE_COLOR_MATRIX	SDL_opengl_glext.h	/^#define GL_TRANSPOSE_COLOR_MATRIX /;"	kind:d
GL_TRANSPOSE_COLOR_MATRIX_ARB	SDL_opengl_glext.h	/^#define GL_TRANSPOSE_COLOR_MATRIX_ARB /;"	kind:d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	SDL_opengl_glext.h	/^#define GL_TRANSPOSE_CURRENT_MATRIX_ARB /;"	kind:d
GL_TRANSPOSE_MODELVIEW_MATRIX	SDL_opengl.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX	/;"	kind:d
GL_TRANSPOSE_MODELVIEW_MATRIX	SDL_opengl_glext.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX /;"	kind:d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	SDL_opengl_glext.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB /;"	kind:d
GL_TRANSPOSE_NV	SDL_opengl_glext.h	/^#define GL_TRANSPOSE_NV /;"	kind:d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	SDL_opengl_glext.h	/^#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT /;"	kind:d
GL_TRANSPOSE_PROJECTION_MATRIX	SDL_opengl.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX	/;"	kind:d
GL_TRANSPOSE_PROJECTION_MATRIX	SDL_opengl_glext.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX /;"	kind:d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	SDL_opengl_glext.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB /;"	kind:d
GL_TRANSPOSE_TEXTURE_MATRIX	SDL_opengl.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX	/;"	kind:d
GL_TRANSPOSE_TEXTURE_MATRIX	SDL_opengl_glext.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX /;"	kind:d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	SDL_opengl_glext.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB /;"	kind:d
GL_TRIANGLES	SDL_opengl.h	/^#define GL_TRIANGLES	/;"	kind:d
GL_TRIANGLES	SDL_opengles2_gl2.h	/^#define GL_TRIANGLES /;"	kind:d
GL_TRIANGLES_ADJACENCY	SDL_opengl_glext.h	/^#define GL_TRIANGLES_ADJACENCY /;"	kind:d
GL_TRIANGLES_ADJACENCY_ARB	SDL_opengl_glext.h	/^#define GL_TRIANGLES_ADJACENCY_ARB /;"	kind:d
GL_TRIANGLES_ADJACENCY_EXT	SDL_opengl_glext.h	/^#define GL_TRIANGLES_ADJACENCY_EXT /;"	kind:d
GL_TRIANGLE_FAN	SDL_opengl.h	/^#define GL_TRIANGLE_FAN	/;"	kind:d
GL_TRIANGLE_FAN	SDL_opengles2_gl2.h	/^#define GL_TRIANGLE_FAN /;"	kind:d
GL_TRIANGLE_LIST_SUN	SDL_opengl_glext.h	/^#define GL_TRIANGLE_LIST_SUN /;"	kind:d
GL_TRIANGLE_MESH_SUN	SDL_opengl_glext.h	/^#define GL_TRIANGLE_MESH_SUN /;"	kind:d
GL_TRIANGLE_STRIP	SDL_opengl.h	/^#define GL_TRIANGLE_STRIP	/;"	kind:d
GL_TRIANGLE_STRIP	SDL_opengles2_gl2.h	/^#define GL_TRIANGLE_STRIP /;"	kind:d
GL_TRIANGLE_STRIP_ADJACENCY	SDL_opengl_glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY /;"	kind:d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	SDL_opengl_glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_ARB /;"	kind:d
GL_TRIANGLE_STRIP_ADJACENCY_EXT	SDL_opengl_glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_EXT /;"	kind:d
GL_TRIANGULAR_NV	SDL_opengl_glext.h	/^#define GL_TRIANGULAR_NV /;"	kind:d
GL_TRUE	SDL_opengl.h	/^#define GL_TRUE	/;"	kind:d
GL_TRUE	SDL_opengles2_gl2.h	/^#define GL_TRUE /;"	kind:d
GL_TYPE	SDL_opengl_glext.h	/^#define GL_TYPE /;"	kind:d
GL_UNCORRELATED_NV	SDL_opengl_glext.h	/^#define GL_UNCORRELATED_NV /;"	kind:d
GL_UNDEFINED_APPLE	SDL_opengl_glext.h	/^#define GL_UNDEFINED_APPLE /;"	kind:d
GL_UNDEFINED_VERTEX	SDL_opengl_glext.h	/^#define GL_UNDEFINED_VERTEX /;"	kind:d
GL_UNIFORM	SDL_opengl_glext.h	/^#define GL_UNIFORM /;"	kind:d
GL_UNIFORM_ARRAY_STRIDE	SDL_opengl_glext.h	/^#define GL_UNIFORM_ARRAY_STRIDE /;"	kind:d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	SDL_opengl_glext.h	/^#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX /;"	kind:d
GL_UNIFORM_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_UNIFORM_BARRIER_BIT /;"	kind:d
GL_UNIFORM_BARRIER_BIT_EXT	SDL_opengl_glext.h	/^#define GL_UNIFORM_BARRIER_BIT_EXT /;"	kind:d
GL_UNIFORM_BLOCK	SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK /;"	kind:d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS /;"	kind:d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES /;"	kind:d
GL_UNIFORM_BLOCK_BINDING	SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_BINDING /;"	kind:d
GL_UNIFORM_BLOCK_DATA_SIZE	SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_DATA_SIZE /;"	kind:d
GL_UNIFORM_BLOCK_INDEX	SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_INDEX /;"	kind:d
GL_UNIFORM_BLOCK_NAME_LENGTH	SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_NAME_LENGTH /;"	kind:d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER /;"	kind:d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER /;"	kind:d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER /;"	kind:d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER /;"	kind:d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	kind:d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	SDL_opengl_glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER /;"	kind:d
GL_UNIFORM_BUFFER	SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER /;"	kind:d
GL_UNIFORM_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER_BINDING /;"	kind:d
GL_UNIFORM_BUFFER_BINDING_EXT	SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER_BINDING_EXT /;"	kind:d
GL_UNIFORM_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER_EXT /;"	kind:d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT /;"	kind:d
GL_UNIFORM_BUFFER_SIZE	SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER_SIZE /;"	kind:d
GL_UNIFORM_BUFFER_START	SDL_opengl_glext.h	/^#define GL_UNIFORM_BUFFER_START /;"	kind:d
GL_UNIFORM_IS_ROW_MAJOR	SDL_opengl_glext.h	/^#define GL_UNIFORM_IS_ROW_MAJOR /;"	kind:d
GL_UNIFORM_MATRIX_STRIDE	SDL_opengl_glext.h	/^#define GL_UNIFORM_MATRIX_STRIDE /;"	kind:d
GL_UNIFORM_NAME_LENGTH	SDL_opengl_glext.h	/^#define GL_UNIFORM_NAME_LENGTH /;"	kind:d
GL_UNIFORM_OFFSET	SDL_opengl_glext.h	/^#define GL_UNIFORM_OFFSET /;"	kind:d
GL_UNIFORM_SIZE	SDL_opengl_glext.h	/^#define GL_UNIFORM_SIZE /;"	kind:d
GL_UNIFORM_TYPE	SDL_opengl_glext.h	/^#define GL_UNIFORM_TYPE /;"	kind:d
GL_UNKNOWN_CONTEXT_RESET_ARB	SDL_opengl_glext.h	/^#define GL_UNKNOWN_CONTEXT_RESET_ARB /;"	kind:d
GL_UNKNOWN_CONTEXT_RESET_EXT	SDL_opengles2_gl2ext.h	/^#define GL_UNKNOWN_CONTEXT_RESET_EXT /;"	kind:d
GL_UNPACK_ALIGNMENT	SDL_opengl.h	/^#define GL_UNPACK_ALIGNMENT	/;"	kind:d
GL_UNPACK_ALIGNMENT	SDL_opengles2_gl2.h	/^#define GL_UNPACK_ALIGNMENT /;"	kind:d
GL_UNPACK_CLIENT_STORAGE_APPLE	SDL_opengl_glext.h	/^#define GL_UNPACK_CLIENT_STORAGE_APPLE /;"	kind:d
GL_UNPACK_CMYK_HINT_EXT	SDL_opengl_glext.h	/^#define GL_UNPACK_CMYK_HINT_EXT /;"	kind:d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	SDL_opengl_glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH /;"	kind:d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	SDL_opengl_glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT /;"	kind:d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	SDL_opengl_glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_SIZE /;"	kind:d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	SDL_opengl_glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH /;"	kind:d
GL_UNPACK_CONSTANT_DATA_SUNX	SDL_opengl_glext.h	/^#define GL_UNPACK_CONSTANT_DATA_SUNX /;"	kind:d
GL_UNPACK_IMAGE_DEPTH_SGIS	SDL_opengl_glext.h	/^#define GL_UNPACK_IMAGE_DEPTH_SGIS /;"	kind:d
GL_UNPACK_IMAGE_HEIGHT	SDL_opengl.h	/^#define GL_UNPACK_IMAGE_HEIGHT	/;"	kind:d
GL_UNPACK_IMAGE_HEIGHT	SDL_opengl_glext.h	/^#define GL_UNPACK_IMAGE_HEIGHT /;"	kind:d
GL_UNPACK_IMAGE_HEIGHT_EXT	SDL_opengl_glext.h	/^#define GL_UNPACK_IMAGE_HEIGHT_EXT /;"	kind:d
GL_UNPACK_LSB_FIRST	SDL_opengl.h	/^#define GL_UNPACK_LSB_FIRST	/;"	kind:d
GL_UNPACK_RESAMPLE_OML	SDL_opengl_glext.h	/^#define GL_UNPACK_RESAMPLE_OML /;"	kind:d
GL_UNPACK_RESAMPLE_SGIX	SDL_opengl_glext.h	/^#define GL_UNPACK_RESAMPLE_SGIX /;"	kind:d
GL_UNPACK_ROW_BYTES_APPLE	SDL_opengl_glext.h	/^#define GL_UNPACK_ROW_BYTES_APPLE /;"	kind:d
GL_UNPACK_ROW_LENGTH	SDL_opengl.h	/^#define GL_UNPACK_ROW_LENGTH	/;"	kind:d
GL_UNPACK_ROW_LENGTH_EXT	SDL_opengles2_gl2ext.h	/^#define GL_UNPACK_ROW_LENGTH_EXT /;"	kind:d
GL_UNPACK_SKIP_IMAGES	SDL_opengl.h	/^#define GL_UNPACK_SKIP_IMAGES	/;"	kind:d
GL_UNPACK_SKIP_IMAGES	SDL_opengl_glext.h	/^#define GL_UNPACK_SKIP_IMAGES /;"	kind:d
GL_UNPACK_SKIP_IMAGES_EXT	SDL_opengl_glext.h	/^#define GL_UNPACK_SKIP_IMAGES_EXT /;"	kind:d
GL_UNPACK_SKIP_PIXELS	SDL_opengl.h	/^#define GL_UNPACK_SKIP_PIXELS	/;"	kind:d
GL_UNPACK_SKIP_PIXELS_EXT	SDL_opengles2_gl2ext.h	/^#define GL_UNPACK_SKIP_PIXELS_EXT /;"	kind:d
GL_UNPACK_SKIP_ROWS	SDL_opengl.h	/^#define GL_UNPACK_SKIP_ROWS	/;"	kind:d
GL_UNPACK_SKIP_ROWS_EXT	SDL_opengles2_gl2ext.h	/^#define GL_UNPACK_SKIP_ROWS_EXT /;"	kind:d
GL_UNPACK_SKIP_VOLUMES_SGIS	SDL_opengl_glext.h	/^#define GL_UNPACK_SKIP_VOLUMES_SGIS /;"	kind:d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	SDL_opengl_glext.h	/^#define GL_UNPACK_SUBSAMPLE_RATE_SGIX /;"	kind:d
GL_UNPACK_SWAP_BYTES	SDL_opengl.h	/^#define GL_UNPACK_SWAP_BYTES	/;"	kind:d
GL_UNSIGNALED	SDL_opengl_glext.h	/^#define GL_UNSIGNALED /;"	kind:d
GL_UNSIGNALED_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNALED_APPLE /;"	kind:d
GL_UNSIGNED_BYTE	SDL_opengl.h	/^#define GL_UNSIGNED_BYTE	/;"	kind:d
GL_UNSIGNED_BYTE	SDL_opengles2_gl2.h	/^#define GL_UNSIGNED_BYTE /;"	kind:d
GL_UNSIGNED_BYTE_2_3_3_REV	SDL_opengl.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV	/;"	kind:d
GL_UNSIGNED_BYTE_2_3_3_REV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	kind:d
GL_UNSIGNED_BYTE_3_3_2	SDL_opengl.h	/^#define GL_UNSIGNED_BYTE_3_3_2	/;"	kind:d
GL_UNSIGNED_BYTE_3_3_2	SDL_opengl_glext.h	/^#define GL_UNSIGNED_BYTE_3_3_2 /;"	kind:d
GL_UNSIGNED_BYTE_3_3_2_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_BYTE_3_3_2_EXT /;"	kind:d
GL_UNSIGNED_IDENTITY_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_IDENTITY_NV /;"	kind:d
GL_UNSIGNED_INT	SDL_opengl.h	/^#define GL_UNSIGNED_INT	/;"	kind:d
GL_UNSIGNED_INT	SDL_opengles2_gl2.h	/^#define GL_UNSIGNED_INT /;"	kind:d
GL_UNSIGNED_INT	SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_INT /;"	kind:d
GL_UNSIGNED_INT16_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT16_NV /;"	kind:d
GL_UNSIGNED_INT16_VEC2_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT16_VEC2_NV /;"	kind:d
GL_UNSIGNED_INT16_VEC3_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT16_VEC3_NV /;"	kind:d
GL_UNSIGNED_INT16_VEC4_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT16_VEC4_NV /;"	kind:d
GL_UNSIGNED_INT64_AMD	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT64_AMD /;"	kind:d
GL_UNSIGNED_INT64_AMD	SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_INT64_AMD /;"	kind:d
GL_UNSIGNED_INT64_ARB	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT64_ARB /;"	kind:d
GL_UNSIGNED_INT64_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT64_NV /;"	kind:d
GL_UNSIGNED_INT64_VEC2_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT64_VEC2_NV /;"	kind:d
GL_UNSIGNED_INT64_VEC3_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT64_VEC3_NV /;"	kind:d
GL_UNSIGNED_INT64_VEC4_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT64_VEC4_NV /;"	kind:d
GL_UNSIGNED_INT8_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT8_NV /;"	kind:d
GL_UNSIGNED_INT8_VEC2_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT8_VEC2_NV /;"	kind:d
GL_UNSIGNED_INT8_VEC3_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT8_VEC3_NV /;"	kind:d
GL_UNSIGNED_INT8_VEC4_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT8_VEC4_NV /;"	kind:d
GL_UNSIGNED_INT_10F_11F_11F_REV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	kind:d
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT /;"	kind:d
GL_UNSIGNED_INT_10_10_10_2	SDL_opengl.h	/^#define GL_UNSIGNED_INT_10_10_10_2	/;"	kind:d
GL_UNSIGNED_INT_10_10_10_2	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_10_10_10_2 /;"	kind:d
GL_UNSIGNED_INT_10_10_10_2_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_10_10_10_2_EXT /;"	kind:d
GL_UNSIGNED_INT_10_10_10_2_OES	SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_INT_10_10_10_2_OES /;"	kind:d
GL_UNSIGNED_INT_24_8	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_24_8 /;"	kind:d
GL_UNSIGNED_INT_24_8_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_24_8_EXT /;"	kind:d
GL_UNSIGNED_INT_24_8_MESA	SDL_opengl.h	/^#define GL_UNSIGNED_INT_24_8_MESA	/;"	kind:d
GL_UNSIGNED_INT_24_8_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_24_8_NV /;"	kind:d
GL_UNSIGNED_INT_24_8_OES	SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_INT_24_8_OES /;"	kind:d
GL_UNSIGNED_INT_2_10_10_10_REV	SDL_opengl.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV	/;"	kind:d
GL_UNSIGNED_INT_2_10_10_10_REV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	kind:d
GL_UNSIGNED_INT_2_10_10_10_REV_EXT	SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV_EXT /;"	kind:d
GL_UNSIGNED_INT_5_9_9_9_REV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV /;"	kind:d
GL_UNSIGNED_INT_5_9_9_9_REV_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT /;"	kind:d
GL_UNSIGNED_INT_8_24_REV_MESA	SDL_opengl.h	/^#define GL_UNSIGNED_INT_8_24_REV_MESA	/;"	kind:d
GL_UNSIGNED_INT_8_8_8_8	SDL_opengl.h	/^#define GL_UNSIGNED_INT_8_8_8_8	/;"	kind:d
GL_UNSIGNED_INT_8_8_8_8	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8 /;"	kind:d
GL_UNSIGNED_INT_8_8_8_8_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8_EXT /;"	kind:d
GL_UNSIGNED_INT_8_8_8_8_REV	SDL_opengl.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV	/;"	kind:d
GL_UNSIGNED_INT_8_8_8_8_REV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	kind:d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV /;"	kind:d
GL_UNSIGNED_INT_ATOMIC_COUNTER	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_ATOMIC_COUNTER /;"	kind:d
GL_UNSIGNED_INT_IMAGE_1D	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D /;"	kind:d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY /;"	kind:d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT /;"	kind:d
GL_UNSIGNED_INT_IMAGE_1D_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_EXT /;"	kind:d
GL_UNSIGNED_INT_IMAGE_2D	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D /;"	kind:d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY /;"	kind:d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT /;"	kind:d
GL_UNSIGNED_INT_IMAGE_2D_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_EXT /;"	kind:d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE /;"	kind:d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	kind:d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	kind:d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	kind:d
GL_UNSIGNED_INT_IMAGE_2D_RECT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT /;"	kind:d
GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT /;"	kind:d
GL_UNSIGNED_INT_IMAGE_3D	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_3D /;"	kind:d
GL_UNSIGNED_INT_IMAGE_3D_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_3D_EXT /;"	kind:d
GL_UNSIGNED_INT_IMAGE_BUFFER	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER /;"	kind:d
GL_UNSIGNED_INT_IMAGE_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT /;"	kind:d
GL_UNSIGNED_INT_IMAGE_CUBE	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE /;"	kind:d
GL_UNSIGNED_INT_IMAGE_CUBE_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT /;"	kind:d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY /;"	kind:d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	kind:d
GL_UNSIGNED_INT_S8_S8_8_8_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_S8_S8_8_8_NV /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_1D	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_1D_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_EXT /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_2D	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_2D_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_EXT /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_3D	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_3D_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D_EXT /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_BUFFER	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_CUBE	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	kind:d
GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV /;"	kind:d
GL_UNSIGNED_INT_VEC2	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_VEC2 /;"	kind:d
GL_UNSIGNED_INT_VEC2_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_VEC2_EXT /;"	kind:d
GL_UNSIGNED_INT_VEC3	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_VEC3 /;"	kind:d
GL_UNSIGNED_INT_VEC3_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_VEC3_EXT /;"	kind:d
GL_UNSIGNED_INT_VEC4	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_VEC4 /;"	kind:d
GL_UNSIGNED_INT_VEC4_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INT_VEC4_EXT /;"	kind:d
GL_UNSIGNED_INVERT_NV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_INVERT_NV /;"	kind:d
GL_UNSIGNED_NORMALIZED	SDL_opengl_glext.h	/^#define GL_UNSIGNED_NORMALIZED /;"	kind:d
GL_UNSIGNED_NORMALIZED_ARB	SDL_opengl_glext.h	/^#define GL_UNSIGNED_NORMALIZED_ARB /;"	kind:d
GL_UNSIGNED_NORMALIZED_EXT	SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_NORMALIZED_EXT /;"	kind:d
GL_UNSIGNED_SHORT	SDL_opengl.h	/^#define GL_UNSIGNED_SHORT	/;"	kind:d
GL_UNSIGNED_SHORT	SDL_opengles2_gl2.h	/^#define GL_UNSIGNED_SHORT /;"	kind:d
GL_UNSIGNED_SHORT	SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_SHORT /;"	kind:d
GL_UNSIGNED_SHORT_15_1_MESA	SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_15_1_MESA	/;"	kind:d
GL_UNSIGNED_SHORT_1_15_REV_MESA	SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_1_15_REV_MESA	/;"	kind:d
GL_UNSIGNED_SHORT_1_5_5_5_REV	SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV	/;"	kind:d
GL_UNSIGNED_SHORT_1_5_5_5_REV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	kind:d
GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT	SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT /;"	kind:d
GL_UNSIGNED_SHORT_4_4_4_4	SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4	/;"	kind:d
GL_UNSIGNED_SHORT_4_4_4_4	SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	kind:d
GL_UNSIGNED_SHORT_4_4_4_4	SDL_opengles2_gl2.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	kind:d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_EXT /;"	kind:d
GL_UNSIGNED_SHORT_4_4_4_4_REV	SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV	/;"	kind:d
GL_UNSIGNED_SHORT_4_4_4_4_REV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	kind:d
GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT	SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT /;"	kind:d
GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG	SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG /;"	kind:d
GL_UNSIGNED_SHORT_5_5_5_1	SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1	/;"	kind:d
GL_UNSIGNED_SHORT_5_5_5_1	SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	kind:d
GL_UNSIGNED_SHORT_5_5_5_1	SDL_opengles2_gl2.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	kind:d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1_EXT /;"	kind:d
GL_UNSIGNED_SHORT_5_6_5	SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_5_6_5	/;"	kind:d
GL_UNSIGNED_SHORT_5_6_5	SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	kind:d
GL_UNSIGNED_SHORT_5_6_5	SDL_opengles2_gl2.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	kind:d
GL_UNSIGNED_SHORT_5_6_5_REV	SDL_opengl.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV	/;"	kind:d
GL_UNSIGNED_SHORT_5_6_5_REV	SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	kind:d
GL_UNSIGNED_SHORT_8_8_APPLE	SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_8_8_APPLE /;"	kind:d
GL_UNSIGNED_SHORT_8_8_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_SHORT_8_8_APPLE /;"	kind:d
GL_UNSIGNED_SHORT_8_8_MESA	SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_8_8_MESA /;"	kind:d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_APPLE /;"	kind:d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_APPLE /;"	kind:d
GL_UNSIGNED_SHORT_8_8_REV_MESA	SDL_opengl_glext.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_MESA /;"	kind:d
GL_UPPER_LEFT	SDL_opengl_glext.h	/^#define GL_UPPER_LEFT /;"	kind:d
GL_USE_MISSING_GLYPH_NV	SDL_opengl_glext.h	/^#define GL_USE_MISSING_GLYPH_NV /;"	kind:d
GL_UTF16_NV	SDL_opengl_glext.h	/^#define GL_UTF16_NV /;"	kind:d
GL_UTF8_NV	SDL_opengl_glext.h	/^#define GL_UTF8_NV /;"	kind:d
GL_V2F	SDL_opengl.h	/^#define GL_V2F	/;"	kind:d
GL_V3F	SDL_opengl.h	/^#define GL_V3F	/;"	kind:d
GL_VALIDATE_STATUS	SDL_opengl_glext.h	/^#define GL_VALIDATE_STATUS /;"	kind:d
GL_VALIDATE_STATUS	SDL_opengles2_gl2.h	/^#define GL_VALIDATE_STATUS /;"	kind:d
GL_VARIABLE_A_NV	SDL_opengl_glext.h	/^#define GL_VARIABLE_A_NV /;"	kind:d
GL_VARIABLE_B_NV	SDL_opengl_glext.h	/^#define GL_VARIABLE_B_NV /;"	kind:d
GL_VARIABLE_C_NV	SDL_opengl_glext.h	/^#define GL_VARIABLE_C_NV /;"	kind:d
GL_VARIABLE_D_NV	SDL_opengl_glext.h	/^#define GL_VARIABLE_D_NV /;"	kind:d
GL_VARIABLE_E_NV	SDL_opengl_glext.h	/^#define GL_VARIABLE_E_NV /;"	kind:d
GL_VARIABLE_F_NV	SDL_opengl_glext.h	/^#define GL_VARIABLE_F_NV /;"	kind:d
GL_VARIABLE_G_NV	SDL_opengl_glext.h	/^#define GL_VARIABLE_G_NV /;"	kind:d
GL_VARIANT_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_VARIANT_ARRAY_EXT /;"	kind:d
GL_VARIANT_ARRAY_POINTER_EXT	SDL_opengl_glext.h	/^#define GL_VARIANT_ARRAY_POINTER_EXT /;"	kind:d
GL_VARIANT_ARRAY_STRIDE_EXT	SDL_opengl_glext.h	/^#define GL_VARIANT_ARRAY_STRIDE_EXT /;"	kind:d
GL_VARIANT_ARRAY_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_VARIANT_ARRAY_TYPE_EXT /;"	kind:d
GL_VARIANT_DATATYPE_EXT	SDL_opengl_glext.h	/^#define GL_VARIANT_DATATYPE_EXT /;"	kind:d
GL_VARIANT_EXT	SDL_opengl_glext.h	/^#define GL_VARIANT_EXT /;"	kind:d
GL_VARIANT_VALUE_EXT	SDL_opengl_glext.h	/^#define GL_VARIANT_VALUE_EXT /;"	kind:d
GL_VBO_FREE_MEMORY_ATI	SDL_opengl_glext.h	/^#define GL_VBO_FREE_MEMORY_ATI /;"	kind:d
GL_VECTOR_EXT	SDL_opengl_glext.h	/^#define GL_VECTOR_EXT /;"	kind:d
GL_VENDOR	SDL_opengl.h	/^#define GL_VENDOR	/;"	kind:d
GL_VENDOR	SDL_opengles2_gl2.h	/^#define GL_VENDOR /;"	kind:d
GL_VERSION	SDL_opengl.h	/^#define GL_VERSION	/;"	kind:d
GL_VERSION	SDL_opengles2_gl2.h	/^#define GL_VERSION /;"	kind:d
GL_VERSION_1_1	SDL_opengl.h	/^#define GL_VERSION_1_1 /;"	kind:d
GL_VERSION_1_2	SDL_opengl.h	/^#define GL_VERSION_1_2 /;"	kind:d
GL_VERSION_1_2	SDL_opengl_glext.h	/^#define GL_VERSION_1_2 /;"	kind:d
GL_VERSION_1_3	SDL_opengl.h	/^#define GL_VERSION_1_3 /;"	kind:d
GL_VERSION_1_3	SDL_opengl_glext.h	/^#define GL_VERSION_1_3 /;"	kind:d
GL_VERSION_1_4	SDL_opengl_glext.h	/^#define GL_VERSION_1_4 /;"	kind:d
GL_VERSION_1_5	SDL_opengl_glext.h	/^#define GL_VERSION_1_5 /;"	kind:d
GL_VERSION_2_0	SDL_opengl_glext.h	/^#define GL_VERSION_2_0 /;"	kind:d
GL_VERSION_2_1	SDL_opengl_glext.h	/^#define GL_VERSION_2_1 /;"	kind:d
GL_VERSION_3_0	SDL_opengl_glext.h	/^#define GL_VERSION_3_0 /;"	kind:d
GL_VERSION_3_1	SDL_opengl_glext.h	/^#define GL_VERSION_3_1 /;"	kind:d
GL_VERSION_3_2	SDL_opengl_glext.h	/^#define GL_VERSION_3_2 /;"	kind:d
GL_VERSION_3_3	SDL_opengl_glext.h	/^#define GL_VERSION_3_3 /;"	kind:d
GL_VERSION_4_0	SDL_opengl_glext.h	/^#define GL_VERSION_4_0 /;"	kind:d
GL_VERSION_4_1	SDL_opengl_glext.h	/^#define GL_VERSION_4_1 /;"	kind:d
GL_VERSION_4_2	SDL_opengl_glext.h	/^#define GL_VERSION_4_2 /;"	kind:d
GL_VERSION_4_3	SDL_opengl_glext.h	/^#define GL_VERSION_4_3 /;"	kind:d
GL_VERSION_4_4	SDL_opengl_glext.h	/^#define GL_VERSION_4_4 /;"	kind:d
GL_VERTEX23_BIT_PGI	SDL_opengl_glext.h	/^#define GL_VERTEX23_BIT_PGI /;"	kind:d
GL_VERTEX4_BIT_PGI	SDL_opengl_glext.h	/^#define GL_VERTEX4_BIT_PGI /;"	kind:d
GL_VERTEX_ARRAY	SDL_opengl.h	/^#define GL_VERTEX_ARRAY	/;"	kind:d
GL_VERTEX_ARRAY_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_ADDRESS_NV /;"	kind:d
GL_VERTEX_ARRAY_BINDING	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_BINDING /;"	kind:d
GL_VERTEX_ARRAY_BINDING_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_BINDING_APPLE /;"	kind:d
GL_VERTEX_ARRAY_BINDING_OES	SDL_opengles2_gl2ext.h	/^#define GL_VERTEX_ARRAY_BINDING_OES /;"	kind:d
GL_VERTEX_ARRAY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING /;"	kind:d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB /;"	kind:d
GL_VERTEX_ARRAY_COUNT_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_COUNT_EXT /;"	kind:d
GL_VERTEX_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_EXT /;"	kind:d
GL_VERTEX_ARRAY_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_LENGTH_NV /;"	kind:d
GL_VERTEX_ARRAY_LIST_IBM	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_LIST_IBM /;"	kind:d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM /;"	kind:d
GL_VERTEX_ARRAY_OBJECT_AMD	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_OBJECT_AMD /;"	kind:d
GL_VERTEX_ARRAY_OBJECT_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_OBJECT_EXT /;"	kind:d
GL_VERTEX_ARRAY_OBJECT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_VERTEX_ARRAY_OBJECT_EXT /;"	kind:d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL /;"	kind:d
GL_VERTEX_ARRAY_POINTER	SDL_opengl.h	/^#define GL_VERTEX_ARRAY_POINTER	/;"	kind:d
GL_VERTEX_ARRAY_POINTER_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_POINTER_EXT /;"	kind:d
GL_VERTEX_ARRAY_RANGE_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_APPLE /;"	kind:d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE /;"	kind:d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV /;"	kind:d
GL_VERTEX_ARRAY_RANGE_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_NV /;"	kind:d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE /;"	kind:d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_NV /;"	kind:d
GL_VERTEX_ARRAY_RANGE_VALID_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_VALID_NV /;"	kind:d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV /;"	kind:d
GL_VERTEX_ARRAY_SIZE	SDL_opengl.h	/^#define GL_VERTEX_ARRAY_SIZE	/;"	kind:d
GL_VERTEX_ARRAY_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_SIZE_EXT /;"	kind:d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE /;"	kind:d
GL_VERTEX_ARRAY_STRIDE	SDL_opengl.h	/^#define GL_VERTEX_ARRAY_STRIDE	/;"	kind:d
GL_VERTEX_ARRAY_STRIDE_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_STRIDE_EXT /;"	kind:d
GL_VERTEX_ARRAY_TYPE	SDL_opengl.h	/^#define GL_VERTEX_ARRAY_TYPE	/;"	kind:d
GL_VERTEX_ARRAY_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_ARRAY_TYPE_EXT /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY0_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY0_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY10_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY10_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY11_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY11_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY12_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY12_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY13_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY13_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY14_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY14_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY15_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY15_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY1_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY1_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY2_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY2_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY3_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY3_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY4_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY4_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY5_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY5_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY6_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY6_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY7_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY7_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY8_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY8_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY9_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY9_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE	SDL_opengles2_gl2ext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV	SDL_opengles2_gl2ext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_LONG	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LONG /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_POINTER	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_POINTER	SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_SIZE	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_SIZE	SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_TYPE	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_TYPE	SDL_opengles2_gl2.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB /;"	kind:d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV /;"	kind:d
GL_VERTEX_ATTRIB_BINDING	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_BINDING /;"	kind:d
GL_VERTEX_ATTRIB_MAP1_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_APPLE /;"	kind:d
GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE /;"	kind:d
GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE /;"	kind:d
GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE /;"	kind:d
GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE /;"	kind:d
GL_VERTEX_ATTRIB_MAP2_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_APPLE /;"	kind:d
GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE /;"	kind:d
GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE /;"	kind:d
GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE /;"	kind:d
GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE /;"	kind:d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	SDL_opengl_glext.h	/^#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	kind:d
GL_VERTEX_BINDING_BUFFER	SDL_opengl_glext.h	/^#define GL_VERTEX_BINDING_BUFFER /;"	kind:d
GL_VERTEX_BINDING_DIVISOR	SDL_opengl_glext.h	/^#define GL_VERTEX_BINDING_DIVISOR /;"	kind:d
GL_VERTEX_BINDING_OFFSET	SDL_opengl_glext.h	/^#define GL_VERTEX_BINDING_OFFSET /;"	kind:d
GL_VERTEX_BINDING_STRIDE	SDL_opengl_glext.h	/^#define GL_VERTEX_BINDING_STRIDE /;"	kind:d
GL_VERTEX_BLEND_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_BLEND_ARB /;"	kind:d
GL_VERTEX_CONSISTENT_HINT_PGI	SDL_opengl_glext.h	/^#define GL_VERTEX_CONSISTENT_HINT_PGI /;"	kind:d
GL_VERTEX_DATA_HINT_PGI	SDL_opengl_glext.h	/^#define GL_VERTEX_DATA_HINT_PGI /;"	kind:d
GL_VERTEX_ELEMENT_SWIZZLE_AMD	SDL_opengl_glext.h	/^#define GL_VERTEX_ELEMENT_SWIZZLE_AMD /;"	kind:d
GL_VERTEX_ID_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_ID_NV /;"	kind:d
GL_VERTEX_ID_SWIZZLE_AMD	SDL_opengl_glext.h	/^#define GL_VERTEX_ID_SWIZZLE_AMD /;"	kind:d
GL_VERTEX_PRECLIP_HINT_SGIX	SDL_opengl_glext.h	/^#define GL_VERTEX_PRECLIP_HINT_SGIX /;"	kind:d
GL_VERTEX_PRECLIP_SGIX	SDL_opengl_glext.h	/^#define GL_VERTEX_PRECLIP_SGIX /;"	kind:d
GL_VERTEX_PROGRAM_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_ARB /;"	kind:d
GL_VERTEX_PROGRAM_BINDING_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_BINDING_NV /;"	kind:d
GL_VERTEX_PROGRAM_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_NV /;"	kind:d
GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV /;"	kind:d
GL_VERTEX_PROGRAM_POINT_SIZE	SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	kind:d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB /;"	kind:d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_NV /;"	kind:d
GL_VERTEX_PROGRAM_TWO_SIDE	SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE /;"	kind:d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB /;"	kind:d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_NV /;"	kind:d
GL_VERTEX_SHADER	SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER /;"	kind:d
GL_VERTEX_SHADER	SDL_opengles2_gl2.h	/^#define GL_VERTEX_SHADER /;"	kind:d
GL_VERTEX_SHADER_ARB	SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_ARB /;"	kind:d
GL_VERTEX_SHADER_BINDING_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_BINDING_EXT /;"	kind:d
GL_VERTEX_SHADER_BIT	SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_BIT /;"	kind:d
GL_VERTEX_SHADER_BIT_EXT	SDL_opengles2_gl2ext.h	/^#define GL_VERTEX_SHADER_BIT_EXT /;"	kind:d
GL_VERTEX_SHADER_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_EXT /;"	kind:d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	kind:d
GL_VERTEX_SHADER_INVARIANTS_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_INVARIANTS_EXT /;"	kind:d
GL_VERTEX_SHADER_LOCALS_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_LOCALS_EXT /;"	kind:d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	kind:d
GL_VERTEX_SHADER_OPTIMIZED_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_OPTIMIZED_EXT /;"	kind:d
GL_VERTEX_SHADER_VARIANTS_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_SHADER_VARIANTS_EXT /;"	kind:d
GL_VERTEX_SOURCE_ATI	SDL_opengl_glext.h	/^#define GL_VERTEX_SOURCE_ATI /;"	kind:d
GL_VERTEX_STATE_PROGRAM_NV	SDL_opengl_glext.h	/^#define GL_VERTEX_STATE_PROGRAM_NV /;"	kind:d
GL_VERTEX_STREAM0_ATI	SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM0_ATI /;"	kind:d
GL_VERTEX_STREAM1_ATI	SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM1_ATI /;"	kind:d
GL_VERTEX_STREAM2_ATI	SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM2_ATI /;"	kind:d
GL_VERTEX_STREAM3_ATI	SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM3_ATI /;"	kind:d
GL_VERTEX_STREAM4_ATI	SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM4_ATI /;"	kind:d
GL_VERTEX_STREAM5_ATI	SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM5_ATI /;"	kind:d
GL_VERTEX_STREAM6_ATI	SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM6_ATI /;"	kind:d
GL_VERTEX_STREAM7_ATI	SDL_opengl_glext.h	/^#define GL_VERTEX_STREAM7_ATI /;"	kind:d
GL_VERTEX_SUBROUTINE	SDL_opengl_glext.h	/^#define GL_VERTEX_SUBROUTINE /;"	kind:d
GL_VERTEX_SUBROUTINE_UNIFORM	SDL_opengl_glext.h	/^#define GL_VERTEX_SUBROUTINE_UNIFORM /;"	kind:d
GL_VERTEX_TEXTURE	SDL_opengl_glext.h	/^#define GL_VERTEX_TEXTURE /;"	kind:d
GL_VERTEX_WEIGHTING_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_WEIGHTING_EXT /;"	kind:d
GL_VERTEX_WEIGHT_ARRAY_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_EXT /;"	kind:d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT /;"	kind:d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT /;"	kind:d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT /;"	kind:d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	SDL_opengl_glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT /;"	kind:d
GL_VERTICAL_LINE_TO_NV	SDL_opengl_glext.h	/^#define GL_VERTICAL_LINE_TO_NV /;"	kind:d
GL_VIBRANCE_BIAS_NV	SDL_opengl_glext.h	/^#define GL_VIBRANCE_BIAS_NV /;"	kind:d
GL_VIBRANCE_SCALE_NV	SDL_opengl_glext.h	/^#define GL_VIBRANCE_SCALE_NV /;"	kind:d
GL_VIDEO_BUFFER_BINDING_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_BUFFER_BINDING_NV /;"	kind:d
GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV /;"	kind:d
GL_VIDEO_BUFFER_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_BUFFER_NV /;"	kind:d
GL_VIDEO_BUFFER_PITCH_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_BUFFER_PITCH_NV /;"	kind:d
GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV /;"	kind:d
GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV /;"	kind:d
GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV /;"	kind:d
GL_VIDEO_CAPTURE_FRAME_WIDTH_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV /;"	kind:d
GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV /;"	kind:d
GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV /;"	kind:d
GL_VIDEO_COLOR_CONVERSION_MATRIX_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV /;"	kind:d
GL_VIDEO_COLOR_CONVERSION_MAX_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MAX_NV /;"	kind:d
GL_VIDEO_COLOR_CONVERSION_MIN_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MIN_NV /;"	kind:d
GL_VIDEO_COLOR_CONVERSION_OFFSET_NV	SDL_opengl_glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV /;"	kind:d
GL_VIEWPORT	SDL_opengl.h	/^#define GL_VIEWPORT	/;"	kind:d
GL_VIEWPORT	SDL_opengles2_gl2.h	/^#define GL_VIEWPORT /;"	kind:d
GL_VIEWPORT_BIT	SDL_opengl.h	/^#define GL_VIEWPORT_BIT	/;"	kind:d
GL_VIEWPORT_BOUNDS_RANGE	SDL_opengl_glext.h	/^#define GL_VIEWPORT_BOUNDS_RANGE /;"	kind:d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	SDL_opengl_glext.h	/^#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX /;"	kind:d
GL_VIEWPORT_SUBPIXEL_BITS	SDL_opengl_glext.h	/^#define GL_VIEWPORT_SUBPIXEL_BITS /;"	kind:d
GL_VIEW_CLASS_128_BITS	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_128_BITS /;"	kind:d
GL_VIEW_CLASS_16_BITS	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_16_BITS /;"	kind:d
GL_VIEW_CLASS_24_BITS	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_24_BITS /;"	kind:d
GL_VIEW_CLASS_32_BITS	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_32_BITS /;"	kind:d
GL_VIEW_CLASS_48_BITS	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_48_BITS /;"	kind:d
GL_VIEW_CLASS_64_BITS	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_64_BITS /;"	kind:d
GL_VIEW_CLASS_8_BITS	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_8_BITS /;"	kind:d
GL_VIEW_CLASS_96_BITS	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_96_BITS /;"	kind:d
GL_VIEW_CLASS_BPTC_FLOAT	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_BPTC_FLOAT /;"	kind:d
GL_VIEW_CLASS_BPTC_UNORM	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_BPTC_UNORM /;"	kind:d
GL_VIEW_CLASS_RGTC1_RED	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_RGTC1_RED /;"	kind:d
GL_VIEW_CLASS_RGTC2_RG	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_RGTC2_RG /;"	kind:d
GL_VIEW_CLASS_S3TC_DXT1_RGB	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGB /;"	kind:d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGBA /;"	kind:d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT3_RGBA /;"	kind:d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	SDL_opengl_glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT5_RGBA /;"	kind:d
GL_VIEW_COMPATIBILITY_CLASS	SDL_opengl_glext.h	/^#define GL_VIEW_COMPATIBILITY_CLASS /;"	kind:d
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB	SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB /;"	kind:d
GL_VIRTUAL_PAGE_SIZE_X_AMD	SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_AMD /;"	kind:d
GL_VIRTUAL_PAGE_SIZE_X_ARB	SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_ARB /;"	kind:d
GL_VIRTUAL_PAGE_SIZE_Y_AMD	SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_AMD /;"	kind:d
GL_VIRTUAL_PAGE_SIZE_Y_ARB	SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_ARB /;"	kind:d
GL_VIRTUAL_PAGE_SIZE_Z_AMD	SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_AMD /;"	kind:d
GL_VIRTUAL_PAGE_SIZE_Z_ARB	SDL_opengl_glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_ARB /;"	kind:d
GL_VIVIDLIGHT_NV	SDL_opengl_glext.h	/^#define GL_VIVIDLIGHT_NV /;"	kind:d
GL_VIV_shader_binary	SDL_opengles2_gl2ext.h	/^#define GL_VIV_shader_binary /;"	kind:d
GL_VOLATILE_APPLE	SDL_opengl_glext.h	/^#define GL_VOLATILE_APPLE /;"	kind:d
GL_WAIT_FAILED	SDL_opengl_glext.h	/^#define GL_WAIT_FAILED /;"	kind:d
GL_WAIT_FAILED_APPLE	SDL_opengles2_gl2ext.h	/^#define GL_WAIT_FAILED_APPLE /;"	kind:d
GL_WARPS_PER_SM_NV	SDL_opengl_glext.h	/^#define GL_WARPS_PER_SM_NV /;"	kind:d
GL_WARP_SIZE_NV	SDL_opengl_glext.h	/^#define GL_WARP_SIZE_NV /;"	kind:d
GL_WEIGHT_ARRAY_ARB	SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_ARB /;"	kind:d
GL_WEIGHT_ARRAY_BUFFER_BINDING	SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING /;"	kind:d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB /;"	kind:d
GL_WEIGHT_ARRAY_POINTER_ARB	SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_POINTER_ARB /;"	kind:d
GL_WEIGHT_ARRAY_SIZE_ARB	SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_SIZE_ARB /;"	kind:d
GL_WEIGHT_ARRAY_STRIDE_ARB	SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_STRIDE_ARB /;"	kind:d
GL_WEIGHT_ARRAY_TYPE_ARB	SDL_opengl_glext.h	/^#define GL_WEIGHT_ARRAY_TYPE_ARB /;"	kind:d
GL_WEIGHT_SUM_UNITY_ARB	SDL_opengl_glext.h	/^#define GL_WEIGHT_SUM_UNITY_ARB /;"	kind:d
GL_WIDE_LINE_HINT_PGI	SDL_opengl_glext.h	/^#define GL_WIDE_LINE_HINT_PGI /;"	kind:d
GL_WIN_phong_shading	SDL_opengl_glext.h	/^#define GL_WIN_phong_shading /;"	kind:d
GL_WIN_specular_fog	SDL_opengl_glext.h	/^#define GL_WIN_specular_fog /;"	kind:d
GL_WRAP_BORDER_SUN	SDL_opengl_glext.h	/^#define GL_WRAP_BORDER_SUN /;"	kind:d
GL_WRITEONLY_RENDERING_QCOM	SDL_opengles2_gl2ext.h	/^#define GL_WRITEONLY_RENDERING_QCOM /;"	kind:d
GL_WRITE_DISCARD_NV	SDL_opengl_glext.h	/^#define GL_WRITE_DISCARD_NV /;"	kind:d
GL_WRITE_ONLY	SDL_opengl_glext.h	/^#define GL_WRITE_ONLY /;"	kind:d
GL_WRITE_ONLY_ARB	SDL_opengl_glext.h	/^#define GL_WRITE_ONLY_ARB /;"	kind:d
GL_WRITE_ONLY_OES	SDL_opengles2_gl2ext.h	/^#define GL_WRITE_ONLY_OES /;"	kind:d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	SDL_opengl_glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV /;"	kind:d
GL_WRITE_PIXEL_DATA_RANGE_NV	SDL_opengl_glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_NV /;"	kind:d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	SDL_opengl_glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV /;"	kind:d
GL_W_EXT	SDL_opengl_glext.h	/^#define GL_W_EXT /;"	kind:d
GL_XOR	SDL_opengl.h	/^#define GL_XOR	/;"	kind:d
GL_XOR_NV	SDL_opengl_glext.h	/^#define GL_XOR_NV /;"	kind:d
GL_X_EXT	SDL_opengl_glext.h	/^#define GL_X_EXT /;"	kind:d
GL_YCBAYCR8A_4224_NV	SDL_opengl_glext.h	/^#define GL_YCBAYCR8A_4224_NV /;"	kind:d
GL_YCBCR_422_APPLE	SDL_opengl_glext.h	/^#define GL_YCBCR_422_APPLE /;"	kind:d
GL_YCBCR_MESA	SDL_opengl_glext.h	/^#define GL_YCBCR_MESA /;"	kind:d
GL_YCBYCR8_422_NV	SDL_opengl_glext.h	/^#define GL_YCBYCR8_422_NV /;"	kind:d
GL_YCRCBA_SGIX	SDL_opengl_glext.h	/^#define GL_YCRCBA_SGIX /;"	kind:d
GL_YCRCB_422_SGIX	SDL_opengl_glext.h	/^#define GL_YCRCB_422_SGIX /;"	kind:d
GL_YCRCB_444_SGIX	SDL_opengl_glext.h	/^#define GL_YCRCB_444_SGIX /;"	kind:d
GL_YCRCB_SGIX	SDL_opengl_glext.h	/^#define GL_YCRCB_SGIX /;"	kind:d
GL_Y_EXT	SDL_opengl_glext.h	/^#define GL_Y_EXT /;"	kind:d
GL_Z400_BINARY_AMD	SDL_opengles2_gl2ext.h	/^#define GL_Z400_BINARY_AMD /;"	kind:d
GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV	SDL_opengl_glext.h	/^#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV /;"	kind:d
GL_Z4Y12Z4CB12Z4CR12_444_NV	SDL_opengl_glext.h	/^#define GL_Z4Y12Z4CB12Z4CR12_444_NV /;"	kind:d
GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV	SDL_opengl_glext.h	/^#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV /;"	kind:d
GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV	SDL_opengl_glext.h	/^#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV /;"	kind:d
GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV	SDL_opengl_glext.h	/^#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV /;"	kind:d
GL_ZERO	SDL_opengl.h	/^#define GL_ZERO	/;"	kind:d
GL_ZERO	SDL_opengles2_gl2.h	/^#define GL_ZERO /;"	kind:d
GL_ZERO_EXT	SDL_opengl_glext.h	/^#define GL_ZERO_EXT /;"	kind:d
GL_ZOOM_X	SDL_opengl.h	/^#define GL_ZOOM_X	/;"	kind:d
GL_ZOOM_Y	SDL_opengl.h	/^#define GL_ZOOM_Y	/;"	kind:d
GL_Z_EXT	SDL_opengl_glext.h	/^#define GL_Z_EXT /;"	kind:d
GLbitfield	SDL_opengl.h	/^typedef unsigned int	GLbitfield;$/;"	kind:t	typeref:typename:unsigned int
GLbitfield	SDL_opengles2_gl2.h	/^typedef unsigned int     GLbitfield;$/;"	kind:t	typeref:typename:unsigned int
GLboolean	SDL_opengl.h	/^typedef unsigned char	GLboolean;$/;"	kind:t	typeref:typename:unsigned char
GLboolean	SDL_opengles2_gl2.h	/^typedef unsigned char    GLboolean;$/;"	kind:t	typeref:typename:unsigned char
GLbyte	SDL_opengl.h	/^typedef signed char	GLbyte;		\/* 1-byte signed *\/$/;"	kind:t	typeref:typename:signed char
GLbyte	SDL_opengles2_gl2.h	/^typedef khronos_int8_t   GLbyte;$/;"	kind:t	typeref:typename:khronos_int8_t
GLchar	SDL_opengl_glext.h	/^typedef char GLchar;$/;"	kind:t	typeref:typename:char
GLchar	SDL_opengles2_gl2.h	/^typedef char             GLchar;$/;"	kind:t	typeref:typename:char
GLcharARB	SDL_opengl_glext.h	/^typedef char GLcharARB;$/;"	kind:t	typeref:typename:char
GLclampd	SDL_opengl.h	/^typedef double		GLclampd;	\/* double precision float in [0,1] *\/$/;"	kind:t	typeref:typename:double
GLclampf	SDL_opengl.h	/^typedef float		GLclampf;	\/* single precision float in [0,1] *\/$/;"	kind:t	typeref:typename:float
GLclampf	SDL_opengles2_gl2.h	/^typedef khronos_float_t  GLclampf;$/;"	kind:t	typeref:typename:khronos_float_t
GLdouble	SDL_opengl.h	/^typedef double		GLdouble;	\/* double precision float *\/$/;"	kind:t	typeref:typename:double
GLeglImageOES	SDL_opengl.h	/^typedef void* GLeglImageOES;$/;"	kind:t	typeref:typename:void *
GLeglImageOES	SDL_opengles2_gl2ext.h	/^typedef void* GLeglImageOES;$/;"	kind:t	typeref:typename:void *
GLenum	SDL_opengl.h	/^typedef unsigned int	GLenum;$/;"	kind:t	typeref:typename:unsigned int
GLenum	SDL_opengles2_gl2.h	/^typedef unsigned int     GLenum;$/;"	kind:t	typeref:typename:unsigned int
GLfixed	SDL_opengl_glext.h	/^typedef GLint GLfixed;$/;"	kind:t	typeref:typename:GLint
GLfixed	SDL_opengles2_gl2.h	/^typedef khronos_int32_t  GLfixed;$/;"	kind:t	typeref:typename:khronos_int32_t
GLfloat	SDL_opengl.h	/^typedef float		GLfloat;	\/* single precision float *\/$/;"	kind:t	typeref:typename:float
GLfloat	SDL_opengles2_gl2.h	/^typedef khronos_float_t  GLfloat;$/;"	kind:t	typeref:typename:khronos_float_t
GLhalf	SDL_opengl_glext.h	/^typedef unsigned short GLhalf;$/;"	kind:t	typeref:typename:unsigned short
GLhalfARB	SDL_opengl_glext.h	/^typedef unsigned short GLhalfARB;$/;"	kind:t	typeref:typename:unsigned short
GLhalfNV	SDL_opengl_glext.h	/^typedef unsigned short GLhalfNV;$/;"	kind:t	typeref:typename:unsigned short
GLhandleARB	SDL_opengl_glext.h	/^typedef unsigned int GLhandleARB;$/;"	kind:t	typeref:typename:unsigned int
GLhandleARB	SDL_opengl_glext.h	/^typedef void *GLhandleARB;$/;"	kind:t	typeref:typename:void *
GLint	SDL_opengl.h	/^typedef int		GLint;		\/* 4-byte signed *\/$/;"	kind:t	typeref:typename:int
GLint	SDL_opengles2_gl2.h	/^typedef int              GLint;$/;"	kind:t	typeref:typename:int
GLint64	SDL_opengl_glext.h	/^typedef int64_t GLint64;$/;"	kind:t	typeref:typename:int64_t
GLint64	SDL_opengles2_gl2ext.h	/^typedef khronos_int64_t GLint64;$/;"	kind:t	typeref:typename:khronos_int64_t
GLint64EXT	SDL_opengl_glext.h	/^typedef int64_t GLint64EXT;$/;"	kind:t	typeref:typename:int64_t
GLintptr	SDL_opengl_glext.h	/^typedef long GLintptr;$/;"	kind:t	typeref:typename:long
GLintptr	SDL_opengl_glext.h	/^typedef ptrdiff_t GLintptr;$/;"	kind:t	typeref:typename:ptrdiff_t
GLintptr	SDL_opengles2_gl2.h	/^typedef khronos_intptr_t GLintptr;$/;"	kind:t	typeref:typename:khronos_intptr_t
GLintptrARB	SDL_opengl_glext.h	/^typedef long GLintptrARB;$/;"	kind:t	typeref:typename:long
GLintptrARB	SDL_opengl_glext.h	/^typedef ptrdiff_t GLintptrARB;$/;"	kind:t	typeref:typename:ptrdiff_t
GLshort	SDL_opengl.h	/^typedef short		GLshort;	\/* 2-byte signed *\/$/;"	kind:t	typeref:typename:short
GLshort	SDL_opengles2_gl2.h	/^typedef short            GLshort;$/;"	kind:t	typeref:typename:short
GLsizei	SDL_opengl.h	/^typedef int		GLsizei;	\/* 4-byte signed *\/$/;"	kind:t	typeref:typename:int
GLsizei	SDL_opengles2_gl2.h	/^typedef int              GLsizei;$/;"	kind:t	typeref:typename:int
GLsizeiptr	SDL_opengl_glext.h	/^typedef long GLsizeiptr;$/;"	kind:t	typeref:typename:long
GLsizeiptr	SDL_opengl_glext.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	kind:t	typeref:typename:ptrdiff_t
GLsizeiptr	SDL_opengles2_gl2.h	/^typedef khronos_ssize_t  GLsizeiptr;$/;"	kind:t	typeref:typename:khronos_ssize_t
GLsizeiptrARB	SDL_opengl_glext.h	/^typedef long GLsizeiptrARB;$/;"	kind:t	typeref:typename:long
GLsizeiptrARB	SDL_opengl_glext.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	kind:t	typeref:typename:ptrdiff_t
GLsync	SDL_opengl_glext.h	/^typedef struct __GLsync *GLsync;$/;"	kind:t	typeref:struct:__GLsync *
GLsync	SDL_opengles2_gl2ext.h	/^typedef struct __GLsync *GLsync;$/;"	kind:t	typeref:struct:__GLsync *
GLubyte	SDL_opengl.h	/^typedef unsigned char	GLubyte;	\/* 1-byte unsigned *\/$/;"	kind:t	typeref:typename:unsigned char
GLubyte	SDL_opengles2_gl2.h	/^typedef khronos_uint8_t  GLubyte;$/;"	kind:t	typeref:typename:khronos_uint8_t
GLuint	SDL_opengl.h	/^typedef unsigned int	GLuint;		\/* 4-byte unsigned *\/$/;"	kind:t	typeref:typename:unsigned int
GLuint	SDL_opengles2_gl2.h	/^typedef unsigned int     GLuint;$/;"	kind:t	typeref:typename:unsigned int
GLuint	SDL_syswm.h	/^typedef Uint32 GLuint;$/;"	kind:t	typeref:typename:Uint32
GLuint64	SDL_opengl_glext.h	/^typedef uint64_t GLuint64;$/;"	kind:t	typeref:typename:uint64_t
GLuint64	SDL_opengles2_gl2ext.h	/^typedef khronos_uint64_t GLuint64;$/;"	kind:t	typeref:typename:khronos_uint64_t
GLuint64EXT	SDL_opengl_glext.h	/^typedef uint64_t GLuint64EXT;$/;"	kind:t	typeref:typename:uint64_t
GLushort	SDL_opengl.h	/^typedef unsigned short	GLushort;	\/* 2-byte unsigned *\/$/;"	kind:t	typeref:typename:unsigned short
GLushort	SDL_opengles2_gl2.h	/^typedef unsigned short   GLushort;$/;"	kind:t	typeref:typename:unsigned short
GLvdpauSurfaceNV	SDL_opengl_glext.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	kind:t	typeref:typename:GLintptr
GLvoid	SDL_opengl.h	/^typedef void		GLvoid;$/;"	kind:t	typeref:typename:void
GLvoid	SDL_opengles2_gl2.h	/^typedef void             GLvoid;$/;"	kind:t	typeref:typename:void
Gloss	SDL_pixels.h	/^    Uint8 Gloss;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Gmask	SDL_pixels.h	/^    Uint32 Gmask;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
Gshift	SDL_pixels.h	/^    Uint8 Gshift;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
HAVE_ABS	SDL_config.h	/^#define HAVE_ABS /;"	kind:d
HAVE_ACOS	SDL_config.h	/^#define HAVE_ACOS /;"	kind:d
HAVE_ACOSF	SDL_config.h	/^#define HAVE_ACOSF /;"	kind:d
HAVE_ALLOCA	SDL_config.h	/^#define HAVE_ALLOCA /;"	kind:d
HAVE_ASIN	SDL_config.h	/^#define HAVE_ASIN /;"	kind:d
HAVE_ASINF	SDL_config.h	/^#define HAVE_ASINF /;"	kind:d
HAVE_ATAN	SDL_config.h	/^#define HAVE_ATAN /;"	kind:d
HAVE_ATAN2	SDL_config.h	/^#define HAVE_ATAN2 /;"	kind:d
HAVE_ATAN2F	SDL_config.h	/^#define HAVE_ATAN2F /;"	kind:d
HAVE_ATANF	SDL_config.h	/^#define HAVE_ATANF /;"	kind:d
HAVE_ATOF	SDL_config.h	/^#define HAVE_ATOF /;"	kind:d
HAVE_ATOI	SDL_config.h	/^#define HAVE_ATOI /;"	kind:d
HAVE_AUDIOCLIENT_H	SDL_config.h	/^#define HAVE_AUDIOCLIENT_H /;"	kind:d
HAVE_CALLOC	SDL_config.h	/^#define HAVE_CALLOC /;"	kind:d
HAVE_CEILF	SDL_config.h	/^#define HAVE_CEILF /;"	kind:d
HAVE_COS	SDL_config.h	/^#define HAVE_COS /;"	kind:d
HAVE_COSF	SDL_config.h	/^#define HAVE_COSF /;"	kind:d
HAVE_CTYPE_H	SDL_config.h	/^#define HAVE_CTYPE_H /;"	kind:d
HAVE_DDRAW_H	SDL_config.h	/^#define HAVE_DDRAW_H /;"	kind:d
HAVE_DINPUT_H	SDL_config.h	/^#define HAVE_DINPUT_H /;"	kind:d
HAVE_DSOUND_H	SDL_config.h	/^#define HAVE_DSOUND_H /;"	kind:d
HAVE_DXGI_H	SDL_config.h	/^#define HAVE_DXGI_H /;"	kind:d
HAVE_ENDPOINTVOLUME_H	SDL_config.h	/^#define HAVE_ENDPOINTVOLUME_H /;"	kind:d
HAVE_EXP	SDL_config.h	/^#define HAVE_EXP /;"	kind:d
HAVE_EXPF	SDL_config.h	/^#define HAVE_EXPF /;"	kind:d
HAVE_FABS	SDL_config.h	/^#define HAVE_FABS /;"	kind:d
HAVE_FABSF	SDL_config.h	/^#define HAVE_FABSF /;"	kind:d
HAVE_FLOAT_H	SDL_config.h	/^#define HAVE_FLOAT_H /;"	kind:d
HAVE_FLOOR	SDL_config.h	/^#define HAVE_FLOOR /;"	kind:d
HAVE_FLOORF	SDL_config.h	/^#define HAVE_FLOORF /;"	kind:d
HAVE_FMOD	SDL_config.h	/^#define HAVE_FMOD /;"	kind:d
HAVE_FMODF	SDL_config.h	/^#define HAVE_FMODF /;"	kind:d
HAVE_FREE	SDL_config.h	/^#define HAVE_FREE /;"	kind:d
HAVE_LIMITS_H	SDL_config.h	/^#define HAVE_LIMITS_H /;"	kind:d
HAVE_LOG	SDL_config.h	/^#define HAVE_LOG /;"	kind:d
HAVE_LOG10	SDL_config.h	/^#define HAVE_LOG10 /;"	kind:d
HAVE_LOG10F	SDL_config.h	/^#define HAVE_LOG10F /;"	kind:d
HAVE_LOGF	SDL_config.h	/^#define HAVE_LOGF /;"	kind:d
HAVE_MALLOC	SDL_config.h	/^#define HAVE_MALLOC /;"	kind:d
HAVE_MATH_H	SDL_config.h	/^#define HAVE_MATH_H /;"	kind:d
HAVE_MEMCMP	SDL_config.h	/^#define HAVE_MEMCMP /;"	kind:d
HAVE_MEMCPY	SDL_config.h	/^#define HAVE_MEMCPY /;"	kind:d
HAVE_MEMMOVE	SDL_config.h	/^#define HAVE_MEMMOVE /;"	kind:d
HAVE_MEMSET	SDL_config.h	/^#define HAVE_MEMSET /;"	kind:d
HAVE_MMDEVICEAPI_H	SDL_config.h	/^#define HAVE_MMDEVICEAPI_H /;"	kind:d
HAVE_M_PI	SDL_config.h	/^#define HAVE_M_PI /;"	kind:d
HAVE_POW	SDL_config.h	/^#define HAVE_POW /;"	kind:d
HAVE_POWF	SDL_config.h	/^#define HAVE_POWF /;"	kind:d
HAVE_QSORT	SDL_config.h	/^#define HAVE_QSORT /;"	kind:d
HAVE_REALLOC	SDL_config.h	/^#define HAVE_REALLOC /;"	kind:d
HAVE_SCALBN	SDL_config.h	/^#define HAVE_SCALBN /;"	kind:d
HAVE_SCALBNF	SDL_config.h	/^#define HAVE_SCALBNF /;"	kind:d
HAVE_SIGNAL_H	SDL_config.h	/^#define HAVE_SIGNAL_H /;"	kind:d
HAVE_SIN	SDL_config.h	/^#define HAVE_SIN /;"	kind:d
HAVE_SINF	SDL_config.h	/^#define HAVE_SINF /;"	kind:d
HAVE_SQRT	SDL_config.h	/^#define HAVE_SQRT /;"	kind:d
HAVE_SQRTF	SDL_config.h	/^#define HAVE_SQRTF /;"	kind:d
HAVE_STDARG_H	SDL_config.h	/^#define HAVE_STDARG_H /;"	kind:d
HAVE_STDDEF_H	SDL_config.h	/^#define HAVE_STDDEF_H /;"	kind:d
HAVE_STDINT_H	SDL_config.h	/^#define HAVE_STDINT_H /;"	kind:d
HAVE_STDIO_H	SDL_config.h	/^#define HAVE_STDIO_H /;"	kind:d
HAVE_STRCHR	SDL_config.h	/^#define HAVE_STRCHR /;"	kind:d
HAVE_STRCMP	SDL_config.h	/^#define HAVE_STRCMP /;"	kind:d
HAVE_STRING_H	SDL_config.h	/^#define HAVE_STRING_H /;"	kind:d
HAVE_STRLEN	SDL_config.h	/^#define HAVE_STRLEN /;"	kind:d
HAVE_STRNCMP	SDL_config.h	/^#define HAVE_STRNCMP /;"	kind:d
HAVE_STRRCHR	SDL_config.h	/^#define HAVE_STRRCHR /;"	kind:d
HAVE_STRSTR	SDL_config.h	/^#define HAVE_STRSTR /;"	kind:d
HAVE_STRTOD	SDL_config.h	/^#define HAVE_STRTOD /;"	kind:d
HAVE_STRTOL	SDL_config.h	/^#define HAVE_STRTOL /;"	kind:d
HAVE_STRTOLL	SDL_config.h	/^#define HAVE_STRTOLL /;"	kind:d
HAVE_STRTOUL	SDL_config.h	/^#define HAVE_STRTOUL /;"	kind:d
HAVE_TAN	SDL_config.h	/^#define HAVE_TAN /;"	kind:d
HAVE_TANF	SDL_config.h	/^#define HAVE_TANF /;"	kind:d
HAVE_VSSCANF	SDL_config.h	/^#define HAVE_VSSCANF /;"	kind:d
HAVE_WINAPIFAMILY_H	SDL_platform.h	/^#define HAVE_WINAPIFAMILY_H /;"	kind:d
HAVE_XINPUT_H	SDL_config.h	/^#define HAVE_XINPUT_H /;"	kind:d
HAVE__COPYSIGN	SDL_config.h	/^#define HAVE__COPYSIGN /;"	kind:d
HAVE__FSEEKI64	SDL_config.h	/^#define HAVE__FSEEKI64 /;"	kind:d
HAVE__STRICMP	SDL_config.h	/^#define HAVE__STRICMP /;"	kind:d
HAVE__STRNICMP	SDL_config.h	/^#define HAVE__STRNICMP /;"	kind:d
HAVE__STRREV	SDL_config.h	/^#define HAVE__STRREV /;"	kind:d
IDirect3DDevice9	SDL_system.h	/^typedef struct IDirect3DDevice9 IDirect3DDevice9;$/;"	kind:t	typeref:struct:IDirect3DDevice9
IMG_GetError	SDL_image.h	/^#define IMG_GetError /;"	kind:d
IMG_INIT_JPG	SDL_image.h	/^    IMG_INIT_JPG = 0x00000001,$/;"	kind:e	enum:__anon14a154200103	access:public
IMG_INIT_PNG	SDL_image.h	/^    IMG_INIT_PNG = 0x00000002,$/;"	kind:e	enum:__anon14a154200103	access:public
IMG_INIT_TIF	SDL_image.h	/^    IMG_INIT_TIF = 0x00000004,$/;"	kind:e	enum:__anon14a154200103	access:public
IMG_INIT_WEBP	SDL_image.h	/^    IMG_INIT_WEBP = 0x00000008$/;"	kind:e	enum:__anon14a154200103	access:public
IMG_Init	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_Init(int flags);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int flags)
IMG_InitFlags	SDL_image.h	/^} IMG_InitFlags;$/;"	kind:t	typeref:enum:__anon14a154200103
IMG_Linked_Version	SDL_image.h	/^extern DECLSPEC const SDL_version * SDLCALL IMG_Linked_Version(void);$/;"	kind:p	typeref:typename:DECLSPEC const SDL_version * SDLCALL	signature:(void)
IMG_Load	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_Load(const char *file);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(const char * file)
IMG_LoadBMP_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadBMP_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadCUR_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadCUR_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadGIF_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadGIF_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadICO_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadICO_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadJPG_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadJPG_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadLBM_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadLBM_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadPCX_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadPCX_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadPNG_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadPNG_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadPNM_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadPNM_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadSVG_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadSVG_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadTGA_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadTGA_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadTIF_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadTIF_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadTexture	SDL_image.h	/^extern DECLSPEC SDL_Texture * SDLCALL IMG_LoadTexture(SDL_Renderer *renderer, const char *file);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Texture * SDLCALL	signature:(SDL_Renderer * renderer,const char * file)
IMG_LoadTextureTyped_RW	SDL_image.h	/^extern DECLSPEC SDL_Texture * SDLCALL IMG_LoadTextureTyped_RW(SDL_Renderer *renderer, SDL_RWops /;"	kind:p	typeref:typename:DECLSPEC SDL_Texture * SDLCALL	signature:(SDL_Renderer * renderer,SDL_RWops * src,int freesrc,const char * type)
IMG_LoadTexture_RW	SDL_image.h	/^extern DECLSPEC SDL_Texture * SDLCALL IMG_LoadTexture_RW(SDL_Renderer *renderer, SDL_RWops *src,/;"	kind:p	typeref:typename:DECLSPEC SDL_Texture * SDLCALL	signature:(SDL_Renderer * renderer,SDL_RWops * src,int freesrc)
IMG_LoadTyped_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadTyped_RW(SDL_RWops *src, int freesrc, const char */;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src,int freesrc,const char * type)
IMG_LoadWEBP_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadWEBP_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadXCF_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadXCF_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadXPM_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadXPM_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_LoadXV_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_LoadXV_RW(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src)
IMG_Load_RW	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_Load_RW(SDL_RWops *src, int freesrc);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src,int freesrc)
IMG_Quit	SDL_image.h	/^extern DECLSPEC void SDLCALL IMG_Quit(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
IMG_ReadXPMFromArray	SDL_image.h	/^extern DECLSPEC SDL_Surface * SDLCALL IMG_ReadXPMFromArray(char **xpm);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(char ** xpm)
IMG_SaveJPG	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_SaveJPG(SDL_Surface *surface, const char *file, int quality);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,const char * file,int quality)
IMG_SaveJPG_RW	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_SaveJPG_RW(SDL_Surface *surface, SDL_RWops *dst, int freedst, in/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,SDL_RWops * dst,int freedst,int quality)
IMG_SavePNG	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_SavePNG(SDL_Surface *surface, const char *file);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,const char * file)
IMG_SavePNG_RW	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_SavePNG_RW(SDL_Surface *surface, SDL_RWops *dst, int freedst);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,SDL_RWops * dst,int freedst)
IMG_SetError	SDL_image.h	/^#define IMG_SetError /;"	kind:d
IMG_isBMP	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isBMP(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isCUR	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isCUR(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isGIF	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isGIF(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isICO	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isICO(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isJPG	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isJPG(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isLBM	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isLBM(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isPCX	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isPCX(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isPNG	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isPNG(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isPNM	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isPNM(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isSVG	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isSVG(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isTIF	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isTIF(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isWEBP	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isWEBP(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isXCF	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isXCF(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isXPM	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isXPM(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
IMG_isXV	SDL_image.h	/^extern DECLSPEC int SDLCALL IMG_isXV(SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * src)
KHRONOS_APIATTRIBUTES	SDL_egl.h	/^#define KHRONOS_APIATTRIBUTES /;"	kind:d
KHRONOS_APIATTRIBUTES	SDL_egl.h	/^#define KHRONOS_APIATTRIBUTES$/;"	kind:d
KHRONOS_APIATTRIBUTES	SDL_opengles2_khrplatform.h	/^#define KHRONOS_APIATTRIBUTES /;"	kind:d
KHRONOS_APIATTRIBUTES	SDL_opengles2_khrplatform.h	/^#define KHRONOS_APIATTRIBUTES$/;"	kind:d
KHRONOS_APICALL	SDL_egl.h	/^#   define KHRONOS_APICALL /;"	kind:d
KHRONOS_APICALL	SDL_egl.h	/^#   define KHRONOS_APICALL$/;"	kind:d
KHRONOS_APICALL	SDL_opengles2_khrplatform.h	/^#   define KHRONOS_APICALL /;"	kind:d
KHRONOS_APICALL	SDL_opengles2_khrplatform.h	/^#   define KHRONOS_APICALL$/;"	kind:d
KHRONOS_APIENTRY	SDL_egl.h	/^#   define KHRONOS_APIENTRY /;"	kind:d
KHRONOS_APIENTRY	SDL_egl.h	/^#   define KHRONOS_APIENTRY$/;"	kind:d
KHRONOS_APIENTRY	SDL_opengles2_khrplatform.h	/^#   define KHRONOS_APIENTRY /;"	kind:d
KHRONOS_APIENTRY	SDL_opengles2_khrplatform.h	/^#   define KHRONOS_APIENTRY$/;"	kind:d
KHRONOS_BOOLEAN_ENUM_FORCE_SIZE	SDL_egl.h	/^    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM$/;"	kind:e	enum:__anon3733ce750103	access:public
KHRONOS_BOOLEAN_ENUM_FORCE_SIZE	SDL_opengles2_khrplatform.h	/^    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM$/;"	kind:e	enum:__anon5a19c0550103	access:public
KHRONOS_FALSE	SDL_egl.h	/^    KHRONOS_FALSE = 0,$/;"	kind:e	enum:__anon3733ce750103	access:public
KHRONOS_FALSE	SDL_opengles2_khrplatform.h	/^    KHRONOS_FALSE = 0,$/;"	kind:e	enum:__anon5a19c0550103	access:public
KHRONOS_MAX_ENUM	SDL_egl.h	/^#define KHRONOS_MAX_ENUM /;"	kind:d
KHRONOS_MAX_ENUM	SDL_opengles2_khrplatform.h	/^#define KHRONOS_MAX_ENUM /;"	kind:d
KHRONOS_SUPPORT_FLOAT	SDL_egl.h	/^#define KHRONOS_SUPPORT_FLOAT /;"	kind:d
KHRONOS_SUPPORT_FLOAT	SDL_opengles2_khrplatform.h	/^#define KHRONOS_SUPPORT_FLOAT /;"	kind:d
KHRONOS_SUPPORT_INT64	SDL_egl.h	/^#define KHRONOS_SUPPORT_INT64 /;"	kind:d
KHRONOS_SUPPORT_INT64	SDL_opengles2_khrplatform.h	/^#define KHRONOS_SUPPORT_INT64 /;"	kind:d
KHRONOS_TRUE	SDL_egl.h	/^    KHRONOS_TRUE = 1,$/;"	kind:e	enum:__anon3733ce750103	access:public
KHRONOS_TRUE	SDL_opengles2_khrplatform.h	/^    KHRONOS_TRUE  = 1,$/;"	kind:e	enum:__anon5a19c0550103	access:public
KMOD_ALT	SDL_keycode.h	/^#define KMOD_ALT /;"	kind:d
KMOD_CAPS	SDL_keycode.h	/^    KMOD_CAPS = 0x2000,$/;"	kind:e	enum:__anon7824b1c10203	access:public
KMOD_CTRL	SDL_keycode.h	/^#define KMOD_CTRL /;"	kind:d
KMOD_GUI	SDL_keycode.h	/^#define KMOD_GUI /;"	kind:d
KMOD_LALT	SDL_keycode.h	/^    KMOD_LALT = 0x0100,$/;"	kind:e	enum:__anon7824b1c10203	access:public
KMOD_LCTRL	SDL_keycode.h	/^    KMOD_LCTRL = 0x0040,$/;"	kind:e	enum:__anon7824b1c10203	access:public
KMOD_LGUI	SDL_keycode.h	/^    KMOD_LGUI = 0x0400,$/;"	kind:e	enum:__anon7824b1c10203	access:public
KMOD_LSHIFT	SDL_keycode.h	/^    KMOD_LSHIFT = 0x0001,$/;"	kind:e	enum:__anon7824b1c10203	access:public
KMOD_MODE	SDL_keycode.h	/^    KMOD_MODE = 0x4000,$/;"	kind:e	enum:__anon7824b1c10203	access:public
KMOD_NONE	SDL_keycode.h	/^    KMOD_NONE = 0x0000,$/;"	kind:e	enum:__anon7824b1c10203	access:public
KMOD_NUM	SDL_keycode.h	/^    KMOD_NUM = 0x1000,$/;"	kind:e	enum:__anon7824b1c10203	access:public
KMOD_RALT	SDL_keycode.h	/^    KMOD_RALT = 0x0200,$/;"	kind:e	enum:__anon7824b1c10203	access:public
KMOD_RCTRL	SDL_keycode.h	/^    KMOD_RCTRL = 0x0080,$/;"	kind:e	enum:__anon7824b1c10203	access:public
KMOD_RESERVED	SDL_keycode.h	/^    KMOD_RESERVED = 0x8000$/;"	kind:e	enum:__anon7824b1c10203	access:public
KMOD_RGUI	SDL_keycode.h	/^    KMOD_RGUI = 0x0800,$/;"	kind:e	enum:__anon7824b1c10203	access:public
KMOD_RSHIFT	SDL_keycode.h	/^    KMOD_RSHIFT = 0x0002,$/;"	kind:e	enum:__anon7824b1c10203	access:public
KMOD_SHIFT	SDL_keycode.h	/^#define KMOD_SHIFT /;"	kind:d
LONG_PTR	SDL_config.h	/^#define LONG_PTR /;"	kind:d
MD5UINT4	SDL_test_md5.h	/^  typedef unsigned long int MD5UINT4;$/;"	kind:t	typeref:typename:unsigned long int
M_PI	SDL_stdinc.h	/^#define M_PI /;"	kind:d
NOMINMAX	SDL_opengl.h	/^#define NOMINMAX$/;"	kind:d
NO_SDL_VULKAN_TYPEDEFS	SDL_vulkan.h	/^#define NO_SDL_VULKAN_TYPEDEFS$/;"	kind:d
NSWindow	SDL_syswm.h	/^typedef struct _NSWindow NSWindow;$/;"	kind:t	typeref:struct:_NSWindow
NULL	begin_code.h	/^#define NULL /;"	kind:d
NativeDisplayType	SDL_egl.h	/^typedef EGLNativeDisplayType NativeDisplayType;$/;"	kind:t	typeref:typename:EGLNativeDisplayType
NativePixmapType	SDL_egl.h	/^typedef EGLNativePixmapType  NativePixmapType;$/;"	kind:t	typeref:typename:EGLNativePixmapType
NativeWindowType	SDL_egl.h	/^typedef EGLNativeWindowType  NativeWindowType;$/;"	kind:t	typeref:typename:EGLNativeWindowType
NeedFunctionPrototypes	SDL_name.h	/^#define NeedFunctionPrototypes /;"	kind:d
PFNEGLCLIENTWAITSYNCKHRPROC	SDL_egl.h	/^typedef EGLint (EGLAPIENTRYP PFNEGLCLIENTWAITSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, EGLi/;"	kind:t	typeref:typename:EGLint (EGLAPIENTRYP)(EGLDisplay dpy,EGLSyncKHR sync,EGLint flags,EGLTimeKHR timeout)
PFNEGLCLIENTWAITSYNCNVPROC	SDL_egl.h	/^typedef EGLint (EGLAPIENTRYP PFNEGLCLIENTWAITSYNCNVPROC) (EGLSyncNV sync, EGLint flags, EGLTimeN/;"	kind:t	typeref:typename:EGLint (EGLAPIENTRYP)(EGLSyncNV sync,EGLint flags,EGLTimeNV timeout)
PFNEGLCREATEDRMIMAGEMESAPROC	SDL_egl.h	/^typedef EGLImageKHR (EGLAPIENTRYP PFNEGLCREATEDRMIMAGEMESAPROC) (EGLDisplay dpy, const EGLint *a/;"	kind:t	typeref:typename:EGLImageKHR (EGLAPIENTRYP)(EGLDisplay dpy,const EGLint * attrib_list)
PFNEGLCREATEFENCESYNCNVPROC	SDL_egl.h	/^typedef EGLSyncNV (EGLAPIENTRYP PFNEGLCREATEFENCESYNCNVPROC) (EGLDisplay dpy, EGLenum condition,/;"	kind:t	typeref:typename:EGLSyncNV (EGLAPIENTRYP)(EGLDisplay dpy,EGLenum condition,const EGLint * attrib_list)
PFNEGLCREATEIMAGEKHRPROC	SDL_egl.h	/^typedef EGLImageKHR (EGLAPIENTRYP PFNEGLCREATEIMAGEKHRPROC) (EGLDisplay dpy, EGLContext ctx, EGL/;"	kind:t	typeref:typename:EGLImageKHR (EGLAPIENTRYP)(EGLDisplay dpy,EGLContext ctx,EGLenum target,EGLClientBuffer buffer,const EGLint * attrib_list)
PFNEGLCREATEPIXMAPSURFACEHIPROC	SDL_egl.h	/^typedef EGLSurface (EGLAPIENTRYP PFNEGLCREATEPIXMAPSURFACEHIPROC) (EGLDisplay dpy, EGLConfig con/;"	kind:t	typeref:typename:EGLSurface (EGLAPIENTRYP)(EGLDisplay dpy,EGLConfig config,struct EGLClientPixmapHI * pixmap)
PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC	SDL_egl.h	/^typedef EGLSurface (EGLAPIENTRYP PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC) (EGLDisplay dpy, EGLC/;"	kind:t	typeref:typename:EGLSurface (EGLAPIENTRYP)(EGLDisplay dpy,EGLConfig config,void * native_pixmap,const EGLint * attrib_list)
PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC	SDL_egl.h	/^typedef EGLSurface (EGLAPIENTRYP PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC) (EGLDisplay dpy, EGLC/;"	kind:t	typeref:typename:EGLSurface (EGLAPIENTRYP)(EGLDisplay dpy,EGLConfig config,void * native_window,const EGLint * attrib_list)
PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC	SDL_egl.h	/^typedef EGLStreamKHR (EGLAPIENTRYP PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC) (EGLDisplay dpy,/;"	kind:t	typeref:typename:EGLStreamKHR (EGLAPIENTRYP)(EGLDisplay dpy,EGLNativeFileDescriptorKHR file_descriptor)
PFNEGLCREATESTREAMKHRPROC	SDL_egl.h	/^typedef EGLStreamKHR (EGLAPIENTRYP PFNEGLCREATESTREAMKHRPROC) (EGLDisplay dpy, const EGLint *att/;"	kind:t	typeref:typename:EGLStreamKHR (EGLAPIENTRYP)(EGLDisplay dpy,const EGLint * attrib_list)
PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC	SDL_egl.h	/^typedef EGLSurface (EGLAPIENTRYP PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC) (EGLDisplay dpy, EGLC/;"	kind:t	typeref:typename:EGLSurface (EGLAPIENTRYP)(EGLDisplay dpy,EGLConfig config,EGLStreamKHR stream,const EGLint * attrib_list)
PFNEGLCREATESTREAMSYNCNVPROC	SDL_egl.h	/^typedef EGLSyncKHR (EGLAPIENTRYP PFNEGLCREATESTREAMSYNCNVPROC) (EGLDisplay dpy, EGLStreamKHR str/;"	kind:t	typeref:typename:EGLSyncKHR (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum type,const EGLint * attrib_list)
PFNEGLCREATESYNC64KHRPROC	SDL_egl.h	/^typedef EGLSyncKHR (EGLAPIENTRYP PFNEGLCREATESYNC64KHRPROC) (EGLDisplay dpy, EGLenum type, const/;"	kind:t	typeref:typename:EGLSyncKHR (EGLAPIENTRYP)(EGLDisplay dpy,EGLenum type,const EGLAttribKHR * attrib_list)
PFNEGLCREATESYNCKHRPROC	SDL_egl.h	/^typedef EGLSyncKHR (EGLAPIENTRYP PFNEGLCREATESYNCKHRPROC) (EGLDisplay dpy, EGLenum type, const E/;"	kind:t	typeref:typename:EGLSyncKHR (EGLAPIENTRYP)(EGLDisplay dpy,EGLenum type,const EGLint * attrib_list)
PFNEGLDESTROYIMAGEKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLDESTROYIMAGEKHRPROC) (EGLDisplay dpy, EGLImageKHR image);$/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLImageKHR image)
PFNEGLDESTROYSTREAMKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLDESTROYSTREAMKHRPROC) (EGLDisplay dpy, EGLStreamKHR strea/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLDESTROYSYNCKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLDESTROYSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync);$/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSyncKHR sync)
PFNEGLDESTROYSYNCNVPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLDESTROYSYNCNVPROC) (EGLSyncNV sync);$/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLSyncNV sync)
PFNEGLDUPNATIVEFENCEFDANDROIDPROC	SDL_egl.h	/^typedef EGLint (EGLAPIENTRYP PFNEGLDUPNATIVEFENCEFDANDROIDPROC) (EGLDisplay dpy, EGLSyncKHR sync/;"	kind:t	typeref:typename:EGLint (EGLAPIENTRYP)(EGLDisplay dpy,EGLSyncKHR sync)
PFNEGLEXPORTDMABUFIMAGEMESAPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLEXPORTDMABUFIMAGEMESAPROC) (EGLDisplay dpy, EGLImageKHR i/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLImageKHR image,int * fds,EGLint * strides,EGLint * offsets)
PFNEGLEXPORTDMABUFIMAGEQUERYMESAPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLEXPORTDMABUFIMAGEQUERYMESAPROC) (EGLDisplay dpy, EGLImage/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLImageKHR image,int * fourcc,int * num_planes,EGLuint64KHR * modifiers)
PFNEGLEXPORTDRMIMAGEMESAPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLEXPORTDRMIMAGEMESAPROC) (EGLDisplay dpy, EGLImageKHR imag/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLImageKHR image,EGLint * name,EGLint * handle,EGLint * stride)
PFNEGLFENCENVPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLFENCENVPROC) (EGLSyncNV sync);$/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLSyncNV sync)
PFNEGLGETOUTPUTLAYERSEXTPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLGETOUTPUTLAYERSEXTPROC) (EGLDisplay dpy, const EGLAttrib /;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,const EGLAttrib * attrib_list,EGLOutputLayerEXT * layers,EGLint max_layers,EGLint * num_layers)
PFNEGLGETOUTPUTPORTSEXTPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLGETOUTPUTPORTSEXTPROC) (EGLDisplay dpy, const EGLAttrib */;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,const EGLAttrib * attrib_list,EGLOutputPortEXT * ports,EGLint max_ports,EGLint * num_ports)
PFNEGLGETPLATFORMDISPLAYEXTPROC	SDL_egl.h	/^typedef EGLDisplay (EGLAPIENTRYP PFNEGLGETPLATFORMDISPLAYEXTPROC) (EGLenum platform, void *nativ/;"	kind:t	typeref:typename:EGLDisplay (EGLAPIENTRYP)(EGLenum platform,void * native_display,const EGLint * attrib_list)
PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC	SDL_egl.h	/^typedef EGLNativeFileDescriptorKHR (EGLAPIENTRYP PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC) (EGLDispl/;"	kind:t	typeref:typename:EGLNativeFileDescriptorKHR (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLGETSYNCATTRIBKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLGETSYNCATTRIBKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, E/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSyncKHR sync,EGLint attribute,EGLint * value)
PFNEGLGETSYNCATTRIBNVPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLGETSYNCATTRIBNVPROC) (EGLSyncNV sync, EGLint attribute, E/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLSyncNV sync,EGLint attribute,EGLint * value)
PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC	SDL_egl.h	/^typedef EGLuint64NV (EGLAPIENTRYP PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC) (void);$/;"	kind:t	typeref:typename:EGLuint64NV (EGLAPIENTRYP)(void)
PFNEGLGETSYSTEMTIMENVPROC	SDL_egl.h	/^typedef EGLuint64NV (EGLAPIENTRYP PFNEGLGETSYSTEMTIMENVPROC) (void);$/;"	kind:t	typeref:typename:EGLuint64NV (EGLAPIENTRYP)(void)
PFNEGLLOCKSURFACEKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLLOCKSURFACEKHRPROC) (EGLDisplay dpy, EGLSurface surface, /;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,const EGLint * attrib_list)
PFNEGLOUTPUTLAYERATTRIBEXTPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLOUTPUTLAYERATTRIBEXTPROC) (EGLDisplay dpy, EGLOutputLayer/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint attribute,EGLAttrib value)
PFNEGLOUTPUTPORTATTRIBEXTPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLOUTPUTPORTATTRIBEXTPROC) (EGLDisplay dpy, EGLOutputPortEX/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLOutputPortEXT port,EGLint attribute,EGLAttrib value)
PFNEGLPOSTSUBBUFFERNVPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLPOSTSUBBUFFERNVPROC) (EGLDisplay dpy, EGLSurface surface,/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint x,EGLint y,EGLint width,EGLint height)
PFNEGLQUERYDEVICEATTRIBEXTPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYDEVICEATTRIBEXTPROC) (EGLDeviceEXT device, EGLint at/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDeviceEXT device,EGLint attribute,EGLAttrib * value)
PFNEGLQUERYDEVICESEXTPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYDEVICESEXTPROC) (EGLint max_devices, EGLDeviceEXT *d/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLint max_devices,EGLDeviceEXT * devices,EGLint * num_devices)
PFNEGLQUERYDEVICESTRINGEXTPROC	SDL_egl.h	/^typedef const char *(EGLAPIENTRYP PFNEGLQUERYDEVICESTRINGEXTPROC) (EGLDeviceEXT device, EGLint n/;"	kind:t	typeref:typename:const char * (EGLAPIENTRYP)(EGLDeviceEXT device,EGLint name)
PFNEGLQUERYDISPLAYATTRIBEXTPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYDISPLAYATTRIBEXTPROC) (EGLDisplay dpy, EGLint attrib/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLint attribute,EGLAttrib * value)
PFNEGLQUERYNATIVEDISPLAYNVPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYNATIVEDISPLAYNVPROC) (EGLDisplay dpy, EGLNativeDispl/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLNativeDisplayType * display_id)
PFNEGLQUERYNATIVEPIXMAPNVPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYNATIVEPIXMAPNVPROC) (EGLDisplay dpy, EGLSurface surf/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surf,EGLNativePixmapType * pixmap)
PFNEGLQUERYNATIVEWINDOWNVPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYNATIVEWINDOWNVPROC) (EGLDisplay dpy, EGLSurface surf/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surf,EGLNativeWindowType * window)
PFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC) (EGLDisplay dpy, EGLOutput/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint attribute,EGLAttrib * value)
PFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC	SDL_egl.h	/^typedef const char *(EGLAPIENTRYP PFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC) (EGLDisplay dpy, EGLOutpu/;"	kind:t	typeref:typename:const char * (EGLAPIENTRYP)(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint name)
PFNEGLQUERYOUTPUTPORTATTRIBEXTPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYOUTPUTPORTATTRIBEXTPROC) (EGLDisplay dpy, EGLOutputP/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLOutputPortEXT port,EGLint attribute,EGLAttrib * value)
PFNEGLQUERYOUTPUTPORTSTRINGEXTPROC	SDL_egl.h	/^typedef const char *(EGLAPIENTRYP PFNEGLQUERYOUTPUTPORTSTRINGEXTPROC) (EGLDisplay dpy, EGLOutput/;"	kind:t	typeref:typename:const char * (EGLAPIENTRYP)(EGLDisplay dpy,EGLOutputPortEXT port,EGLint name)
PFNEGLQUERYSTREAMKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSTREAMKHRPROC) (EGLDisplay dpy, EGLStreamKHR stream,/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLint * value)
PFNEGLQUERYSTREAMTIMEKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSTREAMTIMEKHRPROC) (EGLDisplay dpy, EGLStreamKHR str/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLTimeKHR * value)
PFNEGLQUERYSTREAMU64KHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSTREAMU64KHRPROC) (EGLDisplay dpy, EGLStreamKHR stre/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLuint64KHR * value)
PFNEGLQUERYSURFACE64KHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSURFACE64KHRPROC) (EGLDisplay dpy, EGLSurface surfac/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint attribute,EGLAttribKHR * value)
PFNEGLQUERYSURFACEPOINTERANGLEPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLQUERYSURFACEPOINTERANGLEPROC) (EGLDisplay dpy, EGLSurface/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint attribute,void ** value)
PFNEGLSETBLOBCACHEFUNCSANDROIDPROC	SDL_egl.h	/^typedef void (EGLAPIENTRYP PFNEGLSETBLOBCACHEFUNCSANDROIDPROC) (EGLDisplay dpy, EGLSetBlobFuncAN/;"	kind:t	typeref:typename:void (EGLAPIENTRYP)(EGLDisplay dpy,EGLSetBlobFuncANDROID set,EGLGetBlobFuncANDROID get)
PFNEGLSETDAMAGEREGIONKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSETDAMAGEREGIONKHRPROC) (EGLDisplay dpy, EGLSurface surfa/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint * rects,EGLint n_rects)
PFNEGLSIGNALSYNCKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSIGNALSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, EGLe/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSyncKHR sync,EGLenum mode)
PFNEGLSIGNALSYNCNVPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSIGNALSYNCNVPROC) (EGLSyncNV sync, EGLenum mode);$/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLSyncNV sync,EGLenum mode)
PFNEGLSTREAMATTRIBKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMATTRIBKHRPROC) (EGLDisplay dpy, EGLStreamKHR stream/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLint value)
PFNEGLSTREAMCONSUMERACQUIREKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMCONSUMERACQUIREKHRPROC) (EGLDisplay dpy, EGLStreamK/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC) (EGLDisplay dpy, /;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLSTREAMCONSUMEROUTPUTEXTPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMCONSUMEROUTPUTEXTPROC) (EGLDisplay dpy, EGLStreamKH/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream,EGLOutputLayerEXT layer)
PFNEGLSTREAMCONSUMERRELEASEKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSTREAMCONSUMERRELEASEKHRPROC) (EGLDisplay dpy, EGLStreamK/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLSWAPBUFFERSREGION2NOKPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSWAPBUFFERSREGION2NOKPROC) (EGLDisplay dpy, EGLSurface su/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint numRects,const EGLint * rects)
PFNEGLSWAPBUFFERSREGIONNOKPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSWAPBUFFERSREGIONNOKPROC) (EGLDisplay dpy, EGLSurface sur/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint numRects,const EGLint * rects)
PFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC) (EGLDisplay dpy, EGLSurface/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint * rects,EGLint n_rects)
PFNEGLSWAPBUFFERSWITHDAMAGEKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLSWAPBUFFERSWITHDAMAGEKHRPROC) (EGLDisplay dpy, EGLSurface/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface,EGLint * rects,EGLint n_rects)
PFNEGLUNLOCKSURFACEKHRPROC	SDL_egl.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLUNLOCKSURFACEKHRPROC) (EGLDisplay dpy, EGLSurface surface/;"	kind:t	typeref:typename:EGLBoolean (EGLAPIENTRYP)(EGLDisplay dpy,EGLSurface surface)
PFNEGLWAITSYNCKHRPROC	SDL_egl.h	/^typedef EGLint (EGLAPIENTRYP PFNEGLWAITSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, EGLint fla/;"	kind:t	typeref:typename:EGLint (EGLAPIENTRYP)(EGLDisplay dpy,EGLSyncKHR sync,EGLint flags)
PFNGLACCUMXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACCUMXOESPROC) (GLenum op, GLfixed value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum op,GLfixed value)
PFNGLACTIVEPROGRAMEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLACTIVESHADERPROGRAMEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLACTIVESHADERPROGRAMEXTPROC) (GLuint pipeline, GLuint program);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint pipeline,GLuint program)
PFNGLACTIVESHADERPROGRAMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLuint program)
PFNGLACTIVESTENCILFACEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face)
PFNGLACTIVETEXTUREARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVETEXTUREARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVETEXTUREPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVETEXTUREPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVEVARYINGNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLALPHAFRAGMENTOP1ATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLALPHAFRAGMENTOP2ATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLALPHAFRAGMENTOP3ATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLALPHAFUNCQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLALPHAFUNCQCOMPROC) (GLenum func, GLclampf ref);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum func,GLclampf ref)
PFNGLALPHAFUNCXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLALPHAFUNCXOESPROC) (GLenum func, GLfixed ref);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum func,GLfixed ref)
PFNGLAPPLYTEXTUREEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLAREPROGRAMSRESIDENTNVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs,/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLsizei n,const GLuint * programs,GLboolean * residences)
PFNGLARETEXTURESRESIDENTEXTPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLsizei n,const GLuint * textures,GLboolean * residences)
PFNGLARRAYELEMENTEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint i)
PFNGLARRAYOBJECTATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum array,GLint size,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLASYNCMARKERSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint marker)
PFNGLATTACHOBJECTARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLhandleARB obj)
PFNGLATTACHSHADERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLBEGINCONDITIONALRENDERNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINCONDITIONALRENDERNVXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVXPROC) (GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBEGINCONDITIONALRENDERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINFRAGMENTSHADERATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLBEGINOCCLUSIONQUERYNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBEGINPERFMONITORAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint monitor)
PFNGLBEGINPERFMONITORAMDPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint monitor)
PFNGLBEGINPERFQUERYINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLBEGINQUERYARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINQUERYEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBEGINQUERYEXTPROC) (GLenum target, GLuint id);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINQUERYINDEXEDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint id)
PFNGLBEGINQUERYPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINVERTEXSHADEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLBEGINVIDEOCAPTURENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot)
PFNGLBINDATTRIBLOCATIONARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, c/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,const GLcharARB * name)
PFNGLBINDATTRIBLOCATIONPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,const GLchar * name)
PFNGLBINDBUFFERARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERBASEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFEROFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFEROFFSETNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERRANGEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERSBASEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, c/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers)
PFNGLBINDBUFFERSRANGEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizeiptr * sizes)
PFNGLBINDFRAGDATALOCATIONEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumbe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLch/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAGMENTSHADERATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBINDFRAMEBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDFRAMEBUFFERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDIMAGETEXTUREEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLint format)
PFNGLBINDIMAGETEXTUREPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)
PFNGLBINDIMAGETEXTURESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint */;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDLIGHTPARAMETEREXTPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLenum light,GLenum value)
PFNGLBINDMATERIALPARAMETEREXTPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLenum face,GLenum value)
PFNGLBINDMULTITEXTUREEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint tex/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLuint texture)
PFNGLBINDPARAMETEREXTPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLenum value)
PFNGLBINDPROGRAMARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint program)
PFNGLBINDPROGRAMNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDPROGRAMPIPELINEEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBINDPROGRAMPIPELINEEXTPROC) (GLuint pipeline);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint pipeline)
PFNGLBINDPROGRAMPIPELINEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLBINDRENDERBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDRENDERBUFFERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDSAMPLERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint sampler)
PFNGLBINDSAMPLERSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *sampl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * samplers)
PFNGLBINDTEXGENPARAMETEREXTPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum va/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLenum unit,GLenum coord,GLenum value)
PFNGLBINDTEXTUREEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint texture)
PFNGLBINDTEXTURESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLenum unit,GLenum value)
PFNGLBINDTRANSFORMFEEDBACKNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDTRANSFORMFEEDBACKPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDVERTEXARRAYAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXARRAYOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBINDVERTEXARRAYOESPROC) (GLuint array);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint array)
PFNGLBINDVERTEXARRAYPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXBUFFERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLBINDVERTEXBUFFERSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint */;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
PFNGLBINDVERTEXSHADEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLintptrARB offset)
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLenum target,GLuint texture)
PFNGLBINORMAL3BEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbyte bx,GLbyte by,GLbyte bz)
PFNGLBINORMAL3BVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLBINORMAL3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble bx,GLdouble by,GLdouble bz)
PFNGLBINORMAL3DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLBINORMAL3FEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat bx,GLfloat by,GLfloat bz)
PFNGLBINORMAL3FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLBINORMAL3IEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint bx,GLint by,GLint bz)
PFNGLBINORMAL3IVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLBINORMAL3SEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLshort bx,GLshort by,GLshort bz)
PFNGLBINORMAL3SVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLBINORMALPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLBITMAPXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBITMAPXOESPROC) (GLsizei width, GLsizei height, GLfixed xorig, GLfi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei width,GLsizei height,GLfixed xorig,GLfixed yorig,GLfixed xmove,GLfixed ymove,const GLubyte * bitmap)
PFNGLBLENDBARRIERNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLBLENDCOLOREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLfloat red, GLfloat green, GLfloat blue, GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDCOLORPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDCOLORXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLBLENDEQUATIONEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONIARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONINDEXEDAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONSEPARATEATIPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEATIPROC) (GLenum modeRGB, GLenum modeA);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeA)
PFNGLBLENDEQUATIONSEPARATEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum mod/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDFUNCIARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCINDEXEDAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCSEPARATEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEIARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRG/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEINGRPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDPARAMETERINVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLBLITFRAMEBUFFERANGLEPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBLITFRAMEBUFFERANGLEPROC) (GLint srcX0, GLint srcY0, GLint srcX1/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFERNVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLBLITFRAMEBUFFERNVPROC) (GLint srcX0, GLint srcY0, GLint srcX1, G/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBUFFERADDRESSRANGENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLuint64EXT address,GLsizeiptr length)
PFNGLBUFFERDATAARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const void */;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptrARB size,const void * data,GLenum usage)
PFNGLBUFFERDATAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const void * data,GLenum usage)
PFNGLBUFFERPARAMETERIAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLBUFFERSTORAGEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *dat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLBUFFERSUBDATAARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeipt/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,const void * data)
PFNGLBUFFERSUBDATAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	kind:t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCHECKFRAMEBUFFERSTATUSPROC	SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	kind:t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum t/;"	kind:t	typeref:typename:GLenum (APIENTRYP)(GLuint framebuffer,GLenum target)
PFNGLCLAMPCOLORARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLAMPCOLORPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLEARACCUMXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARACCUMXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCLEARBUFFERDATAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERFIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
PFNGLCLEARBUFFERFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLfloat * value)
PFNGLCLEARBUFFERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLint * value)
PFNGLCLEARBUFFERSUBDATAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERUIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLuint * value)
PFNGLCLEARCOLORIIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alp/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue,GLint alpha)
PFNGLCLEARCOLORIUIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue,GLuint alpha)
PFNGLCLEARCOLORXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCLEARDEPTHDNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble depth)
PFNGLCLEARDEPTHFOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFOESPROC) (GLclampf depth);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLclampf depth)
PFNGLCLEARDEPTHFPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat d)
PFNGLCLEARDEPTHXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHXOESPROC) (GLfixed depth);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed depth)
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalform/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLsizeiptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXIMAGEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXSUBIMAGEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * data)
PFNGLCLIENTACTIVETEXTUREARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVETEXTUREARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVETEXTUREPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream)
PFNGLCLIENTATTRIBDEFAULTEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLCLIENTWAITSYNCAPPLEPROC	SDL_opengles2_gl2ext.h	/^typedef GLenum (GL_APIENTRYP PFNGLCLIENTWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuin/;"	kind:t	typeref:typename:GLenum (GL_APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLCLIENTWAITSYNCPROC	SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 time/;"	kind:t	typeref:typename:GLenum (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLCLIPPLANEFOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat *equation);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum plane,const GLfloat * equation)
PFNGLCLIPPLANEXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCLIPPLANEXOESPROC) (GLenum plane, const GLfixed *equation);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum plane,const GLfixed * equation)
PFNGLCOLOR3FVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR3FVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * c,const GLfloat * v)
PFNGLCOLOR3HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
PFNGLCOLOR3HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLCOLOR3XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3XOESPROC) (GLfixed red, GLfixed green, GLfixed blue);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue)
PFNGLCOLOR3XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3XVOESPROC) (const GLfixed *components);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * components)
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat */;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLCOLOR4HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue,GLhalfNV alpha)
PFNGLCOLOR4HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLCOLOR4UBVERTEX2FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte /;"	kind:t	typeref:typename:void (APIENTRYP)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y)
PFNGLCOLOR4UBVERTEX2FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4UBVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte /;"	kind:t	typeref:typename:void (APIENTRYP)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4UBVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4XOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed /;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCOLOR4XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4XVOESPROC) (const GLfixed *components);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * components)
PFNGLCOLORFORMATNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLCOLORFRAGMENTOP1ATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLCOLORFRAGMENTOP2ATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLCOLORFRAGMENTOP3ATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLCOLORMASKINDEXEDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORMASKIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORP3UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP3UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOLORP4UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP4UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOLORPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLCOLORPOINTERLISTIBMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, co/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLCOLORPOINTERVINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const void **poin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLCOLORSUBTABLEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORSUBTABLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORTABLEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei w/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalFormat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOLORTABLEPARAMETERFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERFVSGIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPARAMETERIVSGIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei widt/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOLORTABLESGIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei w/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOMBINERINPUTNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLCOMBINEROUTPUTNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutpu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum abOutput,GLenum cdOutput,GLenum sumOutput,GLenum scale,GLenum bias,GLboolean abDotProduct,GLboolean cdDotProduct,GLboolean muxSum)
PFNGLCOMBINERPARAMETERFNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLCOMBINERPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLCOMBINERPARAMETERINVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLCOMBINERPARAMETERIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum pname,const GLfloat * params)
PFNGLCOMPILESHADERARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB shaderObj)
PFNGLCOMPILESHADERINCLUDEARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * path,const GLint * length)
PFNGLCOMPILESHADERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum in/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum inter/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum inter/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum in/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum inter/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum inter/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum in/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DOESPROC) (GLenum target, GLint level, GLenum/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum inter/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum inter/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xof/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xof/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xof/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xof/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLi/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xof/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xof/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCONVOLUTIONFILTER1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER1DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONPARAMETERFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat pa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCONVOLUTIONPARAMETERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCONVOLUTIONPARAMETERXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLCONVOLUTIONPARAMETERXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, const /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLCOPYBUFFERSUBDATAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLCOPYCOLORSUBTABLEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORSUBTABLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLESGIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalform/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalform/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYCONVOLUTIONFILTER2DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYIMAGESUBDATANVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint sr/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
PFNGLCOPYIMAGESUBDATAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYPATHNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint srcPath)
PFNGLCOPYTEXIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internal/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internal/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOPYTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xof/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint le/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint le/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXTURELEVELSAPPLEPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOPYTEXTURELEVELSAPPLEPROC) (GLuint destinationTexture, GLuint s/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint destinationTexture,GLuint sourceTexture,GLint sourceBaseLevel,GLsizei sourceLevelCount)
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOVERAGEMASKNVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOVERAGEMASKNVPROC) (GLboolean mask);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLboolean mask)
PFNGLCOVERAGEOPERATIONNVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLCOVERAGEOPERATIONNVPROC) (GLenum operation);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum operation)
PFNGLCOVERFILLPATHINSTANCEDNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameTyp/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERFILLPATHNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum coverMode)
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameT/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERSTROKEPATHNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum coverMode)
PFNGLCREATEPERFQUERYINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint * queryHandle)
PFNGLCREATEPROGRAMOBJECTARBPROC	SDL_opengl_glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	kind:t	typeref:typename:GLhandleARB (APIENTRYP)(void)
PFNGLCREATEPROGRAMPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(void)
PFNGLCREATESHADEROBJECTARBPROC	SDL_opengl_glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	kind:t	typeref:typename:GLhandleARB (APIENTRYP)(GLenum shaderType)
PFNGLCREATESHADERPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLenum type)
PFNGLCREATESHADERPROGRAMEXTPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);$/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLenum type,const GLchar * string)
PFNGLCREATESHADERPROGRAMVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef GLuint (GL_APIENTRYP PFNGLCREATESHADERPROGRAMVEXTPROC) (GLenum type, GLsizei count, cons/;"	kind:t	typeref:typename:GLuint (GL_APIENTRYP)(GLenum type,GLsizei count,const GLchar ** strings)
PFNGLCREATESHADERPROGRAMVPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLch/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLenum type,GLsizei count,const GLchar * const * strings)
PFNGLCREATESYNCFROMCLEVENTARBPROC	SDL_opengl_glext.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struc/;"	kind:t	typeref:typename:GLsync (APIENTRYP)(struct _cl_context * context,struct _cl_event * event,GLbitfield flags)
PFNGLCULLPARAMETERDVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLdouble * params)
PFNGLCULLPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLCURRENTPALETTEMATRIXARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint index)
PFNGLDEBUGMESSAGECALLBACKAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, void *userPa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLDEBUGPROCAMD callback,void * userParam)
PFNGLDEBUGMESSAGECALLBACKARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void */;"	kind:t	typeref:typename:void (APIENTRYP)(GLDEBUGPROCARB callback,const void * userParam)
PFNGLDEBUGMESSAGECALLBACKKHRPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDEBUGMESSAGECALLBACKKHRPROC) (GLDEBUGPROCKHR callback, const voi/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLDEBUGPROCKHR callback,const void * userParam)
PFNGLDEBUGMESSAGECALLBACKPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userPa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLDEBUGPROC callback,const void * userParam)
PFNGLDEBUGMESSAGECONTROLARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum sev/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGECONTROLKHRPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDEBUGMESSAGECONTROLKHRPROC) (GLenum source, GLenum type, GLenum /;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGECONTROLPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEENABLEAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum category,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEINSERTAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum category,GLenum severity,GLuint id,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTKHRPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDEBUGMESSAGEINSERTKHRPROC) (GLenum source, GLenum type, GLuint i/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEFORMATIONMAP3DSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,GLdouble w1,GLdouble w2,GLint wstride,GLint worder,const GLdouble * points)
PFNGLDEFORMATIONMAP3FSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,GLfloat w1,GLfloat w2,GLint wstride,GLint worder,const GLfloat * points)
PFNGLDEFORMSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLDELETEASYNCMARKERSSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint marker,GLsizei range)
PFNGLDELETEBUFFERSARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETEBUFFERSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETEFENCESAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFENCESNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFENCESNVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFRAGMENTSHADERATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDELETEFRAMEBUFFERSEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETEFRAMEBUFFERSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETENAMEDSTRINGARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLDELETENAMESAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint *n/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint num,const GLuint * names)
PFNGLDELETEOBJECTARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB obj)
PFNGLDELETEOCCLUSIONQUERIESNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEPATHSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei range)
PFNGLDELETEPERFMONITORSAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLDELETEPERFMONITORSAMDPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLDELETEPERFQUERYINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLDELETEPROGRAMPIPELINESEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEPROGRAMPIPELINESEXTPROC) (GLsizei n, const GLuint *pipelin/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,const GLuint * pipelines)
PFNGLDELETEPROGRAMPIPELINESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * pipelines)
PFNGLDELETEPROGRAMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLDELETEPROGRAMSARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLDELETEPROGRAMSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLDELETEQUERIESARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEQUERIESEXTPROC) (GLsizei n, const GLuint *ids);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETERENDERBUFFERSEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETERENDERBUFFERSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETESAMPLERSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * samplers)
PFNGLDELETESHADERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLDELETESYNCAPPLEPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETESYNCAPPLEPROC) (GLsync sync);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsync sync)
PFNGLDELETESYNCPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsync sync)
PFNGLDELETETEXTURESEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures)
PFNGLDELETETRANSFORMFEEDBACKSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETETRANSFORMFEEDBACKSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEVERTEXARRAYSAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXARRAYSOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEVERTEXARRAYSOESPROC) (GLsizei n, const GLuint *arrays);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXARRAYSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXSHADEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDEPTHBOUNDSDNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble zmin,GLdouble zmax)
PFNGLDEPTHBOUNDSEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLclampd zmin,GLclampd zmax)
PFNGLDEPTHRANGEARRAYVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLdouble * v)
PFNGLDEPTHRANGEDNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble zNear,GLdouble zFar)
PFNGLDEPTHRANGEFOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLclampf n,GLclampf f)
PFNGLDEPTHRANGEFPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat n,GLfloat f)
PFNGLDEPTHRANGEINDEXEDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble n,GLdouble f)
PFNGLDEPTHRANGEXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEXOESPROC) (GLfixed n, GLfixed f);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed n,GLfixed f)
PFNGLDETACHOBJECTARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attache/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLhandleARB attachedObj)
PFNGLDETACHSHADERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLDETAILTEXFUNCSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *po/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLDISABLECLIENTSTATEIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLDISABLEDRIVERCONTROLQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDISABLEDRIVERCONTROLQCOMPROC) (GLuint driverControl);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint driverControl)
PFNGLDISABLEINDEXEDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLDISABLEVERTEXARRAYEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum array)
PFNGLDISABLEVERTEXATTRIBAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname)
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISABLEVERTEXATTRIBARRAYPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISCARDFRAMEBUFFEREXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDISCARDFRAMEBUFFEREXTPROC) (GLenum target, GLsizei numAttachment/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_g/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z)
PFNGLDISPATCHCOMPUTEINDIRECTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLintptr indirect)
PFNGLDISPATCHCOMPUTEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)
PFNGLDRAWARRAYSEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWARRAYSINDIRECTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect)
PFNGLDRAWARRAYSINSTANCEDANGLEPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWARRAYSINSTANCEDANGLEPROC) (GLenum mode, GLint first, GLsizei/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei coun/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWARRAYSINSTANCEDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei coun/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint start,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDNVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWARRAYSINSTANCEDNVPROC) (GLenum mode, GLint first, GLsizei co/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)
PFNGLDRAWBUFFERSARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWBUFFERSEXTPROC) (GLsizei n, const GLenum *bufs);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSINDEXEDEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWBUFFERSINDEXEDEXTPROC) (GLint n, const GLenum *location, con/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLint n,const GLenum * location,const GLint * indices)
PFNGLDRAWBUFFERSNVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWBUFFERSNVPROC) (GLsizei n, const GLenum *bufs);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWELEMENTARRAYAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWELEMENTARRAYATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count)
PFNGLDRAWELEMENTSBASEVERTEXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum typ/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWELEMENTSINDIRECTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *in/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect)
PFNGLDRAWELEMENTSINSTANCEDANGLEPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWELEMENTSINSTANCEDANGLEPROC) (GLenum mode, GLsizei count, GLe/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex)
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDNVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWELEMENTSINSTANCEDNVPROC) (GLenum mode, GLsizei count, GLenum/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount)
PFNGLDRAWMESHARRAYSSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei width)
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLint first,GLsizei count)
PFNGLDRAWRANGEELEMENTARRAYATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint en/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count)
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWRANGEELEMENTSEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWRANGEELEMENTSPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid * indices)
PFNGLDRAWRANGEELEMENTSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWTEXTURENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWTEXTURENVPROC) (GLuint texture, GLuint sampler, GLfloat x0, GLf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsize/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint st/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream)
PFNGLEDGEFLAGFORMATNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei stride)
PFNGLEDGEFLAGPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei stride,GLsizei count,const GLboolean * pointer)
PFNGLEDGEFLAGPOINTERLISTIBMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean **pointe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint stride,const GLboolean ** pointer,GLint ptrstride)
PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC) (GLenum target, GLeglImag/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLeglImageOES image)
PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC) (GLenum target, GLeglI/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLeglImageOES image)
PFNGLEGLIMAGETARGETTEXTURE2DOESPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXTURE2DOESPROC) (GLenum target, GLeglImageOES image/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLeglImageOES image)
PFNGLEGLIMAGETARGETTEXTURE2DOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEGLIMAGETARGETTEXTURE2DOESPROC) (GLenum target, GLeglImageOES im/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLeglImageOES image)
PFNGLELEMENTPOINTERAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const void *pointer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const void * pointer)
PFNGLELEMENTPOINTERATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const void *pointer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const void * pointer)
PFNGLENABLECLIENTSTATEIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLENABLEDRIVERCONTROLQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENABLEDRIVERCONTROLQCOMPROC) (GLuint driverControl);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint driverControl)
PFNGLENABLEINDEXEDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLENABLEVERTEXARRAYEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum array)
PFNGLENABLEVERTEXATTRIBAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname)
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENABLEVERTEXATTRIBARRAYPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENDCONDITIONALRENDERNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDCONDITIONALRENDERNVXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVXPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDCONDITIONALRENDERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDFRAGMENTSHADERATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDOCCLUSIONQUERYNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDPERFMONITORAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint monitor)
PFNGLENDPERFMONITORAMDPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint monitor)
PFNGLENDPERFQUERYINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLENDQUERYARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDQUERYEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENDQUERYEXTPROC) (GLenum target);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target)
PFNGLENDQUERYINDEXEDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENDQUERYPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDTILINGQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLENDTILINGQCOMPROC) (GLbitfield preserveMask);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLbitfield preserveMask)
PFNGLENDTRANSFORMFEEDBACKEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDTRANSFORMFEEDBACKNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDTRANSFORMFEEDBACKPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDVERTEXSHADEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDVIDEOCAPTURENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot)
PFNGLEVALCOORD1XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1XOESPROC) (GLfixed u);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed u)
PFNGLEVALCOORD1XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1XVOESPROC) (const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLEVALCOORD2XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2XOESPROC) (GLfixed u, GLfixed v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed u,GLfixed v)
PFNGLEVALCOORD2XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2XVOESPROC) (const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLEVALMAPSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum mode)
PFNGLEXECUTEPROGRAMNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *par/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,const GLfloat * params)
PFNGLEXTGETBUFFERPOINTERVQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETBUFFERPOINTERVQCOMPROC) (GLenum target, GLvoid **params);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLvoid ** params)
PFNGLEXTGETBUFFERSQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETBUFFERSQCOMPROC) (GLuint *buffers, GLint maxBuffers, GLint/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint * buffers,GLint maxBuffers,GLint * numBuffers)
PFNGLEXTGETFRAMEBUFFERSQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETFRAMEBUFFERSQCOMPROC) (GLuint *framebuffers, GLint maxFram/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint * framebuffers,GLint maxFramebuffers,GLint * numFramebuffers)
PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC) (GLuint program, GLenum shade/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLenum shadertype,GLchar * source,GLint * length)
PFNGLEXTGETPROGRAMSQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETPROGRAMSQCOMPROC) (GLuint *programs, GLint maxPrograms, GL/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint * programs,GLint maxPrograms,GLint * numPrograms)
PFNGLEXTGETRENDERBUFFERSQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETRENDERBUFFERSQCOMPROC) (GLuint *renderbuffers, GLint maxRe/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint * renderbuffers,GLint maxRenderbuffers,GLint * numRenderbuffers)
PFNGLEXTGETSHADERSQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETSHADERSQCOMPROC) (GLuint *shaders, GLint maxShaders, GLint/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint * shaders,GLint maxShaders,GLint * numShaders)
PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC) (GLuint texture, GLenum face,/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint texture,GLenum face,GLint level,GLenum pname,GLint * params)
PFNGLEXTGETTEXSUBIMAGEQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXSUBIMAGEQCOMPROC) (GLenum target, GLint level, GLint xo/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,GLvoid * texels)
PFNGLEXTGETTEXTURESQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXTURESQCOMPROC) (GLuint *textures, GLint maxTextures, GL/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint * textures,GLint maxTextures,GLint * numTextures)
PFNGLEXTISPROGRAMBINARYQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLEXTISPROGRAMBINARYQCOMPROC) (GLuint program);$/;"	kind:t	typeref:typename:GLboolean (GL_APIENTRYP)(GLuint program)
PFNGLEXTRACTCOMPONENTEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint src,GLuint num)
PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC) (GLenum target, GLenum pname/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLFEEDBACKBUFFERXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFEEDBACKBUFFERXOESPROC) (GLsizei n, GLenum type, const GLfixed *buf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLenum type,const GLfixed * buffer)
PFNGLFENCESYNCAPPLEPROC	SDL_opengles2_gl2ext.h	/^typedef GLsync (GL_APIENTRYP PFNGLFENCESYNCAPPLEPROC) (GLenum condition, GLbitfield flags);$/;"	kind:t	typeref:typename:GLsync (GL_APIENTRYP)(GLenum condition,GLbitfield flags)
PFNGLFENCESYNCPROC	SDL_opengl_glext.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	kind:t	typeref:typename:GLsync (APIENTRYP)(GLenum condition,GLbitfield flags)
PFNGLFINALCOMBINERINPUTNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum ma/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLFINISHASYNCSGIXPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLuint * markerp)
PFNGLFINISHFENCEAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLFINISHFENCENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLFINISHFENCENVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint fence)
PFNGLFINISHOBJECTAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum object,GLint name)
PFNGLFINISHTEXTURESUNXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size)
PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC) (GLenum target, GLintptr offset, /;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsize/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHPIXELDATARANGENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLFLUSHRASTERSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHSTATICDATAIBMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHSTATICDATAIBMPROC) (GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei length,void * pointer)
PFNGLFLUSHVERTEXARRAYRANGENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLFOGCOORDDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble coord)
PFNGLFOGCOORDDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble coord)
PFNGLFOGCOORDDVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * coord)
PFNGLFOGCOORDDVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * coord)
PFNGLFOGCOORDFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat coord)
PFNGLFOGCOORDFORMATNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLFOGCOORDFPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat coord)
PFNGLFOGCOORDFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * coord)
PFNGLFOGCOORDFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * coord)
PFNGLFOGCOORDHNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhalfNV fog)
PFNGLFOGCOORDHVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLhalfNV * fog)
PFNGLFOGCOORDPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGCOORDPOINTERLISTIBMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLFOGCOORDPOINTERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const void *poin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGFUNCSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLfloat * points)
PFNGLFOGXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGXOESPROC) (GLenum pname, GLfixed param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLFOGXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFOGXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * param)
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLFRAGMENTLIGHTFSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTFVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTLIGHTISGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTIVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint */;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLint * params)
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLFRAGMENTLIGHTMODELISGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLFRAGMENTMATERIALFSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfloat param)
PFNGLFRAGMENTMATERIALFVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTMATERIALISGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLint param)
PFNGLFRAGMENTMATERIALIVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLint * params)
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, cons/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLsizei n,const GLenum * bufs)
PFNGLFRAMEBUFFERPARAMETERIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERRENDERBUFFERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE1DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC) (GLenum target, GLenum a/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLsizei samples)
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC) (GLenum target, GLenum a/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLsizei samples)
PFNGLFRAMEBUFFERTEXTURE2DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTURE3DOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DOESPROC) (GLenum target, GLenum attachment, /;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTURE3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTUREARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTUREPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMETERMINATORGREMEDYPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLFRAMEZOOMSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint factor)
PFNGLFREEOBJECTBUFFERATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLFRUSTUMFOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLFRUSTUMXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLFRUSTUMXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfix/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
PFNGLGENASYNCMARKERSSGIXPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLsizei range)
PFNGLGENBUFFERSARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENBUFFERSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENERATEMIPMAPEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENERATEMIPMAPPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target)
PFNGLGENERATETEXTUREMIPMAPEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target)
PFNGLGENFENCESAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFENCESNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFENCESNVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFRAGMENTSHADERSATIPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLuint range)
PFNGLGENFRAMEBUFFERSEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENFRAMEBUFFERSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENNAMESAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint *names);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint num,GLuint * names)
PFNGLGENOCCLUSIONQUERIESNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENPATHSNVPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);$/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLsizei range)
PFNGLGENPERFMONITORSAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLGENPERFMONITORSAMDPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLGENPROGRAMPIPELINESEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENPROGRAMPIPELINESEXTPROC) (GLsizei n, GLuint *pipelines);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,GLuint * pipelines)
PFNGLGENPROGRAMPIPELINESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * pipelines)
PFNGLGENPROGRAMSARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * programs)
PFNGLGENPROGRAMSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * programs)
PFNGLGENQUERIESARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENQUERIESEXTPROC) (GLsizei n, GLuint *ids);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENRENDERBUFFERSEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENRENDERBUFFERSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENSAMPLERSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei count,GLuint * samplers)
PFNGLGENSYMBOLSEXTPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum r/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLenum datatype,GLenum storagetype,GLenum range,GLuint components)
PFNGLGENTEXTURESEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * textures)
PFNGLGENTRANSFORMFEEDBACKSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENTRANSFORMFEEDBACKSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENVERTEXARRAYSAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, GLuint *arrays);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXARRAYSOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGENVERTEXARRAYSOESPROC) (GLsizei n, GLuint *arrays);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXARRAYSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXSHADERSEXTPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLuint range)
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferI/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEATTRIBARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEATTRIBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVESUBROUTINENAMEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertyp/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values)
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadert/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVEUNIFORMARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIn/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlock/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
PFNGLGETACTIVEUNIFORMNAMEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
PFNGLGETACTIVEUNIFORMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEUNIFORMSIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, con/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
PFNGLGETACTIVEVARYINGNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufS/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETARRAYOBJECTFVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum array,GLenum pname,GLfloat * params)
PFNGLGETARRAYOBJECTIVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum array,GLenum pname,GLint * params)
PFNGLGETATTACHEDOBJECTSARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLsizei maxCount,GLsizei * count,GLhandleARB * obj)
PFNGLGETATTACHEDSHADERSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * shaders)
PFNGLGETATTRIBLOCATIONARBPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETATTRIBLOCATIONPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETBOOLEANINDEXEDVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBOOLEANI_VPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBUFFERPARAMETERI64VPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 */;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint64 * params)
PFNGLGETBUFFERPARAMETERIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERUI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint64EXT * params)
PFNGLGETBUFFERPOINTERVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, void **para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERPOINTERVOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETBUFFERPOINTERVOESPROC) (GLenum target, GLenum pname, GLvoid */;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLenum pname,GLvoid ** params)
PFNGLGETBUFFERPOINTERVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERSUBDATAARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsize/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,void * data)
PFNGLGETBUFFERSUBDATAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr s/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETCLIPPLANEFOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat *equation);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum plane,GLfloat * equation)
PFNGLGETCLIPPLANEXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCLIPPLANEXOESPROC) (GLenum plane, GLfixed *equation);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum plane,GLfixed * equation)
PFNGLGETCOLORTABLEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * data)
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint */;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, void/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOLORTABLESGIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLint * params)
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum pname,GLfloat * params)
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum pname,GLint * params)
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum pname,GLfloat * params)
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint lod,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, void *im/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLvoid * img)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint lod,void * img)
PFNGLGETCONVOLUTIONFILTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONFILTERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum typ/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCONVOLUTIONPARAMETERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCONVOLUTIONPARAMETERXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETDEBUGMESSAGELOGAMDPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufsize,GLenum * categories,GLuint * severities,GLuint * ids,GLsizei * lengths,GLchar * message)
PFNGLGETDEBUGMESSAGELOGARBPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDEBUGMESSAGELOGKHRPROC	SDL_opengles2_gl2ext.h	/^typedef GLuint (GL_APIENTRYP PFNGLGETDEBUGMESSAGELOGKHRPROC) (GLuint count, GLsizei bufsize, GLe/;"	kind:t	typeref:typename:GLuint (GL_APIENTRYP)(GLuint count,GLsizei bufsize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDEBUGMESSAGELOGPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *s/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDETAILTEXFUNCSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat * points)
PFNGLGETDOUBLEINDEXEDVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *d/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETDOUBLEI_VEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLdouble * params)
PFNGLGETDOUBLEI_VPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETDRIVERCONTROLSQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETDRIVERCONTROLSQCOMPROC) (GLint *num, GLsizei size, GLuint *dr/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLint * num,GLsizei size,GLuint * driverControls)
PFNGLGETDRIVERCONTROLSTRINGQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETDRIVERCONTROLSTRINGQCOMPROC) (GLuint driverControl, GLsizei b/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint driverControl,GLsizei bufSize,GLsizei * length,GLchar * driverControlString)
PFNGLGETFENCEIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint fence,GLenum pname,GLint * params)
PFNGLGETFENCEIVNVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint fence,GLenum pname,GLint * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pn/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pn/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum pname,GLint * params)
PFNGLGETFIRSTPERFQUERYIDINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint * queryId)
PFNGLGETFIXEDVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFIXEDVOESPROC) (GLenum pname, GLfixed *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed * params)
PFNGLGETFLOATINDEXEDVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *dat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFLOATI_VEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * params)
PFNGLGETFLOATI_VPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFOGFUNCSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat * points)
PFNGLGETFRAGDATAINDEXPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONEXTPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);$/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *par/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLint * params)
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum att/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETGRAPHICSRESETSTATUSARBPROC	SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	kind:t	typeref:typename:GLenum (APIENTRYP)(void)
PFNGLGETGRAPHICSRESETSTATUSEXTPROC	SDL_opengles2_gl2ext.h	/^typedef GLenum (GL_APIENTRYP PFNGLGETGRAPHICSRESETSTATUSEXTPROC) (void);$/;"	kind:t	typeref:typename:GLenum (GL_APIENTRYP)(void)
PFNGLGETHANDLEARBPROC	SDL_opengl_glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	kind:t	typeref:typename:GLhandleARB (APIENTRYP)(GLenum pname)
PFNGLGETHISTOGRAMEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPARAMETERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPARAMETERXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfix/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETHISTOGRAMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETIMAGEHANDLEARBPROC	SDL_opengl_glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean /;"	kind:t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGEHANDLENVPROC	SDL_opengl_glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean l/;"	kind:t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETINFOLOGARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *le/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * infoLog)
PFNGLGETINSTRUMENTSSGIXPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	kind:t	typeref:typename:GLint (APIENTRYP)(void)
PFNGLGETINTEGER64I_VPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint64 * data)
PFNGLGETINTEGER64VAPPLEPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETINTEGER64VAPPLEPROC) (GLenum pname, GLint64 *params);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum pname,GLint64 * params)
PFNGLGETINTEGER64VPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint64 * data)
PFNGLGETINTEGERINDEXEDVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *dat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERI_VEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETINTEGERI_VEXTPROC) (GLenum target, GLuint index, GLint *data)/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERI_VPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERUI64I_VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT */;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum value,GLuint index,GLuint64EXT * result)
PFNGLGETINTEGERUI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum value,GLuint64EXT * result)
PFNGLGETINTERNALFORMATI64VPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64 * params)
PFNGLGETINTERNALFORMATIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint * params)
PFNGLGETINVARIANTBOOLEANVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *d/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETINVARIANTFLOATVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETINVARIANTINTEGERVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETLIGHTXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfixed * params)
PFNGLGETLISTPARAMETERFVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *pa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLfloat * params)
PFNGLGETLISTPARAMETERIVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLint * params)
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolea/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *d/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *d/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETMAPCONTROLPOINTSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum typ/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLboolean packed,void * points)
PFNGLGETMAPPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *par/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMAPPARAMETERIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *param/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMAPXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMAPXVOESPROC) (GLenum target, GLenum query, GLfixed *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLfixed * v)
PFNGLGETMATERIALXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfixed param)
PFNGLGETMINMAXEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETMINMAXPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *pa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPARAMETERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLen/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETMULTISAMPLEFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTISAMPLEFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTITEXENVFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXENVIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXGENDVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLdouble * params)
PFNGLGETMULTITEXGENFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXGENIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLint * params)
PFNGLGETMULTITEXIMAGEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint leve/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLuint * params)
PFNGLGETMULTITEXPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLuint64EXT * params)
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void */;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,void ** params)
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDPROGRAMIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pn/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum tar/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLdouble * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum tar/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLfloat * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum ta/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLuint * params)
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum pname,void * string)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDSTRINGARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLsizei bufSize,GLint * stringlen,GLchar * string)
PFNGLGETNAMEDSTRINGIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLenum pname,GLint * params)
PFNGLGETNCOLORTABLEARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * table)
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei b/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint lod,GLsizei bufSize,void * img)
PFNGLGETNCONVOLUTIONFILTERARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * image)
PFNGLGETNEXTPERFQUERYIDINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint * nextQueryId)
PFNGLGETNHISTOGRAMARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum forma/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNMAPDVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLdouble * v)
PFNGLGETNMAPFVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLfloat * v)
PFNGLGETNMAPIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLint * v)
PFNGLGETNMINMAXARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNPIXELMAPFVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *value/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLfloat * values)
PFNGLGETNPIXELMAPUIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *value/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLuint * values)
PFNGLGETNPIXELMAPUSVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *val/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLushort * values)
PFNGLGETNPOLYGONSTIPPLEARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei bufSize,GLubyte * pattern)
PFNGLGETNSEPARABLEFILTERARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void * row,GLsizei columnBufSize,void * column,void * span)
PFNGLGETNTEXIMAGEARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * img)
PFNGLGETNUNIFORMDVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMFVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMFVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETNUNIFORMFVEXTPROC) (GLuint program, GLint location, GLsizei b/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMIVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETNUNIFORMIVEXTPROC) (GLuint program, GLint location, GLsizei b/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMUIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei buf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETOBJECTBUFFERFVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *pa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLfloat * params)
PFNGLGETOBJECTBUFFERIVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETOBJECTLABELEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTLABELEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufS/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTLABELKHRPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETOBJECTLABELKHRPROC) (GLenum identifier, GLuint name, GLsizei /;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTLABELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTPARAMETERFVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLenum pname,GLfloat * params)
PFNGLGETOBJECTPARAMETERIVAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum objectType,GLuint name,GLenum pname,GLint * params)
PFNGLGETOBJECTPARAMETERIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLenum pname,GLint * params)
PFNGLGETOBJECTPTRLABELKHRPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETOBJECTPTRLABELKHRPROC) (const void *ptr, GLsizei bufSize, GLs/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTPTRLABELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei */;"	kind:t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOCCLUSIONQUERYIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETOCCLUSIONQUERYUIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *param/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETPATHCOLORGENFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat *valu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum pname,GLfloat * value)
PFNGLGETPATHCOLORGENIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint *value)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum pname,GLint * value)
PFNGLGETPATHCOMMANDSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLubyte * commands)
PFNGLGETPATHCOORDSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLfloat * coords)
PFNGLGETPATHDASHARRAYNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLfloat * dashArray)
PFNGLGETPATHLENGTHNVPROC	SDL_opengl_glext.h	/^typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei/;"	kind:t	typeref:typename:GLfloat (APIENTRYP)(GLuint path,GLsizei startSegment,GLsizei numSegments)
PFNGLGETPATHMETRICRANGENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint first/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbitfield metricQueryMask,GLuint firstPathName,GLsizei numPaths,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHMETRICSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbitfield metricQueryMask,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *valu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLfloat * value)
PFNGLGETPATHPARAMETERIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLint * value)
PFNGLGETPATHSPACINGNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pathListMode,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLfloat advanceScale,GLfloat kerningScale,GLenum transformType,GLfloat * returnedSpacing)
PFNGLGETPATHTEXGENFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloat */;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum pname,GLfloat * value)
PFNGLGETPATHTEXGENIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint *va/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum pname,GLint * value)
PFNGLGETPERFCOUNTERINFOINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint counterId,GLuint counterNameLength,GLchar * counterName,GLuint counterDescLength,GLchar * counterDesc,GLuint * counterOffset,GLuint * counterDataSize,GLuint * counterTypeEnum,GLuint * counterDataTypeEnum,GLuint64 * rawCounterMaxValue)
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname,/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint group,GLuint counter,GLenum pname,void * data)
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter,/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint group,GLuint counter,GLenum pname,GLvoid * data)
PFNGLGETPERFMONITORCOUNTERSAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei counterSize,GLuint * counters)
PFNGLGETPERFMONITORCOUNTERSAMDPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei counterSize,GLuint * counters)
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counte/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
PFNGLGETPERFMONITORGROUPSAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
PFNGLGETPERFMONITORGROUPSAMDPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSi/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
PFNGLGETPERFQUERYDATAINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint queryHandle,GLuint flags,GLsizei dataSize,GLvoid * data,GLuint * bytesWritten)
PFNGLGETPERFQUERYIDBYNAMEINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLchar * queryName,GLuint * queryId)
PFNGLGETPERFQUERYINFOINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint queryNameLength,GLchar * queryName,GLuint * dataSize,GLuint * noCounters,GLuint * noInstances,GLuint * capsMask)
PFNGLGETPIXELMAPXVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELMAPXVPROC) (GLenum map, GLint size, GLfixed *values);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum map,GLint size,GLfixed * values)
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * params)
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPOINTERINDEXEDVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **dat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,void ** data)
PFNGLGETPOINTERI_VEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,void ** params)
PFNGLGETPOINTERVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, void **params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,void ** params)
PFNGLGETPOINTERVKHRPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPOINTERVKHRPROC) (GLenum pname, GLvoid **params);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum pname,GLvoid ** params)
PFNGLGETPROGRAMBINARYOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPROGRAMBINARYOESPROC) (GLuint program, GLsizei bufSize, GLsiz/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,GLvoid * binary)
PFNGLGETPROGRAMBINARYPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *le/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,void * binary)
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * params)
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * params)
PFNGLGETPROGRAMINFOLOGPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *l/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMINTERFACEIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint * params)
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * params)
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * params)
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLdouble * params)
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLfloat * params)
PFNGLGETPROGRAMPARAMETERDVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLdouble * params)
PFNGLGETPROGRAMPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC) (GLuint pipeline, GLsizei bufS/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMPIPELINEIVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETPROGRAMPIPELINEIVEXTPROC) (GLuint pipeline, GLenum pname, GLi/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint pipeline,GLenum pname,GLint * params)
PFNGLGETPROGRAMPIPELINEIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *pa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLenum pname,GLint * params)
PFNGLGETPROGRAMRESOURCEINDEXPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInter/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCEIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLint * params)
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum progr/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCELOCATIONPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInt/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCENAMEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterfac/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
PFNGLGETPROGRAMSTAGEIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLenum pname,GLint * values)
PFNGLGETPROGRAMSTRINGARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, void *string/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void * string)
PFNGLGETPROGRAMSTRINGNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLubyte * program)
PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) (GLenum target, GLuint inde/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * param)
PFNGLGETQUERYINDEXEDIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETQUERYIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTI64VEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64 *param/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTI64VEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64 *pa/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTI64VPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTIVEXTPROC) (GLuint id, GLenum pname, GLint *params/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTUI64VEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64 *par/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUI64VEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64 */;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUI64VPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTUIVEXTPROC) (GLuint id, GLenum pname, GLuint *para/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETRENDERBUFFERPARAMETERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat */;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat * params)
PFNGLGETSAMPLERPARAMETERIIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIUIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLuint * params)
PFNGLGETSAMPLERPARAMETERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *pa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSEPARABLEFILTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum ty/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSEPARABLEFILTERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSHADERINFOLOGPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *len/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETSHADERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint shader,GLenum pname,GLint * params)
PFNGLGETSHADERPRECISIONFORMATPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiont/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
PFNGLGETSHADERSOURCEARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsize/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * source)
PFNGLGETSHADERSOURCEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *leng/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source)
PFNGLGETSHARPENTEXFUNCSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat * points)
PFNGLGETSTRINGIPROC	SDL_opengl_glext.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	kind:t	typeref:typename:const GLubyte * (APIENTRYP)(GLenum name,GLuint index)
PFNGLGETSUBROUTINEINDEXPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shaderty/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSYNCIVAPPLEPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETSYNCIVAPPLEPROC) (GLsync sync, GLenum pname, GLsizei bufSize,/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLGETSYNCIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLGETTEXBUMPPARAMETERFVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * param)
PFNGLGETTEXBUMPPARAMETERIVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * param)
PFNGLGETTEXENVXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXENVXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETTEXFILTERFUNCSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *w/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum filter,GLfloat * weights)
PFNGLGETTEXGENXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,GLfixed * params)
PFNGLGETTEXLEVELPARAMETERXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERXVOESPROC) (GLenum target, GLint level, GLenum /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum pname,GLfixed * params)
PFNGLGETTEXPARAMETERIIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *par/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIUIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERIUIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, voi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETTEXPARAMETERXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *pa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETTEXTUREHANDLEARBPROC	SDL_opengl_glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);$/;"	kind:t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture)
PFNGLGETTEXTUREHANDLENVPROC	SDL_opengl_glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);$/;"	kind:t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture)
PFNGLGETTEXTUREIMAGEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLen/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXTUREPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTURESAMPLERHANDLEARBPROC	SDL_opengl_glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler/;"	kind:t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLuint sampler)
PFNGLGETTEXTURESAMPLERHANDLENVPROC	SDL_opengl_glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler)/;"	kind:t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLuint sampler)
PFNGLGETTRACKMATRIXIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pnam/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint address,GLenum pname,GLint * params)
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLint * location)
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC) (GLuint shader, GLsizei bufs/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint shader,GLsizei bufsize,GLsizei * length,GLchar * source)
PFNGLGETUNIFORMBLOCKINDEXPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformB/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLuint program,const GLchar * uniformBlockName)
PFNGLGETUNIFORMBUFFERSIZEEXTPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);$/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLint location)
PFNGLGETUNIFORMDVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble * params)
PFNGLGETUNIFORMFVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLint location,GLfloat * params)
PFNGLGETUNIFORMFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat * params)
PFNGLGETUNIFORMI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT */;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT * params)
PFNGLGETUNIFORMINDICESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
PFNGLGETUNIFORMIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLint location,GLint * params)
PFNGLGETUNIFORMIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint * params)
PFNGLGETUNIFORMLOCATIONARBPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharAR/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETUNIFORMLOCATIONPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETUNIFORMOFFSETEXTPROC	SDL_opengl_glext.h	/^typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);$/;"	kind:t	typeref:typename:GLintptr (APIENTRYP)(GLuint program,GLint location)
PFNGLGETUNIFORMSUBROUTINEUIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLint location,GLuint * params)
PFNGLGETUNIFORMUI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT * params)
PFNGLGETUNIFORMUIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint * params)
PFNGLGETUNIFORMUIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint * params)
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat */;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLfloat * params)
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *pa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETVARIANTBOOLEANVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *dat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETVARIANTFLOATVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETVARIANTINTEGERVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETVARIANTPOINTERVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, void **data);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,void ** data)
PFNGLGETVARYINGLOCATIONNVPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);$/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYINTEGERVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint */;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,void ** param)
PFNGLGETVERTEXARRAYPOINTERVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,void ** param)
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBDVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *pa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *par/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *param/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBFVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *par/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBIIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIUIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *pa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIUIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *param/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *param/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBLDVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLDVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *para/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64E/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, void */;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, void **/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **po/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVIDEOCAPTUREIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint s/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLdouble * params)
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint s/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLfloat * params)
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint s/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLint * params)
PFNGLGETVIDEOI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLint64EXT * params)
PFNGLGETVIDEOIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOUI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLuint64EXT * params)
PFNGLGETVIDEOUIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint *params/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLuint * params)
PFNGLGLOBALALPHAFACTORBSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbyte factor)
PFNGLGLOBALALPHAFACTORDSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble factor)
PFNGLGLOBALALPHAFACTORFSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat factor)
PFNGLGLOBALALPHAFACTORISUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint factor)
PFNGLGLOBALALPHAFACTORSSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLshort factor)
PFNGLGLOBALALPHAFACTORUBSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLubyte factor)
PFNGLGLOBALALPHAFACTORUISUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint factor)
PFNGLGLOBALALPHAFACTORUSSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLushort factor)
PFNGLHINTPGIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint mode)
PFNGLHISTOGRAMEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalfor/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLHISTOGRAMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLIGLOOINTERFACESGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const void *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const void * params)
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, cons/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, cons/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLIMPORTSYNCEXTPROC	SDL_opengl_glext.h	/^typedef GLsync (APIENTRYP PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr external_/;"	kind:t	typeref:typename:GLsync (APIENTRYP)(GLenum external_sync_type,GLintptr external_sync,GLbitfield flags)
PFNGLINDEXFORMATNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLINDEXFUNCEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum func,GLclampf ref)
PFNGLINDEXMATERIALEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLINDEXPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, c/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLINDEXPOINTERLISTIBMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLINDEXXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXXOESPROC) (GLfixed component);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed component)
PFNGLINDEXXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINDEXXVOESPROC) (const GLfixed *component);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * component)
PFNGLINSERTCOMPONENTEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint src,GLuint num)
PFNGLINSERTEVENTMARKEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLINSERTEVENTMARKEREXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker)/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLINSTRUMENTSBUFFERSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei size,GLint * buffer)
PFNGLINTERPOLATEPATHSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint pathA,GLuint pathB,GLfloat weight)
PFNGLINVALIDATEBUFFERDATAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLINVALIDATEBUFFERSUBDATAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLINVALIDATEFRAMEBUFFERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATESUBFRAMEBUFFERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachment/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATETEXIMAGEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level)
PFNGLINVALIDATETEXSUBIMAGEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoff/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)
PFNGLISASYNCMARKERSGIXPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint marker)
PFNGLISBUFFERARBPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISBUFFERPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISBUFFERRESIDENTNVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLISENABLEDINDEXEDEXTPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISENABLEDIPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISFENCEAPPLEPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLISFENCENVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLISFENCENVPROC	SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	kind:t	typeref:typename:GLboolean (GL_APIENTRYP)(GLuint fence)
PFNGLISFRAMEBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISFRAMEBUFFERPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISIMAGEHANDLERESIDENTARBPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISIMAGEHANDLERESIDENTNVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISNAMEAMDPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLenum identifier,GLuint name)
PFNGLISNAMEDBUFFERRESIDENTNVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISNAMEDSTRINGARBPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLISOBJECTBUFFERATIPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISOCCLUSIONQUERYNVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISPATHNVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint path)
PFNGLISPOINTINFILLPATHNVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x,/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLuint mask,GLfloat x,GLfloat y)
PFNGLISPOINTINSTROKEPATHNVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y)/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLfloat x,GLfloat y)
PFNGLISPROGRAMARBPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISPROGRAMNVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISPROGRAMPIPELINEEXTPROC	SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISPROGRAMPIPELINEEXTPROC) (GLuint pipeline);$/;"	kind:t	typeref:typename:GLboolean (GL_APIENTRYP)(GLuint pipeline)
PFNGLISPROGRAMPIPELINEPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint pipeline)
PFNGLISPROGRAMPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISQUERYARBPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISQUERYEXTPROC	SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISQUERYEXTPROC) (GLuint id);$/;"	kind:t	typeref:typename:GLboolean (GL_APIENTRYP)(GLuint id)
PFNGLISQUERYPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISRENDERBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISRENDERBUFFERPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISSAMPLERPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint sampler)
PFNGLISSHADERPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint shader)
PFNGLISSYNCAPPLEPROC	SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISSYNCAPPLEPROC) (GLsync sync);$/;"	kind:t	typeref:typename:GLboolean (GL_APIENTRYP)(GLsync sync)
PFNGLISSYNCPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLsync sync)
PFNGLISTEXTUREEXTPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint texture)
PFNGLISTEXTUREHANDLERESIDENTARBPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISTEXTUREHANDLERESIDENTNVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISTRANSFORMFEEDBACKNVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISTRANSFORMFEEDBACKPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISVARIANTENABLEDEXTPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint id,GLenum cap)
PFNGLISVERTEXARRAYAPPLEPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLISVERTEXARRAYOESPROC	SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISVERTEXARRAYOESPROC) (GLuint array);$/;"	kind:t	typeref:typename:GLboolean (GL_APIENTRYP)(GLuint array)
PFNGLISVERTEXARRAYPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint index,GLenum pname)
PFNGLLABELOBJECTEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, co/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint object,GLsizei length,const GLchar * label)
PFNGLLABELOBJECTEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length,/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum type,GLuint object,GLsizei length,const GLchar * label)
PFNGLLIGHTENVISGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLLIGHTMODELXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELXOESPROC) (GLenum pname, GLfixed param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLLIGHTMODELXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * param)
PFNGLLIGHTXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfixed param)
PFNGLLIGHTXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLIGHTXVOESPROC) (GLenum light, GLenum pname, const GLfixed *params)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLfixed * params)
PFNGLLINEWIDTHXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHXOESPROC) (GLfixed width);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed width)
PFNGLLINKPROGRAMARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLLINKPROGRAMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLLISTPARAMETERFSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLfloat param)
PFNGLLISTPARAMETERFVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,const GLfloat * params)
PFNGLLISTPARAMETERISGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLint param)
PFNGLLISTPARAMETERIVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,const GLint * params)
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLLOADMATRIXXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADMATRIXXOESPROC) (const GLfixed *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLLOADPROGRAMNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,GLsizei len,const GLubyte * program)
PFNGLLOADTRANSPOSEMATRIXDARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLLOADTRANSPOSEMATRIXDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLLOADTRANSPOSEMATRIXFARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLLOADTRANSPOSEMATRIXFPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLLOADTRANSPOSEMATRIXXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLLOCKARRAYSEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint first,GLsizei count)
PFNGLMAKEBUFFERNONRESIDENTNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLMAKEBUFFERRESIDENTNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint64 handle,GLenum access)
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint64 handle,GLenum access)
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAP1XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAP1XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint stride,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfixed u1,GLfixed u2,GLint stride,GLint order,GLfixed points)
PFNGLMAP2XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAP2XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint ustride/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfixed u1,GLfixed u2,GLint ustride,GLint uorder,GLfixed v1,GLfixed v2,GLint vstride,GLint vorder,GLfixed points)
PFNGLMAPBUFFERARBPROC	SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	kind:t	typeref:typename:void * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFEROESPROC	SDL_opengles2_gl2ext.h	/^typedef void* (GL_APIENTRYP PFNGLMAPBUFFEROESPROC) (GLenum target, GLenum access);$/;"	kind:t	typeref:typename:void * (GL_APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERPROC	SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	kind:t	typeref:typename:void * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERRANGEEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void* (GL_APIENTRYP PFNGLMAPBUFFERRANGEEXTPROC) (GLenum target, GLintptr offset, GLsizei/;"	kind:t	typeref:typename:void * (GL_APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPBUFFERRANGEPROC	SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr le/;"	kind:t	typeref:typename:void * (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPCONTROLPOINTSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLint uorder,GLint vorder,GLboolean packed,const void * points)
PFNGLMAPGRID1XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPGRID1XOESPROC) (GLint n, GLfixed u1, GLfixed u2);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint n,GLfixed u1,GLfixed u2)
PFNGLMAPGRID2XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPGRID2XOESPROC) (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint n,GLfixed u1,GLfixed u2,GLfixed v1,GLfixed v2)
PFNGLMAPNAMEDBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	kind:t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	kind:t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPOBJECTBUFFERATIPROC	SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	kind:t	typeref:typename:void * (APIENTRYP)(GLuint buffer)
PFNGLMAPPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat */;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLMAPPARAMETERIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *pa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLMAPTEXTURE2DINTELPROC	SDL_opengl_glext.h	/^typedef void *(APIENTRYP PFNGLMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level, GLbitfield ac/;"	kind:t	typeref:typename:void * (APIENTRYP)(GLuint texture,GLint level,GLbitfield access,GLint * stride,GLenum * layout)
PFNGLMAPVERTEXATTRIB1DAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points)
PFNGLMAPVERTEXATTRIB1FAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points)
PFNGLMAPVERTEXATTRIB2DAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points)
PFNGLMAPVERTEXATTRIB2FAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points)
PFNGLMATERIALXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfixed param)
PFNGLMATERIALXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATERIALXVOESPROC) (GLenum face, GLenum pname, const GLfixed *param/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLfixed * param)
PFNGLMATRIXFRUSTUMEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLMATRIXINDEXPOINTERARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLMATRIXINDEXUBVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,const GLubyte * indices)
PFNGLMATRIXINDEXUIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,const GLuint * indices)
PFNGLMATRIXINDEXUSVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,const GLushort * indices)
PFNGLMATRIXLOADDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXLOADFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXLOADIDENTITYEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXMULTDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXMULTFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXORTHOEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLMATRIXPOPEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXPUSHEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXROTATEDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLd/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXROTATEFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXSCALEDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXSCALEFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXTRANSLATEDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXTRANSLATEFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMEMORYBARRIEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMEMORYBARRIERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMINMAXEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINMAXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINSAMPLESHADINGARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMINSAMPLESHADINGPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMULTIDRAWARRAYSEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWARRAYSEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const /;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const void *indirect,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *in/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, GLintptr indirec/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsize/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, c/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount,const GLint * basevertex)
PFNGLMULTIDRAWELEMENTSEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GL/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const GLvoid ** indices,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, const /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const voi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount)
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIMODEDRAWARRAYSIBMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLenum * mode,const GLint * first,const GLsizei * count,GLsizei primcount,GLint modestride)
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *c/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLenum * mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount,GLint modestride)
PFNGLMULTITEXBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum inter/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLMULTITEXCOORD1BOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1BOESPROC) (GLenum texture, GLbyte s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s)
PFNGLMULTITEXCOORD1BVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD1DARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1DVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1FARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s)
PFNGLMULTITEXCOORD1HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD1IARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1IVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1SARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1SVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1SVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1XOESPROC) (GLenum texture, GLfixed s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s)
PFNGLMULTITEXCOORD1XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD2BOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2BOESPROC) (GLenum texture, GLbyte s, GLbyte t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t)
PFNGLMULTITEXCOORD2BVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD2DARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2DVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2FARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t)
PFNGLMULTITEXCOORD2HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD2IARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2IVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2SARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2SVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2SVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2XOESPROC) (GLenum texture, GLfixed s, GLfixed t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t)
PFNGLMULTITEXCOORD2XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD3BOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t,GLbyte r)
PFNGLMULTITEXCOORD3BVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD3DARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdoub/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3DVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3FARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLha/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r)
PFNGLMULTITEXCOORD3HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD3IARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3IVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3SARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3SVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3SVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t,GLfixed r)
PFNGLMULTITEXCOORD3XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD4BOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t,GLbyte r,GLbyte q)
PFNGLMULTITEXCOORD4BVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD4DARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdoub/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4DVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4FARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLha/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
PFNGLMULTITEXCOORD4HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD4IARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4IVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4SARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SVARBPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4SVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4SVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t,GLfixed r,GLfixed q)
PFNGLMULTITEXCOORD4XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORDP1UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP1UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP2UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP2UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP3UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP3UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP4UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP4UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum ty/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLMULTITEXENVFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXENVFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXENVIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXENVIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXGENDEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLdouble param)
PFNGLMULTITEXGENDVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLdouble * params)
PFNGLMULTITEXGENFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLfloat param)
PFNGLMULTITEXGENFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLfloat * params)
PFNGLMULTITEXGENIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLint param)
PFNGLMULTITEXGENIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLint * params)
PFNGLMULTITEXIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXPARAMETERFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXPARAMETERIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXPARAMETERIIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXPARAMETERIUIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLuint * params)
PFNGLMULTITEXPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXRENDERBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLuint renderbuffer)
PFNGLMULTITEXSUBIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLMULTMATRIXXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTMATRIXXOESPROC) (const GLfixed *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLMULTTRANSPOSEMATRIXDARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLMULTTRANSPOSEMATRIXDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLMULTTRANSPOSEMATRIXFARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLMULTTRANSPOSEMATRIXFPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLMULTTRANSPOSEMATRIXXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLNAMEDBUFFERDATAEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
PFNGLNAMEDBUFFERSTORAGEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLNAMEDBUFFERSUBDATAEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizei/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuff/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pnam/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum at/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attac/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attac/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attac/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachm/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum att/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum at/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum targe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLdouble * params)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum targe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum targe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum targ/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum targ/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum tar/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLuint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum targ/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum tar/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum ta/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLNAMEDPROGRAMSTRINGEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum f/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum inter/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderb/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDSTRINGARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLint namelen,const GLchar * name,GLint stringlen,const GLchar * string)
PFNGLNEWOBJECTBUFFERATIPROC	SDL_opengl_glext.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const void *pointer, GLenu/;"	kind:t	typeref:typename:GLuint (APIENTRYP)(GLsizei size,const void * pointer,GLenum usage)
PFNGLNORMAL3FVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLNORMAL3FVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * n,const GLfloat * v)
PFNGLNORMAL3HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhalfNV nx,GLhalfNV ny,GLhalfNV nz)
PFNGLNORMAL3HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLNORMAL3XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3XOESPROC) (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed nx,GLfixed ny,GLfixed nz)
PFNGLNORMAL3XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3XVOESPROC) (const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLNORMALFORMATNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLNORMALP3UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLNORMALP3UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLNORMALPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLNORMALPOINTERLISTIBMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLNORMALPOINTERVINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const void **pointer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const void ** pointer)
PFNGLNORMALSTREAM3BATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLbyte nx,GLbyte ny,GLbyte nz)
PFNGLNORMALSTREAM3BVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLbyte * coords)
PFNGLNORMALSTREAM3DATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble nx,GLdouble ny,GLdouble nz)
PFNGLNORMALSTREAM3DVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLNORMALSTREAM3FATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat nx,GLfloat ny,GLfloat nz)
PFNGLNORMALSTREAM3FVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLNORMALSTREAM3IATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint nx,GLint ny,GLint nz)
PFNGLNORMALSTREAM3IVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLNORMALSTREAM3SATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLsh/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort nx,GLshort ny,GLshort nz)
PFNGLNORMALSTREAM3SVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLOBJECTLABELKHRPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLOBJECTLABELKHRPROC) (GLenum identifier, GLuint name, GLsizei len/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
PFNGLOBJECTLABELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, c/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
PFNGLOBJECTPTRLABELKHRPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLOBJECTPTRLABELKHRPROC) (const void *ptr, GLsizei length, const G/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(const void * ptr,GLsizei length,const GLchar * label)
PFNGLOBJECTPTRLABELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar /;"	kind:t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei length,const GLchar * label)
PFNGLOBJECTPURGEABLEAPPLEPROC	SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum/;"	kind:t	typeref:typename:GLenum (APIENTRYP)(GLenum objectType,GLuint name,GLenum option)
PFNGLOBJECTUNPURGEABLEAPPLEPROC	SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLen/;"	kind:t	typeref:typename:GLenum (APIENTRYP)(GLenum objectType,GLuint name,GLenum option)
PFNGLORTHOFOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLORTHOXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLORTHOXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
PFNGLPASSTEXCOORDATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint dst,GLuint coord,GLenum swizzle)
PFNGLPASSTHROUGHXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPASSTHROUGHXOESPROC) (GLfixed token);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed token)
PFNGLPATCHPARAMETERFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * values)
PFNGLPATCHPARAMETERIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLPATHCOLORGENNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorForm/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum genMode,GLenum colorFormat,const GLfloat * coeffs)
PFNGLPATHCOMMANDSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyt/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOORDSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOVERDEPTHFUNCNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum func)
PFNGLPATHDASHARRAYNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei dashCount,const GLfloat * dashArray)
PFNGLPATHFOGGENNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHFOGGENNVPROC) (GLenum genMode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum genMode)
PFNGLPATHGLYPHRANGENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, con/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint firstGlyph,GLsizei numGlyphs,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHGLYPHSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLsizei numGlyphs,GLenum type,const void * charcodes,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHPARAMETERFNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLfloat value)
PFNGLPATHPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,const GLfloat * value)
PFNGLPATHPARAMETERINVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLint value)
PFNGLPATHPARAMETERIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *val/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,const GLint * value)
PFNGLPATHSTENCILDEPTHOFFSETNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat units)
PFNGLPATHSTENCILFUNCNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum func,GLint ref,GLuint mask)
PFNGLPATHSTRINGNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, cons/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum format,GLsizei length,const void * pathString)
PFNGLPATHSUBCOMMANDSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei commandStart,GLsizei commandsToDelete,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHSUBCOORDSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numC/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei coordStart,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHTEXGENNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint compon/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum genMode,GLint components,const GLfloat * coeffs)
PFNGLPAUSETRANSFORMFEEDBACKNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLPAUSETRANSFORMFEEDBACKPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLPIXELDATARANGENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, const void *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei length,const void * pointer)
PFNGLPIXELMAPXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELMAPXPROC) (GLenum map, GLint size, const GLfixed *values);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum map,GLint size,const GLfixed * values)
PFNGLPIXELSTOREXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREXPROC) (GLenum pname, GLfixed param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLPIXELTEXGENPARAMETERFSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *param/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPIXELTEXGENPARAMETERISGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPIXELTEXGENSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPIXELTRANSFERXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFERXOESPROC) (GLenum pname, GLfixed param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, con/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, con/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLPIXELZOOMXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPIXELZOOMXOESPROC) (GLfixed xfactor, GLfixed yfactor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed xfactor,GLfixed yfactor)
PFNGLPNTRIANGLESFATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPNTRIANGLESIATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTALONGPATHNVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsi/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLsizei startSegment,GLsizei numSegments,GLfloat distance,GLfloat * x,GLfloat * y,GLfloat * tangentX,GLfloat * tangentY)
PFNGLPOINTPARAMETERFARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERINVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERXVOESPROC) (GLenum pname, const GLfixed *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * params)
PFNGLPOINTSIZEXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEXOESPROC) (GLfixed size);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed size)
PFNGLPOLLASYNCSGIXPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLuint * markerp)
PFNGLPOLLINSTRUMENTSSGIXPROC	SDL_opengl_glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	kind:t	typeref:typename:GLint (APIENTRYP)(GLint * marker_p)
PFNGLPOLYGONOFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat bias)
PFNGLPOLYGONOFFSETXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETXOESPROC) (GLfixed factor, GLfixed units);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed factor,GLfixed units)
PFNGLPOPDEBUGGROUPKHRPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPOPDEBUGGROUPKHRPROC) (void);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(void)
PFNGLPOPDEBUGGROUPPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLPOPGROUPMARKEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLPOPGROUPMARKEREXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(void)
PFNGLPRESENTFRAMEDUALFILLNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPres/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLenum target1,GLuint fill1,GLenum target2,GLuint fill2,GLenum target3,GLuint fill3)
PFNGLPRESENTFRAMEKEYEDNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresent/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLuint key0,GLenum target1,GLuint fill1,GLuint key1)
PFNGLPRIMITIVERESTARTINDEXNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPRIMITIVERESTARTINDEXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPRIMITIVERESTARTNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLPRIORITIZETEXTURESEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, cons/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures,const GLclampf * priorities)
PFNGLPRIORITIZETEXTURESXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESXOESPROC) (GLsizei n, const GLuint *textures, con/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures,const GLfixed * priorities)
PFNGLPROGRAMBINARYOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMBINARYOESPROC) (GLuint program, GLenum binaryFormat, cons/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLenum binaryFormat,const GLvoid * binary,GLint length)
PFNGLPROGRAMBINARYPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum binaryFormat,const void * binary,GLsizei length)
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint bindingInde/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLfloat * params)
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint bindingInd/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLint * params)
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint bindingIn/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLuint * params)
PFNGLPROGRAMENVPARAMETER4DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdoubl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMENVPARAMETER4DVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMENVPARAMETER4FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMENVPARAMETER4FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERI4INVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMENVPARAMETERI4IVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMENVPARAMETERI4UINVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, cons/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, cons/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERI4INVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, cons/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLui/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, con/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLuby/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLub/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,const GLdouble * v)
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLuby/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLub/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,const GLfloat * v)
PFNGLPROGRAMPARAMETER4DNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMPARAMETER4DVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * v)
PFNGLPROGRAMPARAMETER4FNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMPARAMETER4FVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * v)
PFNGLPROGRAMPARAMETERIARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint valu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint valu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint v/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERS4DVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsizei c/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLdouble * v)
PFNGLPROGRAMPARAMETERS4FVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsizei c/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * v)
PFNGLPROGRAMSTRINGARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, c/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) (GLenum target, GLsizei count/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei count,const GLuint * params)
PFNGLPROGRAMUNIFORM1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x)
PFNGLPROGRAMUNIFORM1DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0)
PFNGLPROGRAMUNIFORM1DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei cou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1FEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloa/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLfloat x)
PFNGLPROGRAMUNIFORM1FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1FVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei cou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1I64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64E/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x)
PFNGLPROGRAMUNIFORM1I64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM1IEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint /;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLint x)
PFNGLPROGRAMUNIFORM1IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1IVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei cou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1UI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x)
PFNGLPROGRAMUNIFORM1UI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM1UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM1UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei co/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y)
PFNGLPROGRAMUNIFORM2DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1)
PFNGLPROGRAMUNIFORM2DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei cou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2FEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloa/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLfloat x,GLfloat y)
PFNGLPROGRAMUNIFORM2FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2FVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei cou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2I64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64E/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y)
PFNGLPROGRAMUNIFORM2I64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM2IEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint /;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLint x,GLint y)
PFNGLPROGRAMUNIFORM2IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2IVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei cou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2UI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLPROGRAMUNIFORM2UI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM2UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei co/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLPROGRAMUNIFORM3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2)
PFNGLPROGRAMUNIFORM3DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei cou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3FEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloa/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLfloat x,GLfloat y,GLfloat z)
PFNGLPROGRAMUNIFORM3FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3FVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei cou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3I64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64E/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLPROGRAMUNIFORM3I64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM3IEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint /;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLint x,GLint y,GLint z)
PFNGLPROGRAMUNIFORM3IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3IVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei cou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3UI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLPROGRAMUNIFORM3UI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM3UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei co/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMUNIFORM4DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)
PFNGLPROGRAMUNIFORM4DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei cou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4FEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloa/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMUNIFORM4FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4FVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei cou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4I64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64E/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLPROGRAMUNIFORM4I64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM4IEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint /;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMUNIFORM4IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4IVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei cou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4UI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLPROGRAMUNIFORM4UI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM4UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei co/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location,/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location,/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location,/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMUI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT value)
PFNGLPROGRAMUNIFORMUI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMVERTEXLIMITNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint limit)
PFNGLPROVOKINGVERTEXEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPROVOKINGVERTEXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLPUSHDEBUGGROUPKHRPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPUSHDEBUGGROUPKHRPROC) (GLenum source, GLuint id, GLsizei length/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
PFNGLPUSHDEBUGGROUPPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, cons/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
PFNGLPUSHGROUPMARKEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLPUSHGROUPMARKEREXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLQUERYCOUNTEREXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLQUERYCOUNTEREXTPROC) (GLuint id, GLenum target);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint id,GLenum target)
PFNGLQUERYCOUNTERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum target)
PFNGLQUERYMATRIXXOESPROC	SDL_opengl_glext.h	/^typedef GLbitfield (APIENTRYP PFNGLQUERYMATRIXXOESPROC) (GLfixed *mantissa, GLint *exponent);$/;"	kind:t	typeref:typename:GLbitfield (APIENTRYP)(GLfixed * mantissa,GLint * exponent)
PFNGLQUERYOBJECTPARAMETERUIAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLQUERYOBJECTPARAMETERUIAMDPROC) (GLenum target, GLuint id, GLenum pn/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,GLenum pname,GLuint param)
PFNGLRASTERPOS2XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2XOESPROC) (GLfixed x, GLfixed y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y)
PFNGLRASTERPOS2XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2XVOESPROC) (const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLRASTERPOS3XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLRASTERPOS3XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3XVOESPROC) (const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLRASTERPOS4XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4XOESPROC) (GLfixed x, GLfixed y, GLfixed z, GLfixed w);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z,GLfixed w)
PFNGLRASTERPOS4XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4XVOESPROC) (const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLREADBUFFERINDEXEDEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLREADBUFFERINDEXEDEXTPROC) (GLenum src, GLint index);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum src,GLint index)
PFNGLREADBUFFERNVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLREADBUFFERNVPROC) (GLenum mode);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum mode)
PFNGLREADINSTRUMENTSSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint marker)
PFNGLREADNPIXELSARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei heigh/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLREADNPIXELSEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLREADNPIXELSEXTPROC) (GLint x, GLint y, GLsizei width, GLsizei he/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,GLvoid * data)
PFNGLRECTXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRECTXOESPROC) (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed x1,GLfixed y1,GLfixed x2,GLfixed y2)
PFNGLRECTXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRECTXVOESPROC) (const GLfixed *v1, const GLfixed *v2);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * v1,const GLfixed * v2)
PFNGLREFERENCEPLANESGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * equation)
PFNGLRELEASESHADERCOMPILERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLRENDERBUFFERSTORAGEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC) (GLenum target, GLsizei/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC) (GLenum target, GLsizei/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samp/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei s/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC) (GLenum target, GLsizei s/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC) ( GLenum target, GLsizei s/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLREPLACEMENTCODEPOINTERSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void ** pointer)
PFNGLREPLACEMENTCODEUBSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLubyte code)
PFNGLREPLACEMENTCODEUBVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLubyte * code)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const /;"	kind:t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint rc,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLubyte * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUISUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint code)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const /;"	kind:t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint /;"	kind:t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, con/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLuint * code)
PFNGLREPLACEMENTCODEUSSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLushort code)
PFNGLREPLACEMENTCODEUSVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLushort * code)
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLRESETHISTOGRAMEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETHISTOGRAMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETMINMAXEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETMINMAXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESIZEBUFFERSMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC) (void);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(void)
PFNGLRESUMETRANSFORMFEEDBACKNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLRESUMETRANSFORMFEEDBACKPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLROTATEXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLROTATEXOESPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed angle,GLfixed x,GLfixed y,GLfixed z)
PFNGLSAMPLECOVERAGEARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLfloat value, GLboolean invert);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat value,GLboolean invert)
PFNGLSAMPLECOVERAGEOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEOESPROC) (GLfixed value, GLboolean invert);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed value,GLboolean invert)
PFNGLSAMPLECOVERAGEPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLECOVERAGEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat value,GLboolean invert)
PFNGLSAMPLEMAPATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint dst,GLuint interp,GLenum swizzle)
PFNGLSAMPLEMASKEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLEMASKINDEXEDNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLbitfield mask)
PFNGLSAMPLEMASKIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint maskNumber,GLbitfield mask)
PFNGLSAMPLEMASKSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLEPATTERNEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pattern)
PFNGLSAMPLEPATTERNSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pattern)
PFNGLSAMPLERPARAMETERFPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat param)
PFNGLSAMPLERPARAMETERFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLfloat * param)
PFNGLSAMPLERPARAMETERIIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSAMPLERPARAMETERIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint param)
PFNGLSAMPLERPARAMETERIUIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLui/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLuint * param)
PFNGLSAMPLERPARAMETERIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSCALEXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSCALEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLSCISSORARRAYVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLint * v)
PFNGLSCISSORINDEXEDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsize/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
PFNGLSCISSORINDEXEDVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLSECONDARYCOLOR3BEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLSECONDARYCOLOR3BVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLSECONDARYCOLOR3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble bl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLSECONDARYCOLOR3DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLSECONDARYCOLOR3FEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLSECONDARYCOLOR3FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLSECONDARYCOLOR3HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
PFNGLSECONDARYCOLOR3HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLSECONDARYCOLOR3IEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLSECONDARYCOLOR3IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLSECONDARYCOLOR3SEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLSECONDARYCOLOR3SVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLSECONDARYCOLOR3UBEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue/;"	kind:t	typeref:typename:void (APIENTRYP)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UBVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLuint * v)
PFNGLSECONDARYCOLOR3UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLuint * v)
PFNGLSECONDARYCOLOR3USEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort b/;"	kind:t	typeref:typename:void (APIENTRYP)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue/;"	kind:t	typeref:typename:void (APIENTRYP)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLushort * v)
PFNGLSECONDARYCOLOR3USVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLushort * v)
PFNGLSECONDARYCOLORFORMATNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei strid/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLSECONDARYCOLORP3UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLSECONDARYCOLORP3UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLSECONDARYCOLORPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei str/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint s/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLSECONDARYCOLORPOINTERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * counterList)
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean ena/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * countersList)
PFNGLSEPARABLEFILTER2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSEPARABLEFILTER2DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsiz/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSETFENCEAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLSETFENCENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint fence,GLenum condition)
PFNGLSETFENCENVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint fence,GLenum condition)
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint dst,const GLfloat * value)
PFNGLSETINVARIANTEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const void *addr);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,const void * addr)
PFNGLSETLOCALCONSTANTEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const void *addr)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,const void * addr)
PFNGLSETMULTISAMPLEFVAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,const GLfloat * val)
PFNGLSHADERBINARYPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum bin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * shaders,GLenum binaryformat,const void * binary,GLsizei length)
PFNGLSHADEROP1EXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1)
PFNGLSHADEROP2EXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1,GLuint arg2)
PFNGLSHADEROP3EXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1,GLuint arg2,GLuint arg3)
PFNGLSHADERSOURCEARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB shaderObj,GLsizei count,const GLcharARB ** string,const GLint * length)
PFNGLSHADERSOURCEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *cons/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlock/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)
PFNGLSHARPENTEXFUNCSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLSPRITEPARAMETERFSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLSPRITEPARAMETERFVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLSPRITEPARAMETERISGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLSPRITEPARAMETERIVSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLSTARTINSTRUMENTSSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLSTARTTILINGQCOMPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLSTARTTILINGQCOMPROC) (GLuint x, GLuint y, GLuint width, GLuint h/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint x,GLuint y,GLuint width,GLuint height,GLbitfield preserveMask)
PFNGLSTENCILCLEARTAGEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) (GLsizei stencilTagBits, GLuint stencilClea/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei stencilTagBits,GLuint stencilClearTag)
PFNGLSTENCILFILLPATHINSTANCEDNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameT/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILFILLPATHNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum fillMode,GLuint mask)
PFNGLSTENCILFUNCSEPARATEATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)
PFNGLSTENCILFUNCSEPARATEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLui/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILMASKSEPARATEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint mask)
PFNGLSTENCILOPSEPARATEATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPSEPARATEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPVALUEAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint value)
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNam/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLint reference,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILSTROKEPATHNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint path,GLint reference,GLuint mask)
PFNGLSTOPINSTRUMENTSSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint marker)
PFNGLSTRINGMARKERGREMEDYPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const void *string);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei len,const void * string)
PFNGLSWIZZLEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
PFNGLSYNCTEXTUREINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLSYNCTEXTUREINTELPROC) (GLuint texture);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture)
PFNGLTAGSAMPLEBUFFERSGIXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLTANGENT3BEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbyte tx,GLbyte ty,GLbyte tz)
PFNGLTANGENT3BVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLTANGENT3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble tx,GLdouble ty,GLdouble tz)
PFNGLTANGENT3DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLTANGENT3FEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat tx,GLfloat ty,GLfloat tz)
PFNGLTANGENT3FVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLTANGENT3IEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint tx,GLint ty,GLint tz)
PFNGLTANGENT3IVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLTANGENT3SEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLshort tx,GLshort ty,GLshort tz)
PFNGLTANGENT3SVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLTANGENTPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *po/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLTBUFFERMASK3DFXPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint mask)
PFNGLTESSELLATIONFACTORAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat factor)
PFNGLTESSELLATIONMODEAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLTESTFENCEAPPLEPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLTESTFENCENVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLTESTFENCENVPROC	SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	kind:t	typeref:typename:GLboolean (GL_APIENTRYP)(GLuint fence)
PFNGLTESTOBJECTAPPLEPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLenum object,GLuint name)
PFNGLTEXBUFFERARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERRANGEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint b/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXBUMPPARAMETERFVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * param)
PFNGLTEXBUMPPARAMETERIVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * param)
PFNGLTEXCOORD1BOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1BOESPROC) (GLbyte s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbyte s)
PFNGLTEXCOORD1BVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1BVOESPROC) (const GLbyte *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD1HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhalfNV s)
PFNGLTEXCOORD1HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD1XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1XOESPROC) (GLfixed s);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed s)
PFNGLTEXCOORD1XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1XVOESPROC) (const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD2BOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2BOESPROC) (GLbyte s, GLbyte t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t)
PFNGLTEXCOORD2BVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2BVOESPROC) (const GLbyte *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloa/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, cons/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLuby/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLubyte * c,const GLfloat * v)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat n/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLflo/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FVERTEX3FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD2HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t)
PFNGLTEXCOORD2HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD2XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2XOESPROC) (GLfixed s, GLfixed t);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t)
PFNGLTEXCOORD2XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2XVOESPROC) (const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD3BOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3BOESPROC) (GLbyte s, GLbyte t, GLbyte r);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t,GLbyte r)
PFNGLTEXCOORD3BVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3BVOESPROC) (const GLbyte *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD3HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t,GLhalfNV r)
PFNGLTEXCOORD3HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD3XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3XOESPROC) (GLfixed s, GLfixed t, GLfixed r);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t,GLfixed r)
PFNGLTEXCOORD3XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3XVOESPROC) (const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD4BOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4BOESPROC) (GLbyte s, GLbyte t, GLbyte r, GLbyte q);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t,GLbyte r,GLbyte q)
PFNGLTEXCOORD4BVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4BVOESPROC) (const GLbyte *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, cons/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD4FVERTEX4FSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD4HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
PFNGLTEXCOORD4HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD4XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4XOESPROC) (GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t,GLfixed r,GLfixed q)
PFNGLTEXCOORD4XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4XVOESPROC) (const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORDFORMATNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLTEXCOORDP1UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP1UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP2UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP2UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP3UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP3UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP4UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP4UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLTEXCOORDPOINTERLISTIBMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLTEXCOORDPOINTERVINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const void **p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLTEXENVXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXENVXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXENVXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXENVXVOESPROC) (GLenum target, GLenum pname, const GLfixed *param/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXFILTERFUNCSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, co/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum filter,GLsizei n,const GLfloat * weights)
PFNGLTEXGENXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,GLfixed param)
PFNGLTEXGENXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed *params/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,const GLfixed * params)
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei covera/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE2DMULTISAMPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalform/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei covera/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE3DMULTISAMPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXIMAGE3DOESPROC) (GLenum target, GLint level, GLenum internalf/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXIMAGE3DPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXIMAGE3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE4DSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalfor/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXPAGECOMMITMENTARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffse/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean resident)
PFNGLTEXPARAMETERIIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint */;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *par/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIUIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERIUIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXPARAMETERXVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXRENDERBUFFERNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLTEXSTORAGE1DEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE1DEXTPROC) (GLenum target, GLsizei levels, GLenum inte/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE1DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE2DEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE2DEXTPROC) (GLenum target, GLsizei levels, GLenum inte/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE2DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE3DEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE3DEXTPROC) (GLenum target, GLsizei levels, GLenum inte/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSTORAGESPARSEAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGESPARSEAMDPROC) (GLenum target, GLenum internalFormat, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXSUBIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DOESPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xoffset/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE3DPROC	SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE4DSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint woffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREBARRIERNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLTEXTUREBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum intern/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXTUREBUFFERRANGEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum i/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTURECOLORMASKSGISPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolea/;"	kind:t	typeref:typename:void (APIENTRYP)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
PFNGLTEXTUREIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum ta/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum ta/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTURELIGHTEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname)
PFNGLTEXTUREMATERIALEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLTEXTURENORMALEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLTEXTUREPAGECOMMITMENTEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint x/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean resident)
PFNGLTEXTUREPARAMETERFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pn/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLfloat param)
PFNGLTEXTUREPARAMETERFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLfloat * params)
PFNGLTEXTUREPARAMETERIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pn/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint param)
PFNGLTEXTUREPARAMETERIIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIUIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXTUREPARAMETERIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTURERANGEAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, const void */;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei length,const void * pointer)
PFNGLTEXTURERENDERBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint renderbuffer)
PFNGLTEXTURESTORAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE1DEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE2DEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGE3DEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGESPARSEAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGESPARSEAMDPROC) (GLuint texture, GLenum target, GLenum/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXTURESUBIMAGE1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREVIEWPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
PFNGLTRACKMATRIXNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint address,GLenum matrix,GLenum transform)
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint count,const GLint * attribs,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint */;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLint * attribs,GLsizei nbuffers,const GLint * bufstreams,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, c/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, co/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLint * locations,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, cons/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMPATHNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum tra/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint srcPath,GLenum transformType,const GLfloat * transformValues)
PFNGLTRANSLATEXOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLTRANSLATEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLUNIFORM1DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x)
PFNGLUNIFORM1DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM1FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1I64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x)
PFNGLUNIFORM1I64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM1IARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1UI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x)
PFNGLUNIFORM1UI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM1UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0)
PFNGLUNIFORM1UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0)
PFNGLUNIFORM1UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM1UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y)
PFNGLUNIFORM2DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM2FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2I64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y)
PFNGLUNIFORM2I64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM2IARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2UI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLUNIFORM2UI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM2UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLUNIFORM3DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM3FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3I64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLUNIFORM3I64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM3IARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3UI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLUNIFORM3UI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM3UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLUNIFORM4DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM4FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4I64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLUNIFORM4I64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM4IARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4UI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLUNIFORM4UI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM4UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORMBLOCKBINDINGPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
PFNGLUNIFORMBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint buffer)
PFNGLUNIFORMHANDLEUI64ARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64VARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMHANDLEUI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMMATRIX2DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X3DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X3FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X4DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X4FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X2DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X2FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X4DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X4FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X2DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X2FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X3DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X3FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMSUBROUTINESUIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLsizei count,const GLuint * indices)
PFNGLUNIFORMUI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT value)
PFNGLUNIFORMUI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64E/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNLOCKARRAYSEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLUNMAPBUFFERARBPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPBUFFEROESPROC	SDL_opengles2_gl2ext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLUNMAPBUFFEROESPROC) (GLenum target);$/;"	kind:t	typeref:typename:GLboolean (GL_APIENTRYP)(GLenum target)
PFNGLUNMAPBUFFERPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPNAMEDBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLUNMAPOBJECTBUFFERATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLUNMAPTEXTURE2DINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUNMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level)
PFNGLUPDATEOBJECTBUFFERATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei s/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLuint offset,GLsizei size,const void * pointer,GLenum preserve)
PFNGLUSEPROGRAMOBJECTARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLUSEPROGRAMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLUSEPROGRAMSTAGESEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLUSEPROGRAMSTAGESEXTPROC) (GLuint pipeline, GLbitfield stages, GL/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint pipeline,GLbitfield stages,GLuint program)
PFNGLUSEPROGRAMSTAGESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLbitfield stages,GLuint program)
PFNGLUSESHADERPROGRAMEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint program)
PFNGLVALIDATEPROGRAMARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLVALIDATEPROGRAMPIPELINEEXTPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEEXTPROC) (GLuint pipeline);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint pipeline)
PFNGLVALIDATEPROGRAMPIPELINEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLVALIDATEPROGRAMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLVARIANTARRAYOBJECTATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVARIANTBVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,const GLbyte * addr)
PFNGLVARIANTDVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,const GLdouble * addr)
PFNGLVARIANTFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,const GLfloat * addr)
PFNGLVARIANTIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,const GLint * addr)
PFNGLVARIANTPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, cons/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,GLuint stride,const void * addr)
PFNGLVARIANTSVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,const GLshort * addr)
PFNGLVARIANTUBVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,const GLubyte * addr)
PFNGLVARIANTUIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,const GLuint * addr)
PFNGLVARIANTUSVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint id,const GLushort * addr)
PFNGLVDPAUFININVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUFININVPROC) (void);$/;"	kind:t	typeref:typename:void (APIENTRYP)(void)
PFNGLVDPAUGETSURFACEIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLVDPAUINITNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUINITNVPROC) (const void *vdpDevice, const void *getProcAddress/;"	kind:t	typeref:typename:void (APIENTRYP)(const void * vdpDevice,const void * getProcAddress)
PFNGLVDPAUISSURFACENVPROC	SDL_opengl_glext.h	/^typedef GLboolean (APIENTRYP PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	kind:t	typeref:typename:GLboolean (APIENTRYP)(GLvdpauSurfaceNV surface)
PFNGLVDPAUMAPSURFACESNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceN/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei numSurfaces,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC	SDL_opengl_glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (const void *vdpSurfa/;"	kind:t	typeref:typename:GLvdpauSurfaceNV (APIENTRYP)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC	SDL_opengl_glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const void *vdpSurfac/;"	kind:t	typeref:typename:GLvdpauSurfaceNV (APIENTRYP)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUSURFACEACCESSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface,GLenum access)
PFNGLVDPAUUNMAPSURFACESNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurface/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei numSurface,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUUNREGISTERSURFACENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface)
PFNGLVERTEX2BOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2BOESPROC) (GLbyte x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbyte x)
PFNGLVERTEX2BVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2BVOESPROC) (const GLbyte *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX2HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y)
PFNGLVERTEX2HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX2XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2XOESPROC) (GLfixed x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed x)
PFNGLVERTEX2XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2XVOESPROC) (const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEX3BOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3BOESPROC) (GLbyte x, GLbyte y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbyte x,GLbyte y)
PFNGLVERTEX3BVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3BVOESPROC) (const GLbyte *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX3HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y,GLhalfNV z)
PFNGLVERTEX3HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX3XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3XOESPROC) (GLfixed x, GLfixed y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y)
PFNGLVERTEX3XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3XVOESPROC) (const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEX4BOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4BOESPROC) (GLbyte x, GLbyte y, GLbyte z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLbyte x,GLbyte y,GLbyte z)
PFNGLVERTEX4BVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4BVOESPROC) (const GLbyte *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX4HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
PFNGLVERTEX4HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX4XOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLVERTEX4XVOESPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4XVOESPROC) (const GLfixed *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum texunit,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenu/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLVERTEXARRAYRANGEAPPLEPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei length,void * pointer)
PFNGLVERTEXARRAYRANGENVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const void *pointer);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsizei length,const void * pointer)
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffe/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attrib/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLuint divisor)
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXATTRIB1DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x)
PFNGLVERTEXATTRIB1HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB1SARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y)
PFNGLVERTEXATTRIB2HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB2SARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdoub/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z)
PFNGLVERTEXATTRIB3HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB3SARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4BVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4BVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdoub/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4HNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalf/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
PFNGLVERTEXATTRIB4HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB4IVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NBVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NBVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NSVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NSVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NUBARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLuby/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUBVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUSVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4NUSVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4SARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4UBNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4UBVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4USVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4USVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum t/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVERTEXATTRIBBINDINGPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXATTRIBDIVISORANGLEPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLVERTEXATTRIBDIVISORANGLEPROC) (GLuint index, GLuint divisor);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORNVPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLVERTEXATTRIBDIVISORNVPROC) (GLuint index, GLuint divisor);$/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBFORMATNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride)
PFNGLVERTEXATTRIBFORMATPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum typ/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXATTRIBI1IEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI1UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2IEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3IEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4BVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4BVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4IEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLin/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4SVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4SVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4UBVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UBVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UIEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4USVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBI4USVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBIFORMATNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBIFORMATPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBIPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBIPOINTERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBL1DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1I64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x)
PFNGLVERTEXATTRIBL1I64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL1UI64ARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64VARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL1UI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL2DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2I64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y)
PFNGLVERTEXATTRIBL2I64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL2UI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y)
PFNGLVERTEXATTRIBL2UI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL3DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3I64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLVERTEXATTRIBL3I64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL3UI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLVERTEXATTRIBL3UI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL4DEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4I64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLVERTEXATTRIBL4I64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL4UI64NVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLVERTEXATTRIBL4UI64VNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBLFORMATNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBLFORMATPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBLPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBLPOINTERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBP1UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP1UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP2UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP2UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP3UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP3UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP4UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP4UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBPARAMETERIAMDPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPARAMETERIAMDPROC) (GLuint index, GLenum pname, GLint p/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint param)
PFNGLVERTEXATTRIBPOINTERARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint fsize,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBS1DVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS1FVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS1HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS1SVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS2DVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS2FVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS2HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS2SVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS3DVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS3FVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS3HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS3SVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS4DVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS4FVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS4HVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS4SVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS4UBVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyt/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLubyte * v)
PFNGLVERTEXBINDINGDIVISORPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint divisor)
PFNGLVERTEXBLENDARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint count)
PFNGLVERTEXBLENDENVFATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLVERTEXBLENDENVIATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLVERTEXFORMATNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXP2UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP2UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP3UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP3UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP4UIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP4UIVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLs/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLVERTEXPOINTERLISTIBMPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, c/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLVERTEXPOINTERVINTELPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const void **poi/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLVERTEXSTREAM1DATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x)
PFNGLVERTEXSTREAM1DVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM1FATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x)
PFNGLVERTEXSTREAM1FVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM1IATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x)
PFNGLVERTEXSTREAM1IVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM1SATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x)
PFNGLVERTEXSTREAM1SVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM2DATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y)
PFNGLVERTEXSTREAM2DVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM2FATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y)
PFNGLVERTEXSTREAM2FVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM2IATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y)
PFNGLVERTEXSTREAM2IVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM2SATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y)
PFNGLVERTEXSTREAM2SVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM3DATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXSTREAM3DVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM3FATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXSTREAM3FVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM3IATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y,GLint z)
PFNGLVERTEXSTREAM3IVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM3SATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshor/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXSTREAM3SVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM4DATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdo/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXSTREAM4DVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM4FATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloa/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXSTREAM4FVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM4IATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, G/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXSTREAM4IVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM4SATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshor/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXSTREAM4SVATIPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXWEIGHTFEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat weight)
PFNGLVERTEXWEIGHTFVEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * weight)
PFNGLVERTEXWEIGHTHNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLhalfNV weight)
PFNGLVERTEXWEIGHTHVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLhalfNV * weight)
PFNGLVERTEXWEIGHTPOINTEREXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLint size, GLenum type, GLsizei strid/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVIDEOCAPTURENVPROC	SDL_opengl_glext.h	/^typedef GLenum (APIENTRYP PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint *sequence_/;"	kind:t	typeref:typename:GLenum (APIENTRYP)(GLuint video_capture_slot,GLuint * sequence_num,GLuint64EXT * capture_time)
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLdouble * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLfloat * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GL/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLint * params)
PFNGLVIEWPORTARRAYVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v)/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLfloat * v)
PFNGLVIEWPORTINDEXEDFPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
PFNGLVIEWPORTINDEXEDFVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLWAITSYNCAPPLEPROC	SDL_opengles2_gl2ext.h	/^typedef void (GL_APIENTRYP PFNGLWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuint64 time/;"	kind:t	typeref:typename:void (GL_APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLWAITSYNCPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLWEIGHTBVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,const GLbyte * weights)
PFNGLWEIGHTDVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,const GLdouble * weights)
PFNGLWEIGHTFVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,const GLfloat * weights)
PFNGLWEIGHTIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,const GLint * weights)
PFNGLWEIGHTPATHSNVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLui/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLsizei numPaths,const GLuint * paths,const GLfloat * weights)
PFNGLWEIGHTPOINTERARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, con/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLWEIGHTSVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,const GLshort * weights)
PFNGLWEIGHTUBVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,const GLubyte * weights)
PFNGLWEIGHTUIVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,const GLuint * weights)
PFNGLWEIGHTUSVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint size,const GLushort * weights)
PFNGLWINDOWPOS2DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2DVMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2FVMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2IARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2IVMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2SARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS2SVMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS2SVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3DARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3DVMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3DVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3FARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3FVMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3FVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3IARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3IVMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3IVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3SARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SVARBPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3SVMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3SVPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS4DMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble /;"	kind:t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLWINDOWPOS4DVMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS4FMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLWINDOWPOS4FVMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS4IMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z,GLint w)
PFNGLWINDOWPOS4IVMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS4SMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	kind:t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLWINDOWPOS4SVMESAPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	kind:t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWRITEMASKEXTPROC	SDL_opengl_glext.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY,/;"	kind:t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
RW_SEEK_CUR	SDL_rwops.h	/^#define RW_SEEK_CUR /;"	kind:d
RW_SEEK_END	SDL_rwops.h	/^#define RW_SEEK_END /;"	kind:d
RW_SEEK_SET	SDL_rwops.h	/^#define RW_SEEK_SET /;"	kind:d
Rloss	SDL_pixels.h	/^    Uint8 Rloss;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
Rmask	SDL_pixels.h	/^    Uint32 Rmask;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
Rshift	SDL_pixels.h	/^    Uint8 Rshift;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDLCALL	SDL_rwops.h	/^    int (SDLCALL * close) (struct SDL_RWops * context);$/;"	kind:m	struct:SDL_RWops	typeref:typename:int (* close)(struct SDL_RWops * context)	access:public
SDLCALL	begin_code.h	/^#define SDLCALL /;"	kind:d
SDLCALL	begin_code.h	/^#define SDLCALL$/;"	kind:d
SDLK_0	SDL_keycode.h	/^    SDLK_0 = '0',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_1	SDL_keycode.h	/^    SDLK_1 = '1',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_2	SDL_keycode.h	/^    SDLK_2 = '2',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_3	SDL_keycode.h	/^    SDLK_3 = '3',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_4	SDL_keycode.h	/^    SDLK_4 = '4',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_5	SDL_keycode.h	/^    SDLK_5 = '5',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_6	SDL_keycode.h	/^    SDLK_6 = '6',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_7	SDL_keycode.h	/^    SDLK_7 = '7',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_8	SDL_keycode.h	/^    SDLK_8 = '8',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_9	SDL_keycode.h	/^    SDLK_9 = '9',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AC_BACK	SDL_keycode.h	/^    SDLK_AC_BACK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BACK),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AC_BOOKMARKS	SDL_keycode.h	/^    SDLK_AC_BOOKMARKS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BOOKMARKS),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AC_FORWARD	SDL_keycode.h	/^    SDLK_AC_FORWARD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_FORWARD),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AC_HOME	SDL_keycode.h	/^    SDLK_AC_HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_HOME),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AC_REFRESH	SDL_keycode.h	/^    SDLK_AC_REFRESH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_REFRESH),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AC_SEARCH	SDL_keycode.h	/^    SDLK_AC_SEARCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SEARCH),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AC_STOP	SDL_keycode.h	/^    SDLK_AC_STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_STOP),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AGAIN	SDL_keycode.h	/^    SDLK_AGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AGAIN),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_ALTERASE	SDL_keycode.h	/^    SDLK_ALTERASE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ALTERASE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AMPERSAND	SDL_keycode.h	/^    SDLK_AMPERSAND = '&',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_APP1	SDL_keycode.h	/^    SDLK_APP1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP1),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_APP2	SDL_keycode.h	/^    SDLK_APP2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP2),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_APPLICATION	SDL_keycode.h	/^    SDLK_APPLICATION = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APPLICATION),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_ASTERISK	SDL_keycode.h	/^    SDLK_ASTERISK = '*',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AT	SDL_keycode.h	/^    SDLK_AT = '@',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AUDIOFASTFORWARD	SDL_keycode.h	/^    SDLK_AUDIOFASTFORWARD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOFASTFORWARD)$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AUDIOMUTE	SDL_keycode.h	/^    SDLK_AUDIOMUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOMUTE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AUDIONEXT	SDL_keycode.h	/^    SDLK_AUDIONEXT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIONEXT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AUDIOPLAY	SDL_keycode.h	/^    SDLK_AUDIOPLAY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPLAY),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AUDIOPREV	SDL_keycode.h	/^    SDLK_AUDIOPREV = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPREV),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AUDIOREWIND	SDL_keycode.h	/^    SDLK_AUDIOREWIND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOREWIND),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_AUDIOSTOP	SDL_keycode.h	/^    SDLK_AUDIOSTOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOSTOP),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_BACKQUOTE	SDL_keycode.h	/^    SDLK_BACKQUOTE = '`',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_BACKSLASH	SDL_keycode.h	/^    SDLK_BACKSLASH = '\\\\',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_BACKSPACE	SDL_keycode.h	/^    SDLK_BACKSPACE = '\\b',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_BRIGHTNESSDOWN	SDL_keycode.h	/^    SDLK_BRIGHTNESSDOWN =$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_BRIGHTNESSUP	SDL_keycode.h	/^    SDLK_BRIGHTNESSUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSUP),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_CALCULATOR	SDL_keycode.h	/^    SDLK_CALCULATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALCULATOR),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_CANCEL	SDL_keycode.h	/^    SDLK_CANCEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CANCEL),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_CAPSLOCK	SDL_keycode.h	/^    SDLK_CAPSLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CAPSLOCK),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_CARET	SDL_keycode.h	/^    SDLK_CARET = '^',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_CLEAR	SDL_keycode.h	/^    SDLK_CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEAR),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_CLEARAGAIN	SDL_keycode.h	/^    SDLK_CLEARAGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEARAGAIN),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_COLON	SDL_keycode.h	/^    SDLK_COLON = ':',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_COMMA	SDL_keycode.h	/^    SDLK_COMMA = ',',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_COMPUTER	SDL_keycode.h	/^    SDLK_COMPUTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COMPUTER),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_COPY	SDL_keycode.h	/^    SDLK_COPY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COPY),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_CRSEL	SDL_keycode.h	/^    SDLK_CRSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CRSEL),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_CURRENCYSUBUNIT	SDL_keycode.h	/^    SDLK_CURRENCYSUBUNIT =$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_CURRENCYUNIT	SDL_keycode.h	/^    SDLK_CURRENCYUNIT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYUNIT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_CUT	SDL_keycode.h	/^    SDLK_CUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CUT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_DECIMALSEPARATOR	SDL_keycode.h	/^    SDLK_DECIMALSEPARATOR =$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_DELETE	SDL_keycode.h	/^    SDLK_DELETE = '\\177',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_DISPLAYSWITCH	SDL_keycode.h	/^    SDLK_DISPLAYSWITCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DISPLAYSWITCH),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_DOLLAR	SDL_keycode.h	/^    SDLK_DOLLAR = '$',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_DOWN	SDL_keycode.h	/^    SDLK_DOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DOWN),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_EJECT	SDL_keycode.h	/^    SDLK_EJECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EJECT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_END	SDL_keycode.h	/^    SDLK_END = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_END),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_EQUALS	SDL_keycode.h	/^    SDLK_EQUALS = '=',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_ESCAPE	SDL_keycode.h	/^    SDLK_ESCAPE = '\\033',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_EXCLAIM	SDL_keycode.h	/^    SDLK_EXCLAIM = '!',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_EXECUTE	SDL_keycode.h	/^    SDLK_EXECUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXECUTE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_EXSEL	SDL_keycode.h	/^    SDLK_EXSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXSEL),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F1	SDL_keycode.h	/^    SDLK_F1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F1),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F10	SDL_keycode.h	/^    SDLK_F10 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F10),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F11	SDL_keycode.h	/^    SDLK_F11 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F11),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F12	SDL_keycode.h	/^    SDLK_F12 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F12),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F13	SDL_keycode.h	/^    SDLK_F13 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F13),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F14	SDL_keycode.h	/^    SDLK_F14 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F14),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F15	SDL_keycode.h	/^    SDLK_F15 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F15),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F16	SDL_keycode.h	/^    SDLK_F16 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F16),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F17	SDL_keycode.h	/^    SDLK_F17 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F17),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F18	SDL_keycode.h	/^    SDLK_F18 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F18),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F19	SDL_keycode.h	/^    SDLK_F19 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F19),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F2	SDL_keycode.h	/^    SDLK_F2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F2),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F20	SDL_keycode.h	/^    SDLK_F20 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F20),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F21	SDL_keycode.h	/^    SDLK_F21 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F21),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F22	SDL_keycode.h	/^    SDLK_F22 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F22),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F23	SDL_keycode.h	/^    SDLK_F23 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F23),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F24	SDL_keycode.h	/^    SDLK_F24 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F24),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F3	SDL_keycode.h	/^    SDLK_F3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F3),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F4	SDL_keycode.h	/^    SDLK_F4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F4),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F5	SDL_keycode.h	/^    SDLK_F5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F5),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F6	SDL_keycode.h	/^    SDLK_F6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F6),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F7	SDL_keycode.h	/^    SDLK_F7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F7),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F8	SDL_keycode.h	/^    SDLK_F8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F8),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_F9	SDL_keycode.h	/^    SDLK_F9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F9),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_FIND	SDL_keycode.h	/^    SDLK_FIND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_FIND),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_GREATER	SDL_keycode.h	/^    SDLK_GREATER = '>',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_HASH	SDL_keycode.h	/^    SDLK_HASH = '#',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_HELP	SDL_keycode.h	/^    SDLK_HELP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HELP),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_HOME	SDL_keycode.h	/^    SDLK_HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HOME),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_INSERT	SDL_keycode.h	/^    SDLK_INSERT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_INSERT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KBDILLUMDOWN	SDL_keycode.h	/^    SDLK_KBDILLUMDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMDOWN),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KBDILLUMTOGGLE	SDL_keycode.h	/^    SDLK_KBDILLUMTOGGLE =$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KBDILLUMUP	SDL_keycode.h	/^    SDLK_KBDILLUMUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMUP),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_0	SDL_keycode.h	/^    SDLK_KP_0 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_0),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_00	SDL_keycode.h	/^    SDLK_KP_00 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_00),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_000	SDL_keycode.h	/^    SDLK_KP_000 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_000),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_1	SDL_keycode.h	/^    SDLK_KP_1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_1),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_2	SDL_keycode.h	/^    SDLK_KP_2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_2),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_3	SDL_keycode.h	/^    SDLK_KP_3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_3),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_4	SDL_keycode.h	/^    SDLK_KP_4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_4),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_5	SDL_keycode.h	/^    SDLK_KP_5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_5),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_6	SDL_keycode.h	/^    SDLK_KP_6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_6),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_7	SDL_keycode.h	/^    SDLK_KP_7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_7),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_8	SDL_keycode.h	/^    SDLK_KP_8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_8),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_9	SDL_keycode.h	/^    SDLK_KP_9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_9),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_A	SDL_keycode.h	/^    SDLK_KP_A = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_A),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_AMPERSAND	SDL_keycode.h	/^    SDLK_KP_AMPERSAND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AMPERSAND),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_AT	SDL_keycode.h	/^    SDLK_KP_AT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_B	SDL_keycode.h	/^    SDLK_KP_B = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_B),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_BACKSPACE	SDL_keycode.h	/^    SDLK_KP_BACKSPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BACKSPACE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_BINARY	SDL_keycode.h	/^    SDLK_KP_BINARY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BINARY),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_C	SDL_keycode.h	/^    SDLK_KP_C = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_C),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_CLEAR	SDL_keycode.h	/^    SDLK_KP_CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEAR),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_CLEARENTRY	SDL_keycode.h	/^    SDLK_KP_CLEARENTRY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEARENTRY),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_COLON	SDL_keycode.h	/^    SDLK_KP_COLON = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COLON),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_COMMA	SDL_keycode.h	/^    SDLK_KP_COMMA = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COMMA),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_D	SDL_keycode.h	/^    SDLK_KP_D = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_D),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_DBLAMPERSAND	SDL_keycode.h	/^    SDLK_KP_DBLAMPERSAND =$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_DBLVERTICALBAR	SDL_keycode.h	/^    SDLK_KP_DBLVERTICALBAR =$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_DECIMAL	SDL_keycode.h	/^    SDLK_KP_DECIMAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DECIMAL),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_DIVIDE	SDL_keycode.h	/^    SDLK_KP_DIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DIVIDE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_E	SDL_keycode.h	/^    SDLK_KP_E = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_E),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_ENTER	SDL_keycode.h	/^    SDLK_KP_ENTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_ENTER),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_EQUALS	SDL_keycode.h	/^    SDLK_KP_EQUALS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALS),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_EQUALSAS400	SDL_keycode.h	/^    SDLK_KP_EQUALSAS400 =$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_EXCLAM	SDL_keycode.h	/^    SDLK_KP_EXCLAM = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EXCLAM),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_F	SDL_keycode.h	/^    SDLK_KP_F = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_F),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_GREATER	SDL_keycode.h	/^    SDLK_KP_GREATER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_GREATER),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_HASH	SDL_keycode.h	/^    SDLK_KP_HASH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HASH),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_HEXADECIMAL	SDL_keycode.h	/^    SDLK_KP_HEXADECIMAL =$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_LEFTBRACE	SDL_keycode.h	/^    SDLK_KP_LEFTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTBRACE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_LEFTPAREN	SDL_keycode.h	/^    SDLK_KP_LEFTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTPAREN),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_LESS	SDL_keycode.h	/^    SDLK_KP_LESS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LESS),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_MEMADD	SDL_keycode.h	/^    SDLK_KP_MEMADD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMADD),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_MEMCLEAR	SDL_keycode.h	/^    SDLK_KP_MEMCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMCLEAR),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_MEMDIVIDE	SDL_keycode.h	/^    SDLK_KP_MEMDIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMDIVIDE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_MEMMULTIPLY	SDL_keycode.h	/^    SDLK_KP_MEMMULTIPLY =$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_MEMRECALL	SDL_keycode.h	/^    SDLK_KP_MEMRECALL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMRECALL),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_MEMSTORE	SDL_keycode.h	/^    SDLK_KP_MEMSTORE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSTORE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_MEMSUBTRACT	SDL_keycode.h	/^    SDLK_KP_MEMSUBTRACT =$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_MINUS	SDL_keycode.h	/^    SDLK_KP_MINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MINUS),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_MULTIPLY	SDL_keycode.h	/^    SDLK_KP_MULTIPLY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MULTIPLY),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_OCTAL	SDL_keycode.h	/^    SDLK_KP_OCTAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_OCTAL),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_PERCENT	SDL_keycode.h	/^    SDLK_KP_PERCENT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERCENT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_PERIOD	SDL_keycode.h	/^    SDLK_KP_PERIOD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERIOD),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_PLUS	SDL_keycode.h	/^    SDLK_KP_PLUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUS),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_PLUSMINUS	SDL_keycode.h	/^    SDLK_KP_PLUSMINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUSMINUS),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_POWER	SDL_keycode.h	/^    SDLK_KP_POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_POWER),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_RIGHTBRACE	SDL_keycode.h	/^    SDLK_KP_RIGHTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTBRACE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_RIGHTPAREN	SDL_keycode.h	/^    SDLK_KP_RIGHTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTPAREN),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_SPACE	SDL_keycode.h	/^    SDLK_KP_SPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_SPACE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_TAB	SDL_keycode.h	/^    SDLK_KP_TAB = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_TAB),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_VERTICALBAR	SDL_keycode.h	/^    SDLK_KP_VERTICALBAR =$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_KP_XOR	SDL_keycode.h	/^    SDLK_KP_XOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_XOR),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_LALT	SDL_keycode.h	/^    SDLK_LALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LALT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_LCTRL	SDL_keycode.h	/^    SDLK_LCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LCTRL),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_LEFT	SDL_keycode.h	/^    SDLK_LEFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LEFT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_LEFTBRACKET	SDL_keycode.h	/^    SDLK_LEFTBRACKET = '[',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_LEFTPAREN	SDL_keycode.h	/^    SDLK_LEFTPAREN = '(',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_LESS	SDL_keycode.h	/^    SDLK_LESS = '<',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_LGUI	SDL_keycode.h	/^    SDLK_LGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LGUI),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_LSHIFT	SDL_keycode.h	/^    SDLK_LSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LSHIFT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_MAIL	SDL_keycode.h	/^    SDLK_MAIL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MAIL),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_MEDIASELECT	SDL_keycode.h	/^    SDLK_MEDIASELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIASELECT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_MENU	SDL_keycode.h	/^    SDLK_MENU = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MENU),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_MINUS	SDL_keycode.h	/^    SDLK_MINUS = '-',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_MODE	SDL_keycode.h	/^    SDLK_MODE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MODE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_MUTE	SDL_keycode.h	/^    SDLK_MUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MUTE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_NUMLOCKCLEAR	SDL_keycode.h	/^    SDLK_NUMLOCKCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_NUMLOCKCLEAR),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_OPER	SDL_keycode.h	/^    SDLK_OPER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OPER),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_OUT	SDL_keycode.h	/^    SDLK_OUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OUT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_PAGEDOWN	SDL_keycode.h	/^    SDLK_PAGEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEDOWN),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_PAGEUP	SDL_keycode.h	/^    SDLK_PAGEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEUP),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_PASTE	SDL_keycode.h	/^    SDLK_PASTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PASTE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_PAUSE	SDL_keycode.h	/^    SDLK_PAUSE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAUSE),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_PERCENT	SDL_keycode.h	/^    SDLK_PERCENT = '%',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_PERIOD	SDL_keycode.h	/^    SDLK_PERIOD = '.',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_PLUS	SDL_keycode.h	/^    SDLK_PLUS = '+',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_POWER	SDL_keycode.h	/^    SDLK_POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_POWER),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_PRINTSCREEN	SDL_keycode.h	/^    SDLK_PRINTSCREEN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRINTSCREEN),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_PRIOR	SDL_keycode.h	/^    SDLK_PRIOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRIOR),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_QUESTION	SDL_keycode.h	/^    SDLK_QUESTION = '?',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_QUOTE	SDL_keycode.h	/^    SDLK_QUOTE = '\\'',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_QUOTEDBL	SDL_keycode.h	/^    SDLK_QUOTEDBL = '"',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_RALT	SDL_keycode.h	/^    SDLK_RALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RALT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_RCTRL	SDL_keycode.h	/^    SDLK_RCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RCTRL),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_RETURN	SDL_keycode.h	/^    SDLK_RETURN = '\\r',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_RETURN2	SDL_keycode.h	/^    SDLK_RETURN2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RETURN2),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_RGUI	SDL_keycode.h	/^    SDLK_RGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RGUI),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_RIGHT	SDL_keycode.h	/^    SDLK_RIGHT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RIGHT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_RIGHTBRACKET	SDL_keycode.h	/^    SDLK_RIGHTBRACKET = ']',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_RIGHTPAREN	SDL_keycode.h	/^    SDLK_RIGHTPAREN = ')',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_RSHIFT	SDL_keycode.h	/^    SDLK_RSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RSHIFT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_SCANCODE_MASK	SDL_keycode.h	/^#define SDLK_SCANCODE_MASK /;"	kind:d
SDLK_SCROLLLOCK	SDL_keycode.h	/^    SDLK_SCROLLLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SCROLLLOCK),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_SELECT	SDL_keycode.h	/^    SDLK_SELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SELECT),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_SEMICOLON	SDL_keycode.h	/^    SDLK_SEMICOLON = ';',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_SEPARATOR	SDL_keycode.h	/^    SDLK_SEPARATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SEPARATOR),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_SLASH	SDL_keycode.h	/^    SDLK_SLASH = '\/',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_SLEEP	SDL_keycode.h	/^    SDLK_SLEEP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_SPACE	SDL_keycode.h	/^    SDLK_SPACE = ' ',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_STOP	SDL_keycode.h	/^    SDLK_STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_STOP),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_SYSREQ	SDL_keycode.h	/^    SDLK_SYSREQ = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SYSREQ),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_TAB	SDL_keycode.h	/^    SDLK_TAB = '\\t',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_THOUSANDSSEPARATOR	SDL_keycode.h	/^    SDLK_THOUSANDSSEPARATOR =$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_UNDERSCORE	SDL_keycode.h	/^    SDLK_UNDERSCORE = '_',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_UNDO	SDL_keycode.h	/^    SDLK_UNDO = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UNDO),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_UNKNOWN	SDL_keycode.h	/^    SDLK_UNKNOWN = 0,$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_UP	SDL_keycode.h	/^    SDLK_UP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UP),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_VOLUMEDOWN	SDL_keycode.h	/^    SDLK_VOLUMEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEDOWN),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_VOLUMEUP	SDL_keycode.h	/^    SDLK_VOLUMEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEUP),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_WWW	SDL_keycode.h	/^    SDLK_WWW = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_WWW),$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_a	SDL_keycode.h	/^    SDLK_a = 'a',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_b	SDL_keycode.h	/^    SDLK_b = 'b',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_c	SDL_keycode.h	/^    SDLK_c = 'c',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_d	SDL_keycode.h	/^    SDLK_d = 'd',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_e	SDL_keycode.h	/^    SDLK_e = 'e',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_f	SDL_keycode.h	/^    SDLK_f = 'f',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_g	SDL_keycode.h	/^    SDLK_g = 'g',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_h	SDL_keycode.h	/^    SDLK_h = 'h',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_i	SDL_keycode.h	/^    SDLK_i = 'i',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_j	SDL_keycode.h	/^    SDLK_j = 'j',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_k	SDL_keycode.h	/^    SDLK_k = 'k',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_l	SDL_keycode.h	/^    SDLK_l = 'l',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_m	SDL_keycode.h	/^    SDLK_m = 'm',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_n	SDL_keycode.h	/^    SDLK_n = 'n',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_o	SDL_keycode.h	/^    SDLK_o = 'o',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_p	SDL_keycode.h	/^    SDLK_p = 'p',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_q	SDL_keycode.h	/^    SDLK_q = 'q',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_r	SDL_keycode.h	/^    SDLK_r = 'r',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_s	SDL_keycode.h	/^    SDLK_s = 's',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_t	SDL_keycode.h	/^    SDLK_t = 't',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_u	SDL_keycode.h	/^    SDLK_u = 'u',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_v	SDL_keycode.h	/^    SDLK_v = 'v',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_w	SDL_keycode.h	/^    SDLK_w = 'w',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_x	SDL_keycode.h	/^    SDLK_x = 'x',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_y	SDL_keycode.h	/^    SDLK_y = 'y',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLK_z	SDL_keycode.h	/^    SDLK_z = 'z',$/;"	kind:e	enum:__anon7824b1c10103	access:public
SDLMAIN_DECLSPEC	SDL_main.h	/^#define SDLMAIN_DECLSPEC /;"	kind:d
SDLMAIN_DECLSPEC	SDL_main.h	/^#define SDLMAIN_DECLSPEC$/;"	kind:d
SDLTEST_MAX_LOGMESSAGE_LENGTH	SDL_test.h	/^#define SDLTEST_MAX_LOGMESSAGE_LENGTH /;"	kind:d
SDLTest_Assert	SDL_test_assert.h	/^void SDLTest_Assert(int assertCondition, SDL_PRINTF_FORMAT_STRING const char *assertDescription,/;"	kind:p	typeref:typename:void	signature:(int assertCondition,SDL_PRINTF_FORMAT_STRING const char * assertDescription,...)
SDLTest_AssertCheck	SDL_test_assert.h	/^int SDLTest_AssertCheck(int assertCondition, SDL_PRINTF_FORMAT_STRING const char *assertDescript/;"	kind:p	typeref:typename:int	signature:(int assertCondition,SDL_PRINTF_FORMAT_STRING const char * assertDescription,...)
SDLTest_AssertPass	SDL_test_assert.h	/^void SDLTest_AssertPass(SDL_PRINTF_FORMAT_STRING const char *assertDescription, ...) SDL_PRINTF_/;"	kind:p	typeref:typename:void	signature:(SDL_PRINTF_FORMAT_STRING const char * assertDescription,...)
SDLTest_AssertSummaryToTestResult	SDL_test_assert.h	/^int SDLTest_AssertSummaryToTestResult(void);$/;"	kind:p	typeref:typename:int	signature:(void)
SDLTest_CleanupTextDrawing	SDL_test_font.h	/^void SDLTest_CleanupTextDrawing(void);$/;"	kind:p	typeref:typename:void	signature:(void)
SDLTest_CommonArg	SDL_test_common.h	/^int SDLTest_CommonArg(SDLTest_CommonState * state, int index);$/;"	kind:p	typeref:typename:int	signature:(SDLTest_CommonState * state,int index)
SDLTest_CommonCreateState	SDL_test_common.h	/^SDLTest_CommonState *SDLTest_CommonCreateState(char **argv, Uint32 flags);$/;"	kind:p	typeref:typename:SDLTest_CommonState *	signature:(char ** argv,Uint32 flags)
SDLTest_CommonEvent	SDL_test_common.h	/^void SDLTest_CommonEvent(SDLTest_CommonState * state, SDL_Event * event, int *done);$/;"	kind:p	typeref:typename:void	signature:(SDLTest_CommonState * state,SDL_Event * event,int * done)
SDLTest_CommonInit	SDL_test_common.h	/^SDL_bool SDLTest_CommonInit(SDLTest_CommonState * state);$/;"	kind:p	typeref:typename:SDL_bool	signature:(SDLTest_CommonState * state)
SDLTest_CommonQuit	SDL_test_common.h	/^void SDLTest_CommonQuit(SDLTest_CommonState * state);$/;"	kind:p	typeref:typename:void	signature:(SDLTest_CommonState * state)
SDLTest_CommonState	SDL_test_common.h	/^} SDLTest_CommonState;$/;"	kind:t	typeref:struct:__anoncae410850108
SDLTest_CommonUsage	SDL_test_common.h	/^const char *SDLTest_CommonUsage(SDLTest_CommonState * state);$/;"	kind:p	typeref:typename:const char *	signature:(SDLTest_CommonState * state)
SDLTest_CompareSurfaces	SDL_test_compare.h	/^int SDLTest_CompareSurfaces(SDL_Surface *surface, SDL_Surface *referenceSurface, int allowable_e/;"	kind:p	typeref:typename:int	signature:(SDL_Surface * surface,SDL_Surface * referenceSurface,int allowable_error)
SDLTest_Crc32Calc	SDL_test_crc32.h	/^int SDLTest_Crc32Calc(SDLTest_Crc32Context * crcContext, CrcUint8 *inBuf, CrcUint32 inLen, CrcUi/;"	kind:p	typeref:typename:int	signature:(SDLTest_Crc32Context * crcContext,CrcUint8 * inBuf,CrcUint32 inLen,CrcUint32 * crc32)
SDLTest_Crc32CalcBuffer	SDL_test_crc32.h	/^int SDLTest_Crc32CalcBuffer(SDLTest_Crc32Context * crcContext, CrcUint8 *inBuf, CrcUint32 inLen,/;"	kind:p	typeref:typename:int	signature:(SDLTest_Crc32Context * crcContext,CrcUint8 * inBuf,CrcUint32 inLen,CrcUint32 * crc32)
SDLTest_Crc32CalcEnd	SDL_test_crc32.h	/^int SDLTest_Crc32CalcEnd(SDLTest_Crc32Context * crcContext, CrcUint32 *crc32);$/;"	kind:p	typeref:typename:int	signature:(SDLTest_Crc32Context * crcContext,CrcUint32 * crc32)
SDLTest_Crc32CalcStart	SDL_test_crc32.h	/^int SDLTest_Crc32CalcStart(SDLTest_Crc32Context * crcContext, CrcUint32 *crc32);$/;"	kind:p	typeref:typename:int	signature:(SDLTest_Crc32Context * crcContext,CrcUint32 * crc32)
SDLTest_Crc32Context	SDL_test_crc32.h	/^  } SDLTest_Crc32Context;$/;"	kind:t	typeref:struct:__anon048dabd90108
SDLTest_Crc32Done	SDL_test_crc32.h	/^int SDLTest_Crc32Done(SDLTest_Crc32Context * crcContext);$/;"	kind:p	typeref:typename:int	signature:(SDLTest_Crc32Context * crcContext)
SDLTest_Crc32Init	SDL_test_crc32.h	/^ int SDLTest_Crc32Init(SDLTest_Crc32Context * crcContext);$/;"	kind:p	typeref:typename:int	signature:(SDLTest_Crc32Context * crcContext)
SDLTest_DrawCharacter	SDL_test_font.h	/^int SDLTest_DrawCharacter(SDL_Renderer *renderer, int x, int y, char c);$/;"	kind:p	typeref:typename:int	signature:(SDL_Renderer * renderer,int x,int y,char c)
SDLTest_DrawString	SDL_test_font.h	/^int SDLTest_DrawString(SDL_Renderer *renderer, int x, int y, const char *s);$/;"	kind:p	typeref:typename:int	signature:(SDL_Renderer * renderer,int x,int y,const char * s)
SDLTest_FuzzerInit	SDL_test_fuzzer.h	/^void SDLTest_FuzzerInit(Uint64 execKey);$/;"	kind:p	typeref:typename:void	signature:(Uint64 execKey)
SDLTest_GenerateRunSeed	SDL_test_harness.h	/^char *SDLTest_GenerateRunSeed(const int length);$/;"	kind:p	typeref:typename:char *	signature:(const int length)
SDLTest_GetFuzzerInvocationCount	SDL_test_fuzzer.h	/^int SDLTest_GetFuzzerInvocationCount(void);$/;"	kind:p	typeref:typename:int	signature:(void)
SDLTest_ImageBlit	SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlit(void);$/;"	kind:p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitAlpha	SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitAlpha(void);$/;"	kind:p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitBlend	SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlend(void);$/;"	kind:p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitBlendAdd	SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlendAdd(void);$/;"	kind:p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitBlendAll	SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlendAll(void);$/;"	kind:p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitBlendMod	SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlendMod(void);$/;"	kind:p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitBlendNone	SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlendNone(void);$/;"	kind:p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageBlitColor	SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitColor(void);$/;"	kind:p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImageFace	SDL_test_images.h	/^SDL_Surface *SDLTest_ImageFace(void);$/;"	kind:p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImagePrimitives	SDL_test_images.h	/^SDL_Surface *SDLTest_ImagePrimitives(void);$/;"	kind:p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_ImagePrimitivesBlend	SDL_test_images.h	/^SDL_Surface *SDLTest_ImagePrimitivesBlend(void);$/;"	kind:p	typeref:typename:SDL_Surface *	signature:(void)
SDLTest_Log	SDL_test_log.h	/^void SDLTest_Log(SDL_PRINTF_FORMAT_STRING const char *fmt, ...) SDL_PRINTF_VARARG_FUNC(1);$/;"	kind:p	typeref:typename:void	signature:(SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDLTest_LogAllocations	SDL_test_memory.h	/^void SDLTest_LogAllocations();$/;"	kind:p	typeref:typename:void	signature:()
SDLTest_LogAssertSummary	SDL_test_assert.h	/^void SDLTest_LogAssertSummary(void);$/;"	kind:p	typeref:typename:void	signature:(void)
SDLTest_LogError	SDL_test_log.h	/^void SDLTest_LogError(SDL_PRINTF_FORMAT_STRING const char *fmt, ...) SDL_PRINTF_VARARG_FUNC(1);$/;"	kind:p	typeref:typename:void	signature:(SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDLTest_Md5Context	SDL_test_md5.h	/^  } SDLTest_Md5Context;$/;"	kind:t	typeref:struct:__anon0f7cec620108
SDLTest_Md5Final	SDL_test_md5.h	/^ void SDLTest_Md5Final(SDLTest_Md5Context * mdContext);$/;"	kind:p	typeref:typename:void	signature:(SDLTest_Md5Context * mdContext)
SDLTest_Md5Init	SDL_test_md5.h	/^ void SDLTest_Md5Init(SDLTest_Md5Context * mdContext);$/;"	kind:p	typeref:typename:void	signature:(SDLTest_Md5Context * mdContext)
SDLTest_Md5Update	SDL_test_md5.h	/^ void SDLTest_Md5Update(SDLTest_Md5Context * mdContext, unsigned char *inBuf,$/;"	kind:p	typeref:typename:void	signature:(SDLTest_Md5Context * mdContext,unsigned char * inBuf,unsigned int inLen)
SDLTest_Random	SDL_test_random.h	/^ unsigned int SDLTest_Random(SDLTest_RandomContext *rndContext);$/;"	kind:p	typeref:typename:unsigned int	signature:(SDLTest_RandomContext * rndContext)
SDLTest_RandomAsciiString	SDL_test_fuzzer.h	/^char * SDLTest_RandomAsciiString(void);$/;"	kind:p	typeref:typename:char *	signature:(void)
SDLTest_RandomAsciiStringOfSize	SDL_test_fuzzer.h	/^char * SDLTest_RandomAsciiStringOfSize(int size);$/;"	kind:p	typeref:typename:char *	signature:(int size)
SDLTest_RandomAsciiStringWithMaximumLength	SDL_test_fuzzer.h	/^char * SDLTest_RandomAsciiStringWithMaximumLength(int maxLength);$/;"	kind:p	typeref:typename:char *	signature:(int maxLength)
SDLTest_RandomContext	SDL_test_random.h	/^  } SDLTest_RandomContext;$/;"	kind:t	typeref:struct:__anon6ec27efd0108
SDLTest_RandomDouble	SDL_test_fuzzer.h	/^double SDLTest_RandomDouble(void);$/;"	kind:p	typeref:typename:double	signature:(void)
SDLTest_RandomFloat	SDL_test_fuzzer.h	/^float SDLTest_RandomFloat(void);$/;"	kind:p	typeref:typename:float	signature:(void)
SDLTest_RandomInit	SDL_test_random.h	/^ void SDLTest_RandomInit(SDLTest_RandomContext * rndContext, unsigned int xi,$/;"	kind:p	typeref:typename:void	signature:(SDLTest_RandomContext * rndContext,unsigned int xi,unsigned int ci)
SDLTest_RandomInitTime	SDL_test_random.h	/^ void SDLTest_RandomInitTime(SDLTest_RandomContext *rndContext);$/;"	kind:p	typeref:typename:void	signature:(SDLTest_RandomContext * rndContext)
SDLTest_RandomInt	SDL_test_random.h	/^#define SDLTest_RandomInt(/;"	kind:d	signature:(c)
SDLTest_RandomIntegerInRange	SDL_test_fuzzer.h	/^Sint32 SDLTest_RandomIntegerInRange(Sint32 min, Sint32 max);$/;"	kind:p	typeref:typename:Sint32	signature:(Sint32 min,Sint32 max)
SDLTest_RandomSint16	SDL_test_fuzzer.h	/^Sint16 SDLTest_RandomSint16(void);$/;"	kind:p	typeref:typename:Sint16	signature:(void)
SDLTest_RandomSint16BoundaryValue	SDL_test_fuzzer.h	/^Sint16 SDLTest_RandomSint16BoundaryValue(Sint16 boundary1, Sint16 boundary2, SDL_bool validDomai/;"	kind:p	typeref:typename:Sint16	signature:(Sint16 boundary1,Sint16 boundary2,SDL_bool validDomain)
SDLTest_RandomSint32	SDL_test_fuzzer.h	/^Sint32 SDLTest_RandomSint32(void);$/;"	kind:p	typeref:typename:Sint32	signature:(void)
SDLTest_RandomSint32BoundaryValue	SDL_test_fuzzer.h	/^Sint32 SDLTest_RandomSint32BoundaryValue(Sint32 boundary1, Sint32 boundary2, SDL_bool validDomai/;"	kind:p	typeref:typename:Sint32	signature:(Sint32 boundary1,Sint32 boundary2,SDL_bool validDomain)
SDLTest_RandomSint64	SDL_test_fuzzer.h	/^Sint64 SDLTest_RandomSint64(void);$/;"	kind:p	typeref:typename:Sint64	signature:(void)
SDLTest_RandomSint64BoundaryValue	SDL_test_fuzzer.h	/^Sint64 SDLTest_RandomSint64BoundaryValue(Sint64 boundary1, Sint64 boundary2, SDL_bool validDomai/;"	kind:p	typeref:typename:Sint64	signature:(Sint64 boundary1,Sint64 boundary2,SDL_bool validDomain)
SDLTest_RandomSint8	SDL_test_fuzzer.h	/^Sint8 SDLTest_RandomSint8(void);$/;"	kind:p	typeref:typename:Sint8	signature:(void)
SDLTest_RandomSint8BoundaryValue	SDL_test_fuzzer.h	/^Sint8 SDLTest_RandomSint8BoundaryValue(Sint8 boundary1, Sint8 boundary2, SDL_bool validDomain);$/;"	kind:p	typeref:typename:Sint8	signature:(Sint8 boundary1,Sint8 boundary2,SDL_bool validDomain)
SDLTest_RandomUint16	SDL_test_fuzzer.h	/^Uint16 SDLTest_RandomUint16(void);$/;"	kind:p	typeref:typename:Uint16	signature:(void)
SDLTest_RandomUint16BoundaryValue	SDL_test_fuzzer.h	/^Uint16 SDLTest_RandomUint16BoundaryValue(Uint16 boundary1, Uint16 boundary2, SDL_bool validDomai/;"	kind:p	typeref:typename:Uint16	signature:(Uint16 boundary1,Uint16 boundary2,SDL_bool validDomain)
SDLTest_RandomUint32	SDL_test_fuzzer.h	/^Uint32 SDLTest_RandomUint32(void);$/;"	kind:p	typeref:typename:Uint32	signature:(void)
SDLTest_RandomUint32BoundaryValue	SDL_test_fuzzer.h	/^Uint32 SDLTest_RandomUint32BoundaryValue(Uint32 boundary1, Uint32 boundary2, SDL_bool validDomai/;"	kind:p	typeref:typename:Uint32	signature:(Uint32 boundary1,Uint32 boundary2,SDL_bool validDomain)
SDLTest_RandomUint64	SDL_test_fuzzer.h	/^Uint64 SDLTest_RandomUint64(void);$/;"	kind:p	typeref:typename:Uint64	signature:(void)
SDLTest_RandomUint64BoundaryValue	SDL_test_fuzzer.h	/^Uint64 SDLTest_RandomUint64BoundaryValue(Uint64 boundary1, Uint64 boundary2, SDL_bool validDomai/;"	kind:p	typeref:typename:Uint64	signature:(Uint64 boundary1,Uint64 boundary2,SDL_bool validDomain)
SDLTest_RandomUint8	SDL_test_fuzzer.h	/^Uint8 SDLTest_RandomUint8(void);$/;"	kind:p	typeref:typename:Uint8	signature:(void)
SDLTest_RandomUint8BoundaryValue	SDL_test_fuzzer.h	/^Uint8 SDLTest_RandomUint8BoundaryValue(Uint8 boundary1, Uint8 boundary2, SDL_bool validDomain);$/;"	kind:p	typeref:typename:Uint8	signature:(Uint8 boundary1,Uint8 boundary2,SDL_bool validDomain)
SDLTest_RandomUnitDouble	SDL_test_fuzzer.h	/^double SDLTest_RandomUnitDouble(void);$/;"	kind:p	typeref:typename:double	signature:(void)
SDLTest_RandomUnitFloat	SDL_test_fuzzer.h	/^float SDLTest_RandomUnitFloat(void);$/;"	kind:p	typeref:typename:float	signature:(void)
SDLTest_ResetAssertSummary	SDL_test_assert.h	/^void SDLTest_ResetAssertSummary(void);$/;"	kind:p	typeref:typename:void	signature:(void)
SDLTest_RunSuites	SDL_test_harness.h	/^int SDLTest_RunSuites(SDLTest_TestSuiteReference *testSuites[], const char *userRunSeed, Uint64 /;"	kind:p	typeref:typename:int	signature:(SDLTest_TestSuiteReference * testSuites[],const char * userRunSeed,Uint64 userExecKey,const char * filter,int testIterations)
SDLTest_SurfaceImage_s	SDL_test_images.h	/^typedef struct SDLTest_SurfaceImage_s {$/;"	kind:s
SDLTest_SurfaceImage_s::bytes_per_pixel	SDL_test_images.h	/^  unsigned int bytes_per_pixel; \/* 3:RGB, 4:RGBA *\/$/;"	kind:m	struct:SDLTest_SurfaceImage_s	typeref:typename:unsigned int	access:public
SDLTest_SurfaceImage_s::height	SDL_test_images.h	/^  int height;$/;"	kind:m	struct:SDLTest_SurfaceImage_s	typeref:typename:int	access:public
SDLTest_SurfaceImage_s::pixel_data	SDL_test_images.h	/^  const char *pixel_data;$/;"	kind:m	struct:SDLTest_SurfaceImage_s	typeref:typename:const char *	access:public
SDLTest_SurfaceImage_s::width	SDL_test_images.h	/^  int width;$/;"	kind:m	struct:SDLTest_SurfaceImage_s	typeref:typename:int	access:public
SDLTest_SurfaceImage_t	SDL_test_images.h	/^} SDLTest_SurfaceImage_t;$/;"	kind:t	typeref:struct:SDLTest_SurfaceImage_s
SDLTest_TestCaseFp	SDL_test_harness.h	/^typedef int (*SDLTest_TestCaseFp)(void *arg);$/;"	kind:t	typeref:typename:int (*)(void * arg)
SDLTest_TestCaseReference	SDL_test_harness.h	/^typedef struct SDLTest_TestCaseReference {$/;"	kind:s
SDLTest_TestCaseReference	SDL_test_harness.h	/^} SDLTest_TestCaseReference;$/;"	kind:t	typeref:struct:SDLTest_TestCaseReference
SDLTest_TestCaseReference::description	SDL_test_harness.h	/^    char *description;$/;"	kind:m	struct:SDLTest_TestCaseReference	typeref:typename:char *	access:public
SDLTest_TestCaseReference::enabled	SDL_test_harness.h	/^    int enabled;$/;"	kind:m	struct:SDLTest_TestCaseReference	typeref:typename:int	access:public
SDLTest_TestCaseReference::name	SDL_test_harness.h	/^    char *name;$/;"	kind:m	struct:SDLTest_TestCaseReference	typeref:typename:char *	access:public
SDLTest_TestCaseReference::testCase	SDL_test_harness.h	/^    SDLTest_TestCaseFp testCase;$/;"	kind:m	struct:SDLTest_TestCaseReference	typeref:typename:SDLTest_TestCaseFp	access:public
SDLTest_TestCaseSetUpFp	SDL_test_harness.h	/^typedef void (*SDLTest_TestCaseSetUpFp)(void *arg);$/;"	kind:t	typeref:typename:void (*)(void * arg)
SDLTest_TestCaseTearDownFp	SDL_test_harness.h	/^typedef void  (*SDLTest_TestCaseTearDownFp)(void *arg);$/;"	kind:t	typeref:typename:void (*)(void * arg)
SDLTest_TestSuiteReference	SDL_test_harness.h	/^typedef struct SDLTest_TestSuiteReference {$/;"	kind:s
SDLTest_TestSuiteReference	SDL_test_harness.h	/^} SDLTest_TestSuiteReference;$/;"	kind:t	typeref:struct:SDLTest_TestSuiteReference
SDLTest_TestSuiteReference::name	SDL_test_harness.h	/^    char *name;$/;"	kind:m	struct:SDLTest_TestSuiteReference	typeref:typename:char *	access:public
SDLTest_TestSuiteReference::testCases	SDL_test_harness.h	/^    const SDLTest_TestCaseReference **testCases;$/;"	kind:m	struct:SDLTest_TestSuiteReference	typeref:typename:const SDLTest_TestCaseReference **	access:public
SDLTest_TestSuiteReference::testSetUp	SDL_test_harness.h	/^    SDLTest_TestCaseSetUpFp testSetUp;$/;"	kind:m	struct:SDLTest_TestSuiteReference	typeref:typename:SDLTest_TestCaseSetUpFp	access:public
SDLTest_TestSuiteReference::testTearDown	SDL_test_harness.h	/^    SDLTest_TestCaseTearDownFp testTearDown;$/;"	kind:m	struct:SDLTest_TestSuiteReference	typeref:typename:SDLTest_TestCaseTearDownFp	access:public
SDLTest_TrackAllocations	SDL_test_memory.h	/^int SDLTest_TrackAllocations();$/;"	kind:p	typeref:typename:int	signature:()
SDL_ADDEVENT	SDL_events.h	/^    SDL_ADDEVENT,$/;"	kind:e	enum:__anonb66d4d920203	access:public
SDL_ALPHA_OPAQUE	SDL_pixels.h	/^#define SDL_ALPHA_OPAQUE /;"	kind:d
SDL_ALPHA_TRANSPARENT	SDL_pixels.h	/^#define SDL_ALPHA_TRANSPARENT /;"	kind:d
SDL_ANDROID_EXTERNAL_STORAGE_READ	SDL_system.h	/^#define SDL_ANDROID_EXTERNAL_STORAGE_READ /;"	kind:d
SDL_ANDROID_EXTERNAL_STORAGE_WRITE	SDL_system.h	/^#define SDL_ANDROID_EXTERNAL_STORAGE_WRITE /;"	kind:d
SDL_APP_DIDENTERBACKGROUND	SDL_events.h	/^    SDL_APP_DIDENTERBACKGROUND, \/**< The application did enter the background and may not get C/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_APP_DIDENTERFOREGROUND	SDL_events.h	/^    SDL_APP_DIDENTERFOREGROUND, \/**< The application is now interactive$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_APP_LOWMEMORY	SDL_events.h	/^    SDL_APP_LOWMEMORY,          \/**< The application is low on memory, free memory if possible.$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_APP_TERMINATING	SDL_events.h	/^    SDL_APP_TERMINATING,        \/**< The application is being terminated by the OS$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_APP_WILLENTERBACKGROUND	SDL_events.h	/^    SDL_APP_WILLENTERBACKGROUND, \/**< The application is about to enter the background$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_APP_WILLENTERFOREGROUND	SDL_events.h	/^    SDL_APP_WILLENTERFOREGROUND, \/**< The application is about to enter the foreground$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_ARRAYORDER_ABGR	SDL_pixels.h	/^    SDL_ARRAYORDER_ABGR$/;"	kind:e	enum:__anon203721d20403	access:public
SDL_ARRAYORDER_ARGB	SDL_pixels.h	/^    SDL_ARRAYORDER_ARGB,$/;"	kind:e	enum:__anon203721d20403	access:public
SDL_ARRAYORDER_BGR	SDL_pixels.h	/^    SDL_ARRAYORDER_BGR,$/;"	kind:e	enum:__anon203721d20403	access:public
SDL_ARRAYORDER_BGRA	SDL_pixels.h	/^    SDL_ARRAYORDER_BGRA,$/;"	kind:e	enum:__anon203721d20403	access:public
SDL_ARRAYORDER_NONE	SDL_pixels.h	/^    SDL_ARRAYORDER_NONE,$/;"	kind:e	enum:__anon203721d20403	access:public
SDL_ARRAYORDER_RGB	SDL_pixels.h	/^    SDL_ARRAYORDER_RGB,$/;"	kind:e	enum:__anon203721d20403	access:public
SDL_ARRAYORDER_RGBA	SDL_pixels.h	/^    SDL_ARRAYORDER_RGBA,$/;"	kind:e	enum:__anon203721d20403	access:public
SDL_ASSEMBLY_ROUTINES	SDL_config.h	/^#define SDL_ASSEMBLY_ROUTINES /;"	kind:d
SDL_ASSERTION_ABORT	SDL_assert.h	/^    SDL_ASSERTION_ABORT,  \/**< Terminate the program. *\/$/;"	kind:e	enum:__anon3e7b8b8f0103	access:public
SDL_ASSERTION_ALWAYS_IGNORE	SDL_assert.h	/^    SDL_ASSERTION_ALWAYS_IGNORE  \/**< Ignore the assert from now on. *\/$/;"	kind:e	enum:__anon3e7b8b8f0103	access:public
SDL_ASSERTION_BREAK	SDL_assert.h	/^    SDL_ASSERTION_BREAK,  \/**< Make the debugger trigger a breakpoint. *\/$/;"	kind:e	enum:__anon3e7b8b8f0103	access:public
SDL_ASSERTION_IGNORE	SDL_assert.h	/^    SDL_ASSERTION_IGNORE,  \/**< Ignore the assert. *\/$/;"	kind:e	enum:__anon3e7b8b8f0103	access:public
SDL_ASSERTION_RETRY	SDL_assert.h	/^    SDL_ASSERTION_RETRY,  \/**< Retry the assert immediately. *\/$/;"	kind:e	enum:__anon3e7b8b8f0103	access:public
SDL_ASSERT_LEVEL	SDL_assert.h	/^#define SDL_ASSERT_LEVEL /;"	kind:d
SDL_AUDIOCVT_MAX_FILTERS	SDL_audio.h	/^#define SDL_AUDIOCVT_MAX_FILTERS /;"	kind:d
SDL_AUDIOCVT_PACKED	SDL_audio.h	/^#define SDL_AUDIOCVT_PACKED /;"	kind:d
SDL_AUDIOCVT_PACKED	SDL_audio.h	/^#define SDL_AUDIOCVT_PACKED$/;"	kind:d
SDL_AUDIODEVICEADDED	SDL_events.h	/^    SDL_AUDIODEVICEADDED = 0x1100, \/**< A new audio device is available *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_AUDIODEVICEREMOVED	SDL_events.h	/^    SDL_AUDIODEVICEREMOVED,        \/**< An audio device has been removed. *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_AUDIO_ALLOW_ANY_CHANGE	SDL_audio.h	/^#define SDL_AUDIO_ALLOW_ANY_CHANGE /;"	kind:d
SDL_AUDIO_ALLOW_CHANNELS_CHANGE	SDL_audio.h	/^#define SDL_AUDIO_ALLOW_CHANNELS_CHANGE /;"	kind:d
SDL_AUDIO_ALLOW_FORMAT_CHANGE	SDL_audio.h	/^#define SDL_AUDIO_ALLOW_FORMAT_CHANGE /;"	kind:d
SDL_AUDIO_ALLOW_FREQUENCY_CHANGE	SDL_audio.h	/^#define SDL_AUDIO_ALLOW_FREQUENCY_CHANGE /;"	kind:d
SDL_AUDIO_ALLOW_SAMPLES_CHANGE	SDL_audio.h	/^#define SDL_AUDIO_ALLOW_SAMPLES_CHANGE /;"	kind:d
SDL_AUDIO_BITSIZE	SDL_audio.h	/^#define SDL_AUDIO_BITSIZE(/;"	kind:d	signature:(x)
SDL_AUDIO_DRIVER_DISK	SDL_config.h	/^#define SDL_AUDIO_DRIVER_DISK /;"	kind:d
SDL_AUDIO_DRIVER_DSOUND	SDL_config.h	/^#define SDL_AUDIO_DRIVER_DSOUND /;"	kind:d
SDL_AUDIO_DRIVER_DUMMY	SDL_config.h	/^#define SDL_AUDIO_DRIVER_DUMMY /;"	kind:d
SDL_AUDIO_DRIVER_WASAPI	SDL_config.h	/^#define SDL_AUDIO_DRIVER_WASAPI /;"	kind:d
SDL_AUDIO_DRIVER_WINMM	SDL_config.h	/^#define SDL_AUDIO_DRIVER_WINMM /;"	kind:d
SDL_AUDIO_ISBIGENDIAN	SDL_audio.h	/^#define SDL_AUDIO_ISBIGENDIAN(/;"	kind:d	signature:(x)
SDL_AUDIO_ISFLOAT	SDL_audio.h	/^#define SDL_AUDIO_ISFLOAT(/;"	kind:d	signature:(x)
SDL_AUDIO_ISINT	SDL_audio.h	/^#define SDL_AUDIO_ISINT(/;"	kind:d	signature:(x)
SDL_AUDIO_ISLITTLEENDIAN	SDL_audio.h	/^#define SDL_AUDIO_ISLITTLEENDIAN(/;"	kind:d	signature:(x)
SDL_AUDIO_ISSIGNED	SDL_audio.h	/^#define SDL_AUDIO_ISSIGNED(/;"	kind:d	signature:(x)
SDL_AUDIO_ISUNSIGNED	SDL_audio.h	/^#define SDL_AUDIO_ISUNSIGNED(/;"	kind:d	signature:(x)
SDL_AUDIO_MASK_BITSIZE	SDL_audio.h	/^#define SDL_AUDIO_MASK_BITSIZE /;"	kind:d
SDL_AUDIO_MASK_DATATYPE	SDL_audio.h	/^#define SDL_AUDIO_MASK_DATATYPE /;"	kind:d
SDL_AUDIO_MASK_ENDIAN	SDL_audio.h	/^#define SDL_AUDIO_MASK_ENDIAN /;"	kind:d
SDL_AUDIO_MASK_SIGNED	SDL_audio.h	/^#define SDL_AUDIO_MASK_SIGNED /;"	kind:d
SDL_AUDIO_PAUSED	SDL_audio.h	/^    SDL_AUDIO_PAUSED$/;"	kind:e	enum:__anonbfb03fef0103	access:public
SDL_AUDIO_PLAYING	SDL_audio.h	/^    SDL_AUDIO_PLAYING,$/;"	kind:e	enum:__anonbfb03fef0103	access:public
SDL_AUDIO_STOPPED	SDL_audio.h	/^    SDL_AUDIO_STOPPED = 0,$/;"	kind:e	enum:__anonbfb03fef0103	access:public
SDL_AddEventWatch	SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_AddEventWatch(SDL_EventFilter filter,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_EventFilter filter,void * userdata)
SDL_AddHintCallback	SDL_hints.h	/^extern DECLSPEC void SDLCALL SDL_AddHintCallback(const char *name,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(const char * name,SDL_HintCallback callback,void * userdata)
SDL_AddTimer	SDL_timer.h	/^extern DECLSPEC SDL_TimerID SDLCALL SDL_AddTimer(Uint32 interval,$/;"	kind:p	typeref:typename:DECLSPEC SDL_TimerID SDLCALL	signature:(Uint32 interval,SDL_TimerCallback callback,void * param)
SDL_AllocFormat	SDL_pixels.h	/^extern DECLSPEC SDL_PixelFormat * SDLCALL SDL_AllocFormat(Uint32 pixel_format);$/;"	kind:p	typeref:typename:DECLSPEC SDL_PixelFormat * SDLCALL	signature:(Uint32 pixel_format)
SDL_AllocPalette	SDL_pixels.h	/^extern DECLSPEC SDL_Palette *SDLCALL SDL_AllocPalette(int ncolors);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Palette * SDLCALL	signature:(int ncolors)
SDL_AllocRW	SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_AllocRW(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(void)
SDL_AndroidBackButton	SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_AndroidBackButton(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_AndroidGetActivity	SDL_system.h	/^extern DECLSPEC void * SDLCALL SDL_AndroidGetActivity(void);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void)
SDL_AndroidGetExternalStoragePath	SDL_system.h	/^extern DECLSPEC const char * SDLCALL SDL_AndroidGetExternalStoragePath(void);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_AndroidGetExternalStorageState	SDL_system.h	/^extern DECLSPEC int SDLCALL SDL_AndroidGetExternalStorageState(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_AndroidGetInternalStoragePath	SDL_system.h	/^extern DECLSPEC const char * SDLCALL SDL_AndroidGetInternalStoragePath(void);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_AndroidGetJNIEnv	SDL_system.h	/^extern DECLSPEC void * SDLCALL SDL_AndroidGetJNIEnv(void);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void)
SDL_AssertData	SDL_assert.h	/^typedef struct SDL_AssertData$/;"	kind:s
SDL_AssertData	SDL_assert.h	/^} SDL_AssertData;$/;"	kind:t	typeref:struct:SDL_AssertData
SDL_AssertData::always_ignore	SDL_assert.h	/^    int always_ignore;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:int	access:public
SDL_AssertData::condition	SDL_assert.h	/^    const char *condition;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:const char *	access:public
SDL_AssertData::filename	SDL_assert.h	/^    const char *filename;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:const char *	access:public
SDL_AssertData::function	SDL_assert.h	/^    const char *function;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:const char *	access:public
SDL_AssertData::linenum	SDL_assert.h	/^    int linenum;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:int	access:public
SDL_AssertData::next	SDL_assert.h	/^    const struct SDL_AssertData *next;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:const struct SDL_AssertData *	access:public
SDL_AssertData::trigger_count	SDL_assert.h	/^    unsigned int trigger_count;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:unsigned int	access:public
SDL_AssertState	SDL_assert.h	/^} SDL_AssertState;$/;"	kind:t	typeref:enum:__anon3e7b8b8f0103
SDL_AssertionHandler	SDL_assert.h	/^typedef SDL_AssertState (SDLCALL *SDL_AssertionHandler)($/;"	kind:t	typeref:typename:SDL_AssertState (SDLCALL *)(const SDL_AssertData * data,void * userdata)
SDL_AtomicAdd	SDL_atomic.h	/^extern DECLSPEC int SDLCALL SDL_AtomicAdd(SDL_atomic_t *a, int v);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_atomic_t * a,int v)
SDL_AtomicCAS	SDL_atomic.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_AtomicCAS(SDL_atomic_t *a, int oldval, int newval);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_atomic_t * a,int oldval,int newval)
SDL_AtomicCASPtr	SDL_atomic.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_AtomicCASPtr(void **a, void *oldval, void *newval);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void ** a,void * oldval,void * newval)
SDL_AtomicDecRef	SDL_atomic.h	/^#define SDL_AtomicDecRef(/;"	kind:d	signature:(a)
SDL_AtomicGet	SDL_atomic.h	/^extern DECLSPEC int SDLCALL SDL_AtomicGet(SDL_atomic_t *a);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_atomic_t * a)
SDL_AtomicGetPtr	SDL_atomic.h	/^extern DECLSPEC void* SDLCALL SDL_AtomicGetPtr(void **a);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void ** a)
SDL_AtomicIncRef	SDL_atomic.h	/^#define SDL_AtomicIncRef(/;"	kind:d	signature:(a)
SDL_AtomicLock	SDL_atomic.h	/^extern DECLSPEC void SDLCALL SDL_AtomicLock(SDL_SpinLock *lock);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_SpinLock * lock)
SDL_AtomicSet	SDL_atomic.h	/^extern DECLSPEC int SDLCALL SDL_AtomicSet(SDL_atomic_t *a, int v);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_atomic_t * a,int v)
SDL_AtomicSetPtr	SDL_atomic.h	/^extern DECLSPEC void* SDLCALL SDL_AtomicSetPtr(void **a, void* v);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void ** a,void * v)
SDL_AtomicTryLock	SDL_atomic.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_AtomicTryLock(SDL_SpinLock *lock);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_SpinLock * lock)
SDL_AtomicUnlock	SDL_atomic.h	/^extern DECLSPEC void SDLCALL SDL_AtomicUnlock(SDL_SpinLock *lock);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_SpinLock * lock)
SDL_AudioCVT	SDL_audio.h	/^typedef struct SDL_AudioCVT$/;"	kind:s
SDL_AudioCVT	SDL_audio.h	/^} SDL_AUDIOCVT_PACKED SDL_AudioCVT;$/;"	kind:t	typeref:struct:SDL_AudioCVT SDL_AUDIOCVT_PACKED
SDL_AudioCVT::buf	SDL_audio.h	/^    Uint8 *buf;                 \/**< Buffer to hold entire audio data *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:Uint8 *	access:public
SDL_AudioCVT::dst_format	SDL_audio.h	/^    SDL_AudioFormat dst_format; \/**< Target audio format *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:SDL_AudioFormat	access:public
SDL_AudioCVT::filter_index	SDL_audio.h	/^    int filter_index;           \/**< Current audio conversion function *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::filters	SDL_audio.h	/^    SDL_AudioFilter filters[SDL_AUDIOCVT_MAX_FILTERS + 1]; \/**< NULL-terminated list of filter /;"	kind:m	struct:SDL_AudioCVT	typeref:typename:SDL_AudioFilter[]	access:public
SDL_AudioCVT::len	SDL_audio.h	/^    int len;                    \/**< Length of original audio buffer *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::len_cvt	SDL_audio.h	/^    int len_cvt;                \/**< Length of converted audio buffer *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::len_mult	SDL_audio.h	/^    int len_mult;               \/**< buffer must be len*len_mult big *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::len_ratio	SDL_audio.h	/^    double len_ratio;           \/**< Given len, final size is len*len_ratio *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:double	access:public
SDL_AudioCVT::needed	SDL_audio.h	/^    int needed;                 \/**< Set to 1 if conversion possible *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:int	access:public
SDL_AudioCVT::rate_incr	SDL_audio.h	/^    double rate_incr;           \/**< Rate conversion increment *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:double	access:public
SDL_AudioCVT::src_format	SDL_audio.h	/^    SDL_AudioFormat src_format; \/**< Source audio format *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:SDL_AudioFormat	access:public
SDL_AudioCallback	SDL_audio.h	/^typedef void (SDLCALL * SDL_AudioCallback) (void *userdata, Uint8 * stream,$/;"	kind:t	typeref:typename:void (SDLCALL *)(void * userdata,Uint8 * stream,int len)
SDL_AudioDeviceEvent	SDL_events.h	/^typedef struct SDL_AudioDeviceEvent$/;"	kind:s
SDL_AudioDeviceEvent	SDL_events.h	/^} SDL_AudioDeviceEvent;$/;"	kind:t	typeref:struct:SDL_AudioDeviceEvent
SDL_AudioDeviceEvent::iscapture	SDL_events.h	/^    Uint8 iscapture;    \/**< zero if an output device, non-zero if a capture device. *\/$/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
SDL_AudioDeviceEvent::padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
SDL_AudioDeviceEvent::padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
SDL_AudioDeviceEvent::padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
SDL_AudioDeviceEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint32	access:public
SDL_AudioDeviceEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_AUDIODEVICEADDED, or ::SDL_AUDIODEVICEREMOVED *\/$/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint32	access:public
SDL_AudioDeviceEvent::which	SDL_events.h	/^    Uint32 which;       \/**< The audio device index for the ADDED event (valid until next SDL_G/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint32	access:public
SDL_AudioDeviceID	SDL_audio.h	/^typedef Uint32 SDL_AudioDeviceID;$/;"	kind:t	typeref:typename:Uint32
SDL_AudioFilter	SDL_audio.h	/^typedef void (SDLCALL * SDL_AudioFilter) (struct SDL_AudioCVT * cvt,$/;"	kind:t	typeref:typename:void (SDLCALL *)(struct SDL_AudioCVT * cvt,SDL_AudioFormat format)
SDL_AudioFormat	SDL_audio.h	/^typedef Uint16 SDL_AudioFormat;$/;"	kind:t	typeref:typename:Uint16
SDL_AudioInit	SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_AudioInit(const char *driver_name);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * driver_name)
SDL_AudioQuit	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_AudioQuit(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_AudioSpec	SDL_audio.h	/^typedef struct SDL_AudioSpec$/;"	kind:s
SDL_AudioSpec	SDL_audio.h	/^} SDL_AudioSpec;$/;"	kind:t	typeref:struct:SDL_AudioSpec
SDL_AudioSpec::callback	SDL_audio.h	/^    SDL_AudioCallback callback; \/**< Callback that feeds the audio device (NULL to use SDL_Queu/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:SDL_AudioCallback	access:public
SDL_AudioSpec::channels	SDL_audio.h	/^    Uint8 channels;             \/**< Number of channels: 1 mono, 2 stereo *\/$/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:Uint8	access:public
SDL_AudioSpec::format	SDL_audio.h	/^    SDL_AudioFormat format;     \/**< Audio data format *\/$/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:SDL_AudioFormat	access:public
SDL_AudioSpec::freq	SDL_audio.h	/^    int freq;                   \/**< DSP frequency -- samples per second *\/$/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:int	access:public
SDL_AudioSpec::padding	SDL_audio.h	/^    Uint16 padding;             \/**< Necessary for some compile environments *\/$/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
SDL_AudioSpec::samples	SDL_audio.h	/^    Uint16 samples;             \/**< Audio buffer size in sample FRAMES (total samples divided /;"	kind:m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
SDL_AudioSpec::silence	SDL_audio.h	/^    Uint8 silence;              \/**< Audio buffer silence value (calculated) *\/$/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:Uint8	access:public
SDL_AudioSpec::size	SDL_audio.h	/^    Uint32 size;                \/**< Audio buffer size in bytes (calculated) *\/$/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:Uint32	access:public
SDL_AudioSpec::userdata	SDL_audio.h	/^    void *userdata;             \/**< Userdata passed to callback (ignored for NULL callbacks). /;"	kind:m	struct:SDL_AudioSpec	typeref:typename:void *	access:public
SDL_AudioStatus	SDL_audio.h	/^} SDL_AudioStatus;$/;"	kind:t	typeref:enum:__anonbfb03fef0103
SDL_AudioStream	SDL_audio.h	/^typedef struct _SDL_AudioStream SDL_AudioStream;$/;"	kind:t	typeref:struct:_SDL_AudioStream
SDL_AudioStreamAvailable	SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_AudioStreamAvailable(SDL_AudioStream *stream);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioStream * stream)
SDL_AudioStreamClear	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_AudioStreamClear(SDL_AudioStream *stream);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioStream * stream)
SDL_AudioStreamFlush	SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_AudioStreamFlush(SDL_AudioStream *stream);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioStream * stream)
SDL_AudioStreamGet	SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_AudioStreamGet(SDL_AudioStream *stream, void *buf, int len);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioStream * stream,void * buf,int len)
SDL_AudioStreamPut	SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_AudioStreamPut(SDL_AudioStream *stream, const void *buf, int len/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioStream * stream,const void * buf,int len)
SDL_BIG_ENDIAN	SDL_endian.h	/^#define SDL_BIG_ENDIAN /;"	kind:d
SDL_BITMAPORDER_1234	SDL_pixels.h	/^    SDL_BITMAPORDER_1234$/;"	kind:e	enum:__anon203721d20203	access:public
SDL_BITMAPORDER_4321	SDL_pixels.h	/^    SDL_BITMAPORDER_4321,$/;"	kind:e	enum:__anon203721d20203	access:public
SDL_BITMAPORDER_NONE	SDL_pixels.h	/^    SDL_BITMAPORDER_NONE,$/;"	kind:e	enum:__anon203721d20203	access:public
SDL_BITSPERPIXEL	SDL_pixels.h	/^#define SDL_BITSPERPIXEL(/;"	kind:d	signature:(X)
SDL_BLENDFACTOR_DST_ALPHA	SDL_blendmode.h	/^    SDL_BLENDFACTOR_DST_ALPHA           = 0x9,  \/**< dstA, dstA, dstA, dstA *\/$/;"	kind:e	enum:__anon544b6ca70303	access:public
SDL_BLENDFACTOR_DST_COLOR	SDL_blendmode.h	/^    SDL_BLENDFACTOR_DST_COLOR           = 0x7,  \/**< dstR, dstG, dstB, dstA *\/$/;"	kind:e	enum:__anon544b6ca70303	access:public
SDL_BLENDFACTOR_ONE	SDL_blendmode.h	/^    SDL_BLENDFACTOR_ONE                 = 0x2,  \/**< 1, 1, 1, 1 *\/$/;"	kind:e	enum:__anon544b6ca70303	access:public
SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA	SDL_blendmode.h	/^    SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA = 0xA   \/**< 1-dstA, 1-dstA, 1-dstA, 1-dstA *\/$/;"	kind:e	enum:__anon544b6ca70303	access:public
SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR	SDL_blendmode.h	/^    SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR = 0x8,  \/**< 1-dstR, 1-dstG, 1-dstB, 1-dstA *\/$/;"	kind:e	enum:__anon544b6ca70303	access:public
SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA	SDL_blendmode.h	/^    SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA = 0x6,  \/**< 1-srcA, 1-srcA, 1-srcA, 1-srcA *\/$/;"	kind:e	enum:__anon544b6ca70303	access:public
SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR	SDL_blendmode.h	/^    SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR = 0x4,  \/**< 1-srcR, 1-srcG, 1-srcB, 1-srcA *\/$/;"	kind:e	enum:__anon544b6ca70303	access:public
SDL_BLENDFACTOR_SRC_ALPHA	SDL_blendmode.h	/^    SDL_BLENDFACTOR_SRC_ALPHA           = 0x5,  \/**< srcA, srcA, srcA, srcA *\/$/;"	kind:e	enum:__anon544b6ca70303	access:public
SDL_BLENDFACTOR_SRC_COLOR	SDL_blendmode.h	/^    SDL_BLENDFACTOR_SRC_COLOR           = 0x3,  \/**< srcR, srcG, srcB, srcA *\/$/;"	kind:e	enum:__anon544b6ca70303	access:public
SDL_BLENDFACTOR_ZERO	SDL_blendmode.h	/^    SDL_BLENDFACTOR_ZERO                = 0x1,  \/**< 0, 0, 0, 0 *\/$/;"	kind:e	enum:__anon544b6ca70303	access:public
SDL_BLENDMODE_ADD	SDL_blendmode.h	/^    SDL_BLENDMODE_ADD = 0x00000002,      \/**< additive blending$/;"	kind:e	enum:__anon544b6ca70103	access:public
SDL_BLENDMODE_BLEND	SDL_blendmode.h	/^    SDL_BLENDMODE_BLEND = 0x00000001,    \/**< alpha blending$/;"	kind:e	enum:__anon544b6ca70103	access:public
SDL_BLENDMODE_INVALID	SDL_blendmode.h	/^    SDL_BLENDMODE_INVALID = 0x7FFFFFFF$/;"	kind:e	enum:__anon544b6ca70103	access:public
SDL_BLENDMODE_MOD	SDL_blendmode.h	/^    SDL_BLENDMODE_MOD = 0x00000004,      \/**< color modulate$/;"	kind:e	enum:__anon544b6ca70103	access:public
SDL_BLENDMODE_NONE	SDL_blendmode.h	/^    SDL_BLENDMODE_NONE = 0x00000000,     \/**< no blending$/;"	kind:e	enum:__anon544b6ca70103	access:public
SDL_BLENDOPERATION_ADD	SDL_blendmode.h	/^    SDL_BLENDOPERATION_ADD              = 0x1,  \/**< dst + src: supported by all renderers *\/$/;"	kind:e	enum:__anon544b6ca70203	access:public
SDL_BLENDOPERATION_MAXIMUM	SDL_blendmode.h	/^    SDL_BLENDOPERATION_MAXIMUM          = 0x5   \/**< max(dst, src) : supported by D3D11 *\/$/;"	kind:e	enum:__anon544b6ca70203	access:public
SDL_BLENDOPERATION_MINIMUM	SDL_blendmode.h	/^    SDL_BLENDOPERATION_MINIMUM          = 0x4,  \/**< min(dst, src) : supported by D3D11 *\/$/;"	kind:e	enum:__anon544b6ca70203	access:public
SDL_BLENDOPERATION_REV_SUBTRACT	SDL_blendmode.h	/^    SDL_BLENDOPERATION_REV_SUBTRACT     = 0x3,  \/**< src - dst : supported by D3D9, D3D11, Open/;"	kind:e	enum:__anon544b6ca70203	access:public
SDL_BLENDOPERATION_SUBTRACT	SDL_blendmode.h	/^    SDL_BLENDOPERATION_SUBTRACT         = 0x2,  \/**< dst - src : supported by D3D9, D3D11, Open/;"	kind:e	enum:__anon544b6ca70203	access:public
SDL_BUTTON	SDL_mouse.h	/^#define SDL_BUTTON(/;"	kind:d	signature:(X)
SDL_BUTTON_LEFT	SDL_mouse.h	/^#define SDL_BUTTON_LEFT /;"	kind:d
SDL_BUTTON_LMASK	SDL_mouse.h	/^#define SDL_BUTTON_LMASK /;"	kind:d
SDL_BUTTON_MIDDLE	SDL_mouse.h	/^#define SDL_BUTTON_MIDDLE /;"	kind:d
SDL_BUTTON_MMASK	SDL_mouse.h	/^#define SDL_BUTTON_MMASK /;"	kind:d
SDL_BUTTON_RIGHT	SDL_mouse.h	/^#define SDL_BUTTON_RIGHT /;"	kind:d
SDL_BUTTON_RMASK	SDL_mouse.h	/^#define SDL_BUTTON_RMASK /;"	kind:d
SDL_BUTTON_X1	SDL_mouse.h	/^#define SDL_BUTTON_X1 /;"	kind:d
SDL_BUTTON_X1MASK	SDL_mouse.h	/^#define SDL_BUTTON_X1MASK /;"	kind:d
SDL_BUTTON_X2	SDL_mouse.h	/^#define SDL_BUTTON_X2 /;"	kind:d
SDL_BUTTON_X2MASK	SDL_mouse.h	/^#define SDL_BUTTON_X2MASK /;"	kind:d
SDL_BYTEORDER	SDL_endian.h	/^#define SDL_BYTEORDER /;"	kind:d
SDL_BYTESPERPIXEL	SDL_pixels.h	/^#define SDL_BYTESPERPIXEL(/;"	kind:d	signature:(X)
SDL_BlendFactor	SDL_blendmode.h	/^} SDL_BlendFactor;$/;"	kind:t	typeref:enum:__anon544b6ca70303
SDL_BlendMode	SDL_blendmode.h	/^} SDL_BlendMode;$/;"	kind:t	typeref:enum:__anon544b6ca70103
SDL_BlendOperation	SDL_blendmode.h	/^} SDL_BlendOperation;$/;"	kind:t	typeref:enum:__anon544b6ca70203
SDL_BlitScaled	SDL_surface.h	/^#define SDL_BlitScaled /;"	kind:d
SDL_BlitSurface	SDL_surface.h	/^#define SDL_BlitSurface /;"	kind:d
SDL_BuildAudioCVT	SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_BuildAudioCVT(SDL_AudioCVT * cvt,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioCVT * cvt,SDL_AudioFormat src_format,Uint8 src_channels,int src_rate,SDL_AudioFormat dst_format,Uint8 dst_channels,int dst_rate)
SDL_CACHELINE_SIZE	SDL_cpuinfo.h	/^#define SDL_CACHELINE_SIZE /;"	kind:d
SDL_CLIPBOARDUPDATE	SDL_events.h	/^    SDL_CLIPBOARDUPDATE = 0x900, \/**< The clipboard changed *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_COMPILEDVERSION	SDL_version.h	/^#define SDL_COMPILEDVERSION /;"	kind:d
SDL_COMPILE_TIME_ASSERT	SDL_stdinc.h	/^#define SDL_COMPILE_TIME_ASSERT(/;"	kind:d	signature:(name,x)
SDL_CONTROLLERAXISMOTION	SDL_events.h	/^    SDL_CONTROLLERAXISMOTION  = 0x650, \/**< Game controller axis motion *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_CONTROLLERBUTTONDOWN	SDL_events.h	/^    SDL_CONTROLLERBUTTONDOWN,          \/**< Game controller button pressed *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_CONTROLLERBUTTONUP	SDL_events.h	/^    SDL_CONTROLLERBUTTONUP,            \/**< Game controller button released *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_CONTROLLERDEVICEADDED	SDL_events.h	/^    SDL_CONTROLLERDEVICEADDED,         \/**< A new Game controller has been inserted into the sy/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_CONTROLLERDEVICEREMAPPED	SDL_events.h	/^    SDL_CONTROLLERDEVICEREMAPPED,      \/**< The controller mapping was updated *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_CONTROLLERDEVICEREMOVED	SDL_events.h	/^    SDL_CONTROLLERDEVICEREMOVED,       \/**< An opened Game controller has been removed *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_CONTROLLER_AXIS_INVALID	SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_INVALID = -1,$/;"	kind:e	enum:__anon3012f99b0403	access:public
SDL_CONTROLLER_AXIS_LEFTX	SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_LEFTX,$/;"	kind:e	enum:__anon3012f99b0403	access:public
SDL_CONTROLLER_AXIS_LEFTY	SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_LEFTY,$/;"	kind:e	enum:__anon3012f99b0403	access:public
SDL_CONTROLLER_AXIS_MAX	SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_MAX$/;"	kind:e	enum:__anon3012f99b0403	access:public
SDL_CONTROLLER_AXIS_RIGHTX	SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_RIGHTX,$/;"	kind:e	enum:__anon3012f99b0403	access:public
SDL_CONTROLLER_AXIS_RIGHTY	SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_RIGHTY,$/;"	kind:e	enum:__anon3012f99b0403	access:public
SDL_CONTROLLER_AXIS_TRIGGERLEFT	SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_TRIGGERLEFT,$/;"	kind:e	enum:__anon3012f99b0403	access:public
SDL_CONTROLLER_AXIS_TRIGGERRIGHT	SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_TRIGGERRIGHT,$/;"	kind:e	enum:__anon3012f99b0403	access:public
SDL_CONTROLLER_BINDTYPE_AXIS	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BINDTYPE_AXIS,$/;"	kind:e	enum:__anon3012f99b0103	access:public
SDL_CONTROLLER_BINDTYPE_BUTTON	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BINDTYPE_BUTTON,$/;"	kind:e	enum:__anon3012f99b0103	access:public
SDL_CONTROLLER_BINDTYPE_HAT	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BINDTYPE_HAT$/;"	kind:e	enum:__anon3012f99b0103	access:public
SDL_CONTROLLER_BINDTYPE_NONE	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BINDTYPE_NONE = 0,$/;"	kind:e	enum:__anon3012f99b0103	access:public
SDL_CONTROLLER_BUTTON_A	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_A,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_B	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_B,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_BACK	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_BACK,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_DPAD_DOWN	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_DPAD_DOWN,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_DPAD_LEFT	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_DPAD_LEFT,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_DPAD_RIGHT	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_DPAD_RIGHT,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_DPAD_UP	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_DPAD_UP,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_GUIDE	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_GUIDE,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_INVALID	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_INVALID = -1,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_LEFTSHOULDER	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_LEFTSHOULDER,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_LEFTSTICK	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_LEFTSTICK,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_MAX	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_MAX$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_RIGHTSHOULDER	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_RIGHTSHOULDER,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_RIGHTSTICK	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_RIGHTSTICK,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_START	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_START,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_X	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_X,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CONTROLLER_BUTTON_Y	SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_Y,$/;"	kind:e	enum:__anon3012f99b0503	access:public
SDL_CalculateGammaRamp	SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_CalculateGammaRamp(float gamma, Uint16 * ramp);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(float gamma,Uint16 * ramp)
SDL_CaptureMouse	SDL_mouse.h	/^extern DECLSPEC int SDLCALL SDL_CaptureMouse(SDL_bool enabled);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_bool enabled)
SDL_ClearError	SDL_error.h	/^extern DECLSPEC void SDLCALL SDL_ClearError(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_ClearHints	SDL_hints.h	/^extern DECLSPEC void SDLCALL SDL_ClearHints(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_ClearQueuedAudio	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_ClearQueuedAudio(SDL_AudioDeviceID dev);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioDeviceID dev)
SDL_CloseAudio	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_CloseAudio(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_CloseAudioDevice	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_CloseAudioDevice(SDL_AudioDeviceID dev);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioDeviceID dev)
SDL_Color	SDL_pixels.h	/^typedef struct SDL_Color$/;"	kind:s
SDL_Color	SDL_pixels.h	/^} SDL_Color;$/;"	kind:t	typeref:struct:SDL_Color
SDL_Color::a	SDL_pixels.h	/^    Uint8 a;$/;"	kind:m	struct:SDL_Color	typeref:typename:Uint8	access:public
SDL_Color::b	SDL_pixels.h	/^    Uint8 b;$/;"	kind:m	struct:SDL_Color	typeref:typename:Uint8	access:public
SDL_Color::g	SDL_pixels.h	/^    Uint8 g;$/;"	kind:m	struct:SDL_Color	typeref:typename:Uint8	access:public
SDL_Color::r	SDL_pixels.h	/^    Uint8 r;$/;"	kind:m	struct:SDL_Color	typeref:typename:Uint8	access:public
SDL_Colour	SDL_pixels.h	/^#define SDL_Colour /;"	kind:d
SDL_CommonEvent	SDL_events.h	/^typedef struct SDL_CommonEvent$/;"	kind:s
SDL_CommonEvent	SDL_events.h	/^} SDL_CommonEvent;$/;"	kind:t	typeref:struct:SDL_CommonEvent
SDL_CommonEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_CommonEvent	typeref:typename:Uint32	access:public
SDL_CommonEvent::type	SDL_events.h	/^    Uint32 type;$/;"	kind:m	struct:SDL_CommonEvent	typeref:typename:Uint32	access:public
SDL_CompilerBarrier	SDL_atomic.h	/^#define SDL_CompilerBarrier(/;"	kind:d	signature:()
SDL_CompilerBarrier	SDL_atomic.h	/^extern _inline void SDL_CompilerBarrier (void);$/;"	kind:p	typeref:typename:_inline void	signature:(void)
SDL_ComposeCustomBlendMode	SDL_blendmode.h	/^extern DECLSPEC SDL_BlendMode SDLCALL SDL_ComposeCustomBlendMode(SDL_BlendFactor srcColorFactor,$/;"	kind:p	typeref:typename:DECLSPEC SDL_BlendMode SDLCALL	signature:(SDL_BlendFactor srcColorFactor,SDL_BlendFactor dstColorFactor,SDL_BlendOperation colorOperation,SDL_BlendFactor srcAlphaFactor,SDL_BlendFactor dstAlphaFactor,SDL_BlendOperation alphaOperation)
SDL_CondBroadcast	SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondBroadcast(SDL_cond * cond);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_cond * cond)
SDL_CondSignal	SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondSignal(SDL_cond * cond);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_cond * cond)
SDL_CondWait	SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondWait(SDL_cond * cond, SDL_mutex * mutex);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_cond * cond,SDL_mutex * mutex)
SDL_CondWaitTimeout	SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondWaitTimeout(SDL_cond * cond,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_cond * cond,SDL_mutex * mutex,Uint32 ms)
SDL_ControllerAxisEvent	SDL_events.h	/^typedef struct SDL_ControllerAxisEvent$/;"	kind:s
SDL_ControllerAxisEvent	SDL_events.h	/^} SDL_ControllerAxisEvent;$/;"	kind:t	typeref:struct:SDL_ControllerAxisEvent
SDL_ControllerAxisEvent::axis	SDL_events.h	/^    Uint8 axis;         \/**< The controller axis (SDL_GameControllerAxis) *\/$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
SDL_ControllerAxisEvent::padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
SDL_ControllerAxisEvent::padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
SDL_ControllerAxisEvent::padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
SDL_ControllerAxisEvent::padding4	SDL_events.h	/^    Uint16 padding4;$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint16	access:public
SDL_ControllerAxisEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint32	access:public
SDL_ControllerAxisEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERAXISMOTION *\/$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint32	access:public
SDL_ControllerAxisEvent::value	SDL_events.h	/^    Sint16 value;       \/**< The axis value (range: -32768 to 32767) *\/$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Sint16	access:public
SDL_ControllerAxisEvent::which	SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:SDL_JoystickID	access:public
SDL_ControllerButtonEvent	SDL_events.h	/^typedef struct SDL_ControllerButtonEvent$/;"	kind:s
SDL_ControllerButtonEvent	SDL_events.h	/^} SDL_ControllerButtonEvent;$/;"	kind:t	typeref:struct:SDL_ControllerButtonEvent
SDL_ControllerButtonEvent::button	SDL_events.h	/^    Uint8 button;       \/**< The controller button (SDL_GameControllerButton) *\/$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
SDL_ControllerButtonEvent::padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
SDL_ControllerButtonEvent::padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
SDL_ControllerButtonEvent::state	SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
SDL_ControllerButtonEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint32	access:public
SDL_ControllerButtonEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP *\/$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint32	access:public
SDL_ControllerButtonEvent::which	SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:SDL_JoystickID	access:public
SDL_ControllerDeviceEvent	SDL_events.h	/^typedef struct SDL_ControllerDeviceEvent$/;"	kind:s
SDL_ControllerDeviceEvent	SDL_events.h	/^} SDL_ControllerDeviceEvent;$/;"	kind:t	typeref:struct:SDL_ControllerDeviceEvent
SDL_ControllerDeviceEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_ControllerDeviceEvent	typeref:typename:Uint32	access:public
SDL_ControllerDeviceEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERDEVICEADDED, ::SDL_CONTROLLERDEVICEREMOVED, or ::S/;"	kind:m	struct:SDL_ControllerDeviceEvent	typeref:typename:Uint32	access:public
SDL_ControllerDeviceEvent::which	SDL_events.h	/^    Sint32 which;       \/**< The joystick device index for the ADDED event, instance id for the/;"	kind:m	struct:SDL_ControllerDeviceEvent	typeref:typename:Sint32	access:public
SDL_ConvertAudio	SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_ConvertAudio(SDL_AudioCVT * cvt);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioCVT * cvt)
SDL_ConvertPixels	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_ConvertPixels(int width, int height,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int width,int height,Uint32 src_format,const void * src,int src_pitch,Uint32 dst_format,void * dst,int dst_pitch)
SDL_ConvertSurface	SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_ConvertSurface$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_Surface * src,const SDL_PixelFormat * fmt,Uint32 flags)
SDL_ConvertSurfaceFormat	SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_ConvertSurfaceFormat$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_Surface * src,Uint32 pixel_format,Uint32 flags)
SDL_CreateColorCursor	SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_CreateColorCursor(SDL_Surface *surface,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Cursor * SDLCALL	signature:(SDL_Surface * surface,int hot_x,int hot_y)
SDL_CreateCond	SDL_mutex.h	/^extern DECLSPEC SDL_cond *SDLCALL SDL_CreateCond(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_cond * SDLCALL	signature:(void)
SDL_CreateCursor	SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_CreateCursor(const Uint8 * data,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Cursor * SDLCALL	signature:(const Uint8 * data,const Uint8 * mask,int w,int h,int hot_x,int hot_y)
SDL_CreateMutex	SDL_mutex.h	/^extern DECLSPEC SDL_mutex *SDLCALL SDL_CreateMutex(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_mutex * SDLCALL	signature:(void)
SDL_CreateRGBSurface	SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_CreateRGBSurface$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(Uint32 flags,int width,int height,int depth,Uint32 Rmask,Uint32 Gmask,Uint32 Bmask,Uint32 Amask)
SDL_CreateRGBSurfaceFrom	SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_CreateRGBSurfaceFrom(void *pixels,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(void * pixels,int width,int height,int depth,int pitch,Uint32 Rmask,Uint32 Gmask,Uint32 Bmask,Uint32 Amask)
SDL_CreateRGBSurfaceWithFormat	SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_CreateRGBSurfaceWithFormat$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(Uint32 flags,int width,int height,int depth,Uint32 format)
SDL_CreateRGBSurfaceWithFormatFrom	SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_CreateRGBSurfaceWithFormatFrom$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(void * pixels,int width,int height,int depth,int pitch,Uint32 format)
SDL_CreateRenderer	SDL_render.h	/^extern DECLSPEC SDL_Renderer * SDLCALL SDL_CreateRenderer(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Renderer * SDLCALL	signature:(SDL_Window * window,int index,Uint32 flags)
SDL_CreateSemaphore	SDL_mutex.h	/^extern DECLSPEC SDL_sem *SDLCALL SDL_CreateSemaphore(Uint32 initial_value);$/;"	kind:p	typeref:typename:DECLSPEC SDL_sem * SDLCALL	signature:(Uint32 initial_value)
SDL_CreateShapedWindow	SDL_shape.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_CreateShapedWindow(const char *title,unsigned int x,uns/;"	kind:p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(const char * title,unsigned int x,unsigned int y,unsigned int w,unsigned int h,Uint32 flags)
SDL_CreateSoftwareRenderer	SDL_render.h	/^extern DECLSPEC SDL_Renderer * SDLCALL SDL_CreateSoftwareRenderer(SDL_Surface * surface);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Renderer * SDLCALL	signature:(SDL_Surface * surface)
SDL_CreateSystemCursor	SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_CreateSystemCursor(SDL_SystemCursor id);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Cursor * SDLCALL	signature:(SDL_SystemCursor id)
SDL_CreateTexture	SDL_render.h	/^extern DECLSPEC SDL_Texture * SDLCALL SDL_CreateTexture(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Texture * SDLCALL	signature:(SDL_Renderer * renderer,Uint32 format,int access,int w,int h)
SDL_CreateTextureFromSurface	SDL_render.h	/^extern DECLSPEC SDL_Texture * SDLCALL SDL_CreateTextureFromSurface(SDL_Renderer * renderer, SDL_/;"	kind:p	typeref:typename:DECLSPEC SDL_Texture * SDLCALL	signature:(SDL_Renderer * renderer,SDL_Surface * surface)
SDL_CreateThread	SDL_thread.h	/^#define SDL_CreateThread(/;"	kind:d	signature:(fn,name,data)
SDL_CreateThread	SDL_thread.h	/^SDL_CreateThread(SDL_ThreadFunction fn, const char *name, void *data);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Thread * SDLCALL	signature:(SDL_ThreadFunction fn,const char * name,void * data)
SDL_CreateThread	SDL_thread.h	/^SDL_CreateThread(SDL_ThreadFunction fn, const char *name, void *data,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Thread * SDLCALL	signature:(SDL_ThreadFunction fn,const char * name,void * data,pfnSDL_CurrentBeginThread pfnBeginThread,pfnSDL_CurrentEndThread pfnEndThread)
SDL_CreateThreadWithStackSize	SDL_thread.h	/^#define SDL_CreateThreadWithStackSize(/;"	kind:d	signature:(fn,name,stacksize,data)
SDL_CreateThreadWithStackSize	SDL_thread.h	/^SDL_CreateThreadWithStackSize(SDL_ThreadFunction fn, const char *name, const size_t stacksize, v/;"	kind:p	typeref:typename:DECLSPEC SDL_Thread * SDLCALL	signature:(SDL_ThreadFunction fn,const char * name,const size_t stacksize,void * data)
SDL_CreateThreadWithStackSize	SDL_thread.h	/^SDL_CreateThreadWithStackSize(SDL_ThreadFunction fn, const char *name, const size_t stacksize, v/;"	kind:p	typeref:typename:DECLSPEC SDL_Thread * SDLCALL	signature:(SDL_ThreadFunction fn,const char * name,const size_t stacksize,void * data,pfnSDL_CurrentBeginThread pfnBeginThread,pfnSDL_CurrentEndThread pfnEndThread)
SDL_CreateThreadWithStackSize	SDL_thread.h	/^SDL_CreateThreadWithStackSize(int (SDLCALL * fn) (void *),$/;"	kind:p	typeref:typename:DECLSPEC SDL_Thread * SDLCALL	signature:(int (SDLCALL * fn)(void *),const char * name,const size_t stacksize,void * data,pfnSDL_CurrentBeginThread pfnBeginThread,pfnSDL_CurrentEndThread pfnEndThread)
SDL_CreateWindow	SDL_video.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_CreateWindow(const char *title,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(const char * title,int x,int y,int w,int h,Uint32 flags)
SDL_CreateWindowAndRenderer	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_CreateWindowAndRenderer($/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int width,int height,Uint32 window_flags,SDL_Window ** window,SDL_Renderer ** renderer)
SDL_CreateWindowFrom	SDL_video.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_CreateWindowFrom(const void *data);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(const void * data)
SDL_Cursor	SDL_mouse.h	/^typedef struct SDL_Cursor SDL_Cursor;   \/**< Implementation dependent *\/$/;"	kind:t	typeref:struct:SDL_Cursor
SDL_DEFINE_PIXELFORMAT	SDL_pixels.h	/^#define SDL_DEFINE_PIXELFORMAT(/;"	kind:d	signature:(type,order,layout,bits,bytes)
SDL_DEFINE_PIXELFOURCC	SDL_pixels.h	/^#define SDL_DEFINE_PIXELFOURCC(/;"	kind:d	signature:(A,B,C,D)
SDL_DEPRECATED	SDL_ttf.h	/^#define SDL_DEPRECATED$/;"	kind:d
SDL_DEPRECATED	begin_code.h	/^#    define SDL_DEPRECATED /;"	kind:d
SDL_DEPRECATED	begin_code.h	/^#    define SDL_DEPRECATED$/;"	kind:d
SDL_DISABLE	SDL_events.h	/^#define SDL_DISABLE /;"	kind:d
SDL_DISPLAYEVENT	SDL_events.h	/^    SDL_DISPLAYEVENT   = 0x150,  \/**< Display state change *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_DISPLAYEVENT_NONE	SDL_video.h	/^    SDL_DISPLAYEVENT_NONE,          \/**< Never used *\/$/;"	kind:e	enum:__anonf43722b40403	access:public
SDL_DISPLAYEVENT_ORIENTATION	SDL_video.h	/^    SDL_DISPLAYEVENT_ORIENTATION    \/**< Display orientation has changed to data1 *\/$/;"	kind:e	enum:__anonf43722b40403	access:public
SDL_DOLLARGESTURE	SDL_events.h	/^    SDL_DOLLARGESTURE   = 0x800,$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_DOLLARRECORD	SDL_events.h	/^    SDL_DOLLARRECORD,$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_DONTFREE	SDL_surface.h	/^#define SDL_DONTFREE /;"	kind:d
SDL_DROPBEGIN	SDL_events.h	/^    SDL_DROPBEGIN,                \/**< A new set of drops is beginning (NULL filename) *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_DROPCOMPLETE	SDL_events.h	/^    SDL_DROPCOMPLETE,             \/**< Current set of drops is now complete (NULL filename) *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_DROPFILE	SDL_events.h	/^    SDL_DROPFILE        = 0x1000, \/**< The system requests a file open *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_DROPTEXT	SDL_events.h	/^    SDL_DROPTEXT,                 \/**< text\/plain drag-and-drop event *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_DUMMY_ENUM	SDL_stdinc.h	/^} SDL_DUMMY_ENUM;$/;"	kind:t	typeref:enum:__anon055f46e20203
SDL_DXGIGetOutputInfo	SDL_system.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_DXGIGetOutputInfo( int displayIndex, int *adapterIndex, int/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(int displayIndex,int * adapterIndex,int * outputIndex)
SDL_DelEventWatch	SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_DelEventWatch(SDL_EventFilter filter,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_EventFilter filter,void * userdata)
SDL_DelHintCallback	SDL_hints.h	/^extern DECLSPEC void SDLCALL SDL_DelHintCallback(const char *name,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(const char * name,SDL_HintCallback callback,void * userdata)
SDL_Delay	SDL_timer.h	/^extern DECLSPEC void SDLCALL SDL_Delay(Uint32 ms);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 ms)
SDL_DequeueAudio	SDL_audio.h	/^extern DECLSPEC Uint32 SDLCALL SDL_DequeueAudio(SDL_AudioDeviceID dev, void *data, Uint32 len);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_AudioDeviceID dev,void * data,Uint32 len)
SDL_DestroyCond	SDL_mutex.h	/^extern DECLSPEC void SDLCALL SDL_DestroyCond(SDL_cond * cond);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_cond * cond)
SDL_DestroyMutex	SDL_mutex.h	/^extern DECLSPEC void SDLCALL SDL_DestroyMutex(SDL_mutex * mutex);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_mutex * mutex)
SDL_DestroyRenderer	SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_DestroyRenderer(SDL_Renderer * renderer);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Renderer * renderer)
SDL_DestroySemaphore	SDL_mutex.h	/^extern DECLSPEC void SDLCALL SDL_DestroySemaphore(SDL_sem * sem);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_sem * sem)
SDL_DestroyTexture	SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_DestroyTexture(SDL_Texture * texture);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Texture * texture)
SDL_DestroyWindow	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_DestroyWindow(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_DetachThread	SDL_thread.h	/^extern DECLSPEC void SDLCALL SDL_DetachThread(SDL_Thread * thread);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Thread * thread)
SDL_Direct3D9GetAdapterIndex	SDL_system.h	/^extern DECLSPEC int SDLCALL SDL_Direct3D9GetAdapterIndex( int displayIndex );$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex)
SDL_DisableScreenSaver	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_DisableScreenSaver(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_DisplayEvent	SDL_events.h	/^typedef struct SDL_DisplayEvent$/;"	kind:s
SDL_DisplayEvent	SDL_events.h	/^} SDL_DisplayEvent;$/;"	kind:t	typeref:struct:SDL_DisplayEvent
SDL_DisplayEvent::data1	SDL_events.h	/^    Sint32 data1;       \/**< event dependent data *\/$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Sint32	access:public
SDL_DisplayEvent::display	SDL_events.h	/^    Uint32 display;     \/**< The associated display index *\/$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint32	access:public
SDL_DisplayEvent::event	SDL_events.h	/^    Uint8 event;        \/**< ::SDL_DisplayEventID *\/$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
SDL_DisplayEvent::padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
SDL_DisplayEvent::padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
SDL_DisplayEvent::padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
SDL_DisplayEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint32	access:public
SDL_DisplayEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DISPLAYEVENT *\/$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint32	access:public
SDL_DisplayEventID	SDL_video.h	/^} SDL_DisplayEventID;$/;"	kind:t	typeref:enum:__anonf43722b40403
SDL_DisplayMode	SDL_video.h	/^} SDL_DisplayMode;$/;"	kind:t	typeref:struct:__anonf43722b40108
SDL_DisplayOrientation	SDL_video.h	/^} SDL_DisplayOrientation;$/;"	kind:t	typeref:enum:__anonf43722b40503
SDL_DollarGestureEvent	SDL_events.h	/^typedef struct SDL_DollarGestureEvent$/;"	kind:s
SDL_DollarGestureEvent	SDL_events.h	/^} SDL_DollarGestureEvent;$/;"	kind:t	typeref:struct:SDL_DollarGestureEvent
SDL_DollarGestureEvent::error	SDL_events.h	/^    float error;$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:float	access:public
SDL_DollarGestureEvent::gestureId	SDL_events.h	/^    SDL_GestureID gestureId;$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:SDL_GestureID	access:public
SDL_DollarGestureEvent::numFingers	SDL_events.h	/^    Uint32 numFingers;$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:Uint32	access:public
SDL_DollarGestureEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:Uint32	access:public
SDL_DollarGestureEvent::touchId	SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:SDL_TouchID	access:public
SDL_DollarGestureEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DOLLARGESTURE or ::SDL_DOLLARRECORD *\/$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:Uint32	access:public
SDL_DollarGestureEvent::x	SDL_events.h	/^    float x;            \/**< Normalized center of gesture *\/$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:float	access:public
SDL_DollarGestureEvent::y	SDL_events.h	/^    float y;            \/**< Normalized center of gesture *\/$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:float	access:public
SDL_DropEvent	SDL_events.h	/^typedef struct SDL_DropEvent$/;"	kind:s
SDL_DropEvent	SDL_events.h	/^} SDL_DropEvent;$/;"	kind:t	typeref:struct:SDL_DropEvent
SDL_DropEvent::file	SDL_events.h	/^    char *file;         \/**< The file name, which should be freed with SDL_free(), is NULL on b/;"	kind:m	struct:SDL_DropEvent	typeref:typename:char *	access:public
SDL_DropEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_DropEvent	typeref:typename:Uint32	access:public
SDL_DropEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DROPBEGIN or ::SDL_DROPFILE or ::SDL_DROPTEXT or ::SDL_DROPC/;"	kind:m	struct:SDL_DropEvent	typeref:typename:Uint32	access:public
SDL_DropEvent::windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The window that was dropped on, if any *\/$/;"	kind:m	struct:SDL_DropEvent	typeref:typename:Uint32	access:public
SDL_DuplicateSurface	SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_DuplicateSurface(SDL_Surface * surface);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_Surface * surface)
SDL_EFREAD	SDL_error.h	/^    SDL_EFREAD,$/;"	kind:e	enum:__anoned9a67270103	access:public
SDL_EFSEEK	SDL_error.h	/^    SDL_EFSEEK,$/;"	kind:e	enum:__anoned9a67270103	access:public
SDL_EFWRITE	SDL_error.h	/^    SDL_EFWRITE,$/;"	kind:e	enum:__anoned9a67270103	access:public
SDL_ENABLE	SDL_events.h	/^#define SDL_ENABLE /;"	kind:d
SDL_ENOMEM	SDL_error.h	/^    SDL_ENOMEM,$/;"	kind:e	enum:__anoned9a67270103	access:public
SDL_EnableScreenSaver	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_EnableScreenSaver(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_EnclosePoints	SDL_rect.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_EnclosePoints(const SDL_Point * points,$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const SDL_Point * points,int count,const SDL_Rect * clip,SDL_Rect * result)
SDL_Error	SDL_error.h	/^extern DECLSPEC int SDLCALL SDL_Error(SDL_errorcode code);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_errorcode code)
SDL_Event	SDL_events.h	/^typedef union SDL_Event$/;"	kind:u
SDL_Event	SDL_events.h	/^} SDL_Event;$/;"	kind:t	typeref:union:SDL_Event
SDL_Event::adevice	SDL_events.h	/^    SDL_AudioDeviceEvent adevice;   \/**< Audio device event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_AudioDeviceEvent	access:public
SDL_Event::button	SDL_events.h	/^    SDL_MouseButtonEvent button;    \/**< Mouse button event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_MouseButtonEvent	access:public
SDL_Event::caxis	SDL_events.h	/^    SDL_ControllerAxisEvent caxis;      \/**< Game Controller axis event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_ControllerAxisEvent	access:public
SDL_Event::cbutton	SDL_events.h	/^    SDL_ControllerButtonEvent cbutton;  \/**< Game Controller button event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_ControllerButtonEvent	access:public
SDL_Event::cdevice	SDL_events.h	/^    SDL_ControllerDeviceEvent cdevice;  \/**< Game Controller device event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_ControllerDeviceEvent	access:public
SDL_Event::common	SDL_events.h	/^    SDL_CommonEvent common;         \/**< Common event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_CommonEvent	access:public
SDL_Event::dgesture	SDL_events.h	/^    SDL_DollarGestureEvent dgesture; \/**< Gesture event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_DollarGestureEvent	access:public
SDL_Event::display	SDL_events.h	/^    SDL_DisplayEvent display;       \/**< Window event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_DisplayEvent	access:public
SDL_Event::drop	SDL_events.h	/^    SDL_DropEvent drop;             \/**< Drag and drop event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_DropEvent	access:public
SDL_Event::edit	SDL_events.h	/^    SDL_TextEditingEvent edit;      \/**< Text editing event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_TextEditingEvent	access:public
SDL_Event::jaxis	SDL_events.h	/^    SDL_JoyAxisEvent jaxis;         \/**< Joystick axis event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_JoyAxisEvent	access:public
SDL_Event::jball	SDL_events.h	/^    SDL_JoyBallEvent jball;         \/**< Joystick ball event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_JoyBallEvent	access:public
SDL_Event::jbutton	SDL_events.h	/^    SDL_JoyButtonEvent jbutton;     \/**< Joystick button event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_JoyButtonEvent	access:public
SDL_Event::jdevice	SDL_events.h	/^    SDL_JoyDeviceEvent jdevice;     \/**< Joystick device change event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_JoyDeviceEvent	access:public
SDL_Event::jhat	SDL_events.h	/^    SDL_JoyHatEvent jhat;           \/**< Joystick hat event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_JoyHatEvent	access:public
SDL_Event::key	SDL_events.h	/^    SDL_KeyboardEvent key;          \/**< Keyboard event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_KeyboardEvent	access:public
SDL_Event::mgesture	SDL_events.h	/^    SDL_MultiGestureEvent mgesture; \/**< Gesture event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_MultiGestureEvent	access:public
SDL_Event::motion	SDL_events.h	/^    SDL_MouseMotionEvent motion;    \/**< Mouse motion event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_MouseMotionEvent	access:public
SDL_Event::padding	SDL_events.h	/^    Uint8 padding[56];$/;"	kind:m	union:SDL_Event	typeref:typename:Uint8[56]	access:public
SDL_Event::quit	SDL_events.h	/^    SDL_QuitEvent quit;             \/**< Quit request event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_QuitEvent	access:public
SDL_Event::sensor	SDL_events.h	/^    SDL_SensorEvent sensor;         \/**< Sensor event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_SensorEvent	access:public
SDL_Event::syswm	SDL_events.h	/^    SDL_SysWMEvent syswm;           \/**< System dependent window event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_SysWMEvent	access:public
SDL_Event::text	SDL_events.h	/^    SDL_TextInputEvent text;        \/**< Text input event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_TextInputEvent	access:public
SDL_Event::tfinger	SDL_events.h	/^    SDL_TouchFingerEvent tfinger;   \/**< Touch finger event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_TouchFingerEvent	access:public
SDL_Event::type	SDL_events.h	/^    Uint32 type;                    \/**< Event type, shared with all events *\/$/;"	kind:m	union:SDL_Event	typeref:typename:Uint32	access:public
SDL_Event::user	SDL_events.h	/^    SDL_UserEvent user;             \/**< Custom event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_UserEvent	access:public
SDL_Event::wheel	SDL_events.h	/^    SDL_MouseWheelEvent wheel;      \/**< Mouse wheel event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_MouseWheelEvent	access:public
SDL_Event::window	SDL_events.h	/^    SDL_WindowEvent window;         \/**< Window event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_WindowEvent	access:public
SDL_EventFilter	SDL_events.h	/^typedef int (SDLCALL * SDL_EventFilter) (void *userdata, SDL_Event * event);$/;"	kind:t	typeref:typename:int (SDLCALL *)(void * userdata,SDL_Event * event)
SDL_EventState	SDL_events.h	/^extern DECLSPEC Uint8 SDLCALL SDL_EventState(Uint32 type, int state);$/;"	kind:p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(Uint32 type,int state)
SDL_EventType	SDL_events.h	/^} SDL_EventType;$/;"	kind:t	typeref:enum:__anonb66d4d920103
SDL_FALSE	SDL_stdinc.h	/^    SDL_FALSE = 0,$/;"	kind:e	enum:__anon055f46e20103	access:public
SDL_FALSE	SDL_stdinc.h	/^#define SDL_FALSE /;"	kind:d
SDL_FILE	SDL_assert.h	/^#define SDL_FILE /;"	kind:d
SDL_FILESYSTEM_WINDOWS	SDL_config.h	/^#define SDL_FILESYSTEM_WINDOWS /;"	kind:d
SDL_FINGERDOWN	SDL_events.h	/^    SDL_FINGERDOWN      = 0x700,$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_FINGERMOTION	SDL_events.h	/^    SDL_FINGERMOTION,$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_FINGERUP	SDL_events.h	/^    SDL_FINGERUP,$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_FIRSTEVENT	SDL_events.h	/^    SDL_FIRSTEVENT     = 0,     \/**< Unused (do not remove) *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_FLIP_HORIZONTAL	SDL_render.h	/^    SDL_FLIP_HORIZONTAL = 0x00000001,    \/**< flip horizontally *\/$/;"	kind:e	enum:__anonad684edd0403	access:public
SDL_FLIP_NONE	SDL_render.h	/^    SDL_FLIP_NONE = 0x00000000,     \/**< Do not flip *\/$/;"	kind:e	enum:__anonad684edd0403	access:public
SDL_FLIP_VERTICAL	SDL_render.h	/^    SDL_FLIP_VERTICAL = 0x00000002     \/**< flip vertically *\/$/;"	kind:e	enum:__anonad684edd0403	access:public
SDL_FORCE_INLINE	begin_code.h	/^#define SDL_FORCE_INLINE /;"	kind:d
SDL_FOURCC	SDL_stdinc.h	/^#define SDL_FOURCC(/;"	kind:d	signature:(A,B,C,D)
SDL_FUNCTION	SDL_assert.h	/^#   define SDL_FUNCTION /;"	kind:d
SDL_FillRect	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_FillRect$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * dst,const SDL_Rect * rect,Uint32 color)
SDL_FillRects	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_FillRects$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * dst,const SDL_Rect * rects,int count,Uint32 color)
SDL_FilterEvents	SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_FilterEvents(SDL_EventFilter filter,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_EventFilter filter,void * userdata)
SDL_Finger	SDL_touch.h	/^typedef struct SDL_Finger$/;"	kind:s
SDL_Finger	SDL_touch.h	/^} SDL_Finger;$/;"	kind:t	typeref:struct:SDL_Finger
SDL_Finger::id	SDL_touch.h	/^    SDL_FingerID id;$/;"	kind:m	struct:SDL_Finger	typeref:typename:SDL_FingerID	access:public
SDL_Finger::pressure	SDL_touch.h	/^    float pressure;$/;"	kind:m	struct:SDL_Finger	typeref:typename:float	access:public
SDL_Finger::x	SDL_touch.h	/^    float x;$/;"	kind:m	struct:SDL_Finger	typeref:typename:float	access:public
SDL_Finger::y	SDL_touch.h	/^    float y;$/;"	kind:m	struct:SDL_Finger	typeref:typename:float	access:public
SDL_FingerID	SDL_touch.h	/^typedef Sint64 SDL_FingerID;$/;"	kind:t	typeref:typename:Sint64
SDL_FlushEvent	SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_FlushEvent(Uint32 type);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 type)
SDL_FlushEvents	SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_FlushEvents(Uint32 minType, Uint32 maxType);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 minType,Uint32 maxType)
SDL_FreeAudioStream	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_FreeAudioStream(SDL_AudioStream *stream);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioStream * stream)
SDL_FreeCursor	SDL_mouse.h	/^extern DECLSPEC void SDLCALL SDL_FreeCursor(SDL_Cursor * cursor);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Cursor * cursor)
SDL_FreeFormat	SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_FreeFormat(SDL_PixelFormat *format);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_PixelFormat * format)
SDL_FreePalette	SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_FreePalette(SDL_Palette * palette);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Palette * palette)
SDL_FreeRW	SDL_rwops.h	/^extern DECLSPEC void SDLCALL SDL_FreeRW(SDL_RWops * area);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_RWops * area)
SDL_FreeSurface	SDL_surface.h	/^extern DECLSPEC void SDLCALL SDL_FreeSurface(SDL_Surface * surface);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Surface * surface)
SDL_FreeWAV	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_FreeWAV(Uint8 * audio_buf);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint8 * audio_buf)
SDL_GETEVENT	SDL_events.h	/^    SDL_GETEVENT$/;"	kind:e	enum:__anonb66d4d920203	access:public
SDL_GLContext	SDL_video.h	/^typedef void *SDL_GLContext;$/;"	kind:t	typeref:typename:void *
SDL_GLContextResetNotification	SDL_video.h	/^} SDL_GLContextResetNotification;$/;"	kind:t	typeref:enum:__anonf43722b40a03
SDL_GL_ACCELERATED_VISUAL	SDL_video.h	/^    SDL_GL_ACCELERATED_VISUAL,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_ACCUM_ALPHA_SIZE	SDL_video.h	/^    SDL_GL_ACCUM_ALPHA_SIZE,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_ACCUM_BLUE_SIZE	SDL_video.h	/^    SDL_GL_ACCUM_BLUE_SIZE,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_ACCUM_GREEN_SIZE	SDL_video.h	/^    SDL_GL_ACCUM_GREEN_SIZE,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_ACCUM_RED_SIZE	SDL_video.h	/^    SDL_GL_ACCUM_RED_SIZE,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_ALPHA_SIZE	SDL_video.h	/^    SDL_GL_ALPHA_SIZE,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_BLUE_SIZE	SDL_video.h	/^    SDL_GL_BLUE_SIZE,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_BUFFER_SIZE	SDL_video.h	/^    SDL_GL_BUFFER_SIZE,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_BindTexture	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GL_BindTexture(SDL_Texture *texture, float *texw, float *texh);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,float * texw,float * texh)
SDL_GL_CONTEXT_DEBUG_FLAG	SDL_video.h	/^    SDL_GL_CONTEXT_DEBUG_FLAG              = 0x0001,$/;"	kind:e	enum:__anonf43722b40803	access:public
SDL_GL_CONTEXT_EGL	SDL_video.h	/^    SDL_GL_CONTEXT_EGL,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_CONTEXT_FLAGS	SDL_video.h	/^    SDL_GL_CONTEXT_FLAGS,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG	SDL_video.h	/^    SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG = 0x0002,$/;"	kind:e	enum:__anonf43722b40803	access:public
SDL_GL_CONTEXT_MAJOR_VERSION	SDL_video.h	/^    SDL_GL_CONTEXT_MAJOR_VERSION,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_CONTEXT_MINOR_VERSION	SDL_video.h	/^    SDL_GL_CONTEXT_MINOR_VERSION,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_CONTEXT_NO_ERROR	SDL_video.h	/^    SDL_GL_CONTEXT_NO_ERROR$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_CONTEXT_PROFILE_COMPATIBILITY	SDL_video.h	/^    SDL_GL_CONTEXT_PROFILE_COMPATIBILITY  = 0x0002,$/;"	kind:e	enum:__anonf43722b40703	access:public
SDL_GL_CONTEXT_PROFILE_CORE	SDL_video.h	/^    SDL_GL_CONTEXT_PROFILE_CORE           = 0x0001,$/;"	kind:e	enum:__anonf43722b40703	access:public
SDL_GL_CONTEXT_PROFILE_ES	SDL_video.h	/^    SDL_GL_CONTEXT_PROFILE_ES             = 0x0004 \/**< GLX_CONTEXT_ES2_PROFILE_BIT_EXT *\/$/;"	kind:e	enum:__anonf43722b40703	access:public
SDL_GL_CONTEXT_PROFILE_MASK	SDL_video.h	/^    SDL_GL_CONTEXT_PROFILE_MASK,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_CONTEXT_RELEASE_BEHAVIOR	SDL_video.h	/^    SDL_GL_CONTEXT_RELEASE_BEHAVIOR,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	SDL_video.h	/^    SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH  = 0x0001$/;"	kind:e	enum:__anonf43722b40903	access:public
SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE	SDL_video.h	/^    SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE   = 0x0000,$/;"	kind:e	enum:__anonf43722b40903	access:public
SDL_GL_CONTEXT_RESET_ISOLATION_FLAG	SDL_video.h	/^    SDL_GL_CONTEXT_RESET_ISOLATION_FLAG    = 0x0008$/;"	kind:e	enum:__anonf43722b40803	access:public
SDL_GL_CONTEXT_RESET_LOSE_CONTEXT	SDL_video.h	/^    SDL_GL_CONTEXT_RESET_LOSE_CONTEXT    = 0x0001$/;"	kind:e	enum:__anonf43722b40a03	access:public
SDL_GL_CONTEXT_RESET_NOTIFICATION	SDL_video.h	/^    SDL_GL_CONTEXT_RESET_NOTIFICATION,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_CONTEXT_RESET_NO_NOTIFICATION	SDL_video.h	/^    SDL_GL_CONTEXT_RESET_NO_NOTIFICATION = 0x0000,$/;"	kind:e	enum:__anonf43722b40a03	access:public
SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG	SDL_video.h	/^    SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG      = 0x0004,$/;"	kind:e	enum:__anonf43722b40803	access:public
SDL_GL_CreateContext	SDL_video.h	/^extern DECLSPEC SDL_GLContext SDLCALL SDL_GL_CreateContext(SDL_Window *$/;"	kind:p	typeref:typename:DECLSPEC SDL_GLContext SDLCALL	signature:(SDL_Window * window)
SDL_GL_DEPTH_SIZE	SDL_video.h	/^    SDL_GL_DEPTH_SIZE,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_DOUBLEBUFFER	SDL_video.h	/^    SDL_GL_DOUBLEBUFFER,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_DeleteContext	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_DeleteContext(SDL_GLContext context);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_GLContext context)
SDL_GL_ExtensionSupported	SDL_video.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GL_ExtensionSupported(const char$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const char * extension)
SDL_GL_FRAMEBUFFER_SRGB_CAPABLE	SDL_video.h	/^    SDL_GL_FRAMEBUFFER_SRGB_CAPABLE,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_GREEN_SIZE	SDL_video.h	/^    SDL_GL_GREEN_SIZE,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_GetAttribute	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_GetAttribute(SDL_GLattr attr, int *value);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_GLattr attr,int * value)
SDL_GL_GetCurrentContext	SDL_video.h	/^extern DECLSPEC SDL_GLContext SDLCALL SDL_GL_GetCurrentContext(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_GLContext SDLCALL	signature:(void)
SDL_GL_GetCurrentWindow	SDL_video.h	/^extern DECLSPEC SDL_Window* SDLCALL SDL_GL_GetCurrentWindow(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(void)
SDL_GL_GetDrawableSize	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_GetDrawableSize(SDL_Window * window, int *w,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int * w,int * h)
SDL_GL_GetProcAddress	SDL_video.h	/^extern DECLSPEC void *SDLCALL SDL_GL_GetProcAddress(const char *proc);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(const char * proc)
SDL_GL_GetSwapInterval	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_GetSwapInterval(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GL_LoadLibrary	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_LoadLibrary(const char *path);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * path)
SDL_GL_MULTISAMPLEBUFFERS	SDL_video.h	/^    SDL_GL_MULTISAMPLEBUFFERS,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_MULTISAMPLESAMPLES	SDL_video.h	/^    SDL_GL_MULTISAMPLESAMPLES,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_MakeCurrent	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_MakeCurrent(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,SDL_GLContext context)
SDL_GL_RED_SIZE	SDL_video.h	/^    SDL_GL_RED_SIZE,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_RETAINED_BACKING	SDL_video.h	/^    SDL_GL_RETAINED_BACKING,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_ResetAttributes	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_ResetAttributes(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_GL_SHARE_WITH_CURRENT_CONTEXT	SDL_video.h	/^    SDL_GL_SHARE_WITH_CURRENT_CONTEXT,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_STENCIL_SIZE	SDL_video.h	/^    SDL_GL_STENCIL_SIZE,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_STEREO	SDL_video.h	/^    SDL_GL_STEREO,$/;"	kind:e	enum:__anonf43722b40603	access:public
SDL_GL_SetAttribute	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_SetAttribute(SDL_GLattr attr, int value);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_GLattr attr,int value)
SDL_GL_SetSwapInterval	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_SetSwapInterval(int interval);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int interval)
SDL_GL_SwapWindow	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_SwapWindow(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_GL_UnbindTexture	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GL_UnbindTexture(SDL_Texture *texture);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture)
SDL_GL_UnloadLibrary	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_UnloadLibrary(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_GLattr	SDL_video.h	/^} SDL_GLattr;$/;"	kind:t	typeref:enum:__anonf43722b40603
SDL_GLcontextFlag	SDL_video.h	/^} SDL_GLcontextFlag;$/;"	kind:t	typeref:enum:__anonf43722b40803
SDL_GLcontextReleaseFlag	SDL_video.h	/^} SDL_GLcontextReleaseFlag;$/;"	kind:t	typeref:enum:__anonf43722b40903
SDL_GLprofile	SDL_video.h	/^} SDL_GLprofile;$/;"	kind:t	typeref:enum:__anonf43722b40703
SDL_GameController	SDL_gamecontroller.h	/^typedef struct _SDL_GameController SDL_GameController;$/;"	kind:t	typeref:struct:_SDL_GameController
SDL_GameControllerAddMapping	SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerAddMapping(const char* mappingString);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * mappingString)
SDL_GameControllerAddMappingsFromFile	SDL_gamecontroller.h	/^#define SDL_GameControllerAddMappingsFromFile(/;"	kind:d	signature:(file)
SDL_GameControllerAddMappingsFromRW	SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerAddMappingsFromRW(SDL_RWops * rw, int freerw);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * rw,int freerw)
SDL_GameControllerAxis	SDL_gamecontroller.h	/^} SDL_GameControllerAxis;$/;"	kind:t	typeref:enum:__anon3012f99b0403
SDL_GameControllerBindType	SDL_gamecontroller.h	/^} SDL_GameControllerBindType;$/;"	kind:t	typeref:enum:__anon3012f99b0103
SDL_GameControllerButton	SDL_gamecontroller.h	/^} SDL_GameControllerButton;$/;"	kind:t	typeref:enum:__anon3012f99b0503
SDL_GameControllerButtonBind	SDL_gamecontroller.h	/^typedef struct SDL_GameControllerButtonBind$/;"	kind:s
SDL_GameControllerButtonBind	SDL_gamecontroller.h	/^} SDL_GameControllerButtonBind;$/;"	kind:t	typeref:struct:SDL_GameControllerButtonBind
SDL_GameControllerButtonBind::__anon3012f99b020a	SDL_gamecontroller.h	/^    {$/;"	kind:u	struct:SDL_GameControllerButtonBind	access:public
SDL_GameControllerButtonBind::__anon3012f99b020a::__anon3012f99b0308	SDL_gamecontroller.h	/^        struct {$/;"	kind:s	union:SDL_GameControllerButtonBind::__anon3012f99b020a	access:public
SDL_GameControllerButtonBind::__anon3012f99b020a::__anon3012f99b0308::hat	SDL_gamecontroller.h	/^            int hat;$/;"	kind:m	struct:SDL_GameControllerButtonBind::__anon3012f99b020a::__anon3012f99b0308	typeref:typename:int	access:public
SDL_GameControllerButtonBind::__anon3012f99b020a::__anon3012f99b0308::hat_mask	SDL_gamecontroller.h	/^            int hat_mask;$/;"	kind:m	struct:SDL_GameControllerButtonBind::__anon3012f99b020a::__anon3012f99b0308	typeref:typename:int	access:public
SDL_GameControllerButtonBind::__anon3012f99b020a::axis	SDL_gamecontroller.h	/^        int axis;$/;"	kind:m	union:SDL_GameControllerButtonBind::__anon3012f99b020a	typeref:typename:int	access:public
SDL_GameControllerButtonBind::__anon3012f99b020a::button	SDL_gamecontroller.h	/^        int button;$/;"	kind:m	union:SDL_GameControllerButtonBind::__anon3012f99b020a	typeref:typename:int	access:public
SDL_GameControllerButtonBind::__anon3012f99b020a::hat	SDL_gamecontroller.h	/^        } hat;$/;"	kind:m	union:SDL_GameControllerButtonBind::__anon3012f99b020a	typeref:struct:SDL_GameControllerButtonBind::__anon3012f99b020a::__anon3012f99b0308	access:public
SDL_GameControllerButtonBind::bindType	SDL_gamecontroller.h	/^    SDL_GameControllerBindType bindType;$/;"	kind:m	struct:SDL_GameControllerButtonBind	typeref:typename:SDL_GameControllerBindType	access:public
SDL_GameControllerButtonBind::value	SDL_gamecontroller.h	/^    } value;$/;"	kind:m	struct:SDL_GameControllerButtonBind	typeref:union:SDL_GameControllerButtonBind::__anon3012f99b020a	access:public
SDL_GameControllerClose	SDL_gamecontroller.h	/^extern DECLSPEC void SDLCALL SDL_GameControllerClose(SDL_GameController *gamecontroller);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerEventState	SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerEventState(int state);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int state)
SDL_GameControllerFromInstanceID	SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameController *SDLCALL SDL_GameControllerFromInstanceID(SDL_JoystickID joyi/;"	kind:p	typeref:typename:DECLSPEC SDL_GameController * SDLCALL	signature:(SDL_JoystickID joyid)
SDL_GameControllerGetAttached	SDL_gamecontroller.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GameControllerGetAttached(SDL_GameController *gamecontrolle/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerGetAxis	SDL_gamecontroller.h	/^SDL_GameControllerGetAxis(SDL_GameController *gamecontroller,$/;"	kind:p	typeref:typename:DECLSPEC Sint16 SDLCALL	signature:(SDL_GameController * gamecontroller,SDL_GameControllerAxis axis)
SDL_GameControllerGetAxisFromString	SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameControllerAxis SDLCALL SDL_GameControllerGetAxisFromString(const char *p/;"	kind:p	typeref:typename:DECLSPEC SDL_GameControllerAxis SDLCALL	signature:(const char * pchString)
SDL_GameControllerGetBindForAxis	SDL_gamecontroller.h	/^SDL_GameControllerGetBindForAxis(SDL_GameController *gamecontroller,$/;"	kind:p	typeref:typename:DECLSPEC SDL_GameControllerButtonBind SDLCALL	signature:(SDL_GameController * gamecontroller,SDL_GameControllerAxis axis)
SDL_GameControllerGetBindForButton	SDL_gamecontroller.h	/^SDL_GameControllerGetBindForButton(SDL_GameController *gamecontroller,$/;"	kind:p	typeref:typename:DECLSPEC SDL_GameControllerButtonBind SDLCALL	signature:(SDL_GameController * gamecontroller,SDL_GameControllerButton button)
SDL_GameControllerGetButton	SDL_gamecontroller.h	/^extern DECLSPEC Uint8 SDLCALL SDL_GameControllerGetButton(SDL_GameController *gamecontroller,$/;"	kind:p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(SDL_GameController * gamecontroller,SDL_GameControllerButton button)
SDL_GameControllerGetButtonFromString	SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameControllerButton SDLCALL SDL_GameControllerGetButtonFromString(const cha/;"	kind:p	typeref:typename:DECLSPEC SDL_GameControllerButton SDLCALL	signature:(const char * pchString)
SDL_GameControllerGetJoystick	SDL_gamecontroller.h	/^extern DECLSPEC SDL_Joystick *SDLCALL SDL_GameControllerGetJoystick(SDL_GameController *gamecont/;"	kind:p	typeref:typename:DECLSPEC SDL_Joystick * SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerGetPlayerIndex	SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerGetPlayerIndex(SDL_GameController *gamecontroller)/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerGetProduct	SDL_gamecontroller.h	/^extern DECLSPEC Uint16 SDLCALL SDL_GameControllerGetProduct(SDL_GameController * gamecontroller)/;"	kind:p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerGetProductVersion	SDL_gamecontroller.h	/^extern DECLSPEC Uint16 SDLCALL SDL_GameControllerGetProductVersion(SDL_GameController * gamecont/;"	kind:p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerGetStringForAxis	SDL_gamecontroller.h	/^extern DECLSPEC const char* SDLCALL SDL_GameControllerGetStringForAxis(SDL_GameControllerAxis ax/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_GameControllerAxis axis)
SDL_GameControllerGetStringForButton	SDL_gamecontroller.h	/^extern DECLSPEC const char* SDLCALL SDL_GameControllerGetStringForButton(SDL_GameControllerButto/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_GameControllerButton button)
SDL_GameControllerGetVendor	SDL_gamecontroller.h	/^extern DECLSPEC Uint16 SDLCALL SDL_GameControllerGetVendor(SDL_GameController * gamecontroller);$/;"	kind:p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerMapping	SDL_gamecontroller.h	/^extern DECLSPEC char * SDLCALL SDL_GameControllerMapping(SDL_GameController * gamecontroller);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerMappingForDeviceIndex	SDL_gamecontroller.h	/^extern DECLSPEC char *SDLCALL SDL_GameControllerMappingForDeviceIndex(int joystick_index);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(int joystick_index)
SDL_GameControllerMappingForGUID	SDL_gamecontroller.h	/^extern DECLSPEC char * SDLCALL SDL_GameControllerMappingForGUID(SDL_JoystickGUID guid);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(SDL_JoystickGUID guid)
SDL_GameControllerMappingForIndex	SDL_gamecontroller.h	/^extern DECLSPEC char * SDLCALL SDL_GameControllerMappingForIndex(int mapping_index);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(int mapping_index)
SDL_GameControllerName	SDL_gamecontroller.h	/^extern DECLSPEC const char *SDLCALL SDL_GameControllerName(SDL_GameController *gamecontroller);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_GameController * gamecontroller)
SDL_GameControllerNameForIndex	SDL_gamecontroller.h	/^extern DECLSPEC const char *SDLCALL SDL_GameControllerNameForIndex(int joystick_index);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int joystick_index)
SDL_GameControllerNumMappings	SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerNumMappings(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GameControllerOpen	SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameController *SDLCALL SDL_GameControllerOpen(int joystick_index);$/;"	kind:p	typeref:typename:DECLSPEC SDL_GameController * SDLCALL	signature:(int joystick_index)
SDL_GameControllerRumble	SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerRumble(SDL_GameController *gamecontroller, Uint16 /;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_GameController * gamecontroller,Uint16 low_frequency_rumble,Uint16 high_frequency_rumble,Uint32 duration_ms)
SDL_GameControllerUpdate	SDL_gamecontroller.h	/^extern DECLSPEC void SDLCALL SDL_GameControllerUpdate(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_GestureID	SDL_gesture.h	/^typedef Sint64 SDL_GestureID;$/;"	kind:t	typeref:typename:Sint64
SDL_GetAssertionHandler	SDL_assert.h	/^extern DECLSPEC SDL_AssertionHandler SDLCALL SDL_GetAssertionHandler(void **puserdata);$/;"	kind:p	typeref:typename:DECLSPEC SDL_AssertionHandler SDLCALL	signature:(void ** puserdata)
SDL_GetAssertionReport	SDL_assert.h	/^extern DECLSPEC const SDL_AssertData * SDLCALL SDL_GetAssertionReport(void);$/;"	kind:p	typeref:typename:DECLSPEC const SDL_AssertData * SDLCALL	signature:(void)
SDL_GetAudioDeviceName	SDL_audio.h	/^extern DECLSPEC const char *SDLCALL SDL_GetAudioDeviceName(int index,$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int index,int iscapture)
SDL_GetAudioDeviceStatus	SDL_audio.h	/^SDL_GetAudioDeviceStatus(SDL_AudioDeviceID dev);$/;"	kind:p	typeref:typename:DECLSPEC SDL_AudioStatus SDLCALL	signature:(SDL_AudioDeviceID dev)
SDL_GetAudioDriver	SDL_audio.h	/^extern DECLSPEC const char *SDLCALL SDL_GetAudioDriver(int index);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int index)
SDL_GetAudioStatus	SDL_audio.h	/^extern DECLSPEC SDL_AudioStatus SDLCALL SDL_GetAudioStatus(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_AudioStatus SDLCALL	signature:(void)
SDL_GetBasePath	SDL_filesystem.h	/^extern DECLSPEC char *SDLCALL SDL_GetBasePath(void);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(void)
SDL_GetCPUCacheLineSize	SDL_cpuinfo.h	/^extern DECLSPEC int SDLCALL SDL_GetCPUCacheLineSize(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetCPUCount	SDL_cpuinfo.h	/^extern DECLSPEC int SDLCALL SDL_GetCPUCount(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetClipRect	SDL_surface.h	/^extern DECLSPEC void SDLCALL SDL_GetClipRect(SDL_Surface * surface,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Surface * surface,SDL_Rect * rect)
SDL_GetClipboardText	SDL_clipboard.h	/^extern DECLSPEC char * SDLCALL SDL_GetClipboardText(void);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(void)
SDL_GetClosestDisplayMode	SDL_video.h	/^extern DECLSPEC SDL_DisplayMode * SDLCALL SDL_GetClosestDisplayMode(int displayIndex, const SDL_/;"	kind:p	typeref:typename:DECLSPEC SDL_DisplayMode * SDLCALL	signature:(int displayIndex,const SDL_DisplayMode * mode,SDL_DisplayMode * closest)
SDL_GetColorKey	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_GetColorKey(SDL_Surface * surface,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,Uint32 * key)
SDL_GetCurrentAudioDriver	SDL_audio.h	/^extern DECLSPEC const char *SDLCALL SDL_GetCurrentAudioDriver(void);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_GetCurrentDisplayMode	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetCurrentDisplayMode(int displayIndex, SDL_DisplayMode * mode);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex,SDL_DisplayMode * mode)
SDL_GetCurrentVideoDriver	SDL_video.h	/^extern DECLSPEC const char *SDLCALL SDL_GetCurrentVideoDriver(void);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_GetCursor	SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_GetCursor(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Cursor * SDLCALL	signature:(void)
SDL_GetDefaultAssertionHandler	SDL_assert.h	/^extern DECLSPEC SDL_AssertionHandler SDLCALL SDL_GetDefaultAssertionHandler(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_AssertionHandler SDLCALL	signature:(void)
SDL_GetDefaultCursor	SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_GetDefaultCursor(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Cursor * SDLCALL	signature:(void)
SDL_GetDesktopDisplayMode	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetDesktopDisplayMode(int displayIndex, SDL_DisplayMode * mode);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex,SDL_DisplayMode * mode)
SDL_GetDisplayBounds	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetDisplayBounds(int displayIndex, SDL_Rect * rect);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex,SDL_Rect * rect)
SDL_GetDisplayDPI	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetDisplayDPI(int displayIndex, float * ddpi, float * hdpi, floa/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex,float * ddpi,float * hdpi,float * vdpi)
SDL_GetDisplayMode	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetDisplayMode(int displayIndex, int modeIndex,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex,int modeIndex,SDL_DisplayMode * mode)
SDL_GetDisplayName	SDL_video.h	/^extern DECLSPEC const char * SDLCALL SDL_GetDisplayName(int displayIndex);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int displayIndex)
SDL_GetDisplayOrientation	SDL_video.h	/^extern DECLSPEC SDL_DisplayOrientation SDLCALL SDL_GetDisplayOrientation(int displayIndex);$/;"	kind:p	typeref:typename:DECLSPEC SDL_DisplayOrientation SDLCALL	signature:(int displayIndex)
SDL_GetDisplayUsableBounds	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetDisplayUsableBounds(int displayIndex, SDL_Rect * rect);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex,SDL_Rect * rect)
SDL_GetError	SDL_error.h	/^extern DECLSPEC const char *SDLCALL SDL_GetError(void);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_GetEventFilter	SDL_events.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetEventFilter(SDL_EventFilter * filter,$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_EventFilter * filter,void ** userdata)
SDL_GetEventState	SDL_events.h	/^#define SDL_GetEventState(/;"	kind:d	signature:(type)
SDL_GetGlobalMouseState	SDL_mouse.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetGlobalMouseState(int *x, int *y);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(int * x,int * y)
SDL_GetGrabbedWindow	SDL_video.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_GetGrabbedWindow(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(void)
SDL_GetHint	SDL_hints.h	/^extern DECLSPEC const char * SDLCALL SDL_GetHint(const char *name);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(const char * name)
SDL_GetHintBoolean	SDL_hints.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetHintBoolean(const char *name, SDL_bool default_value);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const char * name,SDL_bool default_value)
SDL_GetKeyFromName	SDL_keyboard.h	/^extern DECLSPEC SDL_Keycode SDLCALL SDL_GetKeyFromName(const char *name);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Keycode SDLCALL	signature:(const char * name)
SDL_GetKeyFromScancode	SDL_keyboard.h	/^extern DECLSPEC SDL_Keycode SDLCALL SDL_GetKeyFromScancode(SDL_Scancode scancode);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Keycode SDLCALL	signature:(SDL_Scancode scancode)
SDL_GetKeyName	SDL_keyboard.h	/^extern DECLSPEC const char *SDLCALL SDL_GetKeyName(SDL_Keycode key);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_Keycode key)
SDL_GetKeyboardFocus	SDL_keyboard.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_GetKeyboardFocus(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(void)
SDL_GetKeyboardState	SDL_keyboard.h	/^extern DECLSPEC const Uint8 *SDLCALL SDL_GetKeyboardState(int *numkeys);$/;"	kind:p	typeref:typename:DECLSPEC const Uint8 * SDLCALL	signature:(int * numkeys)
SDL_GetMemoryFunctions	SDL_stdinc.h	/^extern DECLSPEC void SDLCALL SDL_GetMemoryFunctions(SDL_malloc_func *malloc_func,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_malloc_func * malloc_func,SDL_calloc_func * calloc_func,SDL_realloc_func * realloc_func,SDL_free_func * free_func)
SDL_GetModState	SDL_keyboard.h	/^extern DECLSPEC SDL_Keymod SDLCALL SDL_GetModState(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Keymod SDLCALL	signature:(void)
SDL_GetMouseFocus	SDL_mouse.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_GetMouseFocus(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(void)
SDL_GetMouseState	SDL_mouse.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetMouseState(int *x, int *y);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(int * x,int * y)
SDL_GetNumAllocations	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_GetNumAllocations(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetNumAudioDevices	SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_GetNumAudioDevices(int iscapture);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int iscapture)
SDL_GetNumAudioDrivers	SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_GetNumAudioDrivers(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetNumDisplayModes	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetNumDisplayModes(int displayIndex);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int displayIndex)
SDL_GetNumRenderDrivers	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetNumRenderDrivers(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetNumTouchDevices	SDL_touch.h	/^extern DECLSPEC int SDLCALL SDL_GetNumTouchDevices(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetNumTouchFingers	SDL_touch.h	/^extern DECLSPEC int SDLCALL SDL_GetNumTouchFingers(SDL_TouchID touchID);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_TouchID touchID)
SDL_GetNumVideoDisplays	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetNumVideoDisplays(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetNumVideoDrivers	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetNumVideoDrivers(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetPerformanceCounter	SDL_timer.h	/^extern DECLSPEC Uint64 SDLCALL SDL_GetPerformanceCounter(void);$/;"	kind:p	typeref:typename:DECLSPEC Uint64 SDLCALL	signature:(void)
SDL_GetPerformanceFrequency	SDL_timer.h	/^extern DECLSPEC Uint64 SDLCALL SDL_GetPerformanceFrequency(void);$/;"	kind:p	typeref:typename:DECLSPEC Uint64 SDLCALL	signature:(void)
SDL_GetPixelFormatName	SDL_pixels.h	/^extern DECLSPEC const char* SDLCALL SDL_GetPixelFormatName(Uint32 format);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(Uint32 format)
SDL_GetPlatform	SDL_platform.h	/^extern DECLSPEC const char * SDLCALL SDL_GetPlatform (void);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_GetPowerInfo	SDL_power.h	/^extern DECLSPEC SDL_PowerState SDLCALL SDL_GetPowerInfo(int *secs, int *pct);$/;"	kind:p	typeref:typename:DECLSPEC SDL_PowerState SDLCALL	signature:(int * secs,int * pct)
SDL_GetPrefPath	SDL_filesystem.h	/^extern DECLSPEC char *SDLCALL SDL_GetPrefPath(const char *org, const char *app);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * org,const char * app)
SDL_GetQueuedAudioSize	SDL_audio.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetQueuedAudioSize(SDL_AudioDeviceID dev);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_AudioDeviceID dev)
SDL_GetRGB	SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_GetRGB(Uint32 pixel,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 pixel,const SDL_PixelFormat * format,Uint8 * r,Uint8 * g,Uint8 * b)
SDL_GetRGBA	SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_GetRGBA(Uint32 pixel,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 pixel,const SDL_PixelFormat * format,Uint8 * r,Uint8 * g,Uint8 * b,Uint8 * a)
SDL_GetRelativeMouseMode	SDL_mouse.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetRelativeMouseMode(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_GetRelativeMouseState	SDL_mouse.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetRelativeMouseState(int *x, int *y);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(int * x,int * y)
SDL_GetRenderDrawBlendMode	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRenderDrawBlendMode(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_BlendMode * blendMode)
SDL_GetRenderDrawColor	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRenderDrawColor(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,Uint8 * r,Uint8 * g,Uint8 * b,Uint8 * a)
SDL_GetRenderDriverInfo	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRenderDriverInfo(int index,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int index,SDL_RendererInfo * info)
SDL_GetRenderTarget	SDL_render.h	/^extern DECLSPEC SDL_Texture * SDLCALL SDL_GetRenderTarget(SDL_Renderer *renderer);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Texture * SDLCALL	signature:(SDL_Renderer * renderer)
SDL_GetRenderer	SDL_render.h	/^extern DECLSPEC SDL_Renderer * SDLCALL SDL_GetRenderer(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Renderer * SDLCALL	signature:(SDL_Window * window)
SDL_GetRendererInfo	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRendererInfo(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_RendererInfo * info)
SDL_GetRendererOutputSize	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRendererOutputSize(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,int * w,int * h)
SDL_GetRevision	SDL_version.h	/^extern DECLSPEC const char *SDLCALL SDL_GetRevision(void);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(void)
SDL_GetRevisionNumber	SDL_version.h	/^extern DECLSPEC int SDLCALL SDL_GetRevisionNumber(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetScancodeFromKey	SDL_keyboard.h	/^extern DECLSPEC SDL_Scancode SDLCALL SDL_GetScancodeFromKey(SDL_Keycode key);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Scancode SDLCALL	signature:(SDL_Keycode key)
SDL_GetScancodeFromName	SDL_keyboard.h	/^extern DECLSPEC SDL_Scancode SDLCALL SDL_GetScancodeFromName(const char *name);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Scancode SDLCALL	signature:(const char * name)
SDL_GetScancodeName	SDL_keyboard.h	/^extern DECLSPEC const char *SDLCALL SDL_GetScancodeName(SDL_Scancode scancode);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_Scancode scancode)
SDL_GetShapedWindowMode	SDL_shape.h	/^extern DECLSPEC int SDLCALL SDL_GetShapedWindowMode(SDL_Window *window,SDL_WindowShapeMode *shap/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,SDL_WindowShapeMode * shape_mode)
SDL_GetSurfaceAlphaMod	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_GetSurfaceAlphaMod(SDL_Surface * surface,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,Uint8 * alpha)
SDL_GetSurfaceBlendMode	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_GetSurfaceBlendMode(SDL_Surface * surface,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,SDL_BlendMode * blendMode)
SDL_GetSurfaceColorMod	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_GetSurfaceColorMod(SDL_Surface * surface,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,Uint8 * r,Uint8 * g,Uint8 * b)
SDL_GetSystemRAM	SDL_cpuinfo.h	/^extern DECLSPEC int SDLCALL SDL_GetSystemRAM(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_GetTextureAlphaMod	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetTextureAlphaMod(SDL_Texture * texture,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,Uint8 * alpha)
SDL_GetTextureBlendMode	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetTextureBlendMode(SDL_Texture * texture,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,SDL_BlendMode * blendMode)
SDL_GetTextureColorMod	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetTextureColorMod(SDL_Texture * texture,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,Uint8 * r,Uint8 * g,Uint8 * b)
SDL_GetThreadID	SDL_thread.h	/^extern DECLSPEC SDL_threadID SDLCALL SDL_GetThreadID(SDL_Thread * thread);$/;"	kind:p	typeref:typename:DECLSPEC SDL_threadID SDLCALL	signature:(SDL_Thread * thread)
SDL_GetThreadName	SDL_thread.h	/^extern DECLSPEC const char *SDLCALL SDL_GetThreadName(SDL_Thread *thread);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_Thread * thread)
SDL_GetTicks	SDL_timer.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetTicks(void);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(void)
SDL_GetTouchDevice	SDL_touch.h	/^extern DECLSPEC SDL_TouchID SDLCALL SDL_GetTouchDevice(int index);$/;"	kind:p	typeref:typename:DECLSPEC SDL_TouchID SDLCALL	signature:(int index)
SDL_GetTouchFinger	SDL_touch.h	/^extern DECLSPEC SDL_Finger * SDLCALL SDL_GetTouchFinger(SDL_TouchID touchID, int index);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Finger * SDLCALL	signature:(SDL_TouchID touchID,int index)
SDL_GetVersion	SDL_version.h	/^extern DECLSPEC void SDLCALL SDL_GetVersion(SDL_version * ver);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_version * ver)
SDL_GetVideoDriver	SDL_video.h	/^extern DECLSPEC const char *SDLCALL SDL_GetVideoDriver(int index);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int index)
SDL_GetWindowBordersSize	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetWindowBordersSize(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,int * top,int * left,int * bottom,int * right)
SDL_GetWindowBrightness	SDL_video.h	/^extern DECLSPEC float SDLCALL SDL_GetWindowBrightness(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowData	SDL_video.h	/^extern DECLSPEC void *SDLCALL SDL_GetWindowData(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_Window * window,const char * name)
SDL_GetWindowDisplayIndex	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetWindowDisplayIndex(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowDisplayMode	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetWindowDisplayMode(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,SDL_DisplayMode * mode)
SDL_GetWindowFlags	SDL_video.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetWindowFlags(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowFromID	SDL_video.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_GetWindowFromID(Uint32 id);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Window * SDLCALL	signature:(Uint32 id)
SDL_GetWindowGammaRamp	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetWindowGammaRamp(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,Uint16 * red,Uint16 * green,Uint16 * blue)
SDL_GetWindowGrab	SDL_video.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetWindowGrab(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowID	SDL_video.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetWindowID(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowMaximumSize	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetWindowMaximumSize(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int * w,int * h)
SDL_GetWindowMinimumSize	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetWindowMinimumSize(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int * w,int * h)
SDL_GetWindowOpacity	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetWindowOpacity(SDL_Window * window, float * out_opacity);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,float * out_opacity)
SDL_GetWindowPixelFormat	SDL_video.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetWindowPixelFormat(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowPosition	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetWindowPosition(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int * x,int * y)
SDL_GetWindowSize	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetWindowSize(SDL_Window * window, int *w,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int * w,int * h)
SDL_GetWindowSurface	SDL_video.h	/^extern DECLSPEC SDL_Surface * SDLCALL SDL_GetWindowSurface(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowTitle	SDL_video.h	/^extern DECLSPEC const char *SDLCALL SDL_GetWindowTitle(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_Window * window)
SDL_GetWindowWMInfo	SDL_syswm.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetWindowWMInfo(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Window * window,SDL_SysWMinfo * info)
SDL_GetYUVConversionMode	SDL_surface.h	/^extern DECLSPEC SDL_YUV_CONVERSION_MODE SDLCALL SDL_GetYUVConversionMode(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_YUV_CONVERSION_MODE SDLCALL	signature:(void)
SDL_GetYUVConversionModeForResolution	SDL_surface.h	/^extern DECLSPEC SDL_YUV_CONVERSION_MODE SDLCALL SDL_GetYUVConversionModeForResolution(int width,/;"	kind:p	typeref:typename:DECLSPEC SDL_YUV_CONVERSION_MODE SDLCALL	signature:(int width,int height)
SDL_HAPTIC_AUTOCENTER	SDL_haptic.h	/^#define SDL_HAPTIC_AUTOCENTER /;"	kind:d
SDL_HAPTIC_CARTESIAN	SDL_haptic.h	/^#define SDL_HAPTIC_CARTESIAN /;"	kind:d
SDL_HAPTIC_CONSTANT	SDL_haptic.h	/^#define SDL_HAPTIC_CONSTANT /;"	kind:d
SDL_HAPTIC_CUSTOM	SDL_haptic.h	/^#define SDL_HAPTIC_CUSTOM /;"	kind:d
SDL_HAPTIC_DAMPER	SDL_haptic.h	/^#define SDL_HAPTIC_DAMPER /;"	kind:d
SDL_HAPTIC_DINPUT	SDL_config.h	/^#define SDL_HAPTIC_DINPUT /;"	kind:d
SDL_HAPTIC_FRICTION	SDL_haptic.h	/^#define SDL_HAPTIC_FRICTION /;"	kind:d
SDL_HAPTIC_GAIN	SDL_haptic.h	/^#define SDL_HAPTIC_GAIN /;"	kind:d
SDL_HAPTIC_INERTIA	SDL_haptic.h	/^#define SDL_HAPTIC_INERTIA /;"	kind:d
SDL_HAPTIC_INFINITY	SDL_haptic.h	/^#define SDL_HAPTIC_INFINITY /;"	kind:d
SDL_HAPTIC_LEFTRIGHT	SDL_haptic.h	/^#define SDL_HAPTIC_LEFTRIGHT /;"	kind:d
SDL_HAPTIC_PAUSE	SDL_haptic.h	/^#define SDL_HAPTIC_PAUSE /;"	kind:d
SDL_HAPTIC_POLAR	SDL_haptic.h	/^#define SDL_HAPTIC_POLAR /;"	kind:d
SDL_HAPTIC_RAMP	SDL_haptic.h	/^#define SDL_HAPTIC_RAMP /;"	kind:d
SDL_HAPTIC_SAWTOOTHDOWN	SDL_haptic.h	/^#define SDL_HAPTIC_SAWTOOTHDOWN /;"	kind:d
SDL_HAPTIC_SAWTOOTHUP	SDL_haptic.h	/^#define SDL_HAPTIC_SAWTOOTHUP /;"	kind:d
SDL_HAPTIC_SINE	SDL_haptic.h	/^#define SDL_HAPTIC_SINE /;"	kind:d
SDL_HAPTIC_SPHERICAL	SDL_haptic.h	/^#define SDL_HAPTIC_SPHERICAL /;"	kind:d
SDL_HAPTIC_SPRING	SDL_haptic.h	/^#define SDL_HAPTIC_SPRING /;"	kind:d
SDL_HAPTIC_STATUS	SDL_haptic.h	/^#define SDL_HAPTIC_STATUS /;"	kind:d
SDL_HAPTIC_TRIANGLE	SDL_haptic.h	/^#define SDL_HAPTIC_TRIANGLE /;"	kind:d
SDL_HAPTIC_XINPUT	SDL_config.h	/^#define SDL_HAPTIC_XINPUT /;"	kind:d
SDL_HAT_CENTERED	SDL_joystick.h	/^#define SDL_HAT_CENTERED /;"	kind:d
SDL_HAT_DOWN	SDL_joystick.h	/^#define SDL_HAT_DOWN /;"	kind:d
SDL_HAT_LEFT	SDL_joystick.h	/^#define SDL_HAT_LEFT /;"	kind:d
SDL_HAT_LEFTDOWN	SDL_joystick.h	/^#define SDL_HAT_LEFTDOWN /;"	kind:d
SDL_HAT_LEFTUP	SDL_joystick.h	/^#define SDL_HAT_LEFTUP /;"	kind:d
SDL_HAT_RIGHT	SDL_joystick.h	/^#define SDL_HAT_RIGHT /;"	kind:d
SDL_HAT_RIGHTDOWN	SDL_joystick.h	/^#define SDL_HAT_RIGHTDOWN /;"	kind:d
SDL_HAT_RIGHTUP	SDL_joystick.h	/^#define SDL_HAT_RIGHTUP /;"	kind:d
SDL_HAT_UP	SDL_joystick.h	/^#define SDL_HAT_UP /;"	kind:d
SDL_HINT_ACCELEROMETER_AS_JOYSTICK	SDL_hints.h	/^#define SDL_HINT_ACCELEROMETER_AS_JOYSTICK /;"	kind:d
SDL_HINT_ALLOW_TOPMOST	SDL_hints.h	/^#define SDL_HINT_ALLOW_TOPMOST /;"	kind:d
SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION	SDL_hints.h	/^#define SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION /;"	kind:d
SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION	SDL_hints.h	/^#define SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION /;"	kind:d
SDL_HINT_ANDROID_SEPARATE_MOUSE_AND_TOUCH	SDL_hints.h	/^#define SDL_HINT_ANDROID_SEPARATE_MOUSE_AND_TOUCH /;"	kind:d
SDL_HINT_ANDROID_TRAP_BACK_BUTTON	SDL_hints.h	/^#define SDL_HINT_ANDROID_TRAP_BACK_BUTTON /;"	kind:d
SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS	SDL_hints.h	/^#define SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS /;"	kind:d
SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION	SDL_hints.h	/^#define SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION /;"	kind:d
SDL_HINT_AUDIO_CATEGORY	SDL_hints.h	/^#define SDL_HINT_AUDIO_CATEGORY /;"	kind:d
SDL_HINT_AUDIO_RESAMPLING_MODE	SDL_hints.h	/^#define SDL_HINT_AUDIO_RESAMPLING_MODE /;"	kind:d
SDL_HINT_BMP_SAVE_LEGACY_FORMAT	SDL_hints.h	/^#define SDL_HINT_BMP_SAVE_LEGACY_FORMAT /;"	kind:d
SDL_HINT_DEFAULT	SDL_hints.h	/^    SDL_HINT_DEFAULT,$/;"	kind:e	enum:__anonbf450fe30103	access:public
SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT	SDL_hints.h	/^#define SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT /;"	kind:d
SDL_HINT_ENABLE_STEAM_CONTROLLERS	SDL_hints.h	/^#define SDL_HINT_ENABLE_STEAM_CONTROLLERS /;"	kind:d
SDL_HINT_FRAMEBUFFER_ACCELERATION	SDL_hints.h	/^#define SDL_HINT_FRAMEBUFFER_ACCELERATION /;"	kind:d
SDL_HINT_GAMECONTROLLERCONFIG	SDL_hints.h	/^#define SDL_HINT_GAMECONTROLLERCONFIG /;"	kind:d
SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES	SDL_hints.h	/^#define SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES /;"	kind:d
SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT	SDL_hints.h	/^#define SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT /;"	kind:d
SDL_HINT_GRAB_KEYBOARD	SDL_hints.h	/^#define SDL_HINT_GRAB_KEYBOARD /;"	kind:d
SDL_HINT_IDLE_TIMER_DISABLED	SDL_hints.h	/^#define SDL_HINT_IDLE_TIMER_DISABLED /;"	kind:d
SDL_HINT_IME_INTERNAL_EDITING	SDL_hints.h	/^#define SDL_HINT_IME_INTERNAL_EDITING /;"	kind:d
SDL_HINT_IOS_HIDE_HOME_INDICATOR	SDL_hints.h	/^#define SDL_HINT_IOS_HIDE_HOME_INDICATOR /;"	kind:d
SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS	SDL_hints.h	/^#define SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS /;"	kind:d
SDL_HINT_JOYSTICK_HIDAPI	SDL_hints.h	/^#define SDL_HINT_JOYSTICK_HIDAPI /;"	kind:d
SDL_HINT_JOYSTICK_HIDAPI_PS4	SDL_hints.h	/^#define SDL_HINT_JOYSTICK_HIDAPI_PS4 /;"	kind:d
SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE	SDL_hints.h	/^#define SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE /;"	kind:d
SDL_HINT_JOYSTICK_HIDAPI_STEAM	SDL_hints.h	/^#define SDL_HINT_JOYSTICK_HIDAPI_STEAM /;"	kind:d
SDL_HINT_JOYSTICK_HIDAPI_SWITCH	SDL_hints.h	/^#define SDL_HINT_JOYSTICK_HIDAPI_SWITCH /;"	kind:d
SDL_HINT_JOYSTICK_HIDAPI_XBOX	SDL_hints.h	/^#define SDL_HINT_JOYSTICK_HIDAPI_XBOX /;"	kind:d
SDL_HINT_MAC_BACKGROUND_APP	SDL_hints.h	/^#define SDL_HINT_MAC_BACKGROUND_APP /;"	kind:d
SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK	SDL_hints.h	/^#define SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK /;"	kind:d
SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS	SDL_hints.h	/^#define SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS /;"	kind:d
SDL_HINT_MOUSE_DOUBLE_CLICK_TIME	SDL_hints.h	/^#define SDL_HINT_MOUSE_DOUBLE_CLICK_TIME /;"	kind:d
SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH	SDL_hints.h	/^#define SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH /;"	kind:d
SDL_HINT_MOUSE_NORMAL_SPEED_SCALE	SDL_hints.h	/^#define SDL_HINT_MOUSE_NORMAL_SPEED_SCALE /;"	kind:d
SDL_HINT_MOUSE_RELATIVE_MODE_WARP	SDL_hints.h	/^#define SDL_HINT_MOUSE_RELATIVE_MODE_WARP /;"	kind:d
SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE	SDL_hints.h	/^#define SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE /;"	kind:d
SDL_HINT_NORMAL	SDL_hints.h	/^    SDL_HINT_NORMAL,$/;"	kind:e	enum:__anonbf450fe30103	access:public
SDL_HINT_NO_SIGNAL_HANDLERS	SDL_hints.h	/^#define SDL_HINT_NO_SIGNAL_HANDLERS /;"	kind:d
SDL_HINT_OPENGL_ES_DRIVER	SDL_hints.h	/^#define SDL_HINT_OPENGL_ES_DRIVER /;"	kind:d
SDL_HINT_ORIENTATIONS	SDL_hints.h	/^#define SDL_HINT_ORIENTATIONS /;"	kind:d
SDL_HINT_OVERRIDE	SDL_hints.h	/^    SDL_HINT_OVERRIDE$/;"	kind:e	enum:__anonbf450fe30103	access:public
SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION	SDL_hints.h	/^#define SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION /;"	kind:d
SDL_HINT_QTWAYLAND_WINDOW_FLAGS	SDL_hints.h	/^#define SDL_HINT_QTWAYLAND_WINDOW_FLAGS /;"	kind:d
SDL_HINT_RENDER_DIRECT3D11_DEBUG	SDL_hints.h	/^#define SDL_HINT_RENDER_DIRECT3D11_DEBUG /;"	kind:d
SDL_HINT_RENDER_DIRECT3D_THREADSAFE	SDL_hints.h	/^#define SDL_HINT_RENDER_DIRECT3D_THREADSAFE /;"	kind:d
SDL_HINT_RENDER_DRIVER	SDL_hints.h	/^#define SDL_HINT_RENDER_DRIVER /;"	kind:d
SDL_HINT_RENDER_LOGICAL_SIZE_MODE	SDL_hints.h	/^#define SDL_HINT_RENDER_LOGICAL_SIZE_MODE /;"	kind:d
SDL_HINT_RENDER_OPENGL_SHADERS	SDL_hints.h	/^#define SDL_HINT_RENDER_OPENGL_SHADERS /;"	kind:d
SDL_HINT_RENDER_SCALE_QUALITY	SDL_hints.h	/^#define SDL_HINT_RENDER_SCALE_QUALITY /;"	kind:d
SDL_HINT_RENDER_VSYNC	SDL_hints.h	/^#define SDL_HINT_RENDER_VSYNC /;"	kind:d
SDL_HINT_RETURN_KEY_HIDES_IME	SDL_hints.h	/^#define SDL_HINT_RETURN_KEY_HIDES_IME /;"	kind:d
SDL_HINT_RPI_VIDEO_LAYER	SDL_hints.h	/^#define SDL_HINT_RPI_VIDEO_LAYER /;"	kind:d
SDL_HINT_THREAD_STACK_SIZE	SDL_hints.h	/^#define SDL_HINT_THREAD_STACK_SIZE /;"	kind:d
SDL_HINT_TIMER_RESOLUTION	SDL_hints.h	/^#define SDL_HINT_TIMER_RESOLUTION /;"	kind:d
SDL_HINT_TOUCH_MOUSE_EVENTS	SDL_hints.h	/^#define SDL_HINT_TOUCH_MOUSE_EVENTS /;"	kind:d
SDL_HINT_TV_REMOTE_AS_JOYSTICK	SDL_hints.h	/^#define SDL_HINT_TV_REMOTE_AS_JOYSTICK /;"	kind:d
SDL_HINT_VIDEO_ALLOW_SCREENSAVER	SDL_hints.h	/^#define SDL_HINT_VIDEO_ALLOW_SCREENSAVER /;"	kind:d
SDL_HINT_VIDEO_DOUBLE_BUFFER	SDL_hints.h	/^#define SDL_HINT_VIDEO_DOUBLE_BUFFER /;"	kind:d
SDL_HINT_VIDEO_HIGHDPI_DISABLED	SDL_hints.h	/^#define SDL_HINT_VIDEO_HIGHDPI_DISABLED /;"	kind:d
SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES	SDL_hints.h	/^#define SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES /;"	kind:d
SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS	SDL_hints.h	/^#define SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS /;"	kind:d
SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT	SDL_hints.h	/^#define SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT /;"	kind:d
SDL_HINT_VIDEO_WIN_D3DCOMPILER	SDL_hints.h	/^#define SDL_HINT_VIDEO_WIN_D3DCOMPILER /;"	kind:d
SDL_HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR	SDL_hints.h	/^#define SDL_HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR /;"	kind:d
SDL_HINT_VIDEO_X11_NET_WM_PING	SDL_hints.h	/^#define SDL_HINT_VIDEO_X11_NET_WM_PING /;"	kind:d
SDL_HINT_VIDEO_X11_XINERAMA	SDL_hints.h	/^#define SDL_HINT_VIDEO_X11_XINERAMA /;"	kind:d
SDL_HINT_VIDEO_X11_XRANDR	SDL_hints.h	/^#define SDL_HINT_VIDEO_X11_XRANDR /;"	kind:d
SDL_HINT_VIDEO_X11_XVIDMODE	SDL_hints.h	/^#define SDL_HINT_VIDEO_X11_XVIDMODE /;"	kind:d
SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING	SDL_hints.h	/^#define SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING /;"	kind:d
SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP	SDL_hints.h	/^#define SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP /;"	kind:d
SDL_HINT_WINDOWS_INTRESOURCE_ICON	SDL_hints.h	/^#define SDL_HINT_WINDOWS_INTRESOURCE_ICON /;"	kind:d
SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL	SDL_hints.h	/^#define SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL /;"	kind:d
SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4	SDL_hints.h	/^#define SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4 /;"	kind:d
SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN	SDL_hints.h	/^#define SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN /;"	kind:d
SDL_HINT_WINRT_HANDLE_BACK_BUTTON	SDL_hints.h	/^#define SDL_HINT_WINRT_HANDLE_BACK_BUTTON /;"	kind:d
SDL_HINT_WINRT_PRIVACY_POLICY_LABEL	SDL_hints.h	/^#define SDL_HINT_WINRT_PRIVACY_POLICY_LABEL /;"	kind:d
SDL_HINT_WINRT_PRIVACY_POLICY_URL	SDL_hints.h	/^#define SDL_HINT_WINRT_PRIVACY_POLICY_URL /;"	kind:d
SDL_HINT_XINPUT_ENABLED	SDL_hints.h	/^#define SDL_HINT_XINPUT_ENABLED /;"	kind:d
SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING	SDL_hints.h	/^#define SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING /;"	kind:d
SDL_HITTEST_DRAGGABLE	SDL_video.h	/^    SDL_HITTEST_DRAGGABLE,  \/**< Region can drag entire window. *\/$/;"	kind:e	enum:__anonf43722b40b03	access:public
SDL_HITTEST_NORMAL	SDL_video.h	/^    SDL_HITTEST_NORMAL,  \/**< Region is normal. No special properties. *\/$/;"	kind:e	enum:__anonf43722b40b03	access:public
SDL_HITTEST_RESIZE_BOTTOM	SDL_video.h	/^    SDL_HITTEST_RESIZE_BOTTOM,$/;"	kind:e	enum:__anonf43722b40b03	access:public
SDL_HITTEST_RESIZE_BOTTOMLEFT	SDL_video.h	/^    SDL_HITTEST_RESIZE_BOTTOMLEFT,$/;"	kind:e	enum:__anonf43722b40b03	access:public
SDL_HITTEST_RESIZE_BOTTOMRIGHT	SDL_video.h	/^    SDL_HITTEST_RESIZE_BOTTOMRIGHT,$/;"	kind:e	enum:__anonf43722b40b03	access:public
SDL_HITTEST_RESIZE_LEFT	SDL_video.h	/^    SDL_HITTEST_RESIZE_LEFT$/;"	kind:e	enum:__anonf43722b40b03	access:public
SDL_HITTEST_RESIZE_RIGHT	SDL_video.h	/^    SDL_HITTEST_RESIZE_RIGHT,$/;"	kind:e	enum:__anonf43722b40b03	access:public
SDL_HITTEST_RESIZE_TOP	SDL_video.h	/^    SDL_HITTEST_RESIZE_TOP,$/;"	kind:e	enum:__anonf43722b40b03	access:public
SDL_HITTEST_RESIZE_TOPLEFT	SDL_video.h	/^    SDL_HITTEST_RESIZE_TOPLEFT,$/;"	kind:e	enum:__anonf43722b40b03	access:public
SDL_HITTEST_RESIZE_TOPRIGHT	SDL_video.h	/^    SDL_HITTEST_RESIZE_TOPRIGHT,$/;"	kind:e	enum:__anonf43722b40b03	access:public
SDL_Haptic	SDL_haptic.h	/^typedef struct _SDL_Haptic SDL_Haptic;$/;"	kind:t	typeref:struct:_SDL_Haptic
SDL_HapticClose	SDL_haptic.h	/^extern DECLSPEC void SDLCALL SDL_HapticClose(SDL_Haptic * haptic);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticCondition	SDL_haptic.h	/^typedef struct SDL_HapticCondition$/;"	kind:s
SDL_HapticCondition	SDL_haptic.h	/^} SDL_HapticCondition;$/;"	kind:t	typeref:struct:SDL_HapticCondition
SDL_HapticCondition::button	SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
SDL_HapticCondition::center	SDL_haptic.h	/^    Sint16 center[3];       \/**< Position of the dead zone. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Sint16[3]	access:public
SDL_HapticCondition::deadband	SDL_haptic.h	/^    Uint16 deadband[3];     \/**< Size of the dead zone; max 0xFFFF: whole axis-range when 0-cen/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16[3]	access:public
SDL_HapticCondition::delay	SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
SDL_HapticCondition::direction	SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect - Not used ATM. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:SDL_HapticDirection	access:public
SDL_HapticCondition::interval	SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
SDL_HapticCondition::left_coeff	SDL_haptic.h	/^    Sint16 left_coeff[3];   \/**< How fast to increase the force towards the negative side. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Sint16[3]	access:public
SDL_HapticCondition::left_sat	SDL_haptic.h	/^    Uint16 left_sat[3];     \/**< Level when joystick is to the negative side; max 0xFFFF. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16[3]	access:public
SDL_HapticCondition::length	SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint32	access:public
SDL_HapticCondition::right_coeff	SDL_haptic.h	/^    Sint16 right_coeff[3];  \/**< How fast to increase the force towards the positive side. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Sint16[3]	access:public
SDL_HapticCondition::right_sat	SDL_haptic.h	/^    Uint16 right_sat[3];    \/**< Level when joystick is to the positive side; max 0xFFFF. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16[3]	access:public
SDL_HapticCondition::type	SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_SPRING, ::SDL_HAPTIC_DAMPER,$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
SDL_HapticConstant	SDL_haptic.h	/^typedef struct SDL_HapticConstant$/;"	kind:s
SDL_HapticConstant	SDL_haptic.h	/^} SDL_HapticConstant;$/;"	kind:t	typeref:struct:SDL_HapticConstant
SDL_HapticConstant::attack_length	SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::attack_level	SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::button	SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::delay	SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::direction	SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:SDL_HapticDirection	access:public
SDL_HapticConstant::fade_length	SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::fade_level	SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::interval	SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticConstant::length	SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint32	access:public
SDL_HapticConstant::level	SDL_haptic.h	/^    Sint16 level;           \/**< Strength of the constant effect. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Sint16	access:public
SDL_HapticConstant::type	SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_CONSTANT *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
SDL_HapticCustom	SDL_haptic.h	/^typedef struct SDL_HapticCustom$/;"	kind:s
SDL_HapticCustom	SDL_haptic.h	/^} SDL_HapticCustom;$/;"	kind:t	typeref:struct:SDL_HapticCustom
SDL_HapticCustom::attack_length	SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::attack_level	SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::button	SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::channels	SDL_haptic.h	/^    Uint8 channels;         \/**< Axes to use, minimum of one. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint8	access:public
SDL_HapticCustom::data	SDL_haptic.h	/^    Uint16 *data;           \/**< Should contain channels*samples items. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16 *	access:public
SDL_HapticCustom::delay	SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::direction	SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:SDL_HapticDirection	access:public
SDL_HapticCustom::fade_length	SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::fade_level	SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::interval	SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::length	SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint32	access:public
SDL_HapticCustom::period	SDL_haptic.h	/^    Uint16 period;          \/**< Sample periods. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::samples	SDL_haptic.h	/^    Uint16 samples;         \/**< Amount of samples. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticCustom::type	SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_CUSTOM *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
SDL_HapticDestroyEffect	SDL_haptic.h	/^extern DECLSPEC void SDLCALL SDL_HapticDestroyEffect(SDL_Haptic * haptic,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Haptic * haptic,int effect)
SDL_HapticDirection	SDL_haptic.h	/^typedef struct SDL_HapticDirection$/;"	kind:s
SDL_HapticDirection	SDL_haptic.h	/^} SDL_HapticDirection;$/;"	kind:t	typeref:struct:SDL_HapticDirection
SDL_HapticDirection::dir	SDL_haptic.h	/^    Sint32 dir[3];      \/**< The encoded direction. *\/$/;"	kind:m	struct:SDL_HapticDirection	typeref:typename:Sint32[3]	access:public
SDL_HapticDirection::type	SDL_haptic.h	/^    Uint8 type;         \/**< The type of encoding. *\/$/;"	kind:m	struct:SDL_HapticDirection	typeref:typename:Uint8	access:public
SDL_HapticEffect	SDL_haptic.h	/^typedef union SDL_HapticEffect$/;"	kind:u
SDL_HapticEffect	SDL_haptic.h	/^} SDL_HapticEffect;$/;"	kind:t	typeref:union:SDL_HapticEffect
SDL_HapticEffect::condition	SDL_haptic.h	/^    SDL_HapticCondition condition;  \/**< Condition effect. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:SDL_HapticCondition	access:public
SDL_HapticEffect::constant	SDL_haptic.h	/^    SDL_HapticConstant constant;    \/**< Constant effect. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:SDL_HapticConstant	access:public
SDL_HapticEffect::custom	SDL_haptic.h	/^    SDL_HapticCustom custom;        \/**< Custom effect. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:SDL_HapticCustom	access:public
SDL_HapticEffect::leftright	SDL_haptic.h	/^    SDL_HapticLeftRight leftright;  \/**< Left\/Right effect. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:SDL_HapticLeftRight	access:public
SDL_HapticEffect::periodic	SDL_haptic.h	/^    SDL_HapticPeriodic periodic;    \/**< Periodic effect. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:SDL_HapticPeriodic	access:public
SDL_HapticEffect::ramp	SDL_haptic.h	/^    SDL_HapticRamp ramp;            \/**< Ramp effect. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:SDL_HapticRamp	access:public
SDL_HapticEffect::type	SDL_haptic.h	/^    Uint16 type;                    \/**< Effect type. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:Uint16	access:public
SDL_HapticEffectSupported	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticEffectSupported(SDL_Haptic * haptic,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,SDL_HapticEffect * effect)
SDL_HapticGetEffectStatus	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticGetEffectStatus(SDL_Haptic * haptic,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,int effect)
SDL_HapticIndex	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticIndex(SDL_Haptic * haptic);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticLeftRight	SDL_haptic.h	/^typedef struct SDL_HapticLeftRight$/;"	kind:s
SDL_HapticLeftRight	SDL_haptic.h	/^} SDL_HapticLeftRight;$/;"	kind:t	typeref:struct:SDL_HapticLeftRight
SDL_HapticLeftRight::large_magnitude	SDL_haptic.h	/^    Uint16 large_magnitude; \/**< Control of the large controller motor. *\/$/;"	kind:m	struct:SDL_HapticLeftRight	typeref:typename:Uint16	access:public
SDL_HapticLeftRight::length	SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect in milliseconds. *\/$/;"	kind:m	struct:SDL_HapticLeftRight	typeref:typename:Uint32	access:public
SDL_HapticLeftRight::small_magnitude	SDL_haptic.h	/^    Uint16 small_magnitude; \/**< Control of the small controller motor. *\/$/;"	kind:m	struct:SDL_HapticLeftRight	typeref:typename:Uint16	access:public
SDL_HapticLeftRight::type	SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_LEFTRIGHT *\/$/;"	kind:m	struct:SDL_HapticLeftRight	typeref:typename:Uint16	access:public
SDL_HapticName	SDL_haptic.h	/^extern DECLSPEC const char *SDLCALL SDL_HapticName(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int device_index)
SDL_HapticNewEffect	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticNewEffect(SDL_Haptic * haptic,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,SDL_HapticEffect * effect)
SDL_HapticNumAxes	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticNumAxes(SDL_Haptic * haptic);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticNumEffects	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticNumEffects(SDL_Haptic * haptic);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticNumEffectsPlaying	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticNumEffectsPlaying(SDL_Haptic * haptic);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticOpen	SDL_haptic.h	/^extern DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpen(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Haptic * SDLCALL	signature:(int device_index)
SDL_HapticOpenFromJoystick	SDL_haptic.h	/^extern DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpenFromJoystick(SDL_Joystick *$/;"	kind:p	typeref:typename:DECLSPEC SDL_Haptic * SDLCALL	signature:(SDL_Joystick * joystick)
SDL_HapticOpenFromMouse	SDL_haptic.h	/^extern DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpenFromMouse(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Haptic * SDLCALL	signature:(void)
SDL_HapticOpened	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticOpened(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int device_index)
SDL_HapticPause	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticPause(SDL_Haptic * haptic);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticPeriodic	SDL_haptic.h	/^typedef struct SDL_HapticPeriodic$/;"	kind:s
SDL_HapticPeriodic	SDL_haptic.h	/^} SDL_HapticPeriodic;$/;"	kind:t	typeref:struct:SDL_HapticPeriodic
SDL_HapticPeriodic::attack_length	SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::attack_level	SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::button	SDL_haptic.h	/^    Uint16 button;      \/**< Button that triggers the effect. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::delay	SDL_haptic.h	/^    Uint16 delay;       \/**< Delay before starting the effect. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::direction	SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:SDL_HapticDirection	access:public
SDL_HapticPeriodic::fade_length	SDL_haptic.h	/^    Uint16 fade_length; \/**< Duration of the fade. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::fade_level	SDL_haptic.h	/^    Uint16 fade_level;  \/**< Level at the end of the fade. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::interval	SDL_haptic.h	/^    Uint16 interval;    \/**< How soon it can be triggered again after button. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::length	SDL_haptic.h	/^    Uint32 length;      \/**< Duration of the effect. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint32	access:public
SDL_HapticPeriodic::magnitude	SDL_haptic.h	/^    Sint16 magnitude;   \/**< Peak value; if negative, equivalent to 180 degrees extra phase shi/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Sint16	access:public
SDL_HapticPeriodic::offset	SDL_haptic.h	/^    Sint16 offset;      \/**< Mean value of the wave. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Sint16	access:public
SDL_HapticPeriodic::period	SDL_haptic.h	/^    Uint16 period;      \/**< Period of the wave. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::phase	SDL_haptic.h	/^    Uint16 phase;       \/**< Positive phase shift given by hundredth of a degree. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticPeriodic::type	SDL_haptic.h	/^    Uint16 type;        \/**< ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT,$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
SDL_HapticQuery	SDL_haptic.h	/^extern DECLSPEC unsigned int SDLCALL SDL_HapticQuery(SDL_Haptic * haptic);$/;"	kind:p	typeref:typename:DECLSPEC unsigned int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticRamp	SDL_haptic.h	/^typedef struct SDL_HapticRamp$/;"	kind:s
SDL_HapticRamp	SDL_haptic.h	/^} SDL_HapticRamp;$/;"	kind:t	typeref:struct:SDL_HapticRamp
SDL_HapticRamp::attack_length	SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::attack_level	SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::button	SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::delay	SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::direction	SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:SDL_HapticDirection	access:public
SDL_HapticRamp::end	SDL_haptic.h	/^    Sint16 end;             \/**< Ending strength level. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Sint16	access:public
SDL_HapticRamp::fade_length	SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::fade_level	SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::interval	SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRamp::length	SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint32	access:public
SDL_HapticRamp::start	SDL_haptic.h	/^    Sint16 start;           \/**< Beginning strength level. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Sint16	access:public
SDL_HapticRamp::type	SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_RAMP *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
SDL_HapticRumbleInit	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRumbleInit(SDL_Haptic * haptic);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticRumblePlay	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRumblePlay(SDL_Haptic * haptic, float strength, Uint32 len/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,float strength,Uint32 length)
SDL_HapticRumbleStop	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRumbleStop(SDL_Haptic * haptic);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticRumbleSupported	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRumbleSupported(SDL_Haptic * haptic);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticRunEffect	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRunEffect(SDL_Haptic * haptic,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,int effect,Uint32 iterations)
SDL_HapticSetAutocenter	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticSetAutocenter(SDL_Haptic * haptic,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,int autocenter)
SDL_HapticSetGain	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticSetGain(SDL_Haptic * haptic, int gain);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,int gain)
SDL_HapticStopAll	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticStopAll(SDL_Haptic * haptic);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticStopEffect	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticStopEffect(SDL_Haptic * haptic,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,int effect)
SDL_HapticUnpause	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticUnpause(SDL_Haptic * haptic);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic)
SDL_HapticUpdateEffect	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticUpdateEffect(SDL_Haptic * haptic,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Haptic * haptic,int effect,SDL_HapticEffect * data)
SDL_Has3DNow	SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_Has3DNow(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasAVX	SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasAVX(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasAVX2	SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasAVX2(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasAVX512F	SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasAVX512F(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasAltiVec	SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasAltiVec(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasClipboardText	SDL_clipboard.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasClipboardText(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasColorKey	SDL_surface.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasColorKey(SDL_Surface * surface);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Surface * surface)
SDL_HasEvent	SDL_events.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasEvent(Uint32 type);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(Uint32 type)
SDL_HasEvents	SDL_events.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasEvents(Uint32 minType, Uint32 maxType);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(Uint32 minType,Uint32 maxType)
SDL_HasIntersection	SDL_rect.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasIntersection(const SDL_Rect * A,$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const SDL_Rect * A,const SDL_Rect * B)
SDL_HasMMX	SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasMMX(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasNEON	SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasNEON(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasRDTSC	SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasRDTSC(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasSSE	SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasSSE2	SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE2(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasSSE3	SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE3(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasSSE41	SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE41(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasSSE42	SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE42(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HasScreenKeyboardSupport	SDL_keyboard.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasScreenKeyboardSupport(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_HideWindow	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_HideWindow(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_HintCallback	SDL_hints.h	/^typedef void (SDLCALL *SDL_HintCallback)(void *userdata, const char *name, const char *oldValue,/;"	kind:t	typeref:typename:void (SDLCALL *)(void * userdata,const char * name,const char * oldValue,const char * newValue)
SDL_HintPriority	SDL_hints.h	/^} SDL_HintPriority;$/;"	kind:t	typeref:enum:__anonbf450fe30103
SDL_HitTest	SDL_video.h	/^typedef SDL_HitTestResult (SDLCALL *SDL_HitTest)(SDL_Window *win,$/;"	kind:t	typeref:typename:SDL_HitTestResult (SDLCALL *)(SDL_Window * win,const SDL_Point * area,void * data)
SDL_HitTestResult	SDL_video.h	/^} SDL_HitTestResult;$/;"	kind:t	typeref:enum:__anonf43722b40b03
SDL_ICONV_E2BIG	SDL_stdinc.h	/^#define SDL_ICONV_E2BIG /;"	kind:d
SDL_ICONV_EILSEQ	SDL_stdinc.h	/^#define SDL_ICONV_EILSEQ /;"	kind:d
SDL_ICONV_EINVAL	SDL_stdinc.h	/^#define SDL_ICONV_EINVAL /;"	kind:d
SDL_ICONV_ERROR	SDL_stdinc.h	/^#define SDL_ICONV_ERROR /;"	kind:d
SDL_IGNORE	SDL_events.h	/^#define SDL_IGNORE /;"	kind:d
SDL_IMAGE_COMPILEDVERSION	SDL_image.h	/^#define SDL_IMAGE_COMPILEDVERSION /;"	kind:d
SDL_IMAGE_H_	SDL_image.h	/^#define SDL_IMAGE_H_$/;"	kind:d
SDL_IMAGE_MAJOR_VERSION	SDL_image.h	/^#define SDL_IMAGE_MAJOR_VERSION /;"	kind:d
SDL_IMAGE_MINOR_VERSION	SDL_image.h	/^#define SDL_IMAGE_MINOR_VERSION /;"	kind:d
SDL_IMAGE_PATCHLEVEL	SDL_image.h	/^#define SDL_IMAGE_PATCHLEVEL /;"	kind:d
SDL_IMAGE_VERSION	SDL_image.h	/^#define SDL_IMAGE_VERSION(/;"	kind:d	signature:(X)
SDL_IMAGE_VERSION_ATLEAST	SDL_image.h	/^#define SDL_IMAGE_VERSION_ATLEAST(/;"	kind:d	signature:(X,Y,Z)
SDL_INIT_AUDIO	SDL.h	/^#define SDL_INIT_AUDIO /;"	kind:d
SDL_INIT_EVENTS	SDL.h	/^#define SDL_INIT_EVENTS /;"	kind:d
SDL_INIT_EVERYTHING	SDL.h	/^#define SDL_INIT_EVERYTHING /;"	kind:d
SDL_INIT_GAMECONTROLLER	SDL.h	/^#define SDL_INIT_GAMECONTROLLER /;"	kind:d
SDL_INIT_HAPTIC	SDL.h	/^#define SDL_INIT_HAPTIC /;"	kind:d
SDL_INIT_JOYSTICK	SDL.h	/^#define SDL_INIT_JOYSTICK /;"	kind:d
SDL_INIT_NOPARACHUTE	SDL.h	/^#define SDL_INIT_NOPARACHUTE /;"	kind:d
SDL_INIT_SENSOR	SDL.h	/^#define SDL_INIT_SENSOR /;"	kind:d
SDL_INIT_TIMER	SDL.h	/^#define SDL_INIT_TIMER /;"	kind:d
SDL_INIT_VIDEO	SDL.h	/^#define SDL_INIT_VIDEO /;"	kind:d
SDL_INLINE	begin_code.h	/^#define SDL_INLINE /;"	kind:d
SDL_INOUT_Z_CAP	SDL_stdinc.h	/^#define SDL_INOUT_Z_CAP(/;"	kind:d	signature:(x)
SDL_INVALID_SHAPE_ARGUMENT	SDL_shape.h	/^#define SDL_INVALID_SHAPE_ARGUMENT /;"	kind:d
SDL_IN_BYTECAP	SDL_stdinc.h	/^#define SDL_IN_BYTECAP(/;"	kind:d	signature:(x)
SDL_ISPIXELFORMAT_ALPHA	SDL_pixels.h	/^#define SDL_ISPIXELFORMAT_ALPHA(/;"	kind:d	signature:(format)
SDL_ISPIXELFORMAT_ARRAY	SDL_pixels.h	/^#define SDL_ISPIXELFORMAT_ARRAY(/;"	kind:d	signature:(format)
SDL_ISPIXELFORMAT_FOURCC	SDL_pixels.h	/^#define SDL_ISPIXELFORMAT_FOURCC(/;"	kind:d	signature:(format)
SDL_ISPIXELFORMAT_INDEXED	SDL_pixels.h	/^#define SDL_ISPIXELFORMAT_INDEXED(/;"	kind:d	signature:(format)
SDL_ISPIXELFORMAT_PACKED	SDL_pixels.h	/^#define SDL_ISPIXELFORMAT_PACKED(/;"	kind:d	signature:(format)
SDL_Init	SDL.h	/^extern DECLSPEC int SDLCALL SDL_Init(Uint32 flags);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(Uint32 flags)
SDL_InitSubSystem	SDL.h	/^extern DECLSPEC int SDLCALL SDL_InitSubSystem(Uint32 flags);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(Uint32 flags)
SDL_IntersectRect	SDL_rect.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IntersectRect(const SDL_Rect * A,$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const SDL_Rect * A,const SDL_Rect * B,SDL_Rect * result)
SDL_IntersectRectAndLine	SDL_rect.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IntersectRectAndLine(const SDL_Rect *$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const SDL_Rect * rect,int * X1,int * Y1,int * X2,int * Y2)
SDL_InvalidParamError	SDL_error.h	/^#define SDL_InvalidParamError(/;"	kind:d	signature:(param)
SDL_IsAndroidTV	SDL_system.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsAndroidTV(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_IsChromebook	SDL_system.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsChromebook(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_IsDeXMode	SDL_system.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsDeXMode(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_IsGameController	SDL_gamecontroller.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsGameController(int joystick_index);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(int joystick_index)
SDL_IsScreenKeyboardShown	SDL_keyboard.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsScreenKeyboardShown(SDL_Window *window);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Window * window)
SDL_IsScreenSaverEnabled	SDL_video.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsScreenSaverEnabled(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_IsShapedWindow	SDL_shape.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsShapedWindow(const SDL_Window *window);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const SDL_Window * window)
SDL_IsTablet	SDL_system.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsTablet(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_IsTextInputActive	SDL_keyboard.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsTextInputActive(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(void)
SDL_JOYAXISMOTION	SDL_events.h	/^    SDL_JOYAXISMOTION  = 0x600, \/**< Joystick axis motion *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_JOYBALLMOTION	SDL_events.h	/^    SDL_JOYBALLMOTION,          \/**< Joystick trackball motion *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_JOYBUTTONDOWN	SDL_events.h	/^    SDL_JOYBUTTONDOWN,          \/**< Joystick button pressed *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_JOYBUTTONUP	SDL_events.h	/^    SDL_JOYBUTTONUP,            \/**< Joystick button released *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_JOYDEVICEADDED	SDL_events.h	/^    SDL_JOYDEVICEADDED,         \/**< A new joystick has been inserted into the system *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_JOYDEVICEREMOVED	SDL_events.h	/^    SDL_JOYDEVICEREMOVED,       \/**< An opened joystick has been removed *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_JOYHATMOTION	SDL_events.h	/^    SDL_JOYHATMOTION,           \/**< Joystick hat position change *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_JOYSTICK_AXIS_MAX	SDL_joystick.h	/^#define SDL_JOYSTICK_AXIS_MAX /;"	kind:d
SDL_JOYSTICK_AXIS_MIN	SDL_joystick.h	/^#define SDL_JOYSTICK_AXIS_MIN /;"	kind:d
SDL_JOYSTICK_DINPUT	SDL_config.h	/^#define SDL_JOYSTICK_DINPUT /;"	kind:d
SDL_JOYSTICK_HIDAPI	SDL_config.h	/^#define SDL_JOYSTICK_HIDAPI /;"	kind:d
SDL_JOYSTICK_POWER_EMPTY	SDL_joystick.h	/^    SDL_JOYSTICK_POWER_EMPTY,   \/* <= 5% *\/$/;"	kind:e	enum:__anone134b82d0303	access:public
SDL_JOYSTICK_POWER_FULL	SDL_joystick.h	/^    SDL_JOYSTICK_POWER_FULL,    \/* <= 100% *\/$/;"	kind:e	enum:__anone134b82d0303	access:public
SDL_JOYSTICK_POWER_LOW	SDL_joystick.h	/^    SDL_JOYSTICK_POWER_LOW,     \/* <= 20% *\/$/;"	kind:e	enum:__anone134b82d0303	access:public
SDL_JOYSTICK_POWER_MAX	SDL_joystick.h	/^    SDL_JOYSTICK_POWER_MAX$/;"	kind:e	enum:__anone134b82d0303	access:public
SDL_JOYSTICK_POWER_MEDIUM	SDL_joystick.h	/^    SDL_JOYSTICK_POWER_MEDIUM,  \/* <= 70% *\/$/;"	kind:e	enum:__anone134b82d0303	access:public
SDL_JOYSTICK_POWER_UNKNOWN	SDL_joystick.h	/^    SDL_JOYSTICK_POWER_UNKNOWN = -1,$/;"	kind:e	enum:__anone134b82d0303	access:public
SDL_JOYSTICK_POWER_WIRED	SDL_joystick.h	/^    SDL_JOYSTICK_POWER_WIRED,$/;"	kind:e	enum:__anone134b82d0303	access:public
SDL_JOYSTICK_TYPE_ARCADE_PAD	SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_ARCADE_PAD,$/;"	kind:e	enum:__anone134b82d0203	access:public
SDL_JOYSTICK_TYPE_ARCADE_STICK	SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_ARCADE_STICK,$/;"	kind:e	enum:__anone134b82d0203	access:public
SDL_JOYSTICK_TYPE_DANCE_PAD	SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_DANCE_PAD,$/;"	kind:e	enum:__anone134b82d0203	access:public
SDL_JOYSTICK_TYPE_DRUM_KIT	SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_DRUM_KIT,$/;"	kind:e	enum:__anone134b82d0203	access:public
SDL_JOYSTICK_TYPE_FLIGHT_STICK	SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_FLIGHT_STICK,$/;"	kind:e	enum:__anone134b82d0203	access:public
SDL_JOYSTICK_TYPE_GAMECONTROLLER	SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_GAMECONTROLLER,$/;"	kind:e	enum:__anone134b82d0203	access:public
SDL_JOYSTICK_TYPE_GUITAR	SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_GUITAR,$/;"	kind:e	enum:__anone134b82d0203	access:public
SDL_JOYSTICK_TYPE_THROTTLE	SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_THROTTLE$/;"	kind:e	enum:__anone134b82d0203	access:public
SDL_JOYSTICK_TYPE_UNKNOWN	SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_UNKNOWN,$/;"	kind:e	enum:__anone134b82d0203	access:public
SDL_JOYSTICK_TYPE_WHEEL	SDL_joystick.h	/^    SDL_JOYSTICK_TYPE_WHEEL,$/;"	kind:e	enum:__anone134b82d0203	access:public
SDL_JOYSTICK_XINPUT	SDL_config.h	/^#define SDL_JOYSTICK_XINPUT /;"	kind:d
SDL_JoyAxisEvent	SDL_events.h	/^typedef struct SDL_JoyAxisEvent$/;"	kind:s
SDL_JoyAxisEvent	SDL_events.h	/^} SDL_JoyAxisEvent;$/;"	kind:t	typeref:struct:SDL_JoyAxisEvent
SDL_JoyAxisEvent::axis	SDL_events.h	/^    Uint8 axis;         \/**< The joystick axis index *\/$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
SDL_JoyAxisEvent::padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
SDL_JoyAxisEvent::padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
SDL_JoyAxisEvent::padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
SDL_JoyAxisEvent::padding4	SDL_events.h	/^    Uint16 padding4;$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint16	access:public
SDL_JoyAxisEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint32	access:public
SDL_JoyAxisEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYAXISMOTION *\/$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint32	access:public
SDL_JoyAxisEvent::value	SDL_events.h	/^    Sint16 value;       \/**< The axis value (range: -32768 to 32767) *\/$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Sint16	access:public
SDL_JoyAxisEvent::which	SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:SDL_JoystickID	access:public
SDL_JoyBallEvent	SDL_events.h	/^typedef struct SDL_JoyBallEvent$/;"	kind:s
SDL_JoyBallEvent	SDL_events.h	/^} SDL_JoyBallEvent;$/;"	kind:t	typeref:struct:SDL_JoyBallEvent
SDL_JoyBallEvent::ball	SDL_events.h	/^    Uint8 ball;         \/**< The joystick trackball index *\/$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
SDL_JoyBallEvent::padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
SDL_JoyBallEvent::padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
SDL_JoyBallEvent::padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
SDL_JoyBallEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Uint32	access:public
SDL_JoyBallEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYBALLMOTION *\/$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Uint32	access:public
SDL_JoyBallEvent::which	SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:SDL_JoystickID	access:public
SDL_JoyBallEvent::xrel	SDL_events.h	/^    Sint16 xrel;        \/**< The relative motion in the X direction *\/$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Sint16	access:public
SDL_JoyBallEvent::yrel	SDL_events.h	/^    Sint16 yrel;        \/**< The relative motion in the Y direction *\/$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Sint16	access:public
SDL_JoyButtonEvent	SDL_events.h	/^typedef struct SDL_JoyButtonEvent$/;"	kind:s
SDL_JoyButtonEvent	SDL_events.h	/^} SDL_JoyButtonEvent;$/;"	kind:t	typeref:struct:SDL_JoyButtonEvent
SDL_JoyButtonEvent::button	SDL_events.h	/^    Uint8 button;       \/**< The joystick button index *\/$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
SDL_JoyButtonEvent::padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
SDL_JoyButtonEvent::padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
SDL_JoyButtonEvent::state	SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
SDL_JoyButtonEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:Uint32	access:public
SDL_JoyButtonEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP *\/$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:Uint32	access:public
SDL_JoyButtonEvent::which	SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:SDL_JoystickID	access:public
SDL_JoyDeviceEvent	SDL_events.h	/^typedef struct SDL_JoyDeviceEvent$/;"	kind:s
SDL_JoyDeviceEvent	SDL_events.h	/^} SDL_JoyDeviceEvent;$/;"	kind:t	typeref:struct:SDL_JoyDeviceEvent
SDL_JoyDeviceEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_JoyDeviceEvent	typeref:typename:Uint32	access:public
SDL_JoyDeviceEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED *\/$/;"	kind:m	struct:SDL_JoyDeviceEvent	typeref:typename:Uint32	access:public
SDL_JoyDeviceEvent::which	SDL_events.h	/^    Sint32 which;       \/**< The joystick device index for the ADDED event, instance id for the/;"	kind:m	struct:SDL_JoyDeviceEvent	typeref:typename:Sint32	access:public
SDL_JoyHatEvent	SDL_events.h	/^typedef struct SDL_JoyHatEvent$/;"	kind:s
SDL_JoyHatEvent	SDL_events.h	/^} SDL_JoyHatEvent;$/;"	kind:t	typeref:struct:SDL_JoyHatEvent
SDL_JoyHatEvent::hat	SDL_events.h	/^    Uint8 hat;          \/**< The joystick hat index *\/$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
SDL_JoyHatEvent::padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
SDL_JoyHatEvent::padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
SDL_JoyHatEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:Uint32	access:public
SDL_JoyHatEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYHATMOTION *\/$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:Uint32	access:public
SDL_JoyHatEvent::value	SDL_events.h	/^    Uint8 value;        \/**< The hat position value.$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
SDL_JoyHatEvent::which	SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:SDL_JoystickID	access:public
SDL_Joystick	SDL_joystick.h	/^typedef struct _SDL_Joystick SDL_Joystick;$/;"	kind:t	typeref:struct:_SDL_Joystick
SDL_JoystickClose	SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_JoystickClose(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickCurrentPowerLevel	SDL_joystick.h	/^extern DECLSPEC SDL_JoystickPowerLevel SDLCALL SDL_JoystickCurrentPowerLevel(SDL_Joystick * joys/;"	kind:p	typeref:typename:DECLSPEC SDL_JoystickPowerLevel SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickEventState	SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickEventState(int state);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int state)
SDL_JoystickFromInstanceID	SDL_joystick.h	/^extern DECLSPEC SDL_Joystick *SDLCALL SDL_JoystickFromInstanceID(SDL_JoystickID joyid);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Joystick * SDLCALL	signature:(SDL_JoystickID joyid)
SDL_JoystickGUID	SDL_joystick.h	/^} SDL_JoystickGUID;$/;"	kind:t	typeref:struct:__anone134b82d0108
SDL_JoystickGetAttached	SDL_joystick.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_JoystickGetAttached(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickGetAxis	SDL_joystick.h	/^extern DECLSPEC Sint16 SDLCALL SDL_JoystickGetAxis(SDL_Joystick * joystick,$/;"	kind:p	typeref:typename:DECLSPEC Sint16 SDLCALL	signature:(SDL_Joystick * joystick,int axis)
SDL_JoystickGetAxisInitialState	SDL_joystick.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_JoystickGetAxisInitialState(SDL_Joystick * joystick,$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Joystick * joystick,int axis,Sint16 * state)
SDL_JoystickGetBall	SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickGetBall(SDL_Joystick * joystick,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick,int ball,int * dx,int * dy)
SDL_JoystickGetButton	SDL_joystick.h	/^extern DECLSPEC Uint8 SDLCALL SDL_JoystickGetButton(SDL_Joystick * joystick,$/;"	kind:p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(SDL_Joystick * joystick,int button)
SDL_JoystickGetDeviceGUID	SDL_joystick.h	/^extern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetDeviceGUID(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC SDL_JoystickGUID SDLCALL	signature:(int device_index)
SDL_JoystickGetDeviceInstanceID	SDL_joystick.h	/^extern DECLSPEC SDL_JoystickID SDLCALL SDL_JoystickGetDeviceInstanceID(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC SDL_JoystickID SDLCALL	signature:(int device_index)
SDL_JoystickGetDevicePlayerIndex	SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickGetDevicePlayerIndex(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int device_index)
SDL_JoystickGetDeviceProduct	SDL_joystick.h	/^extern DECLSPEC Uint16 SDLCALL SDL_JoystickGetDeviceProduct(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(int device_index)
SDL_JoystickGetDeviceProductVersion	SDL_joystick.h	/^extern DECLSPEC Uint16 SDLCALL SDL_JoystickGetDeviceProductVersion(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(int device_index)
SDL_JoystickGetDeviceType	SDL_joystick.h	/^extern DECLSPEC SDL_JoystickType SDLCALL SDL_JoystickGetDeviceType(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC SDL_JoystickType SDLCALL	signature:(int device_index)
SDL_JoystickGetDeviceVendor	SDL_joystick.h	/^extern DECLSPEC Uint16 SDLCALL SDL_JoystickGetDeviceVendor(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(int device_index)
SDL_JoystickGetGUID	SDL_joystick.h	/^extern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetGUID(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC SDL_JoystickGUID SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickGetGUIDFromString	SDL_joystick.h	/^extern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetGUIDFromString(const char *pchGUID);$/;"	kind:p	typeref:typename:DECLSPEC SDL_JoystickGUID SDLCALL	signature:(const char * pchGUID)
SDL_JoystickGetGUIDString	SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_JoystickGetGUIDString(SDL_JoystickGUID guid, char *pszGUID, int/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_JoystickGUID guid,char * pszGUID,int cbGUID)
SDL_JoystickGetHat	SDL_joystick.h	/^extern DECLSPEC Uint8 SDLCALL SDL_JoystickGetHat(SDL_Joystick * joystick,$/;"	kind:p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(SDL_Joystick * joystick,int hat)
SDL_JoystickGetPlayerIndex	SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickGetPlayerIndex(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickGetProduct	SDL_joystick.h	/^extern DECLSPEC Uint16 SDLCALL SDL_JoystickGetProduct(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickGetProductVersion	SDL_joystick.h	/^extern DECLSPEC Uint16 SDLCALL SDL_JoystickGetProductVersion(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickGetType	SDL_joystick.h	/^extern DECLSPEC SDL_JoystickType SDLCALL SDL_JoystickGetType(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC SDL_JoystickType SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickGetVendor	SDL_joystick.h	/^extern DECLSPEC Uint16 SDLCALL SDL_JoystickGetVendor(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickID	SDL_joystick.h	/^typedef Sint32 SDL_JoystickID;$/;"	kind:t	typeref:typename:Sint32
SDL_JoystickInstanceID	SDL_joystick.h	/^extern DECLSPEC SDL_JoystickID SDLCALL SDL_JoystickInstanceID(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC SDL_JoystickID SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickIsHaptic	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_JoystickIsHaptic(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickName	SDL_joystick.h	/^extern DECLSPEC const char *SDLCALL SDL_JoystickName(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickNameForIndex	SDL_joystick.h	/^extern DECLSPEC const char *SDLCALL SDL_JoystickNameForIndex(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int device_index)
SDL_JoystickNumAxes	SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumAxes(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickNumBalls	SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumBalls(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickNumButtons	SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumButtons(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickNumHats	SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumHats(SDL_Joystick * joystick);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick)
SDL_JoystickOpen	SDL_joystick.h	/^extern DECLSPEC SDL_Joystick *SDLCALL SDL_JoystickOpen(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Joystick * SDLCALL	signature:(int device_index)
SDL_JoystickPowerLevel	SDL_joystick.h	/^} SDL_JoystickPowerLevel;$/;"	kind:t	typeref:enum:__anone134b82d0303
SDL_JoystickRumble	SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickRumble(SDL_Joystick * joystick, Uint16 low_frequency_rum/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Joystick * joystick,Uint16 low_frequency_rumble,Uint16 high_frequency_rumble,Uint32 duration_ms)
SDL_JoystickType	SDL_joystick.h	/^} SDL_JoystickType;$/;"	kind:t	typeref:enum:__anone134b82d0203
SDL_JoystickUpdate	SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_JoystickUpdate(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_KEYDOWN	SDL_events.h	/^    SDL_KEYDOWN        = 0x300, \/**< Key pressed *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_KEYMAPCHANGED	SDL_events.h	/^    SDL_KEYMAPCHANGED,          \/**< Keymap changed due to a system event such as an$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_KEYUP	SDL_events.h	/^    SDL_KEYUP,                  \/**< Key released *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_KeyboardEvent	SDL_events.h	/^typedef struct SDL_KeyboardEvent$/;"	kind:s
SDL_KeyboardEvent	SDL_events.h	/^} SDL_KeyboardEvent;$/;"	kind:t	typeref:struct:SDL_KeyboardEvent
SDL_KeyboardEvent::keysym	SDL_events.h	/^    SDL_Keysym keysym;  \/**< The key that was pressed or released *\/$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:SDL_Keysym	access:public
SDL_KeyboardEvent::padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
SDL_KeyboardEvent::padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
SDL_KeyboardEvent::repeat	SDL_events.h	/^    Uint8 repeat;       \/**< Non-zero if this is a key repeat *\/$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
SDL_KeyboardEvent::state	SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
SDL_KeyboardEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint32	access:public
SDL_KeyboardEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_KEYDOWN or ::SDL_KEYUP *\/$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint32	access:public
SDL_KeyboardEvent::windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The window with keyboard focus, if any *\/$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint32	access:public
SDL_Keycode	SDL_keycode.h	/^typedef Sint32 SDL_Keycode;$/;"	kind:t	typeref:typename:Sint32
SDL_Keymod	SDL_keycode.h	/^} SDL_Keymod;$/;"	kind:t	typeref:enum:__anon7824b1c10203
SDL_Keysym	SDL_keyboard.h	/^typedef struct SDL_Keysym$/;"	kind:s
SDL_Keysym	SDL_keyboard.h	/^} SDL_Keysym;$/;"	kind:t	typeref:struct:SDL_Keysym
SDL_Keysym::mod	SDL_keyboard.h	/^    Uint16 mod;                 \/**< current key modifiers *\/$/;"	kind:m	struct:SDL_Keysym	typeref:typename:Uint16	access:public
SDL_Keysym::scancode	SDL_keyboard.h	/^    SDL_Scancode scancode;      \/**< SDL physical key code - see ::SDL_Scancode for details *\/$/;"	kind:m	struct:SDL_Keysym	typeref:typename:SDL_Scancode	access:public
SDL_Keysym::sym	SDL_keyboard.h	/^    SDL_Keycode sym;            \/**< SDL virtual key code - see ::SDL_Keycode for details *\/$/;"	kind:m	struct:SDL_Keysym	typeref:typename:SDL_Keycode	access:public
SDL_Keysym::unused	SDL_keyboard.h	/^    Uint32 unused;$/;"	kind:m	struct:SDL_Keysym	typeref:typename:Uint32	access:public
SDL_LASTERROR	SDL_error.h	/^    SDL_LASTERROR$/;"	kind:e	enum:__anoned9a67270103	access:public
SDL_LASTEVENT	SDL_events.h	/^    SDL_LASTEVENT    = 0xFFFF$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_LIL_ENDIAN	SDL_endian.h	/^#define SDL_LIL_ENDIAN /;"	kind:d
SDL_LINE	SDL_assert.h	/^#define SDL_LINE /;"	kind:d
SDL_LOADSO_WINDOWS	SDL_config.h	/^#define SDL_LOADSO_WINDOWS /;"	kind:d
SDL_LOG_CATEGORY_APPLICATION	SDL_log.h	/^    SDL_LOG_CATEGORY_APPLICATION,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_ASSERT	SDL_log.h	/^    SDL_LOG_CATEGORY_ASSERT,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_AUDIO	SDL_log.h	/^    SDL_LOG_CATEGORY_AUDIO,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_CUSTOM	SDL_log.h	/^    SDL_LOG_CATEGORY_CUSTOM$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_ERROR	SDL_log.h	/^    SDL_LOG_CATEGORY_ERROR,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_INPUT	SDL_log.h	/^    SDL_LOG_CATEGORY_INPUT,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_RENDER	SDL_log.h	/^    SDL_LOG_CATEGORY_RENDER,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_RESERVED1	SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED1,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_RESERVED10	SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED10,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_RESERVED2	SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED2,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_RESERVED3	SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED3,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_RESERVED4	SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED4,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_RESERVED5	SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED5,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_RESERVED6	SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED6,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_RESERVED7	SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED7,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_RESERVED8	SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED8,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_RESERVED9	SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED9,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_SYSTEM	SDL_log.h	/^    SDL_LOG_CATEGORY_SYSTEM,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_TEST	SDL_log.h	/^    SDL_LOG_CATEGORY_TEST,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_CATEGORY_VIDEO	SDL_log.h	/^    SDL_LOG_CATEGORY_VIDEO,$/;"	kind:e	enum:__anon37b6c7bf0103	access:public
SDL_LOG_PRIORITY_CRITICAL	SDL_log.h	/^    SDL_LOG_PRIORITY_CRITICAL,$/;"	kind:e	enum:__anon37b6c7bf0203	access:public
SDL_LOG_PRIORITY_DEBUG	SDL_log.h	/^    SDL_LOG_PRIORITY_DEBUG,$/;"	kind:e	enum:__anon37b6c7bf0203	access:public
SDL_LOG_PRIORITY_ERROR	SDL_log.h	/^    SDL_LOG_PRIORITY_ERROR,$/;"	kind:e	enum:__anon37b6c7bf0203	access:public
SDL_LOG_PRIORITY_INFO	SDL_log.h	/^    SDL_LOG_PRIORITY_INFO,$/;"	kind:e	enum:__anon37b6c7bf0203	access:public
SDL_LOG_PRIORITY_VERBOSE	SDL_log.h	/^    SDL_LOG_PRIORITY_VERBOSE = 1,$/;"	kind:e	enum:__anon37b6c7bf0203	access:public
SDL_LOG_PRIORITY_WARN	SDL_log.h	/^    SDL_LOG_PRIORITY_WARN,$/;"	kind:e	enum:__anon37b6c7bf0203	access:public
SDL_LinuxSetThreadPriority	SDL_system.h	/^extern DECLSPEC int SDLCALL SDL_LinuxSetThreadPriority(Sint64 threadID, int priority);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(Sint64 threadID,int priority)
SDL_LoadBMP	SDL_surface.h	/^#define SDL_LoadBMP(/;"	kind:d	signature:(file)
SDL_LoadBMP_RW	SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_LoadBMP_RW(SDL_RWops * src,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(SDL_RWops * src,int freesrc)
SDL_LoadDollarTemplates	SDL_gesture.h	/^extern DECLSPEC int SDLCALL SDL_LoadDollarTemplates(SDL_TouchID touchId, SDL_RWops *src);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_TouchID touchId,SDL_RWops * src)
SDL_LoadFile	SDL_rwops.h	/^#define SDL_LoadFile(/;"	kind:d	signature:(file,datasize)
SDL_LoadFile_RW	SDL_rwops.h	/^extern DECLSPEC void *SDLCALL SDL_LoadFile_RW(SDL_RWops * src, size_t *datasize,$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_RWops * src,size_t * datasize,int freesrc)
SDL_LoadFunction	SDL_loadso.h	/^extern DECLSPEC void *SDLCALL SDL_LoadFunction(void *handle,$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void * handle,const char * name)
SDL_LoadObject	SDL_loadso.h	/^extern DECLSPEC void *SDLCALL SDL_LoadObject(const char *sofile);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(const char * sofile)
SDL_LoadWAV	SDL_audio.h	/^#define SDL_LoadWAV(/;"	kind:d	signature:(file,spec,audio_buf,audio_len)
SDL_LoadWAV_RW	SDL_audio.h	/^extern DECLSPEC SDL_AudioSpec *SDLCALL SDL_LoadWAV_RW(SDL_RWops * src,$/;"	kind:p	typeref:typename:DECLSPEC SDL_AudioSpec * SDLCALL	signature:(SDL_RWops * src,int freesrc,SDL_AudioSpec * spec,Uint8 ** audio_buf,Uint32 * audio_len)
SDL_LockAudio	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_LockAudio(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_LockAudioDevice	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_LockAudioDevice(SDL_AudioDeviceID dev);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioDeviceID dev)
SDL_LockJoysticks	SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_LockJoysticks(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_LockMutex	SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_LockMutex(SDL_mutex * mutex);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_mutex * mutex)
SDL_LockSurface	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_LockSurface(SDL_Surface * surface);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface)
SDL_LockTexture	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_LockTexture(SDL_Texture * texture,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,const SDL_Rect * rect,void ** pixels,int * pitch)
SDL_Log	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_Log(SDL_PRINTF_FORMAT_STRING const char *fmt, ...) SDL_PRINTF_V/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogCritical	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogCritical(int category, SDL_PRINTF_FORMAT_STRING const char */;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogDebug	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogDebug(int category, SDL_PRINTF_FORMAT_STRING const char *fmt/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogError	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogError(int category, SDL_PRINTF_FORMAT_STRING const char *fmt/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogGetOutputFunction	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogGetOutputFunction(SDL_LogOutputFunction *callback, void **us/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_LogOutputFunction * callback,void ** userdata)
SDL_LogGetPriority	SDL_log.h	/^extern DECLSPEC SDL_LogPriority SDLCALL SDL_LogGetPriority(int category);$/;"	kind:p	typeref:typename:DECLSPEC SDL_LogPriority SDLCALL	signature:(int category)
SDL_LogInfo	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogInfo(int category, SDL_PRINTF_FORMAT_STRING const char *fmt,/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogMessage	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogMessage(int category,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_LogPriority priority,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogMessageV	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogMessageV(int category,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_LogPriority priority,const char * fmt,va_list ap)
SDL_LogOutputFunction	SDL_log.h	/^typedef void (SDLCALL *SDL_LogOutputFunction)(void *userdata, int category, SDL_LogPriority prio/;"	kind:t	typeref:typename:void (SDLCALL *)(void * userdata,int category,SDL_LogPriority priority,const char * message)
SDL_LogPriority	SDL_log.h	/^} SDL_LogPriority;$/;"	kind:t	typeref:enum:__anon37b6c7bf0203
SDL_LogResetPriorities	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogResetPriorities(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_LogSetAllPriority	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogSetAllPriority(SDL_LogPriority priority);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_LogPriority priority)
SDL_LogSetOutputFunction	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogSetOutputFunction(SDL_LogOutputFunction callback, void *user/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_LogOutputFunction callback,void * userdata)
SDL_LogSetPriority	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogSetPriority(int category,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_LogPriority priority)
SDL_LogVerbose	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogVerbose(int category, SDL_PRINTF_FORMAT_STRING const char *f/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LogWarn	SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogWarn(int category, SDL_PRINTF_FORMAT_STRING const char *fmt,/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(int category,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_LowerBlit	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_LowerBlit$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * src,SDL_Rect * srcrect,SDL_Surface * dst,SDL_Rect * dstrect)
SDL_LowerBlitScaled	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_LowerBlitScaled$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * src,SDL_Rect * srcrect,SDL_Surface * dst,SDL_Rect * dstrect)
SDL_MAIN_AVAILABLE	SDL_main.h	/^#define SDL_MAIN_AVAILABLE$/;"	kind:d
SDL_MAIN_NEEDED	SDL_main.h	/^#define SDL_MAIN_NEEDED$/;"	kind:d
SDL_MAJOR_VERSION	SDL_version.h	/^#define SDL_MAJOR_VERSION /;"	kind:d
SDL_MAX_LOG_MESSAGE	SDL_log.h	/^#define SDL_MAX_LOG_MESSAGE /;"	kind:d
SDL_MAX_SINT16	SDL_stdinc.h	/^#define SDL_MAX_SINT16 /;"	kind:d
SDL_MAX_SINT32	SDL_stdinc.h	/^#define SDL_MAX_SINT32 /;"	kind:d
SDL_MAX_SINT64	SDL_stdinc.h	/^#define SDL_MAX_SINT64 /;"	kind:d
SDL_MAX_SINT8	SDL_stdinc.h	/^#define SDL_MAX_SINT8 /;"	kind:d
SDL_MAX_UINT16	SDL_stdinc.h	/^#define SDL_MAX_UINT16 /;"	kind:d
SDL_MAX_UINT32	SDL_stdinc.h	/^#define SDL_MAX_UINT32 /;"	kind:d
SDL_MAX_UINT64	SDL_stdinc.h	/^#define SDL_MAX_UINT64 /;"	kind:d
SDL_MAX_UINT8	SDL_stdinc.h	/^#define SDL_MAX_UINT8 /;"	kind:d
SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT	SDL_messagebox.h	/^    SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT = 0x00000002   \/**< Marks the default button when e/;"	kind:e	enum:__anon279331cb0203	access:public
SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT	SDL_messagebox.h	/^    SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT = 0x00000001,  \/**< Marks the default button when r/;"	kind:e	enum:__anon279331cb0203	access:public
SDL_MESSAGEBOX_COLOR_BACKGROUND	SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_BACKGROUND,$/;"	kind:e	enum:__anon279331cb0503	access:public
SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND	SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND,$/;"	kind:e	enum:__anon279331cb0503	access:public
SDL_MESSAGEBOX_COLOR_BUTTON_BORDER	SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_BUTTON_BORDER,$/;"	kind:e	enum:__anon279331cb0503	access:public
SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED	SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED,$/;"	kind:e	enum:__anon279331cb0503	access:public
SDL_MESSAGEBOX_COLOR_MAX	SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_MAX$/;"	kind:e	enum:__anon279331cb0503	access:public
SDL_MESSAGEBOX_COLOR_TEXT	SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_TEXT,$/;"	kind:e	enum:__anon279331cb0503	access:public
SDL_MESSAGEBOX_ERROR	SDL_messagebox.h	/^    SDL_MESSAGEBOX_ERROR        = 0x00000010,   \/**< error dialog *\/$/;"	kind:e	enum:__anon279331cb0103	access:public
SDL_MESSAGEBOX_INFORMATION	SDL_messagebox.h	/^    SDL_MESSAGEBOX_INFORMATION  = 0x00000040    \/**< informational dialog *\/$/;"	kind:e	enum:__anon279331cb0103	access:public
SDL_MESSAGEBOX_WARNING	SDL_messagebox.h	/^    SDL_MESSAGEBOX_WARNING      = 0x00000020,   \/**< warning dialog *\/$/;"	kind:e	enum:__anon279331cb0103	access:public
SDL_MINOR_VERSION	SDL_version.h	/^#define SDL_MINOR_VERSION /;"	kind:d
SDL_MIN_SINT16	SDL_stdinc.h	/^#define SDL_MIN_SINT16 /;"	kind:d
SDL_MIN_SINT32	SDL_stdinc.h	/^#define SDL_MIN_SINT32 /;"	kind:d
SDL_MIN_SINT64	SDL_stdinc.h	/^#define SDL_MIN_SINT64 /;"	kind:d
SDL_MIN_SINT8	SDL_stdinc.h	/^#define SDL_MIN_SINT8 /;"	kind:d
SDL_MIN_UINT16	SDL_stdinc.h	/^#define SDL_MIN_UINT16 /;"	kind:d
SDL_MIN_UINT32	SDL_stdinc.h	/^#define SDL_MIN_UINT32 /;"	kind:d
SDL_MIN_UINT64	SDL_stdinc.h	/^#define SDL_MIN_UINT64 /;"	kind:d
SDL_MIN_UINT8	SDL_stdinc.h	/^#define SDL_MIN_UINT8 /;"	kind:d
SDL_MIX_MAXVOLUME	SDL_audio.h	/^#define SDL_MIX_MAXVOLUME /;"	kind:d
SDL_MOUSEBUTTONDOWN	SDL_events.h	/^    SDL_MOUSEBUTTONDOWN,        \/**< Mouse button pressed *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_MOUSEBUTTONUP	SDL_events.h	/^    SDL_MOUSEBUTTONUP,          \/**< Mouse button released *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_MOUSEMOTION	SDL_events.h	/^    SDL_MOUSEMOTION    = 0x400, \/**< Mouse moved *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_MOUSEWHEEL	SDL_events.h	/^    SDL_MOUSEWHEEL,             \/**< Mouse wheel motion *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_MOUSEWHEEL_FLIPPED	SDL_mouse.h	/^    SDL_MOUSEWHEEL_FLIPPED    \/**< The scroll direction is flipped \/ natural *\/$/;"	kind:e	enum:__anon4ea517060203	access:public
SDL_MOUSEWHEEL_NORMAL	SDL_mouse.h	/^    SDL_MOUSEWHEEL_NORMAL,    \/**< The scroll direction is normal *\/$/;"	kind:e	enum:__anon4ea517060203	access:public
SDL_MULTIGESTURE	SDL_events.h	/^    SDL_MULTIGESTURE,$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_MUSTLOCK	SDL_surface.h	/^#define SDL_MUSTLOCK(/;"	kind:d	signature:(S)
SDL_MUTEX_MAXWAIT	SDL_mutex.h	/^#define SDL_MUTEX_MAXWAIT /;"	kind:d
SDL_MUTEX_TIMEDOUT	SDL_mutex.h	/^#define SDL_MUTEX_TIMEDOUT /;"	kind:d
SDL_MapRGB	SDL_pixels.h	/^extern DECLSPEC Uint32 SDLCALL SDL_MapRGB(const SDL_PixelFormat * format,$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(const SDL_PixelFormat * format,Uint8 r,Uint8 g,Uint8 b)
SDL_MapRGBA	SDL_pixels.h	/^extern DECLSPEC Uint32 SDLCALL SDL_MapRGBA(const SDL_PixelFormat * format,$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(const SDL_PixelFormat * format,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
SDL_MasksToPixelFormatEnum	SDL_pixels.h	/^extern DECLSPEC Uint32 SDLCALL SDL_MasksToPixelFormatEnum(int bpp,$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(int bpp,Uint32 Rmask,Uint32 Gmask,Uint32 Bmask,Uint32 Amask)
SDL_MaximizeWindow	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_MaximizeWindow(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_MemoryBarrierAcquire	SDL_atomic.h	/^#define SDL_MemoryBarrierAcquire(/;"	kind:d	signature:()
SDL_MemoryBarrierAcquireFunction	SDL_atomic.h	/^extern DECLSPEC void SDLCALL SDL_MemoryBarrierAcquireFunction(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_MemoryBarrierRelease	SDL_atomic.h	/^#define SDL_MemoryBarrierRelease(/;"	kind:d	signature:()
SDL_MemoryBarrierReleaseFunction	SDL_atomic.h	/^extern DECLSPEC void SDLCALL SDL_MemoryBarrierReleaseFunction(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_MessageBoxButtonData	SDL_messagebox.h	/^} SDL_MessageBoxButtonData;$/;"	kind:t	typeref:struct:__anon279331cb0308
SDL_MessageBoxButtonFlags	SDL_messagebox.h	/^} SDL_MessageBoxButtonFlags;$/;"	kind:t	typeref:enum:__anon279331cb0203
SDL_MessageBoxColor	SDL_messagebox.h	/^} SDL_MessageBoxColor;$/;"	kind:t	typeref:struct:__anon279331cb0408
SDL_MessageBoxColorScheme	SDL_messagebox.h	/^} SDL_MessageBoxColorScheme;$/;"	kind:t	typeref:struct:__anon279331cb0608
SDL_MessageBoxColorType	SDL_messagebox.h	/^} SDL_MessageBoxColorType;$/;"	kind:t	typeref:enum:__anon279331cb0503
SDL_MessageBoxData	SDL_messagebox.h	/^} SDL_MessageBoxData;$/;"	kind:t	typeref:struct:__anon279331cb0708
SDL_MessageBoxFlags	SDL_messagebox.h	/^} SDL_MessageBoxFlags;$/;"	kind:t	typeref:enum:__anon279331cb0103
SDL_MinimizeWindow	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_MinimizeWindow(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_MixAudio	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_MixAudio(Uint8 * dst, const Uint8 * src,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint8 * dst,const Uint8 * src,Uint32 len,int volume)
SDL_MixAudioFormat	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_MixAudioFormat(Uint8 * dst,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint8 * dst,const Uint8 * src,SDL_AudioFormat format,Uint32 len,int volume)
SDL_MostSignificantBitIndex32	SDL_bits.h	/^SDL_MostSignificantBitIndex32(Uint32 x)$/;"	kind:f	typeref:typename:SDL_FORCE_INLINE int	signature:(Uint32 x)
SDL_MouseButtonEvent	SDL_events.h	/^typedef struct SDL_MouseButtonEvent$/;"	kind:s
SDL_MouseButtonEvent	SDL_events.h	/^} SDL_MouseButtonEvent;$/;"	kind:t	typeref:struct:SDL_MouseButtonEvent
SDL_MouseButtonEvent::button	SDL_events.h	/^    Uint8 button;       \/**< The mouse button index *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
SDL_MouseButtonEvent::clicks	SDL_events.h	/^    Uint8 clicks;       \/**< 1 for single-click, 2 for double-click, etc. *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
SDL_MouseButtonEvent::padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
SDL_MouseButtonEvent::state	SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
SDL_MouseButtonEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
SDL_MouseButtonEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
SDL_MouseButtonEvent::which	SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
SDL_MouseButtonEvent::windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
SDL_MouseButtonEvent::x	SDL_events.h	/^    Sint32 x;           \/**< X coordinate, relative to window *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Sint32	access:public
SDL_MouseButtonEvent::y	SDL_events.h	/^    Sint32 y;           \/**< Y coordinate, relative to window *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Sint32	access:public
SDL_MouseIsHaptic	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_MouseIsHaptic(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_MouseMotionEvent	SDL_events.h	/^typedef struct SDL_MouseMotionEvent$/;"	kind:s
SDL_MouseMotionEvent	SDL_events.h	/^} SDL_MouseMotionEvent;$/;"	kind:t	typeref:struct:SDL_MouseMotionEvent
SDL_MouseMotionEvent::state	SDL_events.h	/^    Uint32 state;       \/**< The current button state *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
SDL_MouseMotionEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
SDL_MouseMotionEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEMOTION *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
SDL_MouseMotionEvent::which	SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
SDL_MouseMotionEvent::windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
SDL_MouseMotionEvent::x	SDL_events.h	/^    Sint32 x;           \/**< X coordinate, relative to window *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
SDL_MouseMotionEvent::xrel	SDL_events.h	/^    Sint32 xrel;        \/**< The relative motion in the X direction *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
SDL_MouseMotionEvent::y	SDL_events.h	/^    Sint32 y;           \/**< Y coordinate, relative to window *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
SDL_MouseMotionEvent::yrel	SDL_events.h	/^    Sint32 yrel;        \/**< The relative motion in the Y direction *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
SDL_MouseWheelDirection	SDL_mouse.h	/^} SDL_MouseWheelDirection;$/;"	kind:t	typeref:enum:__anon4ea517060203
SDL_MouseWheelEvent	SDL_events.h	/^typedef struct SDL_MouseWheelEvent$/;"	kind:s
SDL_MouseWheelEvent	SDL_events.h	/^} SDL_MouseWheelEvent;$/;"	kind:t	typeref:struct:SDL_MouseWheelEvent
SDL_MouseWheelEvent::direction	SDL_events.h	/^    Uint32 direction;   \/**< Set to one of the SDL_MOUSEWHEEL_* defines. When FLIPPED the value/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
SDL_MouseWheelEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
SDL_MouseWheelEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEWHEEL *\/$/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
SDL_MouseWheelEvent::which	SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
SDL_MouseWheelEvent::windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
SDL_MouseWheelEvent::x	SDL_events.h	/^    Sint32 x;           \/**< The amount scrolled horizontally, positive to the right and negati/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Sint32	access:public
SDL_MouseWheelEvent::y	SDL_events.h	/^    Sint32 y;           \/**< The amount scrolled vertically, positive away from the user and ne/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Sint32	access:public
SDL_MultiGestureEvent	SDL_events.h	/^typedef struct SDL_MultiGestureEvent$/;"	kind:s
SDL_MultiGestureEvent	SDL_events.h	/^} SDL_MultiGestureEvent;$/;"	kind:t	typeref:struct:SDL_MultiGestureEvent
SDL_MultiGestureEvent::dDist	SDL_events.h	/^    float dDist;$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
SDL_MultiGestureEvent::dTheta	SDL_events.h	/^    float dTheta;$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
SDL_MultiGestureEvent::numFingers	SDL_events.h	/^    Uint16 numFingers;$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:Uint16	access:public
SDL_MultiGestureEvent::padding	SDL_events.h	/^    Uint16 padding;$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:Uint16	access:public
SDL_MultiGestureEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:Uint32	access:public
SDL_MultiGestureEvent::touchId	SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:SDL_TouchID	access:public
SDL_MultiGestureEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MULTIGESTURE *\/$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:Uint32	access:public
SDL_MultiGestureEvent::x	SDL_events.h	/^    float x;$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
SDL_MultiGestureEvent::y	SDL_events.h	/^    float y;$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
SDL_NAME	SDL_name.h	/^#define SDL_NAME(/;"	kind:d	signature:(X)
SDL_NONSHAPEABLE_WINDOW	SDL_shape.h	/^#define SDL_NONSHAPEABLE_WINDOW /;"	kind:d
SDL_NORETURN	begin_code.h	/^#define SDL_NORETURN /;"	kind:d
SDL_NORETURN	begin_code.h	/^#define SDL_NORETURN$/;"	kind:d
SDL_NULL_WHILE_LOOP_CONDITION	SDL_assert.h	/^#define SDL_NULL_WHILE_LOOP_CONDITION /;"	kind:d
SDL_NUM_LOG_PRIORITIES	SDL_log.h	/^    SDL_NUM_LOG_PRIORITIES$/;"	kind:e	enum:__anon37b6c7bf0203	access:public
SDL_NUM_SCANCODES	SDL_scancode.h	/^    SDL_NUM_SCANCODES = 512 \/**< not a key, just marks the number of scancodes$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_NUM_SYSTEM_CURSORS	SDL_mouse.h	/^    SDL_NUM_SYSTEM_CURSORS$/;"	kind:e	enum:__anon4ea517060103	access:public
SDL_NewAudioStream	SDL_audio.h	/^extern DECLSPEC SDL_AudioStream * SDLCALL SDL_NewAudioStream(const SDL_AudioFormat src_format,$/;"	kind:p	typeref:typename:DECLSPEC SDL_AudioStream * SDLCALL	signature:(const SDL_AudioFormat src_format,const Uint8 src_channels,const int src_rate,const SDL_AudioFormat dst_format,const Uint8 dst_channels,const int dst_rate)
SDL_NumHaptics	SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_NumHaptics(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_NumJoysticks	SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_NumJoysticks(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_NumSensors	SDL_sensor.h	/^extern DECLSPEC int SDLCALL SDL_NumSensors(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
SDL_ORIENTATION_LANDSCAPE	SDL_video.h	/^    SDL_ORIENTATION_LANDSCAPE,          \/**< The display is in landscape mode, with the right s/;"	kind:e	enum:__anonf43722b40503	access:public
SDL_ORIENTATION_LANDSCAPE_FLIPPED	SDL_video.h	/^    SDL_ORIENTATION_LANDSCAPE_FLIPPED,  \/**< The display is in landscape mode, with the left si/;"	kind:e	enum:__anonf43722b40503	access:public
SDL_ORIENTATION_PORTRAIT	SDL_video.h	/^    SDL_ORIENTATION_PORTRAIT,           \/**< The display is in portrait mode *\/$/;"	kind:e	enum:__anonf43722b40503	access:public
SDL_ORIENTATION_PORTRAIT_FLIPPED	SDL_video.h	/^    SDL_ORIENTATION_PORTRAIT_FLIPPED    \/**< The display is in portrait mode, upside down *\/$/;"	kind:e	enum:__anonf43722b40503	access:public
SDL_ORIENTATION_UNKNOWN	SDL_video.h	/^    SDL_ORIENTATION_UNKNOWN,            \/**< The display orientation can't be determined *\/$/;"	kind:e	enum:__anonf43722b40503	access:public
SDL_OSEvent	SDL_events.h	/^typedef struct SDL_OSEvent$/;"	kind:s
SDL_OSEvent	SDL_events.h	/^} SDL_OSEvent;$/;"	kind:t	typeref:struct:SDL_OSEvent
SDL_OSEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_OSEvent	typeref:typename:Uint32	access:public
SDL_OSEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_QUIT *\/$/;"	kind:m	struct:SDL_OSEvent	typeref:typename:Uint32	access:public
SDL_OUT_BYTECAP	SDL_stdinc.h	/^#define SDL_OUT_BYTECAP(/;"	kind:d	signature:(x)
SDL_OUT_CAP	SDL_stdinc.h	/^#define SDL_OUT_CAP(/;"	kind:d	signature:(x)
SDL_OUT_Z_BYTECAP	SDL_stdinc.h	/^#define SDL_OUT_Z_BYTECAP(/;"	kind:d	signature:(x)
SDL_OUT_Z_CAP	SDL_stdinc.h	/^#define SDL_OUT_Z_CAP(/;"	kind:d	signature:(x)
SDL_OpenAudio	SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_OpenAudio(SDL_AudioSpec * desired,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioSpec * desired,SDL_AudioSpec * obtained)
SDL_OpenAudioDevice	SDL_audio.h	/^extern DECLSPEC SDL_AudioDeviceID SDLCALL SDL_OpenAudioDevice(const char$/;"	kind:p	typeref:typename:DECLSPEC SDL_AudioDeviceID SDLCALL	signature:(const char * device,int iscapture,const SDL_AudioSpec * desired,SDL_AudioSpec * obtained,int allowed_changes)
SDL_OutOfMemory	SDL_error.h	/^#define SDL_OutOfMemory(/;"	kind:d	signature:()
SDL_PACKEDLAYOUT_1010102	SDL_pixels.h	/^    SDL_PACKEDLAYOUT_1010102$/;"	kind:e	enum:__anon203721d20503	access:public
SDL_PACKEDLAYOUT_1555	SDL_pixels.h	/^    SDL_PACKEDLAYOUT_1555,$/;"	kind:e	enum:__anon203721d20503	access:public
SDL_PACKEDLAYOUT_2101010	SDL_pixels.h	/^    SDL_PACKEDLAYOUT_2101010,$/;"	kind:e	enum:__anon203721d20503	access:public
SDL_PACKEDLAYOUT_332	SDL_pixels.h	/^    SDL_PACKEDLAYOUT_332,$/;"	kind:e	enum:__anon203721d20503	access:public
SDL_PACKEDLAYOUT_4444	SDL_pixels.h	/^    SDL_PACKEDLAYOUT_4444,$/;"	kind:e	enum:__anon203721d20503	access:public
SDL_PACKEDLAYOUT_5551	SDL_pixels.h	/^    SDL_PACKEDLAYOUT_5551,$/;"	kind:e	enum:__anon203721d20503	access:public
SDL_PACKEDLAYOUT_565	SDL_pixels.h	/^    SDL_PACKEDLAYOUT_565,$/;"	kind:e	enum:__anon203721d20503	access:public
SDL_PACKEDLAYOUT_8888	SDL_pixels.h	/^    SDL_PACKEDLAYOUT_8888,$/;"	kind:e	enum:__anon203721d20503	access:public
SDL_PACKEDLAYOUT_NONE	SDL_pixels.h	/^    SDL_PACKEDLAYOUT_NONE,$/;"	kind:e	enum:__anon203721d20503	access:public
SDL_PACKEDORDER_ABGR	SDL_pixels.h	/^    SDL_PACKEDORDER_ABGR,$/;"	kind:e	enum:__anon203721d20303	access:public
SDL_PACKEDORDER_ARGB	SDL_pixels.h	/^    SDL_PACKEDORDER_ARGB,$/;"	kind:e	enum:__anon203721d20303	access:public
SDL_PACKEDORDER_BGRA	SDL_pixels.h	/^    SDL_PACKEDORDER_BGRA$/;"	kind:e	enum:__anon203721d20303	access:public
SDL_PACKEDORDER_BGRX	SDL_pixels.h	/^    SDL_PACKEDORDER_BGRX,$/;"	kind:e	enum:__anon203721d20303	access:public
SDL_PACKEDORDER_NONE	SDL_pixels.h	/^    SDL_PACKEDORDER_NONE,$/;"	kind:e	enum:__anon203721d20303	access:public
SDL_PACKEDORDER_RGBA	SDL_pixels.h	/^    SDL_PACKEDORDER_RGBA,$/;"	kind:e	enum:__anon203721d20303	access:public
SDL_PACKEDORDER_RGBX	SDL_pixels.h	/^    SDL_PACKEDORDER_RGBX,$/;"	kind:e	enum:__anon203721d20303	access:public
SDL_PACKEDORDER_XBGR	SDL_pixels.h	/^    SDL_PACKEDORDER_XBGR,$/;"	kind:e	enum:__anon203721d20303	access:public
SDL_PACKEDORDER_XRGB	SDL_pixels.h	/^    SDL_PACKEDORDER_XRGB,$/;"	kind:e	enum:__anon203721d20303	access:public
SDL_PASSED_BEGINTHREAD_ENDTHREAD	SDL_thread.h	/^#define SDL_PASSED_BEGINTHREAD_ENDTHREAD$/;"	kind:d
SDL_PATCHLEVEL	SDL_version.h	/^#define SDL_PATCHLEVEL /;"	kind:d
SDL_PEEKEVENT	SDL_events.h	/^    SDL_PEEKEVENT,$/;"	kind:e	enum:__anonb66d4d920203	access:public
SDL_PIXELFLAG	SDL_pixels.h	/^#define SDL_PIXELFLAG(/;"	kind:d	signature:(X)
SDL_PIXELFORMAT_ABGR1555	SDL_pixels.h	/^    SDL_PIXELFORMAT_ABGR1555 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_ABGR32	SDL_pixels.h	/^    SDL_PIXELFORMAT_ABGR32 = SDL_PIXELFORMAT_ABGR8888,$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_ABGR4444	SDL_pixels.h	/^    SDL_PIXELFORMAT_ABGR4444 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_ABGR8888	SDL_pixels.h	/^    SDL_PIXELFORMAT_ABGR8888 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_ARGB1555	SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB1555 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_ARGB2101010	SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB2101010 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_ARGB32	SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB32 = SDL_PIXELFORMAT_ARGB8888,$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_ARGB4444	SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB4444 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_ARGB8888	SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB8888 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_BGR24	SDL_pixels.h	/^    SDL_PIXELFORMAT_BGR24 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_BGR555	SDL_pixels.h	/^    SDL_PIXELFORMAT_BGR555 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_BGR565	SDL_pixels.h	/^    SDL_PIXELFORMAT_BGR565 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_BGR888	SDL_pixels.h	/^    SDL_PIXELFORMAT_BGR888 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_BGRA32	SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRA32 = SDL_PIXELFORMAT_BGRA8888,$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_BGRA4444	SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRA4444 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_BGRA5551	SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRA5551 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_BGRA8888	SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRA8888 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_BGRX8888	SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRX8888 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_EXTERNAL_OES	SDL_pixels.h	/^    SDL_PIXELFORMAT_EXTERNAL_OES =      \/**< Android video texture format *\/$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_INDEX1LSB	SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX1LSB =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_INDEX1MSB	SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX1MSB =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_INDEX4LSB	SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX4LSB =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_INDEX4MSB	SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX4MSB =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_INDEX8	SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX8 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_IYUV	SDL_pixels.h	/^    SDL_PIXELFORMAT_IYUV =      \/**< Planar mode: Y + U + V  (3 planes) *\/$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_NV12	SDL_pixels.h	/^    SDL_PIXELFORMAT_NV12 =      \/**< Planar mode: Y + U\/V interleaved  (2 planes) *\/$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_NV21	SDL_pixels.h	/^    SDL_PIXELFORMAT_NV21 =      \/**< Planar mode: Y + V\/U interleaved  (2 planes) *\/$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_RGB24	SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB24 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_RGB332	SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB332 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_RGB444	SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB444 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_RGB555	SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB555 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_RGB565	SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB565 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_RGB888	SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB888 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_RGBA32	SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBA32 = SDL_PIXELFORMAT_RGBA8888,$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_RGBA4444	SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBA4444 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_RGBA5551	SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBA5551 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_RGBA8888	SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBA8888 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_RGBX8888	SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBX8888 =$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_UNKNOWN	SDL_pixels.h	/^    SDL_PIXELFORMAT_UNKNOWN,$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_UYVY	SDL_pixels.h	/^    SDL_PIXELFORMAT_UYVY =      \/**< Packed mode: U0+Y0+V0+Y1 (1 plane) *\/$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_YUY2	SDL_pixels.h	/^    SDL_PIXELFORMAT_YUY2 =      \/**< Packed mode: Y0+U0+Y1+V0 (1 plane) *\/$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_YV12	SDL_pixels.h	/^    SDL_PIXELFORMAT_YV12 =      \/**< Planar mode: Y + V + U  (3 planes) *\/$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELFORMAT_YVYU	SDL_pixels.h	/^    SDL_PIXELFORMAT_YVYU =      \/**< Packed mode: Y0+V0+Y1+U0 (1 plane) *\/$/;"	kind:e	enum:__anon203721d20603	access:public
SDL_PIXELLAYOUT	SDL_pixels.h	/^#define SDL_PIXELLAYOUT(/;"	kind:d	signature:(X)
SDL_PIXELORDER	SDL_pixels.h	/^#define SDL_PIXELORDER(/;"	kind:d	signature:(X)
SDL_PIXELTYPE	SDL_pixels.h	/^#define SDL_PIXELTYPE(/;"	kind:d	signature:(X)
SDL_PIXELTYPE_ARRAYF16	SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYF16,$/;"	kind:e	enum:__anon203721d20103	access:public
SDL_PIXELTYPE_ARRAYF32	SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYF32$/;"	kind:e	enum:__anon203721d20103	access:public
SDL_PIXELTYPE_ARRAYU16	SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYU16,$/;"	kind:e	enum:__anon203721d20103	access:public
SDL_PIXELTYPE_ARRAYU32	SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYU32,$/;"	kind:e	enum:__anon203721d20103	access:public
SDL_PIXELTYPE_ARRAYU8	SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYU8,$/;"	kind:e	enum:__anon203721d20103	access:public
SDL_PIXELTYPE_INDEX1	SDL_pixels.h	/^    SDL_PIXELTYPE_INDEX1,$/;"	kind:e	enum:__anon203721d20103	access:public
SDL_PIXELTYPE_INDEX4	SDL_pixels.h	/^    SDL_PIXELTYPE_INDEX4,$/;"	kind:e	enum:__anon203721d20103	access:public
SDL_PIXELTYPE_INDEX8	SDL_pixels.h	/^    SDL_PIXELTYPE_INDEX8,$/;"	kind:e	enum:__anon203721d20103	access:public
SDL_PIXELTYPE_PACKED16	SDL_pixels.h	/^    SDL_PIXELTYPE_PACKED16,$/;"	kind:e	enum:__anon203721d20103	access:public
SDL_PIXELTYPE_PACKED32	SDL_pixels.h	/^    SDL_PIXELTYPE_PACKED32,$/;"	kind:e	enum:__anon203721d20103	access:public
SDL_PIXELTYPE_PACKED8	SDL_pixels.h	/^    SDL_PIXELTYPE_PACKED8,$/;"	kind:e	enum:__anon203721d20103	access:public
SDL_PIXELTYPE_UNKNOWN	SDL_pixels.h	/^    SDL_PIXELTYPE_UNKNOWN,$/;"	kind:e	enum:__anon203721d20103	access:public
SDL_POWERSTATE_CHARGED	SDL_power.h	/^    SDL_POWERSTATE_CHARGED       \/**< Plugged in, battery charged *\/$/;"	kind:e	enum:__anon35b0884a0103	access:public
SDL_POWERSTATE_CHARGING	SDL_power.h	/^    SDL_POWERSTATE_CHARGING,     \/**< Plugged in, charging battery *\/$/;"	kind:e	enum:__anon35b0884a0103	access:public
SDL_POWERSTATE_NO_BATTERY	SDL_power.h	/^    SDL_POWERSTATE_NO_BATTERY,   \/**< Plugged in, no battery available *\/$/;"	kind:e	enum:__anon35b0884a0103	access:public
SDL_POWERSTATE_ON_BATTERY	SDL_power.h	/^    SDL_POWERSTATE_ON_BATTERY,   \/**< Not plugged in, running on the battery *\/$/;"	kind:e	enum:__anon35b0884a0103	access:public
SDL_POWERSTATE_UNKNOWN	SDL_power.h	/^    SDL_POWERSTATE_UNKNOWN,      \/**< cannot determine power status *\/$/;"	kind:e	enum:__anon35b0884a0103	access:public
SDL_POWER_WINDOWS	SDL_config.h	/^#define SDL_POWER_WINDOWS /;"	kind:d
SDL_PREALLOC	SDL_surface.h	/^#define SDL_PREALLOC /;"	kind:d
SDL_PRESSED	SDL_events.h	/^#define SDL_PRESSED /;"	kind:d
SDL_PRINTF_FORMAT_STRING	SDL_stdinc.h	/^#define SDL_PRINTF_FORMAT_STRING /;"	kind:d
SDL_PRINTF_FORMAT_STRING	SDL_stdinc.h	/^#define SDL_PRINTF_FORMAT_STRING$/;"	kind:d
SDL_PRINTF_VARARG_FUNC	SDL_stdinc.h	/^#define SDL_PRINTF_VARARG_FUNC(/;"	kind:d	signature:(fmtargnumber)
SDL_PRIX64	SDL_stdinc.h	/^#define SDL_PRIX64 /;"	kind:d
SDL_PRIs64	SDL_stdinc.h	/^#define SDL_PRIs64 /;"	kind:d
SDL_PRIu64	SDL_stdinc.h	/^#define SDL_PRIu64 /;"	kind:d
SDL_PRIx64	SDL_stdinc.h	/^#define SDL_PRIx64 /;"	kind:d
SDL_Palette	SDL_pixels.h	/^typedef struct SDL_Palette$/;"	kind:s
SDL_Palette	SDL_pixels.h	/^} SDL_Palette;$/;"	kind:t	typeref:struct:SDL_Palette
SDL_Palette::colors	SDL_pixels.h	/^    SDL_Color *colors;$/;"	kind:m	struct:SDL_Palette	typeref:typename:SDL_Color *	access:public
SDL_Palette::ncolors	SDL_pixels.h	/^    int ncolors;$/;"	kind:m	struct:SDL_Palette	typeref:typename:int	access:public
SDL_Palette::refcount	SDL_pixels.h	/^    int refcount;$/;"	kind:m	struct:SDL_Palette	typeref:typename:int	access:public
SDL_Palette::version	SDL_pixels.h	/^    Uint32 version;$/;"	kind:m	struct:SDL_Palette	typeref:typename:Uint32	access:public
SDL_PauseAudio	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_PauseAudio(int pause_on);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(int pause_on)
SDL_PauseAudioDevice	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_PauseAudioDevice(SDL_AudioDeviceID dev,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioDeviceID dev,int pause_on)
SDL_PeepEvents	SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_PeepEvents(SDL_Event * events, int numevents,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * events,int numevents,SDL_eventaction action,Uint32 minType,Uint32 maxType)
SDL_PixelFormat	SDL_pixels.h	/^typedef struct SDL_PixelFormat$/;"	kind:s
SDL_PixelFormat	SDL_pixels.h	/^} SDL_PixelFormat;$/;"	kind:t	typeref:struct:SDL_PixelFormat
SDL_PixelFormat::Aloss	SDL_pixels.h	/^    Uint8 Aloss;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Amask	SDL_pixels.h	/^    Uint32 Amask;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::Ashift	SDL_pixels.h	/^    Uint8 Ashift;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::BitsPerPixel	SDL_pixels.h	/^    Uint8 BitsPerPixel;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Bloss	SDL_pixels.h	/^    Uint8 Bloss;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Bmask	SDL_pixels.h	/^    Uint32 Bmask;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::Bshift	SDL_pixels.h	/^    Uint8 Bshift;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::BytesPerPixel	SDL_pixels.h	/^    Uint8 BytesPerPixel;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Gloss	SDL_pixels.h	/^    Uint8 Gloss;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Gmask	SDL_pixels.h	/^    Uint32 Gmask;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::Gshift	SDL_pixels.h	/^    Uint8 Gshift;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Rloss	SDL_pixels.h	/^    Uint8 Rloss;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::Rmask	SDL_pixels.h	/^    Uint32 Rmask;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::Rshift	SDL_pixels.h	/^    Uint8 Rshift;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8	access:public
SDL_PixelFormat::format	SDL_pixels.h	/^    Uint32 format;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
SDL_PixelFormat::next	SDL_pixels.h	/^    struct SDL_PixelFormat *next;$/;"	kind:m	struct:SDL_PixelFormat	typeref:struct:SDL_PixelFormat *	access:public
SDL_PixelFormat::padding	SDL_pixels.h	/^    Uint8 padding[2];$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8[2]	access:public
SDL_PixelFormat::palette	SDL_pixels.h	/^    SDL_Palette *palette;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:SDL_Palette *	access:public
SDL_PixelFormat::refcount	SDL_pixels.h	/^    int refcount;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:int	access:public
SDL_PixelFormatEnumToMasks	SDL_pixels.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_PixelFormatEnumToMasks(Uint32 format,$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(Uint32 format,int * bpp,Uint32 * Rmask,Uint32 * Gmask,Uint32 * Bmask,Uint32 * Amask)
SDL_Point	SDL_rect.h	/^typedef struct SDL_Point$/;"	kind:s
SDL_Point	SDL_rect.h	/^} SDL_Point;$/;"	kind:t	typeref:struct:SDL_Point
SDL_Point::x	SDL_rect.h	/^    int x;$/;"	kind:m	struct:SDL_Point	typeref:typename:int	access:public
SDL_Point::y	SDL_rect.h	/^    int y;$/;"	kind:m	struct:SDL_Point	typeref:typename:int	access:public
SDL_PointInRect	SDL_rect.h	/^SDL_FORCE_INLINE SDL_bool SDL_PointInRect(const SDL_Point *p, const SDL_Rect *r)$/;"	kind:f	typeref:typename:SDL_FORCE_INLINE SDL_bool	signature:(const SDL_Point * p,const SDL_Rect * r)
SDL_PollEvent	SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_PollEvent(SDL_Event * event);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * event)
SDL_PowerState	SDL_power.h	/^} SDL_PowerState;$/;"	kind:t	typeref:enum:__anon35b0884a0103
SDL_PumpEvents	SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_PumpEvents(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_PushEvent	SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_PushEvent(SDL_Event * event);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * event)
SDL_QUERY	SDL_events.h	/^#define SDL_QUERY /;"	kind:d
SDL_QUIT	SDL_events.h	/^    SDL_QUIT           = 0x100, \/**< User-requested quit *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_QueryTexture	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_QueryTexture(SDL_Texture * texture,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,Uint32 * format,int * access,int * w,int * h)
SDL_QueueAudio	SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_QueueAudio(SDL_AudioDeviceID dev, const void *data, Uint32 len);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_AudioDeviceID dev,const void * data,Uint32 len)
SDL_Quit	SDL.h	/^extern DECLSPEC void SDLCALL SDL_Quit(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_QuitEvent	SDL_events.h	/^typedef struct SDL_QuitEvent$/;"	kind:s
SDL_QuitEvent	SDL_events.h	/^} SDL_QuitEvent;$/;"	kind:t	typeref:struct:SDL_QuitEvent
SDL_QuitEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_QuitEvent	typeref:typename:Uint32	access:public
SDL_QuitEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_QUIT *\/$/;"	kind:m	struct:SDL_QuitEvent	typeref:typename:Uint32	access:public
SDL_QuitRequested	SDL_quit.h	/^#define SDL_QuitRequested(/;"	kind:d	signature:()
SDL_QuitSubSystem	SDL.h	/^extern DECLSPEC void SDLCALL SDL_QuitSubSystem(Uint32 flags);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(Uint32 flags)
SDL_RELEASED	SDL_events.h	/^#define SDL_RELEASED /;"	kind:d
SDL_RENDERER_ACCELERATED	SDL_render.h	/^    SDL_RENDERER_ACCELERATED = 0x00000002,      \/**< The renderer uses hardware$/;"	kind:e	enum:__anonad684edd0103	access:public
SDL_RENDERER_PRESENTVSYNC	SDL_render.h	/^    SDL_RENDERER_PRESENTVSYNC = 0x00000004,     \/**< Present is synchronized$/;"	kind:e	enum:__anonad684edd0103	access:public
SDL_RENDERER_SOFTWARE	SDL_render.h	/^    SDL_RENDERER_SOFTWARE = 0x00000001,         \/**< The renderer is a software fallback *\/$/;"	kind:e	enum:__anonad684edd0103	access:public
SDL_RENDERER_TARGETTEXTURE	SDL_render.h	/^    SDL_RENDERER_TARGETTEXTURE = 0x00000008     \/**< The renderer supports$/;"	kind:e	enum:__anonad684edd0103	access:public
SDL_RENDER_DEVICE_RESET	SDL_events.h	/^    SDL_RENDER_DEVICE_RESET, \/**< The device has been reset and all textures need to be recreat/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_RENDER_TARGETS_RESET	SDL_events.h	/^    SDL_RENDER_TARGETS_RESET = 0x2000, \/**< The render targets have been reset and their conten/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_REVISION	SDL_revision.h	/^#define SDL_REVISION /;"	kind:d
SDL_REVISION_NUMBER	SDL_revision.h	/^#define SDL_REVISION_NUMBER /;"	kind:d
SDL_RLEACCEL	SDL_surface.h	/^#define SDL_RLEACCEL /;"	kind:d
SDL_RWFromConstMem	SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromConstMem(const void *mem,$/;"	kind:p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(const void * mem,int size)
SDL_RWFromFP	SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromFP(FILE * fp,$/;"	kind:p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(FILE * fp,SDL_bool autoclose)
SDL_RWFromFP	SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromFP(void * fp,$/;"	kind:p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(void * fp,SDL_bool autoclose)
SDL_RWFromFile	SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromFile(const char *file,$/;"	kind:p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(const char * file,const char * mode)
SDL_RWFromMem	SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromMem(void *mem, int size);$/;"	kind:p	typeref:typename:DECLSPEC SDL_RWops * SDLCALL	signature:(void * mem,int size)
SDL_RWOPS_JNIFILE	SDL_rwops.h	/^#define SDL_RWOPS_JNIFILE /;"	kind:d
SDL_RWOPS_MEMORY	SDL_rwops.h	/^#define SDL_RWOPS_MEMORY /;"	kind:d
SDL_RWOPS_MEMORY_RO	SDL_rwops.h	/^#define SDL_RWOPS_MEMORY_RO /;"	kind:d
SDL_RWOPS_STDFILE	SDL_rwops.h	/^#define SDL_RWOPS_STDFILE /;"	kind:d
SDL_RWOPS_UNKNOWN	SDL_rwops.h	/^#define SDL_RWOPS_UNKNOWN /;"	kind:d
SDL_RWOPS_WINFILE	SDL_rwops.h	/^#define SDL_RWOPS_WINFILE /;"	kind:d
SDL_RWclose	SDL_rwops.h	/^#define SDL_RWclose(/;"	kind:d	signature:(ctx)
SDL_RWops	SDL_rwops.h	/^typedef struct SDL_RWops$/;"	kind:s
SDL_RWops	SDL_rwops.h	/^} SDL_RWops;$/;"	kind:t	typeref:struct:SDL_RWops
SDL_RWops::SDLCALL	SDL_rwops.h	/^    int (SDLCALL * close) (struct SDL_RWops * context);$/;"	kind:m	struct:SDL_RWops	typeref:typename:int (* close)(struct SDL_RWops * context)	access:public
SDL_RWops::Sint64	SDL_rwops.h	/^    Sint64 (SDLCALL * seek) (struct SDL_RWops * context, Sint64 offset,$/;"	kind:p	struct:SDL_RWops	access:public	signature:(SDLCALL * seek)
SDL_RWops::Sint64	SDL_rwops.h	/^    Sint64 (SDLCALL * size) (struct SDL_RWops * context);$/;"	kind:p	struct:SDL_RWops	access:public	signature:(SDLCALL * size)
SDL_RWops::__anone1c38f38010a	SDL_rwops.h	/^    {$/;"	kind:u	struct:SDL_RWops	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380208	SDL_rwops.h	/^        {$/;"	kind:s	union:SDL_RWops::__anone1c38f38010a	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380208::assetFileDescriptorRef	SDL_rwops.h	/^            void *assetFileDescriptorRef;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:void *	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380208::fd	SDL_rwops.h	/^            int fd;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:int	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380208::fileNameRef	SDL_rwops.h	/^            void *fileNameRef;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:void *	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380208::inputStreamRef	SDL_rwops.h	/^            void *inputStreamRef;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:void *	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380208::offset	SDL_rwops.h	/^            long offset;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:long	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380208::position	SDL_rwops.h	/^            long position;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:long	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380208::readMethod	SDL_rwops.h	/^            void *readMethod;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:void *	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380208::readableByteChannelRef	SDL_rwops.h	/^            void *readableByteChannelRef;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:void *	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380208::size	SDL_rwops.h	/^            long size;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:long	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380308	SDL_rwops.h	/^        {$/;"	kind:s	union:SDL_RWops::__anone1c38f38010a	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380308::autoclose	SDL_rwops.h	/^            SDL_bool autoclose;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380308	typeref:typename:SDL_bool	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380308::fp	SDL_rwops.h	/^            FILE *fp;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380308	typeref:typename:FILE *	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380408	SDL_rwops.h	/^        {$/;"	kind:s	union:SDL_RWops::__anone1c38f38010a	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380408::base	SDL_rwops.h	/^            Uint8 *base;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380408	typeref:typename:Uint8 *	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380408::here	SDL_rwops.h	/^            Uint8 *here;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380408	typeref:typename:Uint8 *	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380408::stop	SDL_rwops.h	/^            Uint8 *stop;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380408	typeref:typename:Uint8 *	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380508	SDL_rwops.h	/^        {$/;"	kind:s	union:SDL_RWops::__anone1c38f38010a	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380508::data1	SDL_rwops.h	/^            void *data1;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380508	typeref:typename:void *	access:public
SDL_RWops::__anone1c38f38010a::__anone1c38f380508::data2	SDL_rwops.h	/^            void *data2;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380508	typeref:typename:void *	access:public
SDL_RWops::__anone1c38f38010a::androidio	SDL_rwops.h	/^        } androidio;$/;"	kind:m	union:SDL_RWops::__anone1c38f38010a	typeref:struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	access:public
SDL_RWops::__anone1c38f38010a::mem	SDL_rwops.h	/^        } mem;$/;"	kind:m	union:SDL_RWops::__anone1c38f38010a	typeref:struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380408	access:public
SDL_RWops::__anone1c38f38010a::stdio	SDL_rwops.h	/^        } stdio;$/;"	kind:m	union:SDL_RWops::__anone1c38f38010a	typeref:struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380308	access:public
SDL_RWops::__anone1c38f38010a::unknown	SDL_rwops.h	/^        } unknown;$/;"	kind:m	union:SDL_RWops::__anone1c38f38010a	typeref:struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380508	access:public
SDL_RWops::hidden	SDL_rwops.h	/^    } hidden;$/;"	kind:m	struct:SDL_RWops	typeref:union:SDL_RWops::__anone1c38f38010a	access:public
SDL_RWops::size_t	SDL_rwops.h	/^    size_t (SDLCALL * read) (struct SDL_RWops * context, void *ptr,$/;"	kind:p	struct:SDL_RWops	access:public	signature:(SDLCALL * read)
SDL_RWops::size_t	SDL_rwops.h	/^    size_t (SDLCALL * write) (struct SDL_RWops * context, const void *ptr,$/;"	kind:p	struct:SDL_RWops	access:public	signature:(SDLCALL * write)
SDL_RWops::type	SDL_rwops.h	/^    Uint32 type;$/;"	kind:m	struct:SDL_RWops	typeref:typename:Uint32	access:public
SDL_RWread	SDL_rwops.h	/^#define SDL_RWread(/;"	kind:d	signature:(ctx,ptr,size,n)
SDL_RWseek	SDL_rwops.h	/^#define SDL_RWseek(/;"	kind:d	signature:(ctx,offset,whence)
SDL_RWsize	SDL_rwops.h	/^#define SDL_RWsize(/;"	kind:d	signature:(ctx)
SDL_RWtell	SDL_rwops.h	/^#define SDL_RWtell(/;"	kind:d	signature:(ctx)
SDL_RWwrite	SDL_rwops.h	/^#define SDL_RWwrite(/;"	kind:d	signature:(ctx,ptr,size,n)
SDL_RaiseWindow	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_RaiseWindow(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_ReadBE16	SDL_rwops.h	/^extern DECLSPEC Uint16 SDLCALL SDL_ReadBE16(SDL_RWops * src);$/;"	kind:p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadBE32	SDL_rwops.h	/^extern DECLSPEC Uint32 SDLCALL SDL_ReadBE32(SDL_RWops * src);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadBE64	SDL_rwops.h	/^extern DECLSPEC Uint64 SDLCALL SDL_ReadBE64(SDL_RWops * src);$/;"	kind:p	typeref:typename:DECLSPEC Uint64 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadLE16	SDL_rwops.h	/^extern DECLSPEC Uint16 SDLCALL SDL_ReadLE16(SDL_RWops * src);$/;"	kind:p	typeref:typename:DECLSPEC Uint16 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadLE32	SDL_rwops.h	/^extern DECLSPEC Uint32 SDLCALL SDL_ReadLE32(SDL_RWops * src);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadLE64	SDL_rwops.h	/^extern DECLSPEC Uint64 SDLCALL SDL_ReadLE64(SDL_RWops * src);$/;"	kind:p	typeref:typename:DECLSPEC Uint64 SDLCALL	signature:(SDL_RWops * src)
SDL_ReadU8	SDL_rwops.h	/^extern DECLSPEC Uint8 SDLCALL SDL_ReadU8(SDL_RWops * src);$/;"	kind:p	typeref:typename:DECLSPEC Uint8 SDLCALL	signature:(SDL_RWops * src)
SDL_RecordGesture	SDL_gesture.h	/^extern DECLSPEC int SDLCALL SDL_RecordGesture(SDL_TouchID touchId);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_TouchID touchId)
SDL_Rect	SDL_rect.h	/^typedef struct SDL_Rect$/;"	kind:s
SDL_Rect	SDL_rect.h	/^} SDL_Rect;$/;"	kind:t	typeref:struct:SDL_Rect
SDL_Rect::h	SDL_rect.h	/^    int w, h;$/;"	kind:m	struct:SDL_Rect	typeref:typename:int	access:public
SDL_Rect::w	SDL_rect.h	/^    int w, h;$/;"	kind:m	struct:SDL_Rect	typeref:typename:int	access:public
SDL_Rect::x	SDL_rect.h	/^    int x, y;$/;"	kind:m	struct:SDL_Rect	typeref:typename:int	access:public
SDL_Rect::y	SDL_rect.h	/^    int x, y;$/;"	kind:m	struct:SDL_Rect	typeref:typename:int	access:public
SDL_RectEmpty	SDL_rect.h	/^SDL_FORCE_INLINE SDL_bool SDL_RectEmpty(const SDL_Rect *r)$/;"	kind:f	typeref:typename:SDL_FORCE_INLINE SDL_bool	signature:(const SDL_Rect * r)
SDL_RectEquals	SDL_rect.h	/^SDL_FORCE_INLINE SDL_bool SDL_RectEquals(const SDL_Rect *a, const SDL_Rect *b)$/;"	kind:f	typeref:typename:SDL_FORCE_INLINE SDL_bool	signature:(const SDL_Rect * a,const SDL_Rect * b)
SDL_RegisterApp	SDL_main.h	/^extern DECLSPEC int SDLCALL SDL_RegisterApp(char *name, Uint32 style,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(char * name,Uint32 style,void * hInst)
SDL_RegisterEvents	SDL_events.h	/^extern DECLSPEC Uint32 SDLCALL SDL_RegisterEvents(int numevents);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(int numevents)
SDL_RemoveTimer	SDL_timer.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_RemoveTimer(SDL_TimerID id);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_TimerID id)
SDL_RenderClear	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderClear(SDL_Renderer * renderer);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderCopy	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderCopy(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_Texture * texture,const SDL_Rect * srcrect,const SDL_Rect * dstrect)
SDL_RenderCopyEx	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderCopyEx(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_Texture * texture,const SDL_Rect * srcrect,const SDL_Rect * dstrect,const double angle,const SDL_Point * center,const SDL_RendererFlip flip)
SDL_RenderDrawLine	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawLine(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,int x1,int y1,int x2,int y2)
SDL_RenderDrawLines	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawLines(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Point * points,int count)
SDL_RenderDrawPoint	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawPoint(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,int x,int y)
SDL_RenderDrawPoints	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawPoints(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Point * points,int count)
SDL_RenderDrawRect	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawRect(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rect)
SDL_RenderDrawRects	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawRects(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rects,int count)
SDL_RenderFillRect	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderFillRect(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rect)
SDL_RenderFillRects	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderFillRects(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rects,int count)
SDL_RenderGetClipRect	SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderGetClipRect(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Renderer * renderer,SDL_Rect * rect)
SDL_RenderGetD3D9Device	SDL_system.h	/^extern DECLSPEC IDirect3DDevice9* SDLCALL SDL_RenderGetD3D9Device(SDL_Renderer * renderer);$/;"	kind:p	typeref:typename:DECLSPEC IDirect3DDevice9 * SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderGetIntegerScale	SDL_render.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_RenderGetIntegerScale(SDL_Renderer * renderer);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderGetLogicalSize	SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderGetLogicalSize(SDL_Renderer * renderer, int *w, int *h);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Renderer * renderer,int * w,int * h)
SDL_RenderGetMetalCommandEncoder	SDL_render.h	/^extern DECLSPEC void *SDLCALL SDL_RenderGetMetalCommandEncoder(SDL_Renderer * renderer);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderGetMetalLayer	SDL_render.h	/^extern DECLSPEC void *SDLCALL SDL_RenderGetMetalLayer(SDL_Renderer * renderer);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderGetScale	SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderGetScale(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Renderer * renderer,float * scaleX,float * scaleY)
SDL_RenderGetViewport	SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderGetViewport(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Renderer * renderer,SDL_Rect * rect)
SDL_RenderIsClipEnabled	SDL_render.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_RenderIsClipEnabled(SDL_Renderer * renderer);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderPresent	SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderPresent(SDL_Renderer * renderer);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Renderer * renderer)
SDL_RenderReadPixels	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderReadPixels(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rect,Uint32 format,void * pixels,int pitch)
SDL_RenderSetClipRect	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetClipRect(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rect)
SDL_RenderSetIntegerScale	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetIntegerScale(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_bool enable)
SDL_RenderSetLogicalSize	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetLogicalSize(SDL_Renderer * renderer, int w, int h);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,int w,int h)
SDL_RenderSetScale	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetScale(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,float scaleX,float scaleY)
SDL_RenderSetViewport	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetViewport(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,const SDL_Rect * rect)
SDL_RenderTargetSupported	SDL_render.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_RenderTargetSupported(SDL_Renderer *renderer);$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Renderer * renderer)
SDL_Renderer	SDL_render.h	/^typedef struct SDL_Renderer SDL_Renderer;$/;"	kind:t	typeref:struct:SDL_Renderer
SDL_RendererFlags	SDL_render.h	/^} SDL_RendererFlags;$/;"	kind:t	typeref:enum:__anonad684edd0103
SDL_RendererFlip	SDL_render.h	/^} SDL_RendererFlip;$/;"	kind:t	typeref:enum:__anonad684edd0403
SDL_RendererInfo	SDL_render.h	/^typedef struct SDL_RendererInfo$/;"	kind:s
SDL_RendererInfo	SDL_render.h	/^} SDL_RendererInfo;$/;"	kind:t	typeref:struct:SDL_RendererInfo
SDL_RendererInfo::flags	SDL_render.h	/^    Uint32 flags;               \/**< Supported ::SDL_RendererFlags *\/$/;"	kind:m	struct:SDL_RendererInfo	typeref:typename:Uint32	access:public
SDL_RendererInfo::max_texture_height	SDL_render.h	/^    int max_texture_height;     \/**< The maximum texture height *\/$/;"	kind:m	struct:SDL_RendererInfo	typeref:typename:int	access:public
SDL_RendererInfo::max_texture_width	SDL_render.h	/^    int max_texture_width;      \/**< The maximum texture width *\/$/;"	kind:m	struct:SDL_RendererInfo	typeref:typename:int	access:public
SDL_RendererInfo::name	SDL_render.h	/^    const char *name;           \/**< The name of the renderer *\/$/;"	kind:m	struct:SDL_RendererInfo	typeref:typename:const char *	access:public
SDL_RendererInfo::num_texture_formats	SDL_render.h	/^    Uint32 num_texture_formats; \/**< The number of available texture formats *\/$/;"	kind:m	struct:SDL_RendererInfo	typeref:typename:Uint32	access:public
SDL_RendererInfo::texture_formats	SDL_render.h	/^    Uint32 texture_formats[16]; \/**< The available texture formats *\/$/;"	kind:m	struct:SDL_RendererInfo	typeref:typename:Uint32[16]	access:public
SDL_ReportAssertion	SDL_assert.h	/^extern DECLSPEC SDL_AssertState SDLCALL SDL_ReportAssertion(SDL_AssertData *,$/;"	kind:p	typeref:typename:DECLSPEC SDL_AssertState SDLCALL	signature:(SDL_AssertData *,const char *,const char *,int)
SDL_ResetAssertionReport	SDL_assert.h	/^extern DECLSPEC void SDLCALL SDL_ResetAssertionReport(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_RestoreWindow	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_RestoreWindow(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_SCANCODE_0	SDL_scancode.h	/^    SDL_SCANCODE_0 = 39,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_1	SDL_scancode.h	/^    SDL_SCANCODE_1 = 30,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_2	SDL_scancode.h	/^    SDL_SCANCODE_2 = 31,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_3	SDL_scancode.h	/^    SDL_SCANCODE_3 = 32,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_4	SDL_scancode.h	/^    SDL_SCANCODE_4 = 33,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_5	SDL_scancode.h	/^    SDL_SCANCODE_5 = 34,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_6	SDL_scancode.h	/^    SDL_SCANCODE_6 = 35,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_7	SDL_scancode.h	/^    SDL_SCANCODE_7 = 36,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_8	SDL_scancode.h	/^    SDL_SCANCODE_8 = 37,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_9	SDL_scancode.h	/^    SDL_SCANCODE_9 = 38,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_A	SDL_scancode.h	/^    SDL_SCANCODE_A = 4,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AC_BACK	SDL_scancode.h	/^    SDL_SCANCODE_AC_BACK = 270,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AC_BOOKMARKS	SDL_scancode.h	/^    SDL_SCANCODE_AC_BOOKMARKS = 274,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AC_FORWARD	SDL_scancode.h	/^    SDL_SCANCODE_AC_FORWARD = 271,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AC_HOME	SDL_scancode.h	/^    SDL_SCANCODE_AC_HOME = 269,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AC_REFRESH	SDL_scancode.h	/^    SDL_SCANCODE_AC_REFRESH = 273,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AC_SEARCH	SDL_scancode.h	/^    SDL_SCANCODE_AC_SEARCH = 268,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AC_STOP	SDL_scancode.h	/^    SDL_SCANCODE_AC_STOP = 272,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AGAIN	SDL_scancode.h	/^    SDL_SCANCODE_AGAIN = 121,   \/**< redo *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_ALTERASE	SDL_scancode.h	/^    SDL_SCANCODE_ALTERASE = 153, \/**< Erase-Eaze *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_APOSTROPHE	SDL_scancode.h	/^    SDL_SCANCODE_APOSTROPHE = 52,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_APP1	SDL_scancode.h	/^    SDL_SCANCODE_APP1 = 283,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_APP2	SDL_scancode.h	/^    SDL_SCANCODE_APP2 = 284,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_APPLICATION	SDL_scancode.h	/^    SDL_SCANCODE_APPLICATION = 101, \/**< windows contextual menu, compose *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AUDIOFASTFORWARD	SDL_scancode.h	/^    SDL_SCANCODE_AUDIOFASTFORWARD = 286,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AUDIOMUTE	SDL_scancode.h	/^    SDL_SCANCODE_AUDIOMUTE = 262,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AUDIONEXT	SDL_scancode.h	/^    SDL_SCANCODE_AUDIONEXT = 258,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AUDIOPLAY	SDL_scancode.h	/^    SDL_SCANCODE_AUDIOPLAY = 261,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AUDIOPREV	SDL_scancode.h	/^    SDL_SCANCODE_AUDIOPREV = 259,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AUDIOREWIND	SDL_scancode.h	/^    SDL_SCANCODE_AUDIOREWIND = 285,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_AUDIOSTOP	SDL_scancode.h	/^    SDL_SCANCODE_AUDIOSTOP = 260,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_B	SDL_scancode.h	/^    SDL_SCANCODE_B = 5,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_BACKSLASH	SDL_scancode.h	/^    SDL_SCANCODE_BACKSLASH = 49, \/**< Located at the lower left of the return$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_BACKSPACE	SDL_scancode.h	/^    SDL_SCANCODE_BACKSPACE = 42,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_BRIGHTNESSDOWN	SDL_scancode.h	/^    SDL_SCANCODE_BRIGHTNESSDOWN = 275,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_BRIGHTNESSUP	SDL_scancode.h	/^    SDL_SCANCODE_BRIGHTNESSUP = 276,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_C	SDL_scancode.h	/^    SDL_SCANCODE_C = 6,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_CALCULATOR	SDL_scancode.h	/^    SDL_SCANCODE_CALCULATOR = 266,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_CANCEL	SDL_scancode.h	/^    SDL_SCANCODE_CANCEL = 155,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_CAPSLOCK	SDL_scancode.h	/^    SDL_SCANCODE_CAPSLOCK = 57,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_CLEAR	SDL_scancode.h	/^    SDL_SCANCODE_CLEAR = 156,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_CLEARAGAIN	SDL_scancode.h	/^    SDL_SCANCODE_CLEARAGAIN = 162,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_COMMA	SDL_scancode.h	/^    SDL_SCANCODE_COMMA = 54,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_COMPUTER	SDL_scancode.h	/^    SDL_SCANCODE_COMPUTER = 267,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_COPY	SDL_scancode.h	/^    SDL_SCANCODE_COPY = 124,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_CRSEL	SDL_scancode.h	/^    SDL_SCANCODE_CRSEL = 163,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_CURRENCYSUBUNIT	SDL_scancode.h	/^    SDL_SCANCODE_CURRENCYSUBUNIT = 181,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_CURRENCYUNIT	SDL_scancode.h	/^    SDL_SCANCODE_CURRENCYUNIT = 180,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_CUT	SDL_scancode.h	/^    SDL_SCANCODE_CUT = 123,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_D	SDL_scancode.h	/^    SDL_SCANCODE_D = 7,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_DECIMALSEPARATOR	SDL_scancode.h	/^    SDL_SCANCODE_DECIMALSEPARATOR = 179,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_DELETE	SDL_scancode.h	/^    SDL_SCANCODE_DELETE = 76,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_DISPLAYSWITCH	SDL_scancode.h	/^    SDL_SCANCODE_DISPLAYSWITCH = 277, \/**< display mirroring\/dual display$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_DOWN	SDL_scancode.h	/^    SDL_SCANCODE_DOWN = 81,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_E	SDL_scancode.h	/^    SDL_SCANCODE_E = 8,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_EJECT	SDL_scancode.h	/^    SDL_SCANCODE_EJECT = 281,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_END	SDL_scancode.h	/^    SDL_SCANCODE_END = 77,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_EQUALS	SDL_scancode.h	/^    SDL_SCANCODE_EQUALS = 46,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_ESCAPE	SDL_scancode.h	/^    SDL_SCANCODE_ESCAPE = 41,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_EXECUTE	SDL_scancode.h	/^    SDL_SCANCODE_EXECUTE = 116,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_EXSEL	SDL_scancode.h	/^    SDL_SCANCODE_EXSEL = 164,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F	SDL_scancode.h	/^    SDL_SCANCODE_F = 9,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F1	SDL_scancode.h	/^    SDL_SCANCODE_F1 = 58,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F10	SDL_scancode.h	/^    SDL_SCANCODE_F10 = 67,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F11	SDL_scancode.h	/^    SDL_SCANCODE_F11 = 68,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F12	SDL_scancode.h	/^    SDL_SCANCODE_F12 = 69,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F13	SDL_scancode.h	/^    SDL_SCANCODE_F13 = 104,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F14	SDL_scancode.h	/^    SDL_SCANCODE_F14 = 105,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F15	SDL_scancode.h	/^    SDL_SCANCODE_F15 = 106,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F16	SDL_scancode.h	/^    SDL_SCANCODE_F16 = 107,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F17	SDL_scancode.h	/^    SDL_SCANCODE_F17 = 108,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F18	SDL_scancode.h	/^    SDL_SCANCODE_F18 = 109,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F19	SDL_scancode.h	/^    SDL_SCANCODE_F19 = 110,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F2	SDL_scancode.h	/^    SDL_SCANCODE_F2 = 59,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F20	SDL_scancode.h	/^    SDL_SCANCODE_F20 = 111,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F21	SDL_scancode.h	/^    SDL_SCANCODE_F21 = 112,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F22	SDL_scancode.h	/^    SDL_SCANCODE_F22 = 113,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F23	SDL_scancode.h	/^    SDL_SCANCODE_F23 = 114,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F24	SDL_scancode.h	/^    SDL_SCANCODE_F24 = 115,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F3	SDL_scancode.h	/^    SDL_SCANCODE_F3 = 60,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F4	SDL_scancode.h	/^    SDL_SCANCODE_F4 = 61,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F5	SDL_scancode.h	/^    SDL_SCANCODE_F5 = 62,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F6	SDL_scancode.h	/^    SDL_SCANCODE_F6 = 63,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F7	SDL_scancode.h	/^    SDL_SCANCODE_F7 = 64,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F8	SDL_scancode.h	/^    SDL_SCANCODE_F8 = 65,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_F9	SDL_scancode.h	/^    SDL_SCANCODE_F9 = 66,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_FIND	SDL_scancode.h	/^    SDL_SCANCODE_FIND = 126,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_G	SDL_scancode.h	/^    SDL_SCANCODE_G = 10,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_GRAVE	SDL_scancode.h	/^    SDL_SCANCODE_GRAVE = 53, \/**< Located in the top left corner (on both ANSI$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_H	SDL_scancode.h	/^    SDL_SCANCODE_H = 11,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_HELP	SDL_scancode.h	/^    SDL_SCANCODE_HELP = 117,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_HOME	SDL_scancode.h	/^    SDL_SCANCODE_HOME = 74,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_I	SDL_scancode.h	/^    SDL_SCANCODE_I = 12,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_INSERT	SDL_scancode.h	/^    SDL_SCANCODE_INSERT = 73, \/**< insert on PC, help on some Mac keyboards (but$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_INTERNATIONAL1	SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL1 = 135, \/**< used on Asian keyboards, see$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_INTERNATIONAL2	SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL2 = 136,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_INTERNATIONAL3	SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL3 = 137, \/**< Yen *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_INTERNATIONAL4	SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL4 = 138,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_INTERNATIONAL5	SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL5 = 139,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_INTERNATIONAL6	SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL6 = 140,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_INTERNATIONAL7	SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL7 = 141,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_INTERNATIONAL8	SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL8 = 142,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_INTERNATIONAL9	SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL9 = 143,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_J	SDL_scancode.h	/^    SDL_SCANCODE_J = 13,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_K	SDL_scancode.h	/^    SDL_SCANCODE_K = 14,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KBDILLUMDOWN	SDL_scancode.h	/^    SDL_SCANCODE_KBDILLUMDOWN = 279,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KBDILLUMTOGGLE	SDL_scancode.h	/^    SDL_SCANCODE_KBDILLUMTOGGLE = 278,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KBDILLUMUP	SDL_scancode.h	/^    SDL_SCANCODE_KBDILLUMUP = 280,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_0	SDL_scancode.h	/^    SDL_SCANCODE_KP_0 = 98,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_00	SDL_scancode.h	/^    SDL_SCANCODE_KP_00 = 176,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_000	SDL_scancode.h	/^    SDL_SCANCODE_KP_000 = 177,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_1	SDL_scancode.h	/^    SDL_SCANCODE_KP_1 = 89,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_2	SDL_scancode.h	/^    SDL_SCANCODE_KP_2 = 90,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_3	SDL_scancode.h	/^    SDL_SCANCODE_KP_3 = 91,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_4	SDL_scancode.h	/^    SDL_SCANCODE_KP_4 = 92,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_5	SDL_scancode.h	/^    SDL_SCANCODE_KP_5 = 93,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_6	SDL_scancode.h	/^    SDL_SCANCODE_KP_6 = 94,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_7	SDL_scancode.h	/^    SDL_SCANCODE_KP_7 = 95,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_8	SDL_scancode.h	/^    SDL_SCANCODE_KP_8 = 96,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_9	SDL_scancode.h	/^    SDL_SCANCODE_KP_9 = 97,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_A	SDL_scancode.h	/^    SDL_SCANCODE_KP_A = 188,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_AMPERSAND	SDL_scancode.h	/^    SDL_SCANCODE_KP_AMPERSAND = 199,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_AT	SDL_scancode.h	/^    SDL_SCANCODE_KP_AT = 206,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_B	SDL_scancode.h	/^    SDL_SCANCODE_KP_B = 189,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_BACKSPACE	SDL_scancode.h	/^    SDL_SCANCODE_KP_BACKSPACE = 187,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_BINARY	SDL_scancode.h	/^    SDL_SCANCODE_KP_BINARY = 218,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_C	SDL_scancode.h	/^    SDL_SCANCODE_KP_C = 190,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_CLEAR	SDL_scancode.h	/^    SDL_SCANCODE_KP_CLEAR = 216,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_CLEARENTRY	SDL_scancode.h	/^    SDL_SCANCODE_KP_CLEARENTRY = 217,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_COLON	SDL_scancode.h	/^    SDL_SCANCODE_KP_COLON = 203,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_COMMA	SDL_scancode.h	/^    SDL_SCANCODE_KP_COMMA = 133,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_D	SDL_scancode.h	/^    SDL_SCANCODE_KP_D = 191,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_DBLAMPERSAND	SDL_scancode.h	/^    SDL_SCANCODE_KP_DBLAMPERSAND = 200,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_DBLVERTICALBAR	SDL_scancode.h	/^    SDL_SCANCODE_KP_DBLVERTICALBAR = 202,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_DECIMAL	SDL_scancode.h	/^    SDL_SCANCODE_KP_DECIMAL = 220,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_DIVIDE	SDL_scancode.h	/^    SDL_SCANCODE_KP_DIVIDE = 84,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_E	SDL_scancode.h	/^    SDL_SCANCODE_KP_E = 192,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_ENTER	SDL_scancode.h	/^    SDL_SCANCODE_KP_ENTER = 88,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_EQUALS	SDL_scancode.h	/^    SDL_SCANCODE_KP_EQUALS = 103,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_EQUALSAS400	SDL_scancode.h	/^    SDL_SCANCODE_KP_EQUALSAS400 = 134,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_EXCLAM	SDL_scancode.h	/^    SDL_SCANCODE_KP_EXCLAM = 207,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_F	SDL_scancode.h	/^    SDL_SCANCODE_KP_F = 193,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_GREATER	SDL_scancode.h	/^    SDL_SCANCODE_KP_GREATER = 198,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_HASH	SDL_scancode.h	/^    SDL_SCANCODE_KP_HASH = 204,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_HEXADECIMAL	SDL_scancode.h	/^    SDL_SCANCODE_KP_HEXADECIMAL = 221,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_LEFTBRACE	SDL_scancode.h	/^    SDL_SCANCODE_KP_LEFTBRACE = 184,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_LEFTPAREN	SDL_scancode.h	/^    SDL_SCANCODE_KP_LEFTPAREN = 182,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_LESS	SDL_scancode.h	/^    SDL_SCANCODE_KP_LESS = 197,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_MEMADD	SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMADD = 211,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_MEMCLEAR	SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMCLEAR = 210,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_MEMDIVIDE	SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMDIVIDE = 214,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_MEMMULTIPLY	SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMMULTIPLY = 213,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_MEMRECALL	SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMRECALL = 209,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_MEMSTORE	SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMSTORE = 208,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_MEMSUBTRACT	SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMSUBTRACT = 212,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_MINUS	SDL_scancode.h	/^    SDL_SCANCODE_KP_MINUS = 86,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_MULTIPLY	SDL_scancode.h	/^    SDL_SCANCODE_KP_MULTIPLY = 85,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_OCTAL	SDL_scancode.h	/^    SDL_SCANCODE_KP_OCTAL = 219,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_PERCENT	SDL_scancode.h	/^    SDL_SCANCODE_KP_PERCENT = 196,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_PERIOD	SDL_scancode.h	/^    SDL_SCANCODE_KP_PERIOD = 99,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_PLUS	SDL_scancode.h	/^    SDL_SCANCODE_KP_PLUS = 87,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_PLUSMINUS	SDL_scancode.h	/^    SDL_SCANCODE_KP_PLUSMINUS = 215,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_POWER	SDL_scancode.h	/^    SDL_SCANCODE_KP_POWER = 195,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_RIGHTBRACE	SDL_scancode.h	/^    SDL_SCANCODE_KP_RIGHTBRACE = 185,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_RIGHTPAREN	SDL_scancode.h	/^    SDL_SCANCODE_KP_RIGHTPAREN = 183,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_SPACE	SDL_scancode.h	/^    SDL_SCANCODE_KP_SPACE = 205,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_TAB	SDL_scancode.h	/^    SDL_SCANCODE_KP_TAB = 186,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_VERTICALBAR	SDL_scancode.h	/^    SDL_SCANCODE_KP_VERTICALBAR = 201,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_KP_XOR	SDL_scancode.h	/^    SDL_SCANCODE_KP_XOR = 194,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_L	SDL_scancode.h	/^    SDL_SCANCODE_L = 15,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LALT	SDL_scancode.h	/^    SDL_SCANCODE_LALT = 226, \/**< alt, option *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LANG1	SDL_scancode.h	/^    SDL_SCANCODE_LANG1 = 144, \/**< Hangul\/English toggle *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LANG2	SDL_scancode.h	/^    SDL_SCANCODE_LANG2 = 145, \/**< Hanja conversion *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LANG3	SDL_scancode.h	/^    SDL_SCANCODE_LANG3 = 146, \/**< Katakana *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LANG4	SDL_scancode.h	/^    SDL_SCANCODE_LANG4 = 147, \/**< Hiragana *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LANG5	SDL_scancode.h	/^    SDL_SCANCODE_LANG5 = 148, \/**< Zenkaku\/Hankaku *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LANG6	SDL_scancode.h	/^    SDL_SCANCODE_LANG6 = 149, \/**< reserved *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LANG7	SDL_scancode.h	/^    SDL_SCANCODE_LANG7 = 150, \/**< reserved *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LANG8	SDL_scancode.h	/^    SDL_SCANCODE_LANG8 = 151, \/**< reserved *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LANG9	SDL_scancode.h	/^    SDL_SCANCODE_LANG9 = 152, \/**< reserved *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LCTRL	SDL_scancode.h	/^    SDL_SCANCODE_LCTRL = 224,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LEFT	SDL_scancode.h	/^    SDL_SCANCODE_LEFT = 80,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LEFTBRACKET	SDL_scancode.h	/^    SDL_SCANCODE_LEFTBRACKET = 47,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LGUI	SDL_scancode.h	/^    SDL_SCANCODE_LGUI = 227, \/**< windows, command (apple), meta *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_LSHIFT	SDL_scancode.h	/^    SDL_SCANCODE_LSHIFT = 225,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_M	SDL_scancode.h	/^    SDL_SCANCODE_M = 16,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_MAIL	SDL_scancode.h	/^    SDL_SCANCODE_MAIL = 265,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_MEDIASELECT	SDL_scancode.h	/^    SDL_SCANCODE_MEDIASELECT = 263,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_MENU	SDL_scancode.h	/^    SDL_SCANCODE_MENU = 118,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_MINUS	SDL_scancode.h	/^    SDL_SCANCODE_MINUS = 45,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_MODE	SDL_scancode.h	/^    SDL_SCANCODE_MODE = 257,    \/**< I'm not sure if this is really not covered$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_MUTE	SDL_scancode.h	/^    SDL_SCANCODE_MUTE = 127,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_N	SDL_scancode.h	/^    SDL_SCANCODE_N = 17,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_NONUSBACKSLASH	SDL_scancode.h	/^    SDL_SCANCODE_NONUSBACKSLASH = 100, \/**< This is the additional key that ISO$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_NONUSHASH	SDL_scancode.h	/^    SDL_SCANCODE_NONUSHASH = 50, \/**< ISO USB keyboards actually use this code$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_NUMLOCKCLEAR	SDL_scancode.h	/^    SDL_SCANCODE_NUMLOCKCLEAR = 83, \/**< num lock on PC, clear on Mac keyboards$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_O	SDL_scancode.h	/^    SDL_SCANCODE_O = 18,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_OPER	SDL_scancode.h	/^    SDL_SCANCODE_OPER = 161,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_OUT	SDL_scancode.h	/^    SDL_SCANCODE_OUT = 160,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_P	SDL_scancode.h	/^    SDL_SCANCODE_P = 19,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_PAGEDOWN	SDL_scancode.h	/^    SDL_SCANCODE_PAGEDOWN = 78,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_PAGEUP	SDL_scancode.h	/^    SDL_SCANCODE_PAGEUP = 75,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_PASTE	SDL_scancode.h	/^    SDL_SCANCODE_PASTE = 125,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_PAUSE	SDL_scancode.h	/^    SDL_SCANCODE_PAUSE = 72,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_PERIOD	SDL_scancode.h	/^    SDL_SCANCODE_PERIOD = 55,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_POWER	SDL_scancode.h	/^    SDL_SCANCODE_POWER = 102, \/**< The USB document says this is a status flag,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_PRINTSCREEN	SDL_scancode.h	/^    SDL_SCANCODE_PRINTSCREEN = 70,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_PRIOR	SDL_scancode.h	/^    SDL_SCANCODE_PRIOR = 157,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_Q	SDL_scancode.h	/^    SDL_SCANCODE_Q = 20,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_R	SDL_scancode.h	/^    SDL_SCANCODE_R = 21,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_RALT	SDL_scancode.h	/^    SDL_SCANCODE_RALT = 230, \/**< alt gr, option *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_RCTRL	SDL_scancode.h	/^    SDL_SCANCODE_RCTRL = 228,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_RETURN	SDL_scancode.h	/^    SDL_SCANCODE_RETURN = 40,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_RETURN2	SDL_scancode.h	/^    SDL_SCANCODE_RETURN2 = 158,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_RGUI	SDL_scancode.h	/^    SDL_SCANCODE_RGUI = 231, \/**< windows, command (apple), meta *\/$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_RIGHT	SDL_scancode.h	/^    SDL_SCANCODE_RIGHT = 79,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_RIGHTBRACKET	SDL_scancode.h	/^    SDL_SCANCODE_RIGHTBRACKET = 48,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_RSHIFT	SDL_scancode.h	/^    SDL_SCANCODE_RSHIFT = 229,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_S	SDL_scancode.h	/^    SDL_SCANCODE_S = 22,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_SCROLLLOCK	SDL_scancode.h	/^    SDL_SCANCODE_SCROLLLOCK = 71,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_SELECT	SDL_scancode.h	/^    SDL_SCANCODE_SELECT = 119,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_SEMICOLON	SDL_scancode.h	/^    SDL_SCANCODE_SEMICOLON = 51,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_SEPARATOR	SDL_scancode.h	/^    SDL_SCANCODE_SEPARATOR = 159,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_SLASH	SDL_scancode.h	/^    SDL_SCANCODE_SLASH = 56,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_SLEEP	SDL_scancode.h	/^    SDL_SCANCODE_SLEEP = 282,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_SPACE	SDL_scancode.h	/^    SDL_SCANCODE_SPACE = 44,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_STOP	SDL_scancode.h	/^    SDL_SCANCODE_STOP = 120,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_SYSREQ	SDL_scancode.h	/^    SDL_SCANCODE_SYSREQ = 154,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_T	SDL_scancode.h	/^    SDL_SCANCODE_T = 23,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_TAB	SDL_scancode.h	/^    SDL_SCANCODE_TAB = 43,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_THOUSANDSSEPARATOR	SDL_scancode.h	/^    SDL_SCANCODE_THOUSANDSSEPARATOR = 178,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_TO_KEYCODE	SDL_keycode.h	/^#define SDL_SCANCODE_TO_KEYCODE(/;"	kind:d	signature:(X)
SDL_SCANCODE_U	SDL_scancode.h	/^    SDL_SCANCODE_U = 24,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_UNDO	SDL_scancode.h	/^    SDL_SCANCODE_UNDO = 122,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_UNKNOWN	SDL_scancode.h	/^    SDL_SCANCODE_UNKNOWN = 0,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_UP	SDL_scancode.h	/^    SDL_SCANCODE_UP = 82,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_V	SDL_scancode.h	/^    SDL_SCANCODE_V = 25,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_VOLUMEDOWN	SDL_scancode.h	/^    SDL_SCANCODE_VOLUMEDOWN = 129,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_VOLUMEUP	SDL_scancode.h	/^    SDL_SCANCODE_VOLUMEUP = 128,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_W	SDL_scancode.h	/^    SDL_SCANCODE_W = 26,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_WWW	SDL_scancode.h	/^    SDL_SCANCODE_WWW = 264,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_X	SDL_scancode.h	/^    SDL_SCANCODE_X = 27,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_Y	SDL_scancode.h	/^    SDL_SCANCODE_Y = 28,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANCODE_Z	SDL_scancode.h	/^    SDL_SCANCODE_Z = 29,$/;"	kind:e	enum:__anonc174b49d0103	access:public
SDL_SCANF_FORMAT_STRING	SDL_stdinc.h	/^#define SDL_SCANF_FORMAT_STRING /;"	kind:d
SDL_SCANF_FORMAT_STRING	SDL_stdinc.h	/^#define SDL_SCANF_FORMAT_STRING$/;"	kind:d
SDL_SCANF_VARARG_FUNC	SDL_stdinc.h	/^#define SDL_SCANF_VARARG_FUNC(/;"	kind:d	signature:(fmtargnumber)
SDL_SENSORUPDATE	SDL_events.h	/^    SDL_SENSORUPDATE = 0x1200,     \/**< A sensor was updated *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_SENSOR_ACCEL	SDL_sensor.h	/^    SDL_SENSOR_ACCEL,           \/**< Accelerometer *\/$/;"	kind:e	enum:__anon9abf0f170103	access:public
SDL_SENSOR_DUMMY	SDL_config.h	/^#define SDL_SENSOR_DUMMY /;"	kind:d
SDL_SENSOR_GYRO	SDL_sensor.h	/^    SDL_SENSOR_GYRO             \/**< Gyroscope *\/$/;"	kind:e	enum:__anon9abf0f170103	access:public
SDL_SENSOR_INVALID	SDL_sensor.h	/^    SDL_SENSOR_INVALID = -1,    \/**< Returned for an invalid sensor *\/$/;"	kind:e	enum:__anon9abf0f170103	access:public
SDL_SENSOR_UNKNOWN	SDL_sensor.h	/^    SDL_SENSOR_UNKNOWN,         \/**< Unknown sensor type *\/$/;"	kind:e	enum:__anon9abf0f170103	access:public
SDL_SHAPEMODEALPHA	SDL_shape.h	/^#define SDL_SHAPEMODEALPHA(/;"	kind:d	signature:(mode)
SDL_STANDARD_GRAVITY	SDL_sensor.h	/^#define SDL_STANDARD_GRAVITY /;"	kind:d
SDL_STRINGIFY_ARG	SDL_stdinc.h	/^#define SDL_STRINGIFY_ARG(/;"	kind:d	signature:(arg)
SDL_SWSURFACE	SDL_surface.h	/^#define SDL_SWSURFACE /;"	kind:d
SDL_SYSTEM_CURSOR_ARROW	SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_ARROW,     \/**< Arrow *\/$/;"	kind:e	enum:__anon4ea517060103	access:public
SDL_SYSTEM_CURSOR_CROSSHAIR	SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_CROSSHAIR, \/**< Crosshair *\/$/;"	kind:e	enum:__anon4ea517060103	access:public
SDL_SYSTEM_CURSOR_HAND	SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_HAND,      \/**< Hand *\/$/;"	kind:e	enum:__anon4ea517060103	access:public
SDL_SYSTEM_CURSOR_IBEAM	SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_IBEAM,     \/**< I-beam *\/$/;"	kind:e	enum:__anon4ea517060103	access:public
SDL_SYSTEM_CURSOR_NO	SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_NO,        \/**< Slashed circle or crossbones *\/$/;"	kind:e	enum:__anon4ea517060103	access:public
SDL_SYSTEM_CURSOR_SIZEALL	SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZEALL,   \/**< Four pointed arrow pointing north, south, east, and west /;"	kind:e	enum:__anon4ea517060103	access:public
SDL_SYSTEM_CURSOR_SIZENESW	SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZENESW,  \/**< Double arrow pointing northeast and southwest *\/$/;"	kind:e	enum:__anon4ea517060103	access:public
SDL_SYSTEM_CURSOR_SIZENS	SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZENS,    \/**< Double arrow pointing north and south *\/$/;"	kind:e	enum:__anon4ea517060103	access:public
SDL_SYSTEM_CURSOR_SIZENWSE	SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZENWSE,  \/**< Double arrow pointing northwest and southeast *\/$/;"	kind:e	enum:__anon4ea517060103	access:public
SDL_SYSTEM_CURSOR_SIZEWE	SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZEWE,    \/**< Double arrow pointing west and east *\/$/;"	kind:e	enum:__anon4ea517060103	access:public
SDL_SYSTEM_CURSOR_WAIT	SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_WAIT,      \/**< Wait *\/$/;"	kind:e	enum:__anon4ea517060103	access:public
SDL_SYSTEM_CURSOR_WAITARROW	SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_WAITARROW, \/**< Small wait cursor (or Wait if not available) *\/$/;"	kind:e	enum:__anon4ea517060103	access:public
SDL_SYSWMEVENT	SDL_events.h	/^    SDL_SYSWMEVENT,             \/**< System specific event *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_SYSWM_ANDROID	SDL_syswm.h	/^    SDL_SYSWM_ANDROID,$/;"	kind:e	enum:__anon33b43c600103	access:public
SDL_SYSWM_COCOA	SDL_syswm.h	/^    SDL_SYSWM_COCOA,$/;"	kind:e	enum:__anon33b43c600103	access:public
SDL_SYSWM_DIRECTFB	SDL_syswm.h	/^    SDL_SYSWM_DIRECTFB,$/;"	kind:e	enum:__anon33b43c600103	access:public
SDL_SYSWM_MIR	SDL_syswm.h	/^    SDL_SYSWM_MIR,$/;"	kind:e	enum:__anon33b43c600103	access:public
SDL_SYSWM_OS2	SDL_syswm.h	/^    SDL_SYSWM_OS2$/;"	kind:e	enum:__anon33b43c600103	access:public
SDL_SYSWM_TYPE	SDL_syswm.h	/^} SDL_SYSWM_TYPE;$/;"	kind:t	typeref:enum:__anon33b43c600103
SDL_SYSWM_UIKIT	SDL_syswm.h	/^    SDL_SYSWM_UIKIT,$/;"	kind:e	enum:__anon33b43c600103	access:public
SDL_SYSWM_UNKNOWN	SDL_syswm.h	/^    SDL_SYSWM_UNKNOWN,$/;"	kind:e	enum:__anon33b43c600103	access:public
SDL_SYSWM_VIVANTE	SDL_syswm.h	/^    SDL_SYSWM_VIVANTE,$/;"	kind:e	enum:__anon33b43c600103	access:public
SDL_SYSWM_WAYLAND	SDL_syswm.h	/^    SDL_SYSWM_WAYLAND,$/;"	kind:e	enum:__anon33b43c600103	access:public
SDL_SYSWM_WINDOWS	SDL_syswm.h	/^    SDL_SYSWM_WINDOWS,$/;"	kind:e	enum:__anon33b43c600103	access:public
SDL_SYSWM_WINRT	SDL_syswm.h	/^    SDL_SYSWM_WINRT,$/;"	kind:e	enum:__anon33b43c600103	access:public
SDL_SYSWM_X11	SDL_syswm.h	/^    SDL_SYSWM_X11,$/;"	kind:e	enum:__anon33b43c600103	access:public
SDL_SaveAllDollarTemplates	SDL_gesture.h	/^extern DECLSPEC int SDLCALL SDL_SaveAllDollarTemplates(SDL_RWops *dst);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_RWops * dst)
SDL_SaveBMP	SDL_surface.h	/^#define SDL_SaveBMP(/;"	kind:d	signature:(surface,file)
SDL_SaveBMP_RW	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SaveBMP_RW$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,SDL_RWops * dst,int freedst)
SDL_SaveDollarTemplate	SDL_gesture.h	/^extern DECLSPEC int SDLCALL SDL_SaveDollarTemplate(SDL_GestureID gestureId,SDL_RWops *dst);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_GestureID gestureId,SDL_RWops * dst)
SDL_Scancode	SDL_scancode.h	/^} SDL_Scancode;$/;"	kind:t	typeref:enum:__anonc174b49d0103
SDL_SemPost	SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemPost(SDL_sem * sem);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_sem * sem)
SDL_SemTryWait	SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemTryWait(SDL_sem * sem);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_sem * sem)
SDL_SemValue	SDL_mutex.h	/^extern DECLSPEC Uint32 SDLCALL SDL_SemValue(SDL_sem * sem);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(SDL_sem * sem)
SDL_SemWait	SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemWait(SDL_sem * sem);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_sem * sem)
SDL_SemWaitTimeout	SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemWaitTimeout(SDL_sem * sem, Uint32 ms);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_sem * sem,Uint32 ms)
SDL_Sensor	SDL_sensor.h	/^typedef struct _SDL_Sensor SDL_Sensor;$/;"	kind:t	typeref:struct:_SDL_Sensor
SDL_SensorClose	SDL_sensor.h	/^extern DECLSPEC void SDLCALL SDL_SensorClose(SDL_Sensor * sensor);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Sensor * sensor)
SDL_SensorEvent	SDL_events.h	/^typedef struct SDL_SensorEvent$/;"	kind:s
SDL_SensorEvent	SDL_events.h	/^} SDL_SensorEvent;$/;"	kind:t	typeref:struct:SDL_SensorEvent
SDL_SensorEvent::data	SDL_events.h	/^    float data[6];      \/**< Up to 6 values from the sensor - additional values can be queried /;"	kind:m	struct:SDL_SensorEvent	typeref:typename:float[6]	access:public
SDL_SensorEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_SensorEvent	typeref:typename:Uint32	access:public
SDL_SensorEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_SENSORUPDATE *\/$/;"	kind:m	struct:SDL_SensorEvent	typeref:typename:Uint32	access:public
SDL_SensorEvent::which	SDL_events.h	/^    Sint32 which;       \/**< The instance ID of the sensor *\/$/;"	kind:m	struct:SDL_SensorEvent	typeref:typename:Sint32	access:public
SDL_SensorFromInstanceID	SDL_sensor.h	/^extern DECLSPEC SDL_Sensor *SDLCALL SDL_SensorFromInstanceID(SDL_SensorID instance_id);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Sensor * SDLCALL	signature:(SDL_SensorID instance_id)
SDL_SensorGetData	SDL_sensor.h	/^extern DECLSPEC int SDLCALL SDL_SensorGetData(SDL_Sensor * sensor, float *data, int num_values);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Sensor * sensor,float * data,int num_values)
SDL_SensorGetDeviceInstanceID	SDL_sensor.h	/^extern DECLSPEC SDL_SensorID SDLCALL SDL_SensorGetDeviceInstanceID(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC SDL_SensorID SDLCALL	signature:(int device_index)
SDL_SensorGetDeviceName	SDL_sensor.h	/^extern DECLSPEC const char *SDLCALL SDL_SensorGetDeviceName(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(int device_index)
SDL_SensorGetDeviceNonPortableType	SDL_sensor.h	/^extern DECLSPEC int SDLCALL SDL_SensorGetDeviceNonPortableType(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int device_index)
SDL_SensorGetDeviceType	SDL_sensor.h	/^extern DECLSPEC SDL_SensorType SDLCALL SDL_SensorGetDeviceType(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC SDL_SensorType SDLCALL	signature:(int device_index)
SDL_SensorGetInstanceID	SDL_sensor.h	/^extern DECLSPEC SDL_SensorID SDLCALL SDL_SensorGetInstanceID(SDL_Sensor *sensor);$/;"	kind:p	typeref:typename:DECLSPEC SDL_SensorID SDLCALL	signature:(SDL_Sensor * sensor)
SDL_SensorGetName	SDL_sensor.h	/^extern DECLSPEC const char *SDLCALL SDL_SensorGetName(SDL_Sensor *sensor);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_Sensor * sensor)
SDL_SensorGetNonPortableType	SDL_sensor.h	/^extern DECLSPEC int SDLCALL SDL_SensorGetNonPortableType(SDL_Sensor *sensor);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Sensor * sensor)
SDL_SensorGetType	SDL_sensor.h	/^extern DECLSPEC SDL_SensorType SDLCALL SDL_SensorGetType(SDL_Sensor *sensor);$/;"	kind:p	typeref:typename:DECLSPEC SDL_SensorType SDLCALL	signature:(SDL_Sensor * sensor)
SDL_SensorID	SDL_sensor.h	/^typedef Sint32 SDL_SensorID;$/;"	kind:t	typeref:typename:Sint32
SDL_SensorOpen	SDL_sensor.h	/^extern DECLSPEC SDL_Sensor *SDLCALL SDL_SensorOpen(int device_index);$/;"	kind:p	typeref:typename:DECLSPEC SDL_Sensor * SDLCALL	signature:(int device_index)
SDL_SensorType	SDL_sensor.h	/^} SDL_SensorType;$/;"	kind:t	typeref:enum:__anon9abf0f170103
SDL_SensorUpdate	SDL_sensor.h	/^extern DECLSPEC void SDLCALL SDL_SensorUpdate(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_SetAssertionHandler	SDL_assert.h	/^extern DECLSPEC void SDLCALL SDL_SetAssertionHandler($/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AssertionHandler handler,void * userdata)
SDL_SetClipRect	SDL_surface.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_SetClipRect(SDL_Surface * surface,$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Surface * surface,const SDL_Rect * rect)
SDL_SetClipboardText	SDL_clipboard.h	/^extern DECLSPEC int SDLCALL SDL_SetClipboardText(const char *text);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * text)
SDL_SetColorKey	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetColorKey(SDL_Surface * surface,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,int flag,Uint32 key)
SDL_SetCursor	SDL_mouse.h	/^extern DECLSPEC void SDLCALL SDL_SetCursor(SDL_Cursor * cursor);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Cursor * cursor)
SDL_SetError	SDL_error.h	/^extern DECLSPEC int SDLCALL SDL_SetError(SDL_PRINTF_FORMAT_STRING const char *fmt, ...) SDL_PRIN/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_SetEventFilter	SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_SetEventFilter(SDL_EventFilter filter,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_EventFilter filter,void * userdata)
SDL_SetHint	SDL_hints.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_SetHint(const char *name,$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const char * name,const char * value)
SDL_SetHintWithPriority	SDL_hints.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_SetHintWithPriority(const char *name,$/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(const char * name,const char * value,SDL_HintPriority priority)
SDL_SetMainReady	SDL_main.h	/^extern DECLSPEC void SDLCALL SDL_SetMainReady(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_SetMemoryFunctions	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_SetMemoryFunctions(SDL_malloc_func malloc_func,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_malloc_func malloc_func,SDL_calloc_func calloc_func,SDL_realloc_func realloc_func,SDL_free_func free_func)
SDL_SetModState	SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_SetModState(SDL_Keymod modstate);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Keymod modstate)
SDL_SetPaletteColors	SDL_pixels.h	/^extern DECLSPEC int SDLCALL SDL_SetPaletteColors(SDL_Palette * palette,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Palette * palette,const SDL_Color * colors,int firstcolor,int ncolors)
SDL_SetPixelFormatPalette	SDL_pixels.h	/^extern DECLSPEC int SDLCALL SDL_SetPixelFormatPalette(SDL_PixelFormat * format,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_PixelFormat * format,SDL_Palette * palette)
SDL_SetRelativeMouseMode	SDL_mouse.h	/^extern DECLSPEC int SDLCALL SDL_SetRelativeMouseMode(SDL_bool enabled);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_bool enabled)
SDL_SetRenderDrawBlendMode	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetRenderDrawBlendMode(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_BlendMode blendMode)
SDL_SetRenderDrawColor	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetRenderDrawColor(SDL_Renderer * renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,Uint8 r,Uint8 g,Uint8 b,Uint8 a)
SDL_SetRenderTarget	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetRenderTarget(SDL_Renderer *renderer,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Renderer * renderer,SDL_Texture * texture)
SDL_SetSurfaceAlphaMod	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfaceAlphaMod(SDL_Surface * surface,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,Uint8 alpha)
SDL_SetSurfaceBlendMode	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfaceBlendMode(SDL_Surface * surface,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,SDL_BlendMode blendMode)
SDL_SetSurfaceColorMod	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfaceColorMod(SDL_Surface * surface,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,Uint8 r,Uint8 g,Uint8 b)
SDL_SetSurfacePalette	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfacePalette(SDL_Surface * surface,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,SDL_Palette * palette)
SDL_SetSurfaceRLE	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfaceRLE(SDL_Surface * surface,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * surface,int flag)
SDL_SetTextInputRect	SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_SetTextInputRect(SDL_Rect *rect);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Rect * rect)
SDL_SetTextureAlphaMod	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetTextureAlphaMod(SDL_Texture * texture,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,Uint8 alpha)
SDL_SetTextureBlendMode	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetTextureBlendMode(SDL_Texture * texture,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,SDL_BlendMode blendMode)
SDL_SetTextureColorMod	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetTextureColorMod(SDL_Texture * texture,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,Uint8 r,Uint8 g,Uint8 b)
SDL_SetThreadPriority	SDL_thread.h	/^extern DECLSPEC int SDLCALL SDL_SetThreadPriority(SDL_ThreadPriority priority);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_ThreadPriority priority)
SDL_SetWindowBordered	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowBordered(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,SDL_bool bordered)
SDL_SetWindowBrightness	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowBrightness(SDL_Window * window, float brightness);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,float brightness)
SDL_SetWindowData	SDL_video.h	/^extern DECLSPEC void* SDLCALL SDL_SetWindowData(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_Window * window,const char * name,void * userdata)
SDL_SetWindowDisplayMode	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowDisplayMode(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,const SDL_DisplayMode * mode)
SDL_SetWindowFullscreen	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowFullscreen(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,Uint32 flags)
SDL_SetWindowGammaRamp	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowGammaRamp(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,const Uint16 * red,const Uint16 * green,const Uint16 * blue)
SDL_SetWindowGrab	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowGrab(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,SDL_bool grabbed)
SDL_SetWindowHitTest	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowHitTest(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,SDL_HitTest callback,void * callback_data)
SDL_SetWindowIcon	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowIcon(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,SDL_Surface * icon)
SDL_SetWindowInputFocus	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowInputFocus(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window)
SDL_SetWindowMaximumSize	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowMaximumSize(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int max_w,int max_h)
SDL_SetWindowMinimumSize	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowMinimumSize(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int min_w,int min_h)
SDL_SetWindowModalFor	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowModalFor(SDL_Window * modal_window, SDL_Window * parent/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * modal_window,SDL_Window * parent_window)
SDL_SetWindowOpacity	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowOpacity(SDL_Window * window, float opacity);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,float opacity)
SDL_SetWindowPosition	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowPosition(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int x,int y)
SDL_SetWindowResizable	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowResizable(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,SDL_bool resizable)
SDL_SetWindowShape	SDL_shape.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowShape(SDL_Window *window,SDL_Surface *shape,SDL_WindowS/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,SDL_Surface * shape,SDL_WindowShapeMode * shape_mode)
SDL_SetWindowSize	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowSize(SDL_Window * window, int w,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int w,int h)
SDL_SetWindowTitle	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowTitle(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,const char * title)
SDL_SetWindowsMessageHook	SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowsMessageHook(SDL_WindowsMessageHook callback, void *us/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_WindowsMessageHook callback,void * userdata)
SDL_SetYUVConversionMode	SDL_surface.h	/^extern DECLSPEC void SDLCALL SDL_SetYUVConversionMode(SDL_YUV_CONVERSION_MODE mode);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_YUV_CONVERSION_MODE mode)
SDL_ShowCursor	SDL_mouse.h	/^extern DECLSPEC int SDLCALL SDL_ShowCursor(int toggle);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int toggle)
SDL_ShowMessageBox	SDL_messagebox.h	/^extern DECLSPEC int SDLCALL SDL_ShowMessageBox(const SDL_MessageBoxData *messageboxdata, int *bu/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const SDL_MessageBoxData * messageboxdata,int * buttonid)
SDL_ShowSimpleMessageBox	SDL_messagebox.h	/^extern DECLSPEC int SDLCALL SDL_ShowSimpleMessageBox(Uint32 flags, const char *title, const char/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(Uint32 flags,const char * title,const char * message,SDL_Window * window)
SDL_ShowWindow	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_ShowWindow(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window)
SDL_SoftStretch	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SoftStretch(SDL_Surface * src,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * src,const SDL_Rect * srcrect,SDL_Surface * dst,const SDL_Rect * dstrect)
SDL_SpinLock	SDL_atomic.h	/^typedef int SDL_SpinLock;$/;"	kind:t	typeref:typename:int
SDL_StartTextInput	SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_StartTextInput(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_StopTextInput	SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_StopTextInput(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_Surface	SDL_surface.h	/^typedef struct SDL_Surface$/;"	kind:s
SDL_Surface	SDL_surface.h	/^} SDL_Surface;$/;"	kind:t	typeref:struct:SDL_Surface
SDL_Surface::clip_rect	SDL_surface.h	/^    SDL_Rect clip_rect;         \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:SDL_Rect	access:public
SDL_Surface::flags	SDL_surface.h	/^    Uint32 flags;               \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:Uint32	access:public
SDL_Surface::format	SDL_surface.h	/^    SDL_PixelFormat *format;    \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:SDL_PixelFormat *	access:public
SDL_Surface::h	SDL_surface.h	/^    int w, h;                   \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Surface::lock_data	SDL_surface.h	/^    void *lock_data;            \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:void *	access:public
SDL_Surface::locked	SDL_surface.h	/^    int locked;                 \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Surface::map	SDL_surface.h	/^    struct SDL_BlitMap *map;    \/**< Private *\/$/;"	kind:m	struct:SDL_Surface	typeref:struct:SDL_BlitMap *	access:public
SDL_Surface::pitch	SDL_surface.h	/^    int pitch;                  \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Surface::pixels	SDL_surface.h	/^    void *pixels;               \/**< Read-write *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:void *	access:public
SDL_Surface::refcount	SDL_surface.h	/^    int refcount;               \/**< Read-mostly *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Surface::userdata	SDL_surface.h	/^    void *userdata;             \/**< Read-write *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:void *	access:public
SDL_Surface::w	SDL_surface.h	/^    int w, h;                   \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:int	access:public
SDL_Swap16	SDL_endian.h	/^SDL_Swap16(Uint16 x)$/;"	kind:f	typeref:typename:SDL_FORCE_INLINE Uint16	signature:(Uint16 x)
SDL_Swap32	SDL_endian.h	/^SDL_Swap32(Uint32 x)$/;"	kind:f	typeref:typename:SDL_FORCE_INLINE Uint32	signature:(Uint32 x)
SDL_Swap32	SDL_endian.h	/^extern _inline Uint32 SDL_Swap32(Uint32);$/;"	kind:p	typeref:typename:_inline Uint32	signature:(Uint32)
SDL_Swap64	SDL_endian.h	/^SDL_Swap64(Uint64 x)$/;"	kind:f	typeref:typename:SDL_FORCE_INLINE Uint64	signature:(Uint64 x)
SDL_Swap64::__anon4be143ec010a::__anon4be143ec0208	SDL_endian.h	/^        {$/;"	kind:s	union:SDL_Swap64::__anon4be143ec010a	access:public
SDL_Swap64::__anon4be143ec010a::__anon4be143ec0208::a	SDL_endian.h	/^            Uint32 a, b;$/;"	kind:m	struct:SDL_Swap64::__anon4be143ec010a::__anon4be143ec0208	typeref:typename:Uint32	access:public
SDL_Swap64::__anon4be143ec010a::__anon4be143ec0208::b	SDL_endian.h	/^            Uint32 a, b;$/;"	kind:m	struct:SDL_Swap64::__anon4be143ec010a::__anon4be143ec0208	typeref:typename:Uint32	access:public
SDL_Swap64::__anon4be143ec010a::s	SDL_endian.h	/^        } s;$/;"	kind:m	union:SDL_Swap64::__anon4be143ec010a	typeref:struct:SDL_Swap64::__anon4be143ec010a::__anon4be143ec0208	access:public
SDL_Swap64::__anon4be143ec010a::u	SDL_endian.h	/^        Uint64 u;$/;"	kind:m	union:SDL_Swap64::__anon4be143ec010a	typeref:typename:Uint64	access:public
SDL_SwapBE16	SDL_endian.h	/^#define SDL_SwapBE16(/;"	kind:d	signature:(X)
SDL_SwapBE32	SDL_endian.h	/^#define SDL_SwapBE32(/;"	kind:d	signature:(X)
SDL_SwapBE64	SDL_endian.h	/^#define SDL_SwapBE64(/;"	kind:d	signature:(X)
SDL_SwapFloat	SDL_endian.h	/^SDL_SwapFloat(float x)$/;"	kind:f	typeref:typename:SDL_FORCE_INLINE float	signature:(float x)
SDL_SwapFloat::__anon4be143ec030a::f	SDL_endian.h	/^        float f;$/;"	kind:m	union:SDL_SwapFloat::__anon4be143ec030a	typeref:typename:float	access:public
SDL_SwapFloat::__anon4be143ec030a::ui32	SDL_endian.h	/^        Uint32 ui32;$/;"	kind:m	union:SDL_SwapFloat::__anon4be143ec030a	typeref:typename:Uint32	access:public
SDL_SwapFloatBE	SDL_endian.h	/^#define SDL_SwapFloatBE(/;"	kind:d	signature:(X)
SDL_SwapFloatLE	SDL_endian.h	/^#define SDL_SwapFloatLE(/;"	kind:d	signature:(X)
SDL_SwapLE16	SDL_endian.h	/^#define SDL_SwapLE16(/;"	kind:d	signature:(X)
SDL_SwapLE32	SDL_endian.h	/^#define SDL_SwapLE32(/;"	kind:d	signature:(X)
SDL_SwapLE64	SDL_endian.h	/^#define SDL_SwapLE64(/;"	kind:d	signature:(X)
SDL_SysWMEvent	SDL_events.h	/^typedef struct SDL_SysWMEvent$/;"	kind:s
SDL_SysWMEvent	SDL_events.h	/^} SDL_SysWMEvent;$/;"	kind:t	typeref:struct:SDL_SysWMEvent
SDL_SysWMEvent::msg	SDL_events.h	/^    SDL_SysWMmsg *msg;  \/**< driver dependent data, defined in SDL_syswm.h *\/$/;"	kind:m	struct:SDL_SysWMEvent	typeref:typename:SDL_SysWMmsg *	access:public
SDL_SysWMEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_SysWMEvent	typeref:typename:Uint32	access:public
SDL_SysWMEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_SYSWMEVENT *\/$/;"	kind:m	struct:SDL_SysWMEvent	typeref:typename:Uint32	access:public
SDL_SysWMinfo	SDL_syswm.h	/^struct SDL_SysWMinfo$/;"	kind:s
SDL_SysWMinfo	SDL_syswm.h	/^typedef struct SDL_SysWMinfo SDL_SysWMinfo;$/;"	kind:t	typeref:struct:SDL_SysWMinfo
SDL_SysWMinfo::__anon33b43c60090a	SDL_syswm.h	/^    {$/;"	kind:u	struct:SDL_SysWMinfo	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600a08	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600a08::hdc	SDL_syswm.h	/^            HDC hdc;                    \/**< The window device context *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600a08	typeref:typename:HDC	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600a08::hinstance	SDL_syswm.h	/^            HINSTANCE hinstance;        \/**< The instance handle *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600a08	typeref:typename:HINSTANCE	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600a08::window	SDL_syswm.h	/^            HWND window;                \/**< The window handle *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600a08	typeref:typename:HWND	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600b08	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600b08::window	SDL_syswm.h	/^            IInspectable * window;      \/**< The WinRT CoreWindow *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600b08	typeref:typename:IInspectable *	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600c08	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600c08::display	SDL_syswm.h	/^            Display *display;           \/**< The X11 display *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600c08	typeref:typename:Display *	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600c08::window	SDL_syswm.h	/^            Window window;              \/**< The X11 window *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600c08	typeref:typename:Window	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600d08	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600d08::dfb	SDL_syswm.h	/^            IDirectFB *dfb;             \/**< The directfb main interface *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600d08	typeref:typename:IDirectFB *	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600d08::surface	SDL_syswm.h	/^            IDirectFBSurface *surface;  \/**< The directfb client surface *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600d08	typeref:typename:IDirectFBSurface *	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600d08::window	SDL_syswm.h	/^            IDirectFBWindow *window;    \/**< The directfb window handle *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600d08	typeref:typename:IDirectFBWindow *	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600e08	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600e08::window	SDL_syswm.h	/^            NSWindow __unsafe_unretained *window; \/**< The Cocoa window *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600e08	typeref:typename:NSWindow __unsafe_unretained *	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08::colorbuffer	SDL_syswm.h	/^            GLuint colorbuffer; \/**< The GL view's color Renderbuffer Object. It must be bound /;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08	typeref:typename:GLuint	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08::framebuffer	SDL_syswm.h	/^            GLuint framebuffer; \/**< The GL view's Framebuffer Object. It must be bound when re/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08	typeref:typename:GLuint	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08::resolveFramebuffer	SDL_syswm.h	/^            GLuint resolveFramebuffer; \/**< The Framebuffer Object which holds the resolve colo/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08	typeref:typename:GLuint	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08::window	SDL_syswm.h	/^            UIWindow __unsafe_unretained *window; \/**< The UIKit window *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08	typeref:typename:UIWindow __unsafe_unretained *	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601008	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601008::display	SDL_syswm.h	/^            struct wl_display *display;            \/**< Wayland display *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601008	typeref:struct:wl_display *	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601008::shell_surface	SDL_syswm.h	/^            struct wl_shell_surface *shell_surface; \/**< Wayland shell_surface (window manager /;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601008	typeref:struct:wl_shell_surface *	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601008::surface	SDL_syswm.h	/^            struct wl_surface *surface;            \/**< Wayland surface *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601008	typeref:struct:wl_surface *	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601108	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601108::connection	SDL_syswm.h	/^            struct MirConnection *connection;  \/**< Mir display server connection *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601108	typeref:struct:MirConnection *	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601108::surface	SDL_syswm.h	/^            struct MirSurface *surface;  \/**< Mir surface *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601108	typeref:struct:MirSurface *	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601208	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601208::surface	SDL_syswm.h	/^            EGLSurface surface;$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601208	typeref:typename:EGLSurface	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601208::window	SDL_syswm.h	/^            ANativeWindow *window;$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601208	typeref:typename:ANativeWindow *	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601308	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601308::display	SDL_syswm.h	/^            EGLNativeDisplayType display;$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601308	typeref:typename:EGLNativeDisplayType	access:public
SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601308::window	SDL_syswm.h	/^            EGLNativeWindowType window;$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601308	typeref:typename:EGLNativeWindowType	access:public
SDL_SysWMinfo::__anon33b43c60090a::android	SDL_syswm.h	/^        } android;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601208	access:public
SDL_SysWMinfo::__anon33b43c60090a::cocoa	SDL_syswm.h	/^        } cocoa;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600e08	access:public
SDL_SysWMinfo::__anon33b43c60090a::dfb	SDL_syswm.h	/^        } dfb;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600d08	access:public
SDL_SysWMinfo::__anon33b43c60090a::dummy	SDL_syswm.h	/^        Uint8 dummy[64];$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:typename:Uint8[64]	access:public
SDL_SysWMinfo::__anon33b43c60090a::mir	SDL_syswm.h	/^        } mir;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601108	access:public
SDL_SysWMinfo::__anon33b43c60090a::uikit	SDL_syswm.h	/^        } uikit;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08	access:public
SDL_SysWMinfo::__anon33b43c60090a::vivante	SDL_syswm.h	/^        } vivante;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601308	access:public
SDL_SysWMinfo::__anon33b43c60090a::win	SDL_syswm.h	/^        } win;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600a08	access:public
SDL_SysWMinfo::__anon33b43c60090a::winrt	SDL_syswm.h	/^        } winrt;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600b08	access:public
SDL_SysWMinfo::__anon33b43c60090a::wl	SDL_syswm.h	/^        } wl;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601008	access:public
SDL_SysWMinfo::__anon33b43c60090a::x11	SDL_syswm.h	/^        } x11;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600c08	access:public
SDL_SysWMinfo::info	SDL_syswm.h	/^    } info;$/;"	kind:m	struct:SDL_SysWMinfo	typeref:union:SDL_SysWMinfo::__anon33b43c60090a	access:public
SDL_SysWMinfo::subsystem	SDL_syswm.h	/^    SDL_SYSWM_TYPE subsystem;$/;"	kind:m	struct:SDL_SysWMinfo	typeref:typename:SDL_SYSWM_TYPE	access:public
SDL_SysWMinfo::version	SDL_syswm.h	/^    SDL_version version;$/;"	kind:m	struct:SDL_SysWMinfo	typeref:typename:SDL_version	access:public
SDL_SysWMmsg	SDL_events.h	/^typedef struct SDL_SysWMmsg SDL_SysWMmsg;$/;"	kind:t	typeref:struct:SDL_SysWMmsg
SDL_SysWMmsg	SDL_syswm.h	/^struct SDL_SysWMmsg$/;"	kind:s
SDL_SysWMmsg::__anon33b43c60020a	SDL_syswm.h	/^    {$/;"	kind:u	struct:SDL_SysWMmsg	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308	SDL_syswm.h	/^        struct {$/;"	kind:s	union:SDL_SysWMmsg::__anon33b43c60020a	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308::hwnd	SDL_syswm.h	/^            HWND hwnd;                  \/**< The window for the message *\/$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308	typeref:typename:HWND	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308::lParam	SDL_syswm.h	/^            LPARAM lParam;              \/**< LONG message parameter *\/$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308	typeref:typename:LPARAM	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308::msg	SDL_syswm.h	/^            UINT msg;                   \/**< The type of message *\/$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308	typeref:typename:UINT	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308::wParam	SDL_syswm.h	/^            WPARAM wParam;              \/**< WORD message parameter *\/$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308	typeref:typename:WPARAM	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600408	SDL_syswm.h	/^        struct {$/;"	kind:s	union:SDL_SysWMmsg::__anon33b43c60020a	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600408::event	SDL_syswm.h	/^            XEvent event;$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600408	typeref:typename:XEvent	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600508	SDL_syswm.h	/^        struct {$/;"	kind:s	union:SDL_SysWMmsg::__anon33b43c60020a	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600508::event	SDL_syswm.h	/^            DFBEvent event;$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600508	typeref:typename:DFBEvent	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600608	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMmsg::__anon33b43c60020a	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600608::dummy	SDL_syswm.h	/^            int dummy;$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600608	typeref:typename:int	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600708	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMmsg::__anon33b43c60020a	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600708::dummy	SDL_syswm.h	/^            int dummy;$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600708	typeref:typename:int	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600808	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMmsg::__anon33b43c60020a	access:public
SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600808::dummy	SDL_syswm.h	/^            int dummy;$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600808	typeref:typename:int	access:public
SDL_SysWMmsg::__anon33b43c60020a::cocoa	SDL_syswm.h	/^        } cocoa;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600608	access:public
SDL_SysWMmsg::__anon33b43c60020a::dfb	SDL_syswm.h	/^        } dfb;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600508	access:public
SDL_SysWMmsg::__anon33b43c60020a::dummy	SDL_syswm.h	/^        int dummy;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:typename:int	access:public
SDL_SysWMmsg::__anon33b43c60020a::uikit	SDL_syswm.h	/^        } uikit;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600708	access:public
SDL_SysWMmsg::__anon33b43c60020a::vivante	SDL_syswm.h	/^        } vivante;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600808	access:public
SDL_SysWMmsg::__anon33b43c60020a::win	SDL_syswm.h	/^        } win;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308	access:public
SDL_SysWMmsg::__anon33b43c60020a::x11	SDL_syswm.h	/^        } x11;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600408	access:public
SDL_SysWMmsg::msg	SDL_syswm.h	/^    } msg;$/;"	kind:m	struct:SDL_SysWMmsg	typeref:union:SDL_SysWMmsg::__anon33b43c60020a	access:public
SDL_SysWMmsg::subsystem	SDL_syswm.h	/^    SDL_SYSWM_TYPE subsystem;$/;"	kind:m	struct:SDL_SysWMmsg	typeref:typename:SDL_SYSWM_TYPE	access:public
SDL_SysWMmsg::version	SDL_syswm.h	/^    SDL_version version;$/;"	kind:m	struct:SDL_SysWMmsg	typeref:typename:SDL_version	access:public
SDL_SystemCursor	SDL_mouse.h	/^} SDL_SystemCursor;$/;"	kind:t	typeref:enum:__anon4ea517060103
SDL_TABLESIZE	SDL_stdinc.h	/^#define SDL_TABLESIZE(/;"	kind:d	signature:(table)
SDL_TEXTEDITING	SDL_events.h	/^    SDL_TEXTEDITING,            \/**< Keyboard text editing (composition) *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_TEXTEDITINGEVENT_TEXT_SIZE	SDL_events.h	/^#define SDL_TEXTEDITINGEVENT_TEXT_SIZE /;"	kind:d
SDL_TEXTINPUT	SDL_events.h	/^    SDL_TEXTINPUT,              \/**< Keyboard text input *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_TEXTINPUTEVENT_TEXT_SIZE	SDL_events.h	/^#define SDL_TEXTINPUTEVENT_TEXT_SIZE /;"	kind:d
SDL_TEXTUREACCESS_STATIC	SDL_render.h	/^    SDL_TEXTUREACCESS_STATIC,    \/**< Changes rarely, not lockable *\/$/;"	kind:e	enum:__anonad684edd0203	access:public
SDL_TEXTUREACCESS_STREAMING	SDL_render.h	/^    SDL_TEXTUREACCESS_STREAMING, \/**< Changes frequently, lockable *\/$/;"	kind:e	enum:__anonad684edd0203	access:public
SDL_TEXTUREACCESS_TARGET	SDL_render.h	/^    SDL_TEXTUREACCESS_TARGET     \/**< Texture can be used as a render target *\/$/;"	kind:e	enum:__anonad684edd0203	access:public
SDL_TEXTUREMODULATE_ALPHA	SDL_render.h	/^    SDL_TEXTUREMODULATE_ALPHA = 0x00000002     \/**< srcA = srcA * alpha *\/$/;"	kind:e	enum:__anonad684edd0303	access:public
SDL_TEXTUREMODULATE_COLOR	SDL_render.h	/^    SDL_TEXTUREMODULATE_COLOR = 0x00000001,    \/**< srcC = srcC * color *\/$/;"	kind:e	enum:__anonad684edd0303	access:public
SDL_TEXTUREMODULATE_NONE	SDL_render.h	/^    SDL_TEXTUREMODULATE_NONE = 0x00000000,     \/**< No modulation *\/$/;"	kind:e	enum:__anonad684edd0303	access:public
SDL_THREAD_PRIORITY_HIGH	SDL_thread.h	/^    SDL_THREAD_PRIORITY_HIGH,$/;"	kind:e	enum:__anon763efcd50103	access:public
SDL_THREAD_PRIORITY_LOW	SDL_thread.h	/^    SDL_THREAD_PRIORITY_LOW,$/;"	kind:e	enum:__anon763efcd50103	access:public
SDL_THREAD_PRIORITY_NORMAL	SDL_thread.h	/^    SDL_THREAD_PRIORITY_NORMAL,$/;"	kind:e	enum:__anon763efcd50103	access:public
SDL_THREAD_PRIORITY_TIME_CRITICAL	SDL_thread.h	/^    SDL_THREAD_PRIORITY_TIME_CRITICAL$/;"	kind:e	enum:__anon763efcd50103	access:public
SDL_THREAD_WINDOWS	SDL_config.h	/^#define SDL_THREAD_WINDOWS /;"	kind:d
SDL_TICKS_PASSED	SDL_timer.h	/^#define SDL_TICKS_PASSED(/;"	kind:d	signature:(A,B)
SDL_TIMER_WINDOWS	SDL_config.h	/^#define SDL_TIMER_WINDOWS /;"	kind:d
SDL_TLSCreate	SDL_thread.h	/^extern DECLSPEC SDL_TLSID SDLCALL SDL_TLSCreate(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_TLSID SDLCALL	signature:(void)
SDL_TLSGet	SDL_thread.h	/^extern DECLSPEC void * SDLCALL SDL_TLSGet(SDL_TLSID id);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_TLSID id)
SDL_TLSID	SDL_thread.h	/^typedef unsigned int SDL_TLSID;$/;"	kind:t	typeref:typename:unsigned int
SDL_TLSSet	SDL_thread.h	/^extern DECLSPEC int SDLCALL SDL_TLSSet(SDL_TLSID id, const void *value, void (SDLCALL *destructo/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_TLSID id,const void * value,void (SDLCALL * destructor)(void *))
SDL_TOUCH_MOUSEID	SDL_touch.h	/^#define SDL_TOUCH_MOUSEID /;"	kind:d
SDL_TRUE	SDL_stdinc.h	/^    SDL_TRUE = 1$/;"	kind:e	enum:__anon055f46e20103	access:public
SDL_TRUE	SDL_stdinc.h	/^#define SDL_TRUE /;"	kind:d
SDL_TTF_COMPILEDVERSION	SDL_ttf.h	/^#define SDL_TTF_COMPILEDVERSION /;"	kind:d
SDL_TTF_H_	SDL_ttf.h	/^#define SDL_TTF_H_$/;"	kind:d
SDL_TTF_MAJOR_VERSION	SDL_ttf.h	/^#define SDL_TTF_MAJOR_VERSION /;"	kind:d
SDL_TTF_MINOR_VERSION	SDL_ttf.h	/^#define SDL_TTF_MINOR_VERSION /;"	kind:d
SDL_TTF_PATCHLEVEL	SDL_ttf.h	/^#define SDL_TTF_PATCHLEVEL /;"	kind:d
SDL_TTF_VERSION	SDL_ttf.h	/^#define SDL_TTF_VERSION(/;"	kind:d	signature:(X)
SDL_TTF_VERSION_ATLEAST	SDL_ttf.h	/^#define SDL_TTF_VERSION_ATLEAST(/;"	kind:d	signature:(X,Y,Z)
SDL_TextEditingEvent	SDL_events.h	/^typedef struct SDL_TextEditingEvent$/;"	kind:s
SDL_TextEditingEvent	SDL_events.h	/^} SDL_TextEditingEvent;$/;"	kind:t	typeref:struct:SDL_TextEditingEvent
SDL_TextEditingEvent::length	SDL_events.h	/^    Sint32 length;                              \/**< The length of selected editing text *\/$/;"	kind:m	struct:SDL_TextEditingEvent	typeref:typename:Sint32	access:public
SDL_TextEditingEvent::start	SDL_events.h	/^    Sint32 start;                               \/**< The start cursor of selected editing text /;"	kind:m	struct:SDL_TextEditingEvent	typeref:typename:Sint32	access:public
SDL_TextEditingEvent::text	SDL_events.h	/^    char text[SDL_TEXTEDITINGEVENT_TEXT_SIZE];  \/**< The editing text *\/$/;"	kind:m	struct:SDL_TextEditingEvent	typeref:typename:char[]	access:public
SDL_TextEditingEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;                           \/**< In milliseconds, populated using SDL_GetTi/;"	kind:m	struct:SDL_TextEditingEvent	typeref:typename:Uint32	access:public
SDL_TextEditingEvent::type	SDL_events.h	/^    Uint32 type;                                \/**< ::SDL_TEXTEDITING *\/$/;"	kind:m	struct:SDL_TextEditingEvent	typeref:typename:Uint32	access:public
SDL_TextEditingEvent::windowID	SDL_events.h	/^    Uint32 windowID;                            \/**< The window with keyboard focus, if any *\/$/;"	kind:m	struct:SDL_TextEditingEvent	typeref:typename:Uint32	access:public
SDL_TextInputEvent	SDL_events.h	/^typedef struct SDL_TextInputEvent$/;"	kind:s
SDL_TextInputEvent	SDL_events.h	/^} SDL_TextInputEvent;$/;"	kind:t	typeref:struct:SDL_TextInputEvent
SDL_TextInputEvent::text	SDL_events.h	/^    char text[SDL_TEXTINPUTEVENT_TEXT_SIZE];  \/**< The input text *\/$/;"	kind:m	struct:SDL_TextInputEvent	typeref:typename:char[]	access:public
SDL_TextInputEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;                         \/**< In milliseconds, populated using SDL_GetTick/;"	kind:m	struct:SDL_TextInputEvent	typeref:typename:Uint32	access:public
SDL_TextInputEvent::type	SDL_events.h	/^    Uint32 type;                              \/**< ::SDL_TEXTINPUT *\/$/;"	kind:m	struct:SDL_TextInputEvent	typeref:typename:Uint32	access:public
SDL_TextInputEvent::windowID	SDL_events.h	/^    Uint32 windowID;                          \/**< The window with keyboard focus, if any *\/$/;"	kind:m	struct:SDL_TextInputEvent	typeref:typename:Uint32	access:public
SDL_Texture	SDL_render.h	/^typedef struct SDL_Texture SDL_Texture;$/;"	kind:t	typeref:struct:SDL_Texture
SDL_TextureAccess	SDL_render.h	/^} SDL_TextureAccess;$/;"	kind:t	typeref:enum:__anonad684edd0203
SDL_TextureModulate	SDL_render.h	/^} SDL_TextureModulate;$/;"	kind:t	typeref:enum:__anonad684edd0303
SDL_Thread	SDL_thread.h	/^typedef struct SDL_Thread SDL_Thread;$/;"	kind:t	typeref:struct:SDL_Thread
SDL_ThreadFunction	SDL_thread.h	/^typedef int (SDLCALL * SDL_ThreadFunction) (void *data);$/;"	kind:t	typeref:typename:int (SDLCALL *)(void * data)
SDL_ThreadID	SDL_thread.h	/^extern DECLSPEC SDL_threadID SDLCALL SDL_ThreadID(void);$/;"	kind:p	typeref:typename:DECLSPEC SDL_threadID SDLCALL	signature:(void)
SDL_ThreadPriority	SDL_thread.h	/^} SDL_ThreadPriority;$/;"	kind:t	typeref:enum:__anon763efcd50103
SDL_TimerCallback	SDL_timer.h	/^typedef Uint32 (SDLCALL * SDL_TimerCallback) (Uint32 interval, void *param);$/;"	kind:t	typeref:typename:Uint32 (SDLCALL *)(Uint32 interval,void * param)
SDL_TimerID	SDL_timer.h	/^typedef int SDL_TimerID;$/;"	kind:t	typeref:typename:int
SDL_TouchFingerEvent	SDL_events.h	/^typedef struct SDL_TouchFingerEvent$/;"	kind:s
SDL_TouchFingerEvent	SDL_events.h	/^} SDL_TouchFingerEvent;$/;"	kind:t	typeref:struct:SDL_TouchFingerEvent
SDL_TouchFingerEvent::dx	SDL_events.h	/^    float dx;           \/**< Normalized in the range -1...1 *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
SDL_TouchFingerEvent::dy	SDL_events.h	/^    float dy;           \/**< Normalized in the range -1...1 *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
SDL_TouchFingerEvent::fingerId	SDL_events.h	/^    SDL_FingerID fingerId;$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:SDL_FingerID	access:public
SDL_TouchFingerEvent::pressure	SDL_events.h	/^    float pressure;     \/**< Normalized in the range 0...1 *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
SDL_TouchFingerEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:Uint32	access:public
SDL_TouchFingerEvent::touchId	SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:SDL_TouchID	access:public
SDL_TouchFingerEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:Uint32	access:public
SDL_TouchFingerEvent::x	SDL_events.h	/^    float x;            \/**< Normalized in the range 0...1 *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
SDL_TouchFingerEvent::y	SDL_events.h	/^    float y;            \/**< Normalized in the range 0...1 *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
SDL_TouchID	SDL_touch.h	/^typedef Sint64 SDL_TouchID;$/;"	kind:t	typeref:typename:Sint64
SDL_TriggerBreakpoint	SDL_assert.h	/^    #define SDL_TriggerBreakpoint(/;"	kind:d	signature:()
SDL_TryLockMutex	SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_TryLockMutex(SDL_mutex * mutex);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_mutex * mutex)
SDL_UNSUPPORTED	SDL_error.h	/^    SDL_UNSUPPORTED,$/;"	kind:e	enum:__anoned9a67270103	access:public
SDL_UNUSED	begin_code.h	/^#    define SDL_UNUSED /;"	kind:d
SDL_UNUSED	begin_code.h	/^#    define SDL_UNUSED$/;"	kind:d
SDL_USEREVENT	SDL_events.h	/^    SDL_USEREVENT    = 0x8000,$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_UnionRect	SDL_rect.h	/^extern DECLSPEC void SDLCALL SDL_UnionRect(const SDL_Rect * A,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(const SDL_Rect * A,const SDL_Rect * B,SDL_Rect * result)
SDL_UnloadObject	SDL_loadso.h	/^extern DECLSPEC void SDLCALL SDL_UnloadObject(void *handle);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void * handle)
SDL_UnlockAudio	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_UnlockAudio(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_UnlockAudioDevice	SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_UnlockAudioDevice(SDL_AudioDeviceID dev);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_AudioDeviceID dev)
SDL_UnlockJoysticks	SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_UnlockJoysticks(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_UnlockMutex	SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_UnlockMutex(SDL_mutex * mutex);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_mutex * mutex)
SDL_UnlockSurface	SDL_surface.h	/^extern DECLSPEC void SDLCALL SDL_UnlockSurface(SDL_Surface * surface);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Surface * surface)
SDL_UnlockTexture	SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_UnlockTexture(SDL_Texture * texture);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Texture * texture)
SDL_UnregisterApp	SDL_main.h	/^extern DECLSPEC void SDLCALL SDL_UnregisterApp(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_Unsupported	SDL_error.h	/^#define SDL_Unsupported(/;"	kind:d	signature:()
SDL_UpdateTexture	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_UpdateTexture(SDL_Texture * texture,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,const SDL_Rect * rect,const void * pixels,int pitch)
SDL_UpdateWindowSurface	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_UpdateWindowSurface(SDL_Window * window);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window)
SDL_UpdateWindowSurfaceRects	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_UpdateWindowSurfaceRects(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,const SDL_Rect * rects,int numrects)
SDL_UpdateYUVTexture	SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_UpdateYUVTexture(SDL_Texture * texture,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Texture * texture,const SDL_Rect * rect,const Uint8 * Yplane,int Ypitch,const Uint8 * Uplane,int Upitch,const Uint8 * Vplane,int Vpitch)
SDL_UpperBlit	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_UpperBlit$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * src,const SDL_Rect * srcrect,SDL_Surface * dst,SDL_Rect * dstrect)
SDL_UpperBlitScaled	SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_UpperBlitScaled$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Surface * src,const SDL_Rect * srcrect,SDL_Surface * dst,SDL_Rect * dstrect)
SDL_UserEvent	SDL_events.h	/^typedef struct SDL_UserEvent$/;"	kind:s
SDL_UserEvent	SDL_events.h	/^} SDL_UserEvent;$/;"	kind:t	typeref:struct:SDL_UserEvent
SDL_UserEvent::code	SDL_events.h	/^    Sint32 code;        \/**< User defined event code *\/$/;"	kind:m	struct:SDL_UserEvent	typeref:typename:Sint32	access:public
SDL_UserEvent::data1	SDL_events.h	/^    void *data1;        \/**< User defined data pointer *\/$/;"	kind:m	struct:SDL_UserEvent	typeref:typename:void *	access:public
SDL_UserEvent::data2	SDL_events.h	/^    void *data2;        \/**< User defined data pointer *\/$/;"	kind:m	struct:SDL_UserEvent	typeref:typename:void *	access:public
SDL_UserEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_UserEvent	typeref:typename:Uint32	access:public
SDL_UserEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_USEREVENT through ::SDL_LASTEVENT-1 *\/$/;"	kind:m	struct:SDL_UserEvent	typeref:typename:Uint32	access:public
SDL_UserEvent::windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The associated window if any *\/$/;"	kind:m	struct:SDL_UserEvent	typeref:typename:Uint32	access:public
SDL_VERSION	SDL_version.h	/^#define SDL_VERSION(/;"	kind:d	signature:(x)
SDL_VERSIONNUM	SDL_version.h	/^#define SDL_VERSIONNUM(/;"	kind:d	signature:(X,Y,Z)
SDL_VERSION_ATLEAST	SDL_version.h	/^#define SDL_VERSION_ATLEAST(/;"	kind:d	signature:(X,Y,Z)
SDL_VIDEO_DRIVER_DUMMY	SDL_config.h	/^#define SDL_VIDEO_DRIVER_DUMMY /;"	kind:d
SDL_VIDEO_DRIVER_WINDOWS	SDL_config.h	/^#define SDL_VIDEO_DRIVER_WINDOWS /;"	kind:d
SDL_VIDEO_OPENGL	SDL_config.h	/^#define SDL_VIDEO_OPENGL /;"	kind:d
SDL_VIDEO_OPENGL_EGL	SDL_config.h	/^#define SDL_VIDEO_OPENGL_EGL /;"	kind:d
SDL_VIDEO_OPENGL_ES2	SDL_config.h	/^#define SDL_VIDEO_OPENGL_ES2 /;"	kind:d
SDL_VIDEO_OPENGL_WGL	SDL_config.h	/^#define SDL_VIDEO_OPENGL_WGL /;"	kind:d
SDL_VIDEO_RENDER_D3D	SDL_config.h	/^#define SDL_VIDEO_RENDER_D3D /;"	kind:d
SDL_VIDEO_RENDER_D3D11	SDL_config.h	/^#define SDL_VIDEO_RENDER_D3D11 /;"	kind:d
SDL_VIDEO_RENDER_OGL	SDL_config.h	/^#define SDL_VIDEO_RENDER_OGL /;"	kind:d
SDL_VIDEO_RENDER_OGL_ES2	SDL_config.h	/^#define SDL_VIDEO_RENDER_OGL_ES2 /;"	kind:d
SDL_VIDEO_VULKAN	SDL_config.h	/^#define SDL_VIDEO_VULKAN /;"	kind:d
SDL_VideoInit	SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_VideoInit(const char *driver_name);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * driver_name)
SDL_VideoQuit	SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_VideoQuit(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_Vulkan_CreateSurface	SDL_vulkan.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_Vulkan_CreateSurface($/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Window * window,VkInstance instance,VkSurfaceKHR * surface)
SDL_Vulkan_GetDrawableSize	SDL_vulkan.h	/^extern DECLSPEC void SDLCALL SDL_Vulkan_GetDrawableSize(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int * w,int * h)
SDL_Vulkan_GetInstanceExtensions	SDL_vulkan.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_Vulkan_GetInstanceExtensions($/;"	kind:p	typeref:typename:DECLSPEC SDL_bool SDLCALL	signature:(SDL_Window * window,unsigned int * pCount,const char ** pNames)
SDL_Vulkan_GetVkGetInstanceProcAddr	SDL_vulkan.h	/^extern DECLSPEC void *SDLCALL SDL_Vulkan_GetVkGetInstanceProcAddr(void);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void)
SDL_Vulkan_LoadLibrary	SDL_vulkan.h	/^extern DECLSPEC int SDLCALL SDL_Vulkan_LoadLibrary(const char *path);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * path)
SDL_Vulkan_UnloadLibrary	SDL_vulkan.h	/^extern DECLSPEC void SDLCALL SDL_Vulkan_UnloadLibrary(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
SDL_WINDOWEVENT	SDL_events.h	/^    SDL_WINDOWEVENT    = 0x200, \/**< Window state change *\/$/;"	kind:e	enum:__anonb66d4d920103	access:public
SDL_WINDOWEVENT_CLOSE	SDL_video.h	/^    SDL_WINDOWEVENT_CLOSE,          \/**< The window manager requests that the window be closed /;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_ENTER	SDL_video.h	/^    SDL_WINDOWEVENT_ENTER,          \/**< Window has gained mouse focus *\/$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_EXPOSED	SDL_video.h	/^    SDL_WINDOWEVENT_EXPOSED,        \/**< Window has been exposed and should be$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_FOCUS_GAINED	SDL_video.h	/^    SDL_WINDOWEVENT_FOCUS_GAINED,   \/**< Window has gained keyboard focus *\/$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_FOCUS_LOST	SDL_video.h	/^    SDL_WINDOWEVENT_FOCUS_LOST,     \/**< Window has lost keyboard focus *\/$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_HIDDEN	SDL_video.h	/^    SDL_WINDOWEVENT_HIDDEN,         \/**< Window has been hidden *\/$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_HIT_TEST	SDL_video.h	/^    SDL_WINDOWEVENT_HIT_TEST        \/**< Window had a hit test that wasn't SDL_HITTEST_NORMAL. /;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_LEAVE	SDL_video.h	/^    SDL_WINDOWEVENT_LEAVE,          \/**< Window has lost mouse focus *\/$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_MAXIMIZED	SDL_video.h	/^    SDL_WINDOWEVENT_MAXIMIZED,      \/**< Window has been maximized *\/$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_MINIMIZED	SDL_video.h	/^    SDL_WINDOWEVENT_MINIMIZED,      \/**< Window has been minimized *\/$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_MOVED	SDL_video.h	/^    SDL_WINDOWEVENT_MOVED,          \/**< Window has been moved to data1, data2$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_NONE	SDL_video.h	/^    SDL_WINDOWEVENT_NONE,           \/**< Never used *\/$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_RESIZED	SDL_video.h	/^    SDL_WINDOWEVENT_RESIZED,        \/**< Window has been resized to data1xdata2 *\/$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_RESTORED	SDL_video.h	/^    SDL_WINDOWEVENT_RESTORED,       \/**< Window has been restored to normal size$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_SHOWN	SDL_video.h	/^    SDL_WINDOWEVENT_SHOWN,          \/**< Window has been shown *\/$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_SIZE_CHANGED	SDL_video.h	/^    SDL_WINDOWEVENT_SIZE_CHANGED,   \/**< The window size has changed, either as$/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWEVENT_TAKE_FOCUS	SDL_video.h	/^    SDL_WINDOWEVENT_TAKE_FOCUS,     \/**< Window is being offered a focus (should SetWindowInput/;"	kind:e	enum:__anonf43722b40303	access:public
SDL_WINDOWPOS_CENTERED	SDL_video.h	/^#define SDL_WINDOWPOS_CENTERED /;"	kind:d
SDL_WINDOWPOS_CENTERED_DISPLAY	SDL_video.h	/^#define SDL_WINDOWPOS_CENTERED_DISPLAY(/;"	kind:d	signature:(X)
SDL_WINDOWPOS_CENTERED_MASK	SDL_video.h	/^#define SDL_WINDOWPOS_CENTERED_MASK /;"	kind:d
SDL_WINDOWPOS_ISCENTERED	SDL_video.h	/^#define SDL_WINDOWPOS_ISCENTERED(/;"	kind:d	signature:(X)
SDL_WINDOWPOS_ISUNDEFINED	SDL_video.h	/^#define SDL_WINDOWPOS_ISUNDEFINED(/;"	kind:d	signature:(X)
SDL_WINDOWPOS_UNDEFINED	SDL_video.h	/^#define SDL_WINDOWPOS_UNDEFINED /;"	kind:d
SDL_WINDOWPOS_UNDEFINED_DISPLAY	SDL_video.h	/^#define SDL_WINDOWPOS_UNDEFINED_DISPLAY(/;"	kind:d	signature:(X)
SDL_WINDOWPOS_UNDEFINED_MASK	SDL_video.h	/^#define SDL_WINDOWPOS_UNDEFINED_MASK /;"	kind:d
SDL_WINDOW_ALLOW_HIGHDPI	SDL_video.h	/^    SDL_WINDOW_ALLOW_HIGHDPI = 0x00002000,      \/**< window should be created in high-DPI mode /;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_ALWAYS_ON_TOP	SDL_video.h	/^    SDL_WINDOW_ALWAYS_ON_TOP = 0x00008000,      \/**< window should always be above others *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_BORDERLESS	SDL_video.h	/^    SDL_WINDOW_BORDERLESS = 0x00000010,         \/**< no window decoration *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_FOREIGN	SDL_video.h	/^    SDL_WINDOW_FOREIGN = 0x00000800,            \/**< window not created by SDL *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_FULLSCREEN	SDL_video.h	/^    SDL_WINDOW_FULLSCREEN = 0x00000001,         \/**< fullscreen window *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_FULLSCREEN_DESKTOP	SDL_video.h	/^    SDL_WINDOW_FULLSCREEN_DESKTOP = ( SDL_WINDOW_FULLSCREEN | 0x00001000 ),$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_HIDDEN	SDL_video.h	/^    SDL_WINDOW_HIDDEN = 0x00000008,             \/**< window is not visible *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_INPUT_FOCUS	SDL_video.h	/^    SDL_WINDOW_INPUT_FOCUS = 0x00000200,        \/**< window has input focus *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_INPUT_GRABBED	SDL_video.h	/^    SDL_WINDOW_INPUT_GRABBED = 0x00000100,      \/**< window has grabbed input focus *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_LACKS_SHAPE	SDL_shape.h	/^#define SDL_WINDOW_LACKS_SHAPE /;"	kind:d
SDL_WINDOW_MAXIMIZED	SDL_video.h	/^    SDL_WINDOW_MAXIMIZED = 0x00000080,          \/**< window is maximized *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_MINIMIZED	SDL_video.h	/^    SDL_WINDOW_MINIMIZED = 0x00000040,          \/**< window is minimized *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_MOUSE_CAPTURE	SDL_video.h	/^    SDL_WINDOW_MOUSE_CAPTURE = 0x00004000,      \/**< window has mouse captured (unrelated to IN/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_MOUSE_FOCUS	SDL_video.h	/^    SDL_WINDOW_MOUSE_FOCUS = 0x00000400,        \/**< window has mouse focus *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_OPENGL	SDL_video.h	/^    SDL_WINDOW_OPENGL = 0x00000002,             \/**< window usable with OpenGL context *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_POPUP_MENU	SDL_video.h	/^    SDL_WINDOW_POPUP_MENU    = 0x00080000,      \/**< window should be treated as a popup menu */;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_RESIZABLE	SDL_video.h	/^    SDL_WINDOW_RESIZABLE = 0x00000020,          \/**< window can be resized *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_SHOWN	SDL_video.h	/^    SDL_WINDOW_SHOWN = 0x00000004,              \/**< window is visible *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_SKIP_TASKBAR	SDL_video.h	/^    SDL_WINDOW_SKIP_TASKBAR  = 0x00010000,      \/**< window should not be added to the taskbar /;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_TOOLTIP	SDL_video.h	/^    SDL_WINDOW_TOOLTIP       = 0x00040000,      \/**< window should be treated as a tooltip *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_UTILITY	SDL_video.h	/^    SDL_WINDOW_UTILITY       = 0x00020000,      \/**< window should be treated as a utility wind/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINDOW_VULKAN	SDL_video.h	/^    SDL_WINDOW_VULKAN        = 0x10000000       \/**< window usable for Vulkan surface *\/$/;"	kind:e	enum:__anonf43722b40203	access:public
SDL_WINRT_DEVICEFAMILY_DESKTOP	SDL_system.h	/^    SDL_WINRT_DEVICEFAMILY_DESKTOP,$/;"	kind:e	enum:__anonaa0220c20203	access:public
SDL_WINRT_DEVICEFAMILY_MOBILE	SDL_system.h	/^    SDL_WINRT_DEVICEFAMILY_MOBILE,$/;"	kind:e	enum:__anonaa0220c20203	access:public
SDL_WINRT_DEVICEFAMILY_UNKNOWN	SDL_system.h	/^    SDL_WINRT_DEVICEFAMILY_UNKNOWN,$/;"	kind:e	enum:__anonaa0220c20203	access:public
SDL_WINRT_DEVICEFAMILY_XBOX	SDL_system.h	/^    SDL_WINRT_DEVICEFAMILY_XBOX,$/;"	kind:e	enum:__anonaa0220c20203	access:public
SDL_WINRT_PATH_INSTALLED_LOCATION	SDL_system.h	/^    SDL_WINRT_PATH_INSTALLED_LOCATION,$/;"	kind:e	enum:__anonaa0220c20103	access:public
SDL_WINRT_PATH_LOCAL_FOLDER	SDL_system.h	/^    SDL_WINRT_PATH_LOCAL_FOLDER,$/;"	kind:e	enum:__anonaa0220c20103	access:public
SDL_WINRT_PATH_ROAMING_FOLDER	SDL_system.h	/^    SDL_WINRT_PATH_ROAMING_FOLDER,$/;"	kind:e	enum:__anonaa0220c20103	access:public
SDL_WINRT_PATH_TEMP_FOLDER	SDL_system.h	/^    SDL_WINRT_PATH_TEMP_FOLDER$/;"	kind:e	enum:__anonaa0220c20103	access:public
SDL_WaitEvent	SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_WaitEvent(SDL_Event * event);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * event)
SDL_WaitEventTimeout	SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_WaitEventTimeout(SDL_Event * event,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Event * event,int timeout)
SDL_WaitThread	SDL_thread.h	/^extern DECLSPEC void SDLCALL SDL_WaitThread(SDL_Thread * thread, int *status);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Thread * thread,int * status)
SDL_WarpMouseGlobal	SDL_mouse.h	/^extern DECLSPEC int SDLCALL SDL_WarpMouseGlobal(int x, int y);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x,int y)
SDL_WarpMouseInWindow	SDL_mouse.h	/^extern DECLSPEC void SDLCALL SDL_WarpMouseInWindow(SDL_Window * window,$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_Window * window,int x,int y)
SDL_WasInit	SDL.h	/^extern DECLSPEC Uint32 SDLCALL SDL_WasInit(Uint32 flags);$/;"	kind:p	typeref:typename:DECLSPEC Uint32 SDLCALL	signature:(Uint32 flags)
SDL_WinRTGetDeviceFamily	SDL_system.h	/^extern DECLSPEC SDL_WinRT_DeviceFamily SDLCALL SDL_WinRTGetDeviceFamily();$/;"	kind:p	typeref:typename:DECLSPEC SDL_WinRT_DeviceFamily SDLCALL	signature:()
SDL_WinRTGetFSPathUNICODE	SDL_system.h	/^extern DECLSPEC const wchar_t * SDLCALL SDL_WinRTGetFSPathUNICODE(SDL_WinRT_Path pathType);$/;"	kind:p	typeref:typename:DECLSPEC const wchar_t * SDLCALL	signature:(SDL_WinRT_Path pathType)
SDL_WinRTGetFSPathUTF8	SDL_system.h	/^extern DECLSPEC const char * SDLCALL SDL_WinRTGetFSPathUTF8(SDL_WinRT_Path pathType);$/;"	kind:p	typeref:typename:DECLSPEC const char * SDLCALL	signature:(SDL_WinRT_Path pathType)
SDL_WinRTRunApp	SDL_main.h	/^extern DECLSPEC int SDLCALL SDL_WinRTRunApp(int (*mainFunction)(int, char **), void * reserved);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int (* mainFunction)(int,char **),void * reserved)
SDL_WinRT_DeviceFamily	SDL_system.h	/^} SDL_WinRT_DeviceFamily;$/;"	kind:t	typeref:enum:__anonaa0220c20203
SDL_WinRT_Path	SDL_system.h	/^} SDL_WinRT_Path;$/;"	kind:t	typeref:enum:__anonaa0220c20103
SDL_Window	SDL_video.h	/^typedef struct SDL_Window SDL_Window;$/;"	kind:t	typeref:struct:SDL_Window
SDL_WindowEvent	SDL_events.h	/^typedef struct SDL_WindowEvent$/;"	kind:s
SDL_WindowEvent	SDL_events.h	/^} SDL_WindowEvent;$/;"	kind:t	typeref:struct:SDL_WindowEvent
SDL_WindowEvent::data1	SDL_events.h	/^    Sint32 data1;       \/**< event dependent data *\/$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Sint32	access:public
SDL_WindowEvent::data2	SDL_events.h	/^    Sint32 data2;       \/**< event dependent data *\/$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Sint32	access:public
SDL_WindowEvent::event	SDL_events.h	/^    Uint8 event;        \/**< ::SDL_WindowEventID *\/$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
SDL_WindowEvent::padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
SDL_WindowEvent::padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
SDL_WindowEvent::padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
SDL_WindowEvent::timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint32	access:public
SDL_WindowEvent::type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_WINDOWEVENT *\/$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint32	access:public
SDL_WindowEvent::windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The associated window *\/$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint32	access:public
SDL_WindowEventID	SDL_video.h	/^} SDL_WindowEventID;$/;"	kind:t	typeref:enum:__anonf43722b40303
SDL_WindowFlags	SDL_video.h	/^} SDL_WindowFlags;$/;"	kind:t	typeref:enum:__anonf43722b40203
SDL_WindowShapeMode	SDL_shape.h	/^typedef struct SDL_WindowShapeMode {$/;"	kind:s
SDL_WindowShapeMode	SDL_shape.h	/^} SDL_WindowShapeMode;$/;"	kind:t	typeref:struct:SDL_WindowShapeMode
SDL_WindowShapeMode::mode	SDL_shape.h	/^    WindowShapeMode mode;$/;"	kind:m	struct:SDL_WindowShapeMode	typeref:typename:WindowShapeMode	access:public
SDL_WindowShapeMode::parameters	SDL_shape.h	/^    SDL_WindowShapeParams parameters;$/;"	kind:m	struct:SDL_WindowShapeMode	typeref:typename:SDL_WindowShapeParams	access:public
SDL_WindowShapeParams	SDL_shape.h	/^} SDL_WindowShapeParams;$/;"	kind:t	typeref:union:__anon0ac2d7ee020a
SDL_WindowsMessageHook	SDL_system.h	/^typedef void (SDLCALL * SDL_WindowsMessageHook)(void *userdata, void *hWnd, unsigned int message/;"	kind:t	typeref:typename:void (SDLCALL *)(void * userdata,void * hWnd,unsigned int message,Uint64 wParam,Sint64 lParam)
SDL_WriteBE16	SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteBE16(SDL_RWops * dst, Uint16 value);$/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint16 value)
SDL_WriteBE32	SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteBE32(SDL_RWops * dst, Uint32 value);$/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint32 value)
SDL_WriteBE64	SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteBE64(SDL_RWops * dst, Uint64 value);$/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint64 value)
SDL_WriteLE16	SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteLE16(SDL_RWops * dst, Uint16 value);$/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint16 value)
SDL_WriteLE32	SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteLE32(SDL_RWops * dst, Uint32 value);$/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint32 value)
SDL_WriteLE64	SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteLE64(SDL_RWops * dst, Uint64 value);$/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint64 value)
SDL_WriteU8	SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteU8(SDL_RWops * dst, Uint8 value);$/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_RWops * dst,Uint8 value)
SDL_YUV_CONVERSION_AUTOMATIC	SDL_surface.h	/^    SDL_YUV_CONVERSION_AUTOMATIC    \/**< BT.601 for SD content, BT.709 for HD content *\/$/;"	kind:e	enum:__anoncb4f75060103	access:public
SDL_YUV_CONVERSION_BT601	SDL_surface.h	/^    SDL_YUV_CONVERSION_BT601,       \/**< BT.601 (the default) *\/$/;"	kind:e	enum:__anoncb4f75060103	access:public
SDL_YUV_CONVERSION_BT709	SDL_surface.h	/^    SDL_YUV_CONVERSION_BT709,       \/**< BT.709 *\/$/;"	kind:e	enum:__anoncb4f75060103	access:public
SDL_YUV_CONVERSION_JPEG	SDL_surface.h	/^    SDL_YUV_CONVERSION_JPEG,        \/**< Full range JPEG *\/$/;"	kind:e	enum:__anoncb4f75060103	access:public
SDL_YUV_CONVERSION_MODE	SDL_surface.h	/^} SDL_YUV_CONVERSION_MODE;$/;"	kind:t	typeref:enum:__anoncb4f75060103
SDL_abs	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_abs(int x);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x)
SDL_acos	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_acos(double x);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_acosf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_acosf(float x);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_arraysize	SDL_stdinc.h	/^#define SDL_arraysize(/;"	kind:d	signature:(array)
SDL_asin	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_asin(double x);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_asinf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_asinf(float x);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_assert	SDL_assert.h	/^#   define SDL_assert(/;"	kind:d	signature:(condition)
SDL_assert_always	SDL_assert.h	/^#define SDL_assert_always(/;"	kind:d	signature:(condition)
SDL_assert_data	SDL_assert.h	/^#define SDL_assert_data /;"	kind:d
SDL_assert_h_	SDL_assert.h	/^#define SDL_assert_h_$/;"	kind:d
SDL_assert_paranoid	SDL_assert.h	/^#   define SDL_assert_paranoid(/;"	kind:d	signature:(condition)
SDL_assert_release	SDL_assert.h	/^#   define SDL_assert_release(/;"	kind:d	signature:(condition)
SDL_assert_state	SDL_assert.h	/^#define SDL_assert_state /;"	kind:d
SDL_atan	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_atan(double x);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_atan2	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_atan2(double x, double y);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x,double y)
SDL_atan2f	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_atan2f(float x, float y);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x,float y)
SDL_atanf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_atanf(float x);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_atof	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_atof(const char *str);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(const char * str)
SDL_atoi	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_atoi(const char *str);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str)
SDL_atomic_h_	SDL_atomic.h	/^#define SDL_atomic_h_$/;"	kind:d
SDL_atomic_t	SDL_atomic.h	/^typedef struct { int value; } SDL_atomic_t;$/;"	kind:t	typeref:struct:__anon82acb21a0108
SDL_audio_h_	SDL_audio.h	/^#define SDL_audio_h_$/;"	kind:d
SDL_bits_h_	SDL_bits.h	/^#define SDL_bits_h_$/;"	kind:d
SDL_blendmode_h_	SDL_blendmode.h	/^#define SDL_blendmode_h_$/;"	kind:d
SDL_blit	SDL_surface.h	/^typedef int (SDLCALL *SDL_blit) (struct SDL_Surface * src, SDL_Rect * srcrect,$/;"	kind:t	typeref:typename:int (SDLCALL *)(struct SDL_Surface * src,SDL_Rect * srcrect,struct SDL_Surface * dst,SDL_Rect * dstrect)
SDL_bool	SDL_stdinc.h	/^typedef int SDL_bool;$/;"	kind:t	typeref:typename:int
SDL_bool	SDL_stdinc.h	/^} SDL_bool;$/;"	kind:t	typeref:enum:__anon055f46e20103
SDL_calloc	SDL_stdinc.h	/^#define SDL_calloc /;"	kind:d
SDL_calloc	SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_calloc(size_t nmemb, size_t size);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(size_t nmemb,size_t size)
SDL_calloc_func	SDL_stdinc.h	/^typedef void *(SDLCALL *SDL_calloc_func)(size_t nmemb, size_t size);$/;"	kind:t	typeref:typename:void * (SDLCALL *)(size_t nmemb,size_t size)
SDL_ceil	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_ceil(double x);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_ceilf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_ceilf(float x);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_clipboard_h_	SDL_clipboard.h	/^#define SDL_clipboard_h_$/;"	kind:d
SDL_cond	SDL_mutex.h	/^typedef struct SDL_cond SDL_cond;$/;"	kind:t	typeref:struct:SDL_cond
SDL_config_h_	SDL_config.h	/^#define SDL_config_h_$/;"	kind:d
SDL_config_windows_h_	SDL_config.h	/^#define SDL_config_windows_h_$/;"	kind:d
SDL_const_cast	SDL_stdinc.h	/^#define SDL_const_cast(/;"	kind:d	signature:(type,expression)
SDL_copysign	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_copysign(double x, double y);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x,double y)
SDL_copysignf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_copysignf(float x, float y);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x,float y)
SDL_cos	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_cos(double x);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_cosf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_cosf(float x);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_cpuinfo_h_	SDL_cpuinfo.h	/^#define SDL_cpuinfo_h_$/;"	kind:d
SDL_disabled_assert	SDL_assert.h	/^#define SDL_disabled_assert(/;"	kind:d	signature:(condition)
SDL_enabled_assert	SDL_assert.h	/^#define SDL_enabled_assert(/;"	kind:d	signature:(condition)
SDL_endian_h_	SDL_endian.h	/^#define SDL_endian_h_$/;"	kind:d
SDL_error_h_	SDL_error.h	/^#define SDL_error_h_$/;"	kind:d
SDL_errorcode	SDL_error.h	/^} SDL_errorcode;$/;"	kind:t	typeref:enum:__anoned9a67270103
SDL_eventaction	SDL_events.h	/^} SDL_eventaction;$/;"	kind:t	typeref:enum:__anonb66d4d920203
SDL_events_h_	SDL_events.h	/^#define SDL_events_h_$/;"	kind:d
SDL_exp	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_exp(double x);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_expf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_expf(float x);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_fabs	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_fabs(double x);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_fabsf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_fabsf(float x);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_filesystem_h_	SDL_filesystem.h	/^#define SDL_filesystem_h_$/;"	kind:d
SDL_floor	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_floor(double x);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_floorf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_floorf(float x);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_fmod	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_fmod(double x, double y);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x,double y)
SDL_fmodf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_fmodf(float x, float y);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x,float y)
SDL_free	SDL_stdinc.h	/^#define SDL_free /;"	kind:d
SDL_free	SDL_stdinc.h	/^extern DECLSPEC void SDLCALL SDL_free(void *mem);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void * mem)
SDL_free_func	SDL_stdinc.h	/^typedef void (SDLCALL *SDL_free_func)(void *mem);$/;"	kind:t	typeref:typename:void (SDLCALL *)(void * mem)
SDL_gamecontroller_h_	SDL_gamecontroller.h	/^#define SDL_gamecontroller_h_$/;"	kind:d
SDL_gesture_h_	SDL_gesture.h	/^#define SDL_gesture_h_$/;"	kind:d
SDL_getenv	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_getenv(const char *name);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * name)
SDL_h_	SDL.h	/^#define SDL_h_$/;"	kind:d
SDL_haptic_h_	SDL_haptic.h	/^#define SDL_haptic_h_$/;"	kind:d
SDL_hints_h_	SDL_hints.h	/^#define SDL_hints_h_$/;"	kind:d
SDL_iOSSetAnimationCallback	SDL_system.h	/^#define SDL_iOSSetAnimationCallback(/;"	kind:d	signature:(window,interval,callback,callbackParam)
SDL_iOSSetEventPump	SDL_system.h	/^#define SDL_iOSSetEventPump(/;"	kind:d	signature:(enabled)
SDL_iPhoneSetAnimationCallback	SDL_system.h	/^extern DECLSPEC int SDLCALL SDL_iPhoneSetAnimationCallback(SDL_Window * window, int interval, vo/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_Window * window,int interval,void (* callback)(void *),void * callbackParam)
SDL_iPhoneSetEventPump	SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_iPhoneSetEventPump(SDL_bool enabled);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(SDL_bool enabled)
SDL_iconv	SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_iconv(SDL_iconv_t cd, const char **inbuf,$/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_iconv_t cd,const char ** inbuf,size_t * inbytesleft,char ** outbuf,size_t * outbytesleft)
SDL_iconv_close	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_iconv_close(SDL_iconv_t cd);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_iconv_t cd)
SDL_iconv_open	SDL_stdinc.h	/^extern DECLSPEC SDL_iconv_t SDLCALL SDL_iconv_open(const char *tocode,$/;"	kind:p	typeref:typename:DECLSPEC SDL_iconv_t SDLCALL	signature:(const char * tocode,const char * fromcode)
SDL_iconv_string	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_iconv_string(const char *tocode,$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * tocode,const char * fromcode,const char * inbuf,size_t inbytesleft)
SDL_iconv_t	SDL_stdinc.h	/^typedef struct _SDL_iconv_t *SDL_iconv_t;$/;"	kind:t	typeref:struct:_SDL_iconv_t *
SDL_iconv_utf8_locale	SDL_stdinc.h	/^#define SDL_iconv_utf8_locale(/;"	kind:d	signature:(S)
SDL_iconv_utf8_ucs2	SDL_stdinc.h	/^#define SDL_iconv_utf8_ucs2(/;"	kind:d	signature:(S)
SDL_iconv_utf8_ucs4	SDL_stdinc.h	/^#define SDL_iconv_utf8_ucs4(/;"	kind:d	signature:(S)
SDL_isdigit	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_isdigit(int x);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x)
SDL_isspace	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_isspace(int x);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x)
SDL_itoa	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_itoa(int value, char *str, int radix);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(int value,char * str,int radix)
SDL_joystick_h_	SDL_joystick.h	/^#define SDL_joystick_h_$/;"	kind:d
SDL_keyboard_h_	SDL_keyboard.h	/^#define SDL_keyboard_h_$/;"	kind:d
SDL_keycode_h_	SDL_keycode.h	/^#define SDL_keycode_h_$/;"	kind:d
SDL_lltoa	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_lltoa(Sint64 value, char *str, int radix);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(Sint64 value,char * str,int radix)
SDL_loadso_h_	SDL_loadso.h	/^#define SDL_loadso_h_$/;"	kind:d
SDL_log	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_log(double x);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_log10	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_log10(double x);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_log10f	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_log10f(float x);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_log_h_	SDL_log.h	/^#define SDL_log_h_$/;"	kind:d
SDL_logf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_logf(float x);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_ltoa	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_ltoa(long value, char *str, int radix);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(long value,char * str,int radix)
SDL_main	SDL_main.h	/^extern C_LINKAGE SDLMAIN_DECLSPEC int SDL_main(int argc, char *argv[]);$/;"	kind:p	typeref:typename:C_LINKAGE SDLMAIN_DECLSPEC int	signature:(int argc,char * argv[])
SDL_main_h_	SDL_main.h	/^#define SDL_main_h_$/;"	kind:d
SDL_malloc	SDL_stdinc.h	/^#define SDL_malloc /;"	kind:d
SDL_malloc	SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_malloc(size_t size);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(size_t size)
SDL_malloc_func	SDL_stdinc.h	/^typedef void *(SDLCALL *SDL_malloc_func)(size_t size);$/;"	kind:t	typeref:typename:void * (SDLCALL *)(size_t size)
SDL_max	SDL_stdinc.h	/^#define SDL_max(/;"	kind:d	signature:(x,y)
SDL_memcmp	SDL_stdinc.h	/^#define SDL_memcmp /;"	kind:d
SDL_memcmp	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_memcmp(const void *s1, const void *s2, size_t len);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const void * s1,const void * s2,size_t len)
SDL_memcpy	SDL_stdinc.h	/^#define SDL_memcpy /;"	kind:d
SDL_memcpy	SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_memcpy(SDL_OUT_BYTECAP(len) void *dst, SDL_IN_BYTECAP(len) con/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_OUT_BYTECAP (len)void * dst,SDL_IN_BYTECAP (len)const void * src,size_t len)
SDL_memmove	SDL_stdinc.h	/^#define SDL_memmove /;"	kind:d
SDL_memmove	SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_memmove(SDL_OUT_BYTECAP(len) void *dst, SDL_IN_BYTECAP(len) co/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_OUT_BYTECAP (len)void * dst,SDL_IN_BYTECAP (len)const void * src,size_t len)
SDL_memset	SDL_stdinc.h	/^#define SDL_memset /;"	kind:d
SDL_memset	SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_memset(SDL_OUT_BYTECAP(len) void *dst, int c, size_t len);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(SDL_OUT_BYTECAP (len)void * dst,int c,size_t len)
SDL_memset4	SDL_stdinc.h	/^SDL_FORCE_INLINE void SDL_memset4(void *dst, Uint32 val, size_t dwords)$/;"	kind:f	typeref:typename:SDL_FORCE_INLINE void	signature:(void * dst,Uint32 val,size_t dwords)
SDL_messagebox_h_	SDL_messagebox.h	/^#define SDL_messagebox_h_$/;"	kind:d
SDL_min	SDL_stdinc.h	/^#define SDL_min(/;"	kind:d	signature:(x,y)
SDL_mouse_h_	SDL_mouse.h	/^#define SDL_mouse_h_$/;"	kind:d
SDL_mutex	SDL_mutex.h	/^typedef struct SDL_mutex SDL_mutex;$/;"	kind:t	typeref:struct:SDL_mutex
SDL_mutexP	SDL_mutex.h	/^#define SDL_mutexP(/;"	kind:d	signature:(m)
SDL_mutexV	SDL_mutex.h	/^#define SDL_mutexV(/;"	kind:d	signature:(m)
SDL_mutex_h_	SDL_mutex.h	/^#define SDL_mutex_h_$/;"	kind:d
SDL_opengl_h_	SDL_opengl.h	/^#define SDL_opengl_h_$/;"	kind:d
SDL_pixels_h_	SDL_pixels.h	/^#define SDL_pixels_h_$/;"	kind:d
SDL_platform_h_	SDL_platform.h	/^#define SDL_platform_h_$/;"	kind:d
SDL_pow	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_pow(double x, double y);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x,double y)
SDL_power_h_	SDL_power.h	/^#define SDL_power_h_$/;"	kind:d
SDL_powf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_powf(float x, float y);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x,float y)
SDL_qsort	SDL_stdinc.h	/^extern DECLSPEC void SDLCALL SDL_qsort(void *base, size_t nmemb, size_t size, int (*compare) (co/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void * base,size_t nmemb,size_t size,int (* compare)(const void *,const void *))
SDL_quit_h_	SDL_quit.h	/^#define SDL_quit_h_$/;"	kind:d
SDL_realloc	SDL_stdinc.h	/^#define SDL_realloc /;"	kind:d
SDL_realloc	SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_realloc(void *mem, size_t size);$/;"	kind:p	typeref:typename:DECLSPEC void * SDLCALL	signature:(void * mem,size_t size)
SDL_realloc_func	SDL_stdinc.h	/^typedef void *(SDLCALL *SDL_realloc_func)(void *mem, size_t size);$/;"	kind:t	typeref:typename:void * (SDLCALL *)(void * mem,size_t size)
SDL_rect_h_	SDL_rect.h	/^#define SDL_rect_h_$/;"	kind:d
SDL_reinterpret_cast	SDL_stdinc.h	/^#define SDL_reinterpret_cast(/;"	kind:d	signature:(type,expression)
SDL_render_h_	SDL_render.h	/^#define SDL_render_h_$/;"	kind:d
SDL_rwops_h_	SDL_rwops.h	/^#define SDL_rwops_h_$/;"	kind:d
SDL_scalbn	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_scalbn(double x, int n);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x,int n)
SDL_scalbnf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_scalbnf(float x, int n);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x,int n)
SDL_scancode_h_	SDL_scancode.h	/^#define SDL_scancode_h_$/;"	kind:d
SDL_sem	SDL_mutex.h	/^typedef struct SDL_semaphore SDL_sem;$/;"	kind:t	typeref:struct:SDL_semaphore
SDL_setenv	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_setenv(const char *name, const char *value, int overwrite);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * name,const char * value,int overwrite)
SDL_shape_h_	SDL_shape.h	/^#define SDL_shape_h_$/;"	kind:d
SDL_sin	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_sin(double x);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_sinf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_sinf(float x);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_snprintf	SDL_stdinc.h	/^#define SDL_snprintf /;"	kind:d
SDL_snprintf	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_snprintf(SDL_OUT_Z_CAP(maxlen) char *text, size_t maxlen, SDL_PR/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_OUT_Z_CAP (maxlen)char * text,size_t maxlen,SDL_PRINTF_FORMAT_STRING const char * fmt,...)
SDL_sqrt	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_sqrt(double x);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_sqrtf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_sqrtf(float x);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_sscanf	SDL_stdinc.h	/^#define SDL_sscanf /;"	kind:d
SDL_sscanf	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_sscanf(const char *text, SDL_SCANF_FORMAT_STRING const char *fmt/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * text,SDL_SCANF_FORMAT_STRING const char * fmt,...)
SDL_stack_alloc	SDL_stdinc.h	/^#define SDL_stack_alloc(/;"	kind:d	signature:(type,count)
SDL_stack_free	SDL_stdinc.h	/^#define SDL_stack_free(/;"	kind:d	signature:(data)
SDL_static_cast	SDL_stdinc.h	/^#define SDL_static_cast(/;"	kind:d	signature:(type,expression)
SDL_stdinc_h_	SDL_stdinc.h	/^#define SDL_stdinc_h_$/;"	kind:d
SDL_strcasecmp	SDL_stdinc.h	/^#define SDL_strcasecmp /;"	kind:d
SDL_strcasecmp	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strcasecmp(const char *str1, const char *str2);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str1,const char * str2)
SDL_strchr	SDL_stdinc.h	/^#define SDL_strchr /;"	kind:d
SDL_strchr	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strchr(const char *str, int c);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * str,int c)
SDL_strcmp	SDL_stdinc.h	/^#define SDL_strcmp /;"	kind:d
SDL_strcmp	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strcmp(const char *str1, const char *str2);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str1,const char * str2)
SDL_strdup	SDL_stdinc.h	/^#define SDL_strdup /;"	kind:d
SDL_strdup	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strdup(const char *str);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * str)
SDL_strlcat	SDL_stdinc.h	/^#define SDL_strlcat /;"	kind:d
SDL_strlcat	SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_strlcat(SDL_INOUT_Z_CAP(maxlen) char *dst, const char *src, s/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_INOUT_Z_CAP (maxlen)char * dst,const char * src,size_t maxlen)
SDL_strlcpy	SDL_stdinc.h	/^#define SDL_strlcpy /;"	kind:d
SDL_strlcpy	SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_strlcpy(SDL_OUT_Z_CAP(maxlen) char *dst, const char *src, siz/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_OUT_Z_CAP (maxlen)char * dst,const char * src,size_t maxlen)
SDL_strlen	SDL_stdinc.h	/^#define SDL_strlen /;"	kind:d
SDL_strlen	SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_strlen(const char *str);$/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(const char * str)
SDL_strlwr	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strlwr(char *str);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(char * str)
SDL_strncasecmp	SDL_stdinc.h	/^#define SDL_strncasecmp /;"	kind:d
SDL_strncasecmp	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strncasecmp(const char *str1, const char *str2, size_t len);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str1,const char * str2,size_t len)
SDL_strncmp	SDL_stdinc.h	/^#define SDL_strncmp /;"	kind:d
SDL_strncmp	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strncmp(const char *str1, const char *str2, size_t maxlen);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * str1,const char * str2,size_t maxlen)
SDL_strrchr	SDL_stdinc.h	/^#define SDL_strrchr /;"	kind:d
SDL_strrchr	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strrchr(const char *str, int c);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * str,int c)
SDL_strrev	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strrev(char *str);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(char * str)
SDL_strstr	SDL_stdinc.h	/^#define SDL_strstr /;"	kind:d
SDL_strstr	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strstr(const char *haystack, const char *needle);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const char * haystack,const char * needle)
SDL_strtod	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_strtod(const char *str, char **endp);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(const char * str,char ** endp)
SDL_strtol	SDL_stdinc.h	/^extern DECLSPEC long SDLCALL SDL_strtol(const char *str, char **endp, int base);$/;"	kind:p	typeref:typename:DECLSPEC long SDLCALL	signature:(const char * str,char ** endp,int base)
SDL_strtoll	SDL_stdinc.h	/^extern DECLSPEC Sint64 SDLCALL SDL_strtoll(const char *str, char **endp, int base);$/;"	kind:p	typeref:typename:DECLSPEC Sint64 SDLCALL	signature:(const char * str,char ** endp,int base)
SDL_strtoul	SDL_stdinc.h	/^extern DECLSPEC unsigned long SDLCALL SDL_strtoul(const char *str, char **endp, int base);$/;"	kind:p	typeref:typename:DECLSPEC unsigned long SDLCALL	signature:(const char * str,char ** endp,int base)
SDL_strtoull	SDL_stdinc.h	/^extern DECLSPEC Uint64 SDLCALL SDL_strtoull(const char *str, char **endp, int base);$/;"	kind:p	typeref:typename:DECLSPEC Uint64 SDLCALL	signature:(const char * str,char ** endp,int base)
SDL_strupr	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strupr(char *str);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(char * str)
SDL_surface_h_	SDL_surface.h	/^#define SDL_surface_h_$/;"	kind:d
SDL_system_h_	SDL_system.h	/^#define SDL_system_h_$/;"	kind:d
SDL_syswm_h_	SDL_syswm.h	/^#define SDL_syswm_h_$/;"	kind:d
SDL_tan	SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_tan(double x);$/;"	kind:p	typeref:typename:DECLSPEC double SDLCALL	signature:(double x)
SDL_tanf	SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_tanf(float x);$/;"	kind:p	typeref:typename:DECLSPEC float SDLCALL	signature:(float x)
SDL_test_assert_h_	SDL_test_assert.h	/^#define SDL_test_assert_h_$/;"	kind:d
SDL_test_common_h_	SDL_test_common.h	/^#define SDL_test_common_h_$/;"	kind:d
SDL_test_compare_h_	SDL_test_compare.h	/^#define SDL_test_compare_h_$/;"	kind:d
SDL_test_crc32_h_	SDL_test_crc32.h	/^#define SDL_test_crc32_h_$/;"	kind:d
SDL_test_font_h_	SDL_test_font.h	/^#define SDL_test_font_h_$/;"	kind:d
SDL_test_fuzzer_h_	SDL_test_fuzzer.h	/^#define SDL_test_fuzzer_h_$/;"	kind:d
SDL_test_h_	SDL_test.h	/^#define SDL_test_h_$/;"	kind:d
SDL_test_h_arness_h	SDL_test_harness.h	/^#define SDL_test_h_arness_h$/;"	kind:d
SDL_test_images_h_	SDL_test_images.h	/^#define SDL_test_images_h_$/;"	kind:d
SDL_test_log_h_	SDL_test_log.h	/^#define SDL_test_log_h_$/;"	kind:d
SDL_test_md5_h_	SDL_test_md5.h	/^#define SDL_test_md5_h_$/;"	kind:d
SDL_test_memory_h_	SDL_test_memory.h	/^#define SDL_test_memory_h_$/;"	kind:d
SDL_test_random_h_	SDL_test_random.h	/^#define SDL_test_random_h_$/;"	kind:d
SDL_threadID	SDL_thread.h	/^typedef unsigned long SDL_threadID;$/;"	kind:t	typeref:typename:unsigned long
SDL_thread_h_	SDL_thread.h	/^#define SDL_thread_h_$/;"	kind:d
SDL_timer_h_	SDL_timer.h	/^#define SDL_timer_h_$/;"	kind:d
SDL_tolower	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_tolower(int x);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x)
SDL_touch_h_	SDL_touch.h	/^#define SDL_touch_h_$/;"	kind:d
SDL_toupper	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_toupper(int x);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(int x)
SDL_uitoa	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_uitoa(unsigned int value, char *str, int radix);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(unsigned int value,char * str,int radix)
SDL_ulltoa	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_ulltoa(Uint64 value, char *str, int radix);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(Uint64 value,char * str,int radix)
SDL_ultoa	SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_ultoa(unsigned long value, char *str, int radix);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(unsigned long value,char * str,int radix)
SDL_utf8strlcpy	SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_utf8strlcpy(SDL_OUT_Z_CAP(dst_bytes) char *dst, const char *s/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_OUT_Z_CAP (dst_bytes)char * dst,const char * src,size_t dst_bytes)
SDL_utf8strlen	SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_utf8strlen(const char *str);$/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(const char * str)
SDL_version	SDL_version.h	/^typedef struct SDL_version$/;"	kind:s
SDL_version	SDL_version.h	/^} SDL_version;$/;"	kind:t	typeref:struct:SDL_version
SDL_version::major	SDL_version.h	/^    Uint8 major;        \/**< major version *\/$/;"	kind:m	struct:SDL_version	typeref:typename:Uint8	access:public
SDL_version::minor	SDL_version.h	/^    Uint8 minor;        \/**< minor version *\/$/;"	kind:m	struct:SDL_version	typeref:typename:Uint8	access:public
SDL_version::patch	SDL_version.h	/^    Uint8 patch;        \/**< update version *\/$/;"	kind:m	struct:SDL_version	typeref:typename:Uint8	access:public
SDL_version_h_	SDL_version.h	/^#define SDL_version_h_$/;"	kind:d
SDL_video_h_	SDL_video.h	/^#define SDL_video_h_$/;"	kind:d
SDL_vsnprintf	SDL_stdinc.h	/^#define SDL_vsnprintf /;"	kind:d
SDL_vsnprintf	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_vsnprintf(SDL_OUT_Z_CAP(maxlen) char *text, size_t maxlen, const/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(SDL_OUT_Z_CAP (maxlen)char * text,size_t maxlen,const char * fmt,va_list ap)
SDL_vsscanf	SDL_stdinc.h	/^#define SDL_vsscanf /;"	kind:d
SDL_vsscanf	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_vsscanf(const char *text, const char *fmt, va_list ap);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const char * text,const char * fmt,va_list ap)
SDL_vulkanInstance	SDL_vulkan.h	/^typedef VkInstance SDL_vulkanInstance;$/;"	kind:t	typeref:typename:VkInstance
SDL_vulkanSurface	SDL_vulkan.h	/^typedef VkSurfaceKHR SDL_vulkanSurface; \/* for compatibility with Tizen *\/$/;"	kind:t	typeref:typename:VkSurfaceKHR
SDL_vulkan_h_	SDL_vulkan.h	/^#define SDL_vulkan_h_$/;"	kind:d
SDL_wcscmp	SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_wcscmp(const wchar_t *str1, const wchar_t *str2);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const wchar_t * str1,const wchar_t * str2)
SDL_wcsdup	SDL_stdinc.h	/^extern DECLSPEC wchar_t *SDLCALL SDL_wcsdup(const wchar_t *wstr);$/;"	kind:p	typeref:typename:DECLSPEC wchar_t * SDLCALL	signature:(const wchar_t * wstr)
SDL_wcslcat	SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_wcslcat(SDL_INOUT_Z_CAP(maxlen) wchar_t *dst, const wchar_t */;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_INOUT_Z_CAP (maxlen)wchar_t * dst,const wchar_t * src,size_t maxlen)
SDL_wcslcpy	SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_wcslcpy(SDL_OUT_Z_CAP(maxlen) wchar_t *dst, const wchar_t *sr/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(SDL_OUT_Z_CAP (maxlen)wchar_t * dst,const wchar_t * src,size_t maxlen)
SDL_wcslen	SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_wcslen(const wchar_t *wstr);$/;"	kind:p	typeref:typename:DECLSPEC size_t SDLCALL	signature:(const wchar_t * wstr)
SDL_zero	SDL_stdinc.h	/^#define SDL_zero(/;"	kind:d	signature:(x)
SDL_zerop	SDL_stdinc.h	/^#define SDL_zerop(/;"	kind:d	signature:(x)
SDLname_h_	SDL_name.h	/^#define SDLname_h_$/;"	kind:d
SIZEOF_VOIDP	SDL_config.h	/^# define SIZEOF_VOIDP /;"	kind:d
STDC_HEADERS	SDL_config.h	/^#define STDC_HEADERS /;"	kind:d
ShapeModeBinarizeAlpha	SDL_shape.h	/^    ShapeModeBinarizeAlpha,$/;"	kind:e	enum:__anon0ac2d7ee0103	access:public
ShapeModeColorKey	SDL_shape.h	/^    ShapeModeColorKey$/;"	kind:e	enum:__anon0ac2d7ee0103	access:public
ShapeModeDefault	SDL_shape.h	/^    ShapeModeDefault,$/;"	kind:e	enum:__anon0ac2d7ee0103	access:public
ShapeModeReverseBinarizeAlpha	SDL_shape.h	/^    ShapeModeReverseBinarizeAlpha,$/;"	kind:e	enum:__anon0ac2d7ee0103	access:public
Sint16	SDL_stdinc.h	/^typedef int16_t Sint16;$/;"	kind:t	typeref:typename:int16_t
Sint32	SDL_stdinc.h	/^typedef int32_t Sint32;$/;"	kind:t	typeref:typename:int32_t
Sint64	SDL_rwops.h	/^    Sint64 (SDLCALL * seek) (struct SDL_RWops * context, Sint64 offset,$/;"	kind:p	struct:SDL_RWops	access:public	signature:(SDLCALL * seek)
Sint64	SDL_rwops.h	/^    Sint64 (SDLCALL * size) (struct SDL_RWops * context);$/;"	kind:p	struct:SDL_RWops	access:public	signature:(SDLCALL * size)
Sint64	SDL_stdinc.h	/^typedef int64_t Sint64;$/;"	kind:t	typeref:typename:int64_t
Sint8	SDL_stdinc.h	/^typedef int8_t Sint8;$/;"	kind:t	typeref:typename:int8_t
TEST_ABORTED	SDL_test_harness.h	/^#define TEST_ABORTED /;"	kind:d
TEST_COMPLETED	SDL_test_harness.h	/^#define TEST_COMPLETED /;"	kind:d
TEST_DISABLED	SDL_test_harness.h	/^#define TEST_DISABLED /;"	kind:d
TEST_ENABLED	SDL_test_harness.h	/^#define TEST_ENABLED /;"	kind:d
TEST_RESULT_FAILED	SDL_test_harness.h	/^#define TEST_RESULT_FAILED /;"	kind:d
TEST_RESULT_NO_ASSERT	SDL_test_harness.h	/^#define TEST_RESULT_NO_ASSERT /;"	kind:d
TEST_RESULT_PASSED	SDL_test_harness.h	/^#define TEST_RESULT_PASSED /;"	kind:d
TEST_RESULT_SETUP_FAILURE	SDL_test_harness.h	/^#define TEST_RESULT_SETUP_FAILURE /;"	kind:d
TEST_RESULT_SKIPPED	SDL_test_harness.h	/^#define TEST_RESULT_SKIPPED /;"	kind:d
TEST_SKIPPED	SDL_test_harness.h	/^#define TEST_SKIPPED /;"	kind:d
TEST_STARTED	SDL_test_harness.h	/^#define TEST_STARTED /;"	kind:d
TTF_ByteSwappedUNICODE	SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_ByteSwappedUNICODE(int swapped);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(int swapped)
TTF_CloseFont	SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_CloseFont(TTF_Font *font);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font)
TTF_Font	SDL_ttf.h	/^typedef struct _TTF_Font TTF_Font;$/;"	kind:t	typeref:struct:_TTF_Font
TTF_FontAscent	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontAscent(const TTF_Font *font);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_FontDescent	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontDescent(const TTF_Font *font);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_FontFaceFamilyName	SDL_ttf.h	/^extern DECLSPEC char * SDLCALL TTF_FontFaceFamilyName(const TTF_Font *font);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const TTF_Font * font)
TTF_FontFaceIsFixedWidth	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontFaceIsFixedWidth(const TTF_Font *font);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_FontFaceStyleName	SDL_ttf.h	/^extern DECLSPEC char * SDLCALL TTF_FontFaceStyleName(const TTF_Font *font);$/;"	kind:p	typeref:typename:DECLSPEC char * SDLCALL	signature:(const TTF_Font * font)
TTF_FontFaces	SDL_ttf.h	/^extern DECLSPEC long SDLCALL TTF_FontFaces(const TTF_Font *font);$/;"	kind:p	typeref:typename:DECLSPEC long SDLCALL	signature:(const TTF_Font * font)
TTF_FontHeight	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontHeight(const TTF_Font *font);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_FontLineSkip	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_FontLineSkip(const TTF_Font *font);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GetError	SDL_ttf.h	/^#define TTF_GetError /;"	kind:d
TTF_GetFontHinting	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GetFontHinting(const TTF_Font *font);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GetFontKerning	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GetFontKerning(const TTF_Font *font);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GetFontKerningSize	SDL_ttf.h	/^extern DECLSPEC int TTF_GetFontKerningSize(TTF_Font *font, int prev_index, int index) SDL_DEPREC/;"	kind:p	typeref:typename:DECLSPEC int	signature:(TTF_Font * font,int prev_index,int index)
TTF_GetFontKerningSizeGlyphs	SDL_ttf.h	/^extern DECLSPEC int TTF_GetFontKerningSizeGlyphs(TTF_Font *font, Uint16 previous_ch, Uint16 ch);$/;"	kind:p	typeref:typename:DECLSPEC int	signature:(TTF_Font * font,Uint16 previous_ch,Uint16 ch)
TTF_GetFontOutline	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GetFontOutline(const TTF_Font *font);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GetFontStyle	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GetFontStyle(const TTF_Font *font);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font)
TTF_GlyphIsProvided	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GlyphIsProvided(const TTF_Font *font, Uint16 ch);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(const TTF_Font * font,Uint16 ch)
TTF_GlyphMetrics	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_GlyphMetrics(TTF_Font *font, Uint16 ch,$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(TTF_Font * font,Uint16 ch,int * minx,int * maxx,int * miny,int * maxy,int * advance)
TTF_HINTING_LIGHT	SDL_ttf.h	/^#define TTF_HINTING_LIGHT /;"	kind:d
TTF_HINTING_MONO	SDL_ttf.h	/^#define TTF_HINTING_MONO /;"	kind:d
TTF_HINTING_NONE	SDL_ttf.h	/^#define TTF_HINTING_NONE /;"	kind:d
TTF_HINTING_NORMAL	SDL_ttf.h	/^#define TTF_HINTING_NORMAL /;"	kind:d
TTF_Init	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_Init(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
TTF_Linked_Version	SDL_ttf.h	/^extern DECLSPEC const SDL_version * SDLCALL TTF_Linked_Version(void);$/;"	kind:p	typeref:typename:DECLSPEC const SDL_version * SDLCALL	signature:(void)
TTF_MAJOR_VERSION	SDL_ttf.h	/^#define TTF_MAJOR_VERSION /;"	kind:d
TTF_MINOR_VERSION	SDL_ttf.h	/^#define TTF_MINOR_VERSION /;"	kind:d
TTF_OpenFont	SDL_ttf.h	/^extern DECLSPEC TTF_Font * SDLCALL TTF_OpenFont(const char *file, int ptsize);$/;"	kind:p	typeref:typename:DECLSPEC TTF_Font * SDLCALL	signature:(const char * file,int ptsize)
TTF_OpenFontIndex	SDL_ttf.h	/^extern DECLSPEC TTF_Font * SDLCALL TTF_OpenFontIndex(const char *file, int ptsize, long index);$/;"	kind:p	typeref:typename:DECLSPEC TTF_Font * SDLCALL	signature:(const char * file,int ptsize,long index)
TTF_OpenFontIndexRW	SDL_ttf.h	/^extern DECLSPEC TTF_Font * SDLCALL TTF_OpenFontIndexRW(SDL_RWops *src, int freesrc, int ptsize, /;"	kind:p	typeref:typename:DECLSPEC TTF_Font * SDLCALL	signature:(SDL_RWops * src,int freesrc,int ptsize,long index)
TTF_OpenFontRW	SDL_ttf.h	/^extern DECLSPEC TTF_Font * SDLCALL TTF_OpenFontRW(SDL_RWops *src, int freesrc, int ptsize);$/;"	kind:p	typeref:typename:DECLSPEC TTF_Font * SDLCALL	signature:(SDL_RWops * src,int freesrc,int ptsize)
TTF_PATCHLEVEL	SDL_ttf.h	/^#define TTF_PATCHLEVEL /;"	kind:d
TTF_Quit	SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_Quit(void);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(void)
TTF_RenderGlyph_Blended	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderGlyph_Blended(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,Uint16 ch,SDL_Color fg)
TTF_RenderGlyph_Shaded	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderGlyph_Shaded(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,Uint16 ch,SDL_Color fg,SDL_Color bg)
TTF_RenderGlyph_Solid	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderGlyph_Solid(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,Uint16 ch,SDL_Color fg)
TTF_RenderText	SDL_ttf.h	/^#define TTF_RenderText(/;"	kind:d	signature:(font,text,fg,bg)
TTF_RenderText_Blended	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderText_Blended(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg)
TTF_RenderText_Blended_Wrapped	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderText_Blended_Wrapped(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg,Uint32 wrapLength)
TTF_RenderText_Shaded	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderText_Shaded(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg,SDL_Color bg)
TTF_RenderText_Solid	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderText_Solid(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg)
TTF_RenderUNICODE	SDL_ttf.h	/^#define TTF_RenderUNICODE(/;"	kind:d	signature:(font,text,fg,bg)
TTF_RenderUNICODE_Blended	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUNICODE_Blended(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const Uint16 * text,SDL_Color fg)
TTF_RenderUNICODE_Blended_Wrapped	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUNICODE_Blended_Wrapped(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const Uint16 * text,SDL_Color fg,Uint32 wrapLength)
TTF_RenderUNICODE_Shaded	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUNICODE_Shaded(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const Uint16 * text,SDL_Color fg,SDL_Color bg)
TTF_RenderUNICODE_Solid	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUNICODE_Solid(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const Uint16 * text,SDL_Color fg)
TTF_RenderUTF8	SDL_ttf.h	/^#define TTF_RenderUTF8(/;"	kind:d	signature:(font,text,fg,bg)
TTF_RenderUTF8_Blended	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUTF8_Blended(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg)
TTF_RenderUTF8_Blended_Wrapped	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUTF8_Blended_Wrapped(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg,Uint32 wrapLength)
TTF_RenderUTF8_Shaded	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUTF8_Shaded(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg,SDL_Color bg)
TTF_RenderUTF8_Solid	SDL_ttf.h	/^extern DECLSPEC SDL_Surface * SDLCALL TTF_RenderUTF8_Solid(TTF_Font *font,$/;"	kind:p	typeref:typename:DECLSPEC SDL_Surface * SDLCALL	signature:(TTF_Font * font,const char * text,SDL_Color fg)
TTF_STYLE_BOLD	SDL_ttf.h	/^#define TTF_STYLE_BOLD /;"	kind:d
TTF_STYLE_ITALIC	SDL_ttf.h	/^#define TTF_STYLE_ITALIC /;"	kind:d
TTF_STYLE_NORMAL	SDL_ttf.h	/^#define TTF_STYLE_NORMAL /;"	kind:d
TTF_STYLE_STRIKETHROUGH	SDL_ttf.h	/^#define TTF_STYLE_STRIKETHROUGH /;"	kind:d
TTF_STYLE_UNDERLINE	SDL_ttf.h	/^#define TTF_STYLE_UNDERLINE /;"	kind:d
TTF_SetError	SDL_ttf.h	/^#define TTF_SetError /;"	kind:d
TTF_SetFontHinting	SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_SetFontHinting(TTF_Font *font, int hinting);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font,int hinting)
TTF_SetFontKerning	SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_SetFontKerning(TTF_Font *font, int allowed);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font,int allowed)
TTF_SetFontOutline	SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_SetFontOutline(TTF_Font *font, int outline);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font,int outline)
TTF_SetFontStyle	SDL_ttf.h	/^extern DECLSPEC void SDLCALL TTF_SetFontStyle(TTF_Font *font, int style);$/;"	kind:p	typeref:typename:DECLSPEC void SDLCALL	signature:(TTF_Font * font,int style)
TTF_SizeText	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_SizeText(TTF_Font *font, const char *text, int *w, int *h);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(TTF_Font * font,const char * text,int * w,int * h)
TTF_SizeUNICODE	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_SizeUNICODE(TTF_Font *font, const Uint16 *text, int *w, int *h);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(TTF_Font * font,const Uint16 * text,int * w,int * h)
TTF_SizeUTF8	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_SizeUTF8(TTF_Font *font, const char *text, int *w, int *h);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(TTF_Font * font,const char * text,int * w,int * h)
TTF_VERSION	SDL_ttf.h	/^#define TTF_VERSION(/;"	kind:d	signature:(X)
TTF_WasInit	SDL_ttf.h	/^extern DECLSPEC int SDLCALL TTF_WasInit(void);$/;"	kind:p	typeref:typename:DECLSPEC int SDLCALL	signature:(void)
UIViewController	SDL_syswm.h	/^typedef struct _UIViewController UIViewController;$/;"	kind:t	typeref:struct:_UIViewController
UIWindow	SDL_syswm.h	/^typedef struct _UIWindow UIWindow;$/;"	kind:t	typeref:struct:_UIWindow
UNICODE_BOM_NATIVE	SDL_ttf.h	/^#define UNICODE_BOM_NATIVE /;"	kind:d
UNICODE_BOM_SWAPPED	SDL_ttf.h	/^#define UNICODE_BOM_SWAPPED /;"	kind:d
Uint16	SDL_stdinc.h	/^typedef uint16_t Uint16;$/;"	kind:t	typeref:typename:uint16_t
Uint32	SDL_stdinc.h	/^typedef uint32_t Uint32;$/;"	kind:t	typeref:typename:uint32_t
Uint64	SDL_stdinc.h	/^typedef uint64_t Uint64;$/;"	kind:t	typeref:typename:uint64_t
Uint8	SDL_stdinc.h	/^typedef uint8_t Uint8;$/;"	kind:t	typeref:typename:uint8_t
VERBOSE_AUDIO	SDL_test_common.h	/^#define VERBOSE_AUDIO /;"	kind:d
VERBOSE_EVENT	SDL_test_common.h	/^#define VERBOSE_EVENT /;"	kind:d
VERBOSE_MODES	SDL_test_common.h	/^#define VERBOSE_MODES /;"	kind:d
VERBOSE_RENDER	SDL_test_common.h	/^#define VERBOSE_RENDER /;"	kind:d
VERBOSE_VIDEO	SDL_test_common.h	/^#define VERBOSE_VIDEO /;"	kind:d
VK_DEFINE_HANDLE	SDL_vulkan.h	/^#define VK_DEFINE_HANDLE(/;"	kind:d	signature:(object)
VK_DEFINE_NON_DISPATCHABLE_HANDLE	SDL_vulkan.h	/^#define VK_DEFINE_NON_DISPATCHABLE_HANDLE(/;"	kind:d	signature:(object)
WIN32_LEAN_AND_MEAN	SDL_egl.h	/^#define WIN32_LEAN_AND_MEAN /;"	kind:d
WIN32_LEAN_AND_MEAN	SDL_opengl.h	/^#define WIN32_LEAN_AND_MEAN /;"	kind:d
WIN32_LEAN_AND_MEAN	SDL_opengl_glext.h	/^#define WIN32_LEAN_AND_MEAN /;"	kind:d
WIN32_LEAN_AND_MEAN	SDL_syswm.h	/^#define WIN32_LEAN_AND_MEAN$/;"	kind:d
WINAPI_FAMILY_WINRT	SDL_platform.h	/^#define WINAPI_FAMILY_WINRT /;"	kind:d
WindowShapeMode	SDL_shape.h	/^} WindowShapeMode;$/;"	kind:t	typeref:enum:__anon0ac2d7ee0103
_ReadWriteBarrier	SDL_atomic.h	/^void _ReadWriteBarrier(void);$/;"	kind:p	typeref:typename:void	signature:(void)
_SDL_clz_watcom	SDL_bits.h	/^extern _inline int _SDL_clz_watcom (Uint32);$/;"	kind:p	typeref:typename:_inline int	signature:(Uint32)
_SDL_sensor_h	SDL_sensor.h	/^#define _SDL_sensor_h$/;"	kind:d
_SIZE_T_DEFINED_	SDL_config.h	/^#define _SIZE_T_DEFINED_$/;"	kind:d
_System	SDL_opengl.h	/^#    define _System$/;"	kind:d
_System	begin_code.h	/^#  define _System /;"	kind:d
_UINTPTR_T_DEFINED	SDL_config.h	/^#define _UINTPTR_T_DEFINED$/;"	kind:d
_USE_MATH_DEFINES	SDL_stdinc.h	/^#  define _USE_MATH_DEFINES$/;"	kind:d
__3dNOW__	SDL_cpuinfo.h	/^#define __3dNOW__$/;"	kind:d
__AIX__	SDL_platform.h	/^#define __AIX__ /;"	kind:d
__ANDROID__	SDL_platform.h	/^#define __ANDROID__ /;"	kind:d
__BSDI__	SDL_platform.h	/^#define __BSDI__ /;"	kind:d
__DREAMCAST__	SDL_platform.h	/^#define __DREAMCAST__ /;"	kind:d
__FREEBSD__	SDL_platform.h	/^#define __FREEBSD__ /;"	kind:d
__HAIKU__	SDL_platform.h	/^#define __HAIKU__ /;"	kind:d
__HPUX__	SDL_platform.h	/^#define __HPUX__ /;"	kind:d
__IPHONEOS__	SDL_platform.h	/^#define __IPHONEOS__ /;"	kind:d
__IRIX__	SDL_platform.h	/^#define __IRIX__ /;"	kind:d
__LINUX__	SDL_platform.h	/^#define __LINUX__ /;"	kind:d
__MACOSX__	SDL_platform.h	/^#define __MACOSX__ /;"	kind:d
__MMX__	SDL_cpuinfo.h	/^#define __MMX__$/;"	kind:d
__NACL__	SDL_platform.h	/^#define __NACL__ /;"	kind:d
__NETBSD__	SDL_platform.h	/^#define __NETBSD__ /;"	kind:d
__OPENBSD__	SDL_platform.h	/^#define __OPENBSD__ /;"	kind:d
__OS2__	SDL_platform.h	/^#define __OS2__ /;"	kind:d
__OSF__	SDL_platform.h	/^#define __OSF__ /;"	kind:d
__PNACL__	SDL_platform.h	/^#define __PNACL__ /;"	kind:d
__PSP__	SDL_platform.h	/^#define __PSP__ /;"	kind:d
__QNXNTO__	SDL_platform.h	/^#define __QNXNTO__ /;"	kind:d
__RISCOS__	SDL_platform.h	/^#define __RISCOS__ /;"	kind:d
__SDL_NOGETPROCADDR__	SDL_platform.h	/^#define __SDL_NOGETPROCADDR__$/;"	kind:d
__SOLARIS__	SDL_platform.h	/^#define __SOLARIS__ /;"	kind:d
__SSE2__	SDL_cpuinfo.h	/^#define __SSE2__$/;"	kind:d
__SSE__	SDL_cpuinfo.h	/^#define __SSE__$/;"	kind:d
__TVOS__	SDL_platform.h	/^#define __TVOS__ /;"	kind:d
__WIN32__	SDL_opengl.h	/^#define __WIN32__$/;"	kind:d
__WIN32__	SDL_platform.h	/^#define __WIN32__ /;"	kind:d
__WINDOWS__	SDL_platform.h	/^#define __WINDOWS__ /;"	kind:d
__WINRT__	SDL_platform.h	/^#define __WINRT__ /;"	kind:d
__anon048dabd90108	SDL_test_crc32.h	/^  typedef struct {$/;"	kind:s
__anon048dabd90108::crc32_table	SDL_test_crc32.h	/^    CrcUint32    crc32_table[256]; \/* CRC table *\/$/;"	kind:m	struct:__anon048dabd90108	typeref:typename:CrcUint32[256]	access:public
__anon055f46e20103	SDL_stdinc.h	/^{$/;"	kind:g
__anon055f46e20203	SDL_stdinc.h	/^{$/;"	kind:g
__anon0ac2d7ee0103	SDL_shape.h	/^typedef enum {$/;"	kind:g
__anon0ac2d7ee020a	SDL_shape.h	/^typedef union {$/;"	kind:u
__anon0ac2d7ee020a::binarizationCutoff	SDL_shape.h	/^    Uint8 binarizationCutoff;$/;"	kind:m	union:__anon0ac2d7ee020a	typeref:typename:Uint8	access:public
__anon0ac2d7ee020a::colorKey	SDL_shape.h	/^    SDL_Color colorKey;$/;"	kind:m	union:__anon0ac2d7ee020a	typeref:typename:SDL_Color	access:public
__anon0f7cec620108	SDL_test_md5.h	/^  typedef struct {$/;"	kind:s
__anon0f7cec620108::buf	SDL_test_md5.h	/^    MD5UINT4  buf[4];       \/* scratch buffer *\/$/;"	kind:m	struct:__anon0f7cec620108	typeref:typename:MD5UINT4[4]	access:public
__anon0f7cec620108::digest	SDL_test_md5.h	/^    unsigned char digest[16];   \/* actual digest after Md5Final call *\/$/;"	kind:m	struct:__anon0f7cec620108	typeref:typename:unsigned char[16]	access:public
__anon0f7cec620108::i	SDL_test_md5.h	/^    MD5UINT4  i[2];     \/* number of _bits_ handled mod 2^64 *\/$/;"	kind:m	struct:__anon0f7cec620108	typeref:typename:MD5UINT4[2]	access:public
__anon0f7cec620108::in	SDL_test_md5.h	/^    unsigned char in[64];   \/* input buffer *\/$/;"	kind:m	struct:__anon0f7cec620108	typeref:typename:unsigned char[64]	access:public
__anon14a154200103	SDL_image.h	/^{$/;"	kind:g
__anon203721d20103	SDL_pixels.h	/^{$/;"	kind:g
__anon203721d20203	SDL_pixels.h	/^{$/;"	kind:g
__anon203721d20303	SDL_pixels.h	/^{$/;"	kind:g
__anon203721d20403	SDL_pixels.h	/^{$/;"	kind:g
__anon203721d20503	SDL_pixels.h	/^{$/;"	kind:g
__anon203721d20603	SDL_pixels.h	/^{$/;"	kind:g
__anon279331cb0103	SDL_messagebox.h	/^{$/;"	kind:g
__anon279331cb0203	SDL_messagebox.h	/^{$/;"	kind:g
__anon279331cb0308	SDL_messagebox.h	/^{$/;"	kind:s
__anon279331cb0308::buttonid	SDL_messagebox.h	/^    int buttonid;       \/**< User defined button id (value returned via SDL_ShowMessageBox) *\/$/;"	kind:m	struct:__anon279331cb0308	typeref:typename:int	access:public
__anon279331cb0308::flags	SDL_messagebox.h	/^    Uint32 flags;       \/**< ::SDL_MessageBoxButtonFlags *\/$/;"	kind:m	struct:__anon279331cb0308	typeref:typename:Uint32	access:public
__anon279331cb0308::text	SDL_messagebox.h	/^    const char * text;  \/**< The UTF-8 button text *\/$/;"	kind:m	struct:__anon279331cb0308	typeref:typename:const char *	access:public
__anon279331cb0408	SDL_messagebox.h	/^{$/;"	kind:s
__anon279331cb0408::b	SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	kind:m	struct:__anon279331cb0408	typeref:typename:Uint8	access:public
__anon279331cb0408::g	SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	kind:m	struct:__anon279331cb0408	typeref:typename:Uint8	access:public
__anon279331cb0408::r	SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	kind:m	struct:__anon279331cb0408	typeref:typename:Uint8	access:public
__anon279331cb0503	SDL_messagebox.h	/^{$/;"	kind:g
__anon279331cb0608	SDL_messagebox.h	/^{$/;"	kind:s
__anon279331cb0608::colors	SDL_messagebox.h	/^    SDL_MessageBoxColor colors[SDL_MESSAGEBOX_COLOR_MAX];$/;"	kind:m	struct:__anon279331cb0608	typeref:typename:SDL_MessageBoxColor[]	access:public
__anon279331cb0708	SDL_messagebox.h	/^{$/;"	kind:s
__anon279331cb0708::buttons	SDL_messagebox.h	/^    const SDL_MessageBoxButtonData *buttons;$/;"	kind:m	struct:__anon279331cb0708	typeref:typename:const SDL_MessageBoxButtonData *	access:public
__anon279331cb0708::colorScheme	SDL_messagebox.h	/^    const SDL_MessageBoxColorScheme *colorScheme;   \/**< ::SDL_MessageBoxColorScheme, can be NU/;"	kind:m	struct:__anon279331cb0708	typeref:typename:const SDL_MessageBoxColorScheme *	access:public
__anon279331cb0708::flags	SDL_messagebox.h	/^    Uint32 flags;                       \/**< ::SDL_MessageBoxFlags *\/$/;"	kind:m	struct:__anon279331cb0708	typeref:typename:Uint32	access:public
__anon279331cb0708::message	SDL_messagebox.h	/^    const char *message;                \/**< UTF-8 message text *\/$/;"	kind:m	struct:__anon279331cb0708	typeref:typename:const char *	access:public
__anon279331cb0708::numbuttons	SDL_messagebox.h	/^    int numbuttons;$/;"	kind:m	struct:__anon279331cb0708	typeref:typename:int	access:public
__anon279331cb0708::title	SDL_messagebox.h	/^    const char *title;                  \/**< UTF-8 title *\/$/;"	kind:m	struct:__anon279331cb0708	typeref:typename:const char *	access:public
__anon279331cb0708::window	SDL_messagebox.h	/^    SDL_Window *window;                 \/**< Parent window, can be NULL *\/$/;"	kind:m	struct:__anon279331cb0708	typeref:typename:SDL_Window *	access:public
__anon3012f99b0103	SDL_gamecontroller.h	/^{$/;"	kind:g
__anon3012f99b020a	SDL_gamecontroller.h	/^    {$/;"	kind:u	struct:SDL_GameControllerButtonBind	access:public
__anon3012f99b0308	SDL_gamecontroller.h	/^        struct {$/;"	kind:s	union:SDL_GameControllerButtonBind::__anon3012f99b020a	access:public
__anon3012f99b0403	SDL_gamecontroller.h	/^{$/;"	kind:g
__anon3012f99b0503	SDL_gamecontroller.h	/^{$/;"	kind:g
__anon33b43c600103	SDL_syswm.h	/^{$/;"	kind:g
__anon33b43c60020a	SDL_syswm.h	/^    {$/;"	kind:u	struct:SDL_SysWMmsg	access:public
__anon33b43c600308	SDL_syswm.h	/^        struct {$/;"	kind:s	union:SDL_SysWMmsg::__anon33b43c60020a	access:public
__anon33b43c600408	SDL_syswm.h	/^        struct {$/;"	kind:s	union:SDL_SysWMmsg::__anon33b43c60020a	access:public
__anon33b43c600508	SDL_syswm.h	/^        struct {$/;"	kind:s	union:SDL_SysWMmsg::__anon33b43c60020a	access:public
__anon33b43c600608	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMmsg::__anon33b43c60020a	access:public
__anon33b43c600708	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMmsg::__anon33b43c60020a	access:public
__anon33b43c600808	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMmsg::__anon33b43c60020a	access:public
__anon33b43c60090a	SDL_syswm.h	/^    {$/;"	kind:u	struct:SDL_SysWMinfo	access:public
__anon33b43c600a08	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
__anon33b43c600b08	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
__anon33b43c600c08	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
__anon33b43c600d08	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
__anon33b43c600e08	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
__anon33b43c600f08	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
__anon33b43c601008	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
__anon33b43c601108	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
__anon33b43c601208	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
__anon33b43c601308	SDL_syswm.h	/^        {$/;"	kind:s	union:SDL_SysWMinfo::__anon33b43c60090a	access:public
__anon35b0884a0103	SDL_power.h	/^{$/;"	kind:g
__anon3733ce750103	SDL_egl.h	/^typedef enum {$/;"	kind:g
__anon37b6c7bf0103	SDL_log.h	/^{$/;"	kind:g
__anon37b6c7bf0203	SDL_log.h	/^{$/;"	kind:g
__anon3e7b8b8f0103	SDL_assert.h	/^{$/;"	kind:g
__anon4be143ec010a	SDL_endian.h	/^    {$/;"	kind:u	function:SDL_Swap64
__anon4be143ec0208	SDL_endian.h	/^        {$/;"	kind:s	union:SDL_Swap64::__anon4be143ec010a	access:public
__anon4be143ec030a	SDL_endian.h	/^    {$/;"	kind:u	function:SDL_SwapFloat
__anon4ea517060103	SDL_mouse.h	/^{$/;"	kind:g
__anon4ea517060203	SDL_mouse.h	/^{$/;"	kind:g
__anon544b6ca70103	SDL_blendmode.h	/^{$/;"	kind:g
__anon544b6ca70203	SDL_blendmode.h	/^{$/;"	kind:g
__anon544b6ca70303	SDL_blendmode.h	/^{$/;"	kind:g
__anon5a19c0550103	SDL_opengles2_khrplatform.h	/^typedef enum {$/;"	kind:g
__anon6ec27efd0108	SDL_test_random.h	/^  typedef struct {$/;"	kind:s
__anon6ec27efd0108::a	SDL_test_random.h	/^    unsigned int a;$/;"	kind:m	struct:__anon6ec27efd0108	typeref:typename:unsigned int	access:public
__anon6ec27efd0108::ah	SDL_test_random.h	/^    unsigned int ah;$/;"	kind:m	struct:__anon6ec27efd0108	typeref:typename:unsigned int	access:public
__anon6ec27efd0108::al	SDL_test_random.h	/^    unsigned int al;$/;"	kind:m	struct:__anon6ec27efd0108	typeref:typename:unsigned int	access:public
__anon6ec27efd0108::c	SDL_test_random.h	/^    unsigned int c;$/;"	kind:m	struct:__anon6ec27efd0108	typeref:typename:unsigned int	access:public
__anon6ec27efd0108::x	SDL_test_random.h	/^    unsigned int x;$/;"	kind:m	struct:__anon6ec27efd0108	typeref:typename:unsigned int	access:public
__anon763efcd50103	SDL_thread.h	/^typedef enum {$/;"	kind:g
__anon7824b1c10103	SDL_keycode.h	/^{$/;"	kind:g
__anon7824b1c10203	SDL_keycode.h	/^{$/;"	kind:g
__anon82acb21a0108	SDL_atomic.h	/^typedef struct { int value; } SDL_atomic_t;$/;"	kind:s
__anon82acb21a0108::value	SDL_atomic.h	/^typedef struct { int value; } SDL_atomic_t;$/;"	kind:m	struct:__anon82acb21a0108	typeref:typename:int	access:public
__anon9abf0f170103	SDL_sensor.h	/^{$/;"	kind:g
__anonaa0220c20103	SDL_system.h	/^{$/;"	kind:g
__anonaa0220c20203	SDL_system.h	/^{$/;"	kind:g
__anonad684edd0103	SDL_render.h	/^{$/;"	kind:g
__anonad684edd0203	SDL_render.h	/^{$/;"	kind:g
__anonad684edd0303	SDL_render.h	/^{$/;"	kind:g
__anonad684edd0403	SDL_render.h	/^{$/;"	kind:g
__anonb66d4d920103	SDL_events.h	/^{$/;"	kind:g
__anonb66d4d920203	SDL_events.h	/^{$/;"	kind:g
__anonbf450fe30103	SDL_hints.h	/^{$/;"	kind:g
__anonbfb03fef0103	SDL_audio.h	/^{$/;"	kind:g
__anonc174b49d0103	SDL_scancode.h	/^{$/;"	kind:g
__anoncae410850108	SDL_test_common.h	/^{$/;"	kind:s
__anoncae410850108::argv	SDL_test_common.h	/^    char **argv;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:char **	access:public
__anoncae410850108::audiodriver	SDL_test_common.h	/^    const char *audiodriver;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:const char *	access:public
__anoncae410850108::audiospec	SDL_test_common.h	/^    SDL_AudioSpec audiospec;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:SDL_AudioSpec	access:public
__anoncae410850108::depth	SDL_test_common.h	/^    int depth;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::display	SDL_test_common.h	/^    int display;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::flags	SDL_test_common.h	/^    Uint32 flags;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:Uint32	access:public
__anoncae410850108::gl_accelerated	SDL_test_common.h	/^    int gl_accelerated;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_accum_alpha_size	SDL_test_common.h	/^    int gl_accum_alpha_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_accum_blue_size	SDL_test_common.h	/^    int gl_accum_blue_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_accum_green_size	SDL_test_common.h	/^    int gl_accum_green_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_accum_red_size	SDL_test_common.h	/^    int gl_accum_red_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_alpha_size	SDL_test_common.h	/^    int gl_alpha_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_blue_size	SDL_test_common.h	/^    int gl_blue_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_buffer_size	SDL_test_common.h	/^    int gl_buffer_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_debug	SDL_test_common.h	/^    int gl_debug;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_depth_size	SDL_test_common.h	/^    int gl_depth_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_double_buffer	SDL_test_common.h	/^    int gl_double_buffer;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_green_size	SDL_test_common.h	/^    int gl_green_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_major_version	SDL_test_common.h	/^    int gl_major_version;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_minor_version	SDL_test_common.h	/^    int gl_minor_version;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_multisamplebuffers	SDL_test_common.h	/^    int gl_multisamplebuffers;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_multisamplesamples	SDL_test_common.h	/^    int gl_multisamplesamples;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_profile_mask	SDL_test_common.h	/^    int gl_profile_mask;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_red_size	SDL_test_common.h	/^    int gl_red_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_retained_backing	SDL_test_common.h	/^    int gl_retained_backing;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_stencil_size	SDL_test_common.h	/^    int gl_stencil_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::gl_stereo	SDL_test_common.h	/^    int gl_stereo;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::logical_h	SDL_test_common.h	/^    int logical_h;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::logical_w	SDL_test_common.h	/^    int logical_w;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::num_windows	SDL_test_common.h	/^    int num_windows;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::refresh_rate	SDL_test_common.h	/^    int refresh_rate;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::render_flags	SDL_test_common.h	/^    Uint32 render_flags;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:Uint32	access:public
__anoncae410850108::renderdriver	SDL_test_common.h	/^    const char *renderdriver;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:const char *	access:public
__anoncae410850108::renderers	SDL_test_common.h	/^    SDL_Renderer **renderers;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:SDL_Renderer **	access:public
__anoncae410850108::scale	SDL_test_common.h	/^    float scale;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:float	access:public
__anoncae410850108::skip_renderer	SDL_test_common.h	/^    SDL_bool skip_renderer;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:SDL_bool	access:public
__anoncae410850108::targets	SDL_test_common.h	/^    SDL_Texture **targets;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:SDL_Texture **	access:public
__anoncae410850108::verbose	SDL_test_common.h	/^    Uint32 verbose;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:Uint32	access:public
__anoncae410850108::videodriver	SDL_test_common.h	/^    const char *videodriver;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:const char *	access:public
__anoncae410850108::window_flags	SDL_test_common.h	/^    Uint32 window_flags;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:Uint32	access:public
__anoncae410850108::window_h	SDL_test_common.h	/^    int window_h;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::window_icon	SDL_test_common.h	/^    const char *window_icon;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:const char *	access:public
__anoncae410850108::window_maxH	SDL_test_common.h	/^    int window_maxH;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::window_maxW	SDL_test_common.h	/^    int window_maxW;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::window_minH	SDL_test_common.h	/^    int window_minH;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::window_minW	SDL_test_common.h	/^    int window_minW;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::window_title	SDL_test_common.h	/^    const char *window_title;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:const char *	access:public
__anoncae410850108::window_w	SDL_test_common.h	/^    int window_w;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::window_x	SDL_test_common.h	/^    int window_x;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::window_y	SDL_test_common.h	/^    int window_y;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
__anoncae410850108::windows	SDL_test_common.h	/^    SDL_Window **windows;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:SDL_Window **	access:public
__anoncb4f75060103	SDL_surface.h	/^{$/;"	kind:g
__anone134b82d0108	SDL_joystick.h	/^typedef struct {$/;"	kind:s
__anone134b82d0108::data	SDL_joystick.h	/^    Uint8 data[16];$/;"	kind:m	struct:__anone134b82d0108	typeref:typename:Uint8[16]	access:public
__anone134b82d0203	SDL_joystick.h	/^{$/;"	kind:g
__anone134b82d0303	SDL_joystick.h	/^{$/;"	kind:g
__anone1c38f38010a	SDL_rwops.h	/^    {$/;"	kind:u	struct:SDL_RWops	access:public
__anone1c38f380208	SDL_rwops.h	/^        {$/;"	kind:s	union:SDL_RWops::__anone1c38f38010a	access:public
__anone1c38f380308	SDL_rwops.h	/^        {$/;"	kind:s	union:SDL_RWops::__anone1c38f38010a	access:public
__anone1c38f380408	SDL_rwops.h	/^        {$/;"	kind:s	union:SDL_RWops::__anone1c38f38010a	access:public
__anone1c38f380508	SDL_rwops.h	/^        {$/;"	kind:s	union:SDL_RWops::__anone1c38f38010a	access:public
__anoned9a67270103	SDL_error.h	/^{$/;"	kind:g
__anonf43722b40108	SDL_video.h	/^{$/;"	kind:s
__anonf43722b40108::driverdata	SDL_video.h	/^    void *driverdata;           \/**< driver-specific data, initialize to 0 *\/$/;"	kind:m	struct:__anonf43722b40108	typeref:typename:void *	access:public
__anonf43722b40108::format	SDL_video.h	/^    Uint32 format;              \/**< pixel format *\/$/;"	kind:m	struct:__anonf43722b40108	typeref:typename:Uint32	access:public
__anonf43722b40108::h	SDL_video.h	/^    int h;                      \/**< height, in screen coordinates *\/$/;"	kind:m	struct:__anonf43722b40108	typeref:typename:int	access:public
__anonf43722b40108::refresh_rate	SDL_video.h	/^    int refresh_rate;           \/**< refresh rate (or zero for unspecified) *\/$/;"	kind:m	struct:__anonf43722b40108	typeref:typename:int	access:public
__anonf43722b40108::w	SDL_video.h	/^    int w;                      \/**< width, in screen coordinates *\/$/;"	kind:m	struct:__anonf43722b40108	typeref:typename:int	access:public
__anonf43722b40203	SDL_video.h	/^{$/;"	kind:g
__anonf43722b40303	SDL_video.h	/^{$/;"	kind:g
__anonf43722b40403	SDL_video.h	/^{$/;"	kind:g
__anonf43722b40503	SDL_video.h	/^{$/;"	kind:g
__anonf43722b40603	SDL_video.h	/^{$/;"	kind:g
__anonf43722b40703	SDL_video.h	/^{$/;"	kind:g
__anonf43722b40803	SDL_video.h	/^{$/;"	kind:g
__anonf43722b40903	SDL_video.h	/^{$/;"	kind:g
__anonf43722b40a03	SDL_video.h	/^{$/;"	kind:g
__anonf43722b40b03	SDL_video.h	/^{$/;"	kind:g
__debugbreak	SDL_assert.h	/^    extern void __cdecl __debugbreak(void);$/;"	kind:p	typeref:typename:void __cdecl	signature:(void)
__eglMustCastToProperFunctionPointerType	SDL_egl.h	/^typedef void (*__eglMustCastToProperFunctionPointerType)(void);$/;"	kind:t	typeref:typename:void (*)(void)
__egl_h_	SDL_egl.h	/^#define __egl_h_ /;"	kind:d
__eglext_h_	SDL_egl.h	/^#define __eglext_h_ /;"	kind:d
__eglplatform_h_	SDL_egl.h	/^#define __eglplatform_h_$/;"	kind:d
__gl2_h_	SDL_opengles2_gl2.h	/^#define __gl2_h_$/;"	kind:d
__gl2ext_h_	SDL_opengles2_gl2ext.h	/^#define __gl2ext_h_$/;"	kind:d
__gl2platform_h_	SDL_opengles2_gl2platform.h	/^#define __gl2platform_h_$/;"	kind:d
__gl_h_	SDL_opengl.h	/^#define __gl_h_$/;"	kind:d
__glext_h_	SDL_opengl_glext.h	/^#define __glext_h_ /;"	kind:d
__inline__	begin_code.h	/^#define __inline__ /;"	kind:d
__khrplatform_h_	SDL_egl.h	/^#define __khrplatform_h_$/;"	kind:d
__khrplatform_h_	SDL_opengles2_khrplatform.h	/^#define __khrplatform_h_$/;"	kind:d
__volatile__	SDL_stdinc.h	/^    __asm__ __volatile__ ($/;"	kind:l	function:SDL_memset4	typeref:typename:__asm__	file:
_begin_code_h	begin_code.h	/^#define _begin_code_h$/;"	kind:d
a	SDL_endian.h	/^            Uint32 a, b;$/;"	kind:m	struct:SDL_Swap64::__anon4be143ec010a::__anon4be143ec0208	typeref:typename:Uint32	access:public
a	SDL_pixels.h	/^    Uint8 a;$/;"	kind:m	struct:SDL_Color	typeref:typename:Uint8	access:public
a	SDL_test_random.h	/^    unsigned int a;$/;"	kind:m	struct:__anon6ec27efd0108	typeref:typename:unsigned int	access:public
adevice	SDL_events.h	/^    SDL_AudioDeviceEvent adevice;   \/**< Audio device event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_AudioDeviceEvent	access:public
ah	SDL_test_random.h	/^    unsigned int ah;$/;"	kind:m	struct:__anon6ec27efd0108	typeref:typename:unsigned int	access:public
al	SDL_test_random.h	/^    unsigned int al;$/;"	kind:m	struct:__anon6ec27efd0108	typeref:typename:unsigned int	access:public
alloca	SDL_stdinc.h	/^#  define alloca /;"	kind:d
alloca	SDL_stdinc.h	/^char *alloca();$/;"	kind:p	typeref:typename:char *	signature:()
alloca	SDL_stdinc.h	/^void *alloca(unsigned);$/;"	kind:p	typeref:typename:void *	signature:(unsigned)
always_ignore	SDL_assert.h	/^    int always_ignore;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:int	access:public
android	SDL_syswm.h	/^        } android;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601208	access:public
androidio	SDL_rwops.h	/^        } androidio;$/;"	kind:m	union:SDL_RWops::__anone1c38f38010a	typeref:struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	access:public
argv	SDL_test_common.h	/^    char **argv;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:char **	access:public
assetFileDescriptorRef	SDL_rwops.h	/^            void *assetFileDescriptorRef;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:void *	access:public
attack_length	SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
attack_length	SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
attack_length	SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
attack_length	SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
attack_level	SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
attack_level	SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
attack_level	SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
attack_level	SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
audiodriver	SDL_test_common.h	/^    const char *audiodriver;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:const char *	access:public
audiospec	SDL_test_common.h	/^    SDL_AudioSpec audiospec;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:SDL_AudioSpec	access:public
autoclose	SDL_rwops.h	/^            SDL_bool autoclose;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380308	typeref:typename:SDL_bool	access:public
axis	SDL_events.h	/^    Uint8 axis;         \/**< The controller axis (SDL_GameControllerAxis) *\/$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
axis	SDL_events.h	/^    Uint8 axis;         \/**< The joystick axis index *\/$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
axis	SDL_gamecontroller.h	/^        int axis;$/;"	kind:m	union:SDL_GameControllerButtonBind::__anon3012f99b020a	typeref:typename:int	access:public
b	SDL_endian.h	/^            Uint32 a, b;$/;"	kind:m	struct:SDL_Swap64::__anon4be143ec010a::__anon4be143ec0208	typeref:typename:Uint32	access:public
b	SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	kind:m	struct:__anon279331cb0408	typeref:typename:Uint8	access:public
b	SDL_pixels.h	/^    Uint8 b;$/;"	kind:m	struct:SDL_Color	typeref:typename:Uint8	access:public
ball	SDL_events.h	/^    Uint8 ball;         \/**< The joystick trackball index *\/$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
base	SDL_rwops.h	/^            Uint8 *base;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380408	typeref:typename:Uint8 *	access:public
binarizationCutoff	SDL_shape.h	/^    Uint8 binarizationCutoff;$/;"	kind:m	union:__anon0ac2d7ee020a	typeref:typename:Uint8	access:public
bindType	SDL_gamecontroller.h	/^    SDL_GameControllerBindType bindType;$/;"	kind:m	struct:SDL_GameControllerButtonBind	typeref:typename:SDL_GameControllerBindType	access:public
buf	SDL_audio.h	/^    Uint8 *buf;                 \/**< Buffer to hold entire audio data *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:Uint8 *	access:public
buf	SDL_test_md5.h	/^    MD5UINT4  buf[4];       \/* scratch buffer *\/$/;"	kind:m	struct:__anon0f7cec620108	typeref:typename:MD5UINT4[4]	access:public
button	SDL_events.h	/^    SDL_MouseButtonEvent button;    \/**< Mouse button event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_MouseButtonEvent	access:public
button	SDL_events.h	/^    Uint8 button;       \/**< The controller button (SDL_GameControllerButton) *\/$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
button	SDL_events.h	/^    Uint8 button;       \/**< The joystick button index *\/$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
button	SDL_events.h	/^    Uint8 button;       \/**< The mouse button index *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
button	SDL_gamecontroller.h	/^        int button;$/;"	kind:m	union:SDL_GameControllerButtonBind::__anon3012f99b020a	typeref:typename:int	access:public
button	SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
button	SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
button	SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
button	SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
button	SDL_haptic.h	/^    Uint16 button;      \/**< Button that triggers the effect. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
buttonid	SDL_messagebox.h	/^    int buttonid;       \/**< User defined button id (value returned via SDL_ShowMessageBox) *\/$/;"	kind:m	struct:__anon279331cb0308	typeref:typename:int	access:public
buttons	SDL_messagebox.h	/^    const SDL_MessageBoxButtonData *buttons;$/;"	kind:m	struct:__anon279331cb0708	typeref:typename:const SDL_MessageBoxButtonData *	access:public
bytes_per_pixel	SDL_test_images.h	/^  unsigned int bytes_per_pixel; \/* 3:RGB, 4:RGBA *\/$/;"	kind:m	struct:SDLTest_SurfaceImage_s	typeref:typename:unsigned int	access:public
c	SDL_test_random.h	/^    unsigned int c;$/;"	kind:m	struct:__anon6ec27efd0108	typeref:typename:unsigned int	access:public
callback	SDL_audio.h	/^    SDL_AudioCallback callback; \/**< Callback that feeds the audio device (NULL to use SDL_Queu/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:SDL_AudioCallback	access:public
caxis	SDL_events.h	/^    SDL_ControllerAxisEvent caxis;      \/**< Game Controller axis event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_ControllerAxisEvent	access:public
cbutton	SDL_events.h	/^    SDL_ControllerButtonEvent cbutton;  \/**< Game Controller button event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_ControllerButtonEvent	access:public
cdevice	SDL_events.h	/^    SDL_ControllerDeviceEvent cdevice;  \/**< Game Controller device event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_ControllerDeviceEvent	access:public
center	SDL_haptic.h	/^    Sint16 center[3];       \/**< Position of the dead zone. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Sint16[3]	access:public
channels	SDL_audio.h	/^    Uint8 channels;             \/**< Number of channels: 1 mono, 2 stereo *\/$/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:Uint8	access:public
channels	SDL_haptic.h	/^    Uint8 channels;         \/**< Axes to use, minimum of one. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint8	access:public
clicks	SDL_events.h	/^    Uint8 clicks;       \/**< 1 for single-click, 2 for double-click, etc. *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
clip_rect	SDL_surface.h	/^    SDL_Rect clip_rect;         \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:SDL_Rect	access:public
cocoa	SDL_syswm.h	/^        } cocoa;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600e08	access:public
cocoa	SDL_syswm.h	/^        } cocoa;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600608	access:public
code	SDL_events.h	/^    Sint32 code;        \/**< User defined event code *\/$/;"	kind:m	struct:SDL_UserEvent	typeref:typename:Sint32	access:public
colorKey	SDL_shape.h	/^    SDL_Color colorKey;$/;"	kind:m	union:__anon0ac2d7ee020a	typeref:typename:SDL_Color	access:public
colorScheme	SDL_messagebox.h	/^    const SDL_MessageBoxColorScheme *colorScheme;   \/**< ::SDL_MessageBoxColorScheme, can be NU/;"	kind:m	struct:__anon279331cb0708	typeref:typename:const SDL_MessageBoxColorScheme *	access:public
colorbuffer	SDL_syswm.h	/^            GLuint colorbuffer; \/**< The GL view's color Renderbuffer Object. It must be bound /;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08	typeref:typename:GLuint	access:public
colors	SDL_messagebox.h	/^    SDL_MessageBoxColor colors[SDL_MESSAGEBOX_COLOR_MAX];$/;"	kind:m	struct:__anon279331cb0608	typeref:typename:SDL_MessageBoxColor[]	access:public
colors	SDL_pixels.h	/^    SDL_Color *colors;$/;"	kind:m	struct:SDL_Palette	typeref:typename:SDL_Color *	access:public
common	SDL_events.h	/^    SDL_CommonEvent common;         \/**< Common event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_CommonEvent	access:public
condition	SDL_assert.h	/^    const char *condition;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:const char *	access:public
condition	SDL_haptic.h	/^    SDL_HapticCondition condition;  \/**< Condition effect. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:SDL_HapticCondition	access:public
connection	SDL_syswm.h	/^            struct MirConnection *connection;  \/**< Mir display server connection *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601108	typeref:struct:MirConnection *	access:public
constant	SDL_haptic.h	/^    SDL_HapticConstant constant;    \/**< Constant effect. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:SDL_HapticConstant	access:public
crc32_table	SDL_test_crc32.h	/^    CrcUint32    crc32_table[256]; \/* CRC table *\/$/;"	kind:m	struct:__anon048dabd90108	typeref:typename:CrcUint32[256]	access:public
custom	SDL_haptic.h	/^    SDL_HapticCustom custom;        \/**< Custom effect. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:SDL_HapticCustom	access:public
dDist	SDL_events.h	/^    float dDist;$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
dTheta	SDL_events.h	/^    float dTheta;$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
data	SDL_events.h	/^    float data[6];      \/**< Up to 6 values from the sensor - additional values can be queried /;"	kind:m	struct:SDL_SensorEvent	typeref:typename:float[6]	access:public
data	SDL_haptic.h	/^    Uint16 *data;           \/**< Should contain channels*samples items. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16 *	access:public
data	SDL_joystick.h	/^    Uint8 data[16];$/;"	kind:m	struct:__anone134b82d0108	typeref:typename:Uint8[16]	access:public
data1	SDL_events.h	/^    Sint32 data1;       \/**< event dependent data *\/$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Sint32	access:public
data1	SDL_events.h	/^    Sint32 data1;       \/**< event dependent data *\/$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Sint32	access:public
data1	SDL_events.h	/^    void *data1;        \/**< User defined data pointer *\/$/;"	kind:m	struct:SDL_UserEvent	typeref:typename:void *	access:public
data1	SDL_rwops.h	/^            void *data1;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380508	typeref:typename:void *	access:public
data2	SDL_events.h	/^    Sint32 data2;       \/**< event dependent data *\/$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Sint32	access:public
data2	SDL_events.h	/^    void *data2;        \/**< User defined data pointer *\/$/;"	kind:m	struct:SDL_UserEvent	typeref:typename:void *	access:public
data2	SDL_rwops.h	/^            void *data2;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380508	typeref:typename:void *	access:public
deadband	SDL_haptic.h	/^    Uint16 deadband[3];     \/**< Size of the dead zone; max 0xFFFF: whole axis-range when 0-cen/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16[3]	access:public
delay	SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
delay	SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
delay	SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
delay	SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
delay	SDL_haptic.h	/^    Uint16 delay;       \/**< Delay before starting the effect. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
depth	SDL_test_common.h	/^    int depth;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
description	SDL_test_harness.h	/^    char *description;$/;"	kind:m	struct:SDLTest_TestCaseReference	typeref:typename:char *	access:public
dfb	SDL_syswm.h	/^            IDirectFB *dfb;             \/**< The directfb main interface *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600d08	typeref:typename:IDirectFB *	access:public
dfb	SDL_syswm.h	/^        } dfb;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600d08	access:public
dfb	SDL_syswm.h	/^        } dfb;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600508	access:public
dgesture	SDL_events.h	/^    SDL_DollarGestureEvent dgesture; \/**< Gesture event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_DollarGestureEvent	access:public
digest	SDL_test_md5.h	/^    unsigned char digest[16];   \/* actual digest after Md5Final call *\/$/;"	kind:m	struct:__anon0f7cec620108	typeref:typename:unsigned char[16]	access:public
dir	SDL_haptic.h	/^    Sint32 dir[3];      \/**< The encoded direction. *\/$/;"	kind:m	struct:SDL_HapticDirection	typeref:typename:Sint32[3]	access:public
direction	SDL_events.h	/^    Uint32 direction;   \/**< Set to one of the SDL_MOUSEWHEEL_* defines. When FLIPPED the value/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
direction	SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect - Not used ATM. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:SDL_HapticDirection	access:public
direction	SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:SDL_HapticDirection	access:public
direction	SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:SDL_HapticDirection	access:public
direction	SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:SDL_HapticDirection	access:public
direction	SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:SDL_HapticDirection	access:public
display	SDL_events.h	/^    SDL_DisplayEvent display;       \/**< Window event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_DisplayEvent	access:public
display	SDL_events.h	/^    Uint32 display;     \/**< The associated display index *\/$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint32	access:public
display	SDL_syswm.h	/^            Display *display;           \/**< The X11 display *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600c08	typeref:typename:Display *	access:public
display	SDL_syswm.h	/^            EGLNativeDisplayType display;$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601308	typeref:typename:EGLNativeDisplayType	access:public
display	SDL_syswm.h	/^            struct wl_display *display;            \/**< Wayland display *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601008	typeref:struct:wl_display *	access:public
display	SDL_test_common.h	/^    int display;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
driverdata	SDL_video.h	/^    void *driverdata;           \/**< driver-specific data, initialize to 0 *\/$/;"	kind:m	struct:__anonf43722b40108	typeref:typename:void *	access:public
drop	SDL_events.h	/^    SDL_DropEvent drop;             \/**< Drag and drop event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_DropEvent	access:public
dst_format	SDL_audio.h	/^    SDL_AudioFormat dst_format; \/**< Target audio format *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:SDL_AudioFormat	access:public
dummy	SDL_syswm.h	/^            int dummy;$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600608	typeref:typename:int	access:public
dummy	SDL_syswm.h	/^            int dummy;$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600708	typeref:typename:int	access:public
dummy	SDL_syswm.h	/^            int dummy;$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600808	typeref:typename:int	access:public
dummy	SDL_syswm.h	/^        Uint8 dummy[64];$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:typename:Uint8[64]	access:public
dummy	SDL_syswm.h	/^        int dummy;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:typename:int	access:public
dx	SDL_events.h	/^    float dx;           \/**< Normalized in the range -1...1 *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
dy	SDL_events.h	/^    float dy;           \/**< Normalized in the range -1...1 *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
edit	SDL_events.h	/^    SDL_TextEditingEvent edit;      \/**< Text editing event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_TextEditingEvent	access:public
eglBindAPI	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglBindAPI (EGLenum api);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLenum api)
eglBindTexImage	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglBindTexImage (EGLDisplay dpy, EGLSurface surface, EGLint buffer/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint buffer)
eglChooseConfig	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglChooseConfig (EGLDisplay dpy, const EGLint *attrib_list, EGLCon/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,const EGLint * attrib_list,EGLConfig * configs,EGLint config_size,EGLint * num_config)
eglClientWaitSync	SDL_egl.h	/^EGLAPI EGLint EGLAPIENTRY eglClientWaitSync (EGLDisplay dpy, EGLSync sync, EGLint flags, EGLTime/;"	kind:p	typeref:typename:EGLAPI EGLint EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSync sync,EGLint flags,EGLTime timeout)
eglClientWaitSyncKHR	SDL_egl.h	/^EGLAPI EGLint EGLAPIENTRY eglClientWaitSyncKHR (EGLDisplay dpy, EGLSyncKHR sync, EGLint flags, E/;"	kind:p	typeref:typename:EGLAPI EGLint EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSyncKHR sync,EGLint flags,EGLTimeKHR timeout)
eglClientWaitSyncNV	SDL_egl.h	/^EGLAPI EGLint EGLAPIENTRY eglClientWaitSyncNV (EGLSyncNV sync, EGLint flags, EGLTimeNV timeout);$/;"	kind:p	typeref:typename:EGLAPI EGLint EGLAPIENTRY	signature:(EGLSyncNV sync,EGLint flags,EGLTimeNV timeout)
eglCopyBuffers	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglCopyBuffers (EGLDisplay dpy, EGLSurface surface, EGLNativePixma/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLNativePixmapType target)
eglCreateContext	SDL_egl.h	/^EGLAPI EGLContext EGLAPIENTRY eglCreateContext (EGLDisplay dpy, EGLConfig config, EGLContext sha/;"	kind:p	typeref:typename:EGLAPI EGLContext EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,EGLContext share_context,const EGLint * attrib_list)
eglCreateDRMImageMESA	SDL_egl.h	/^EGLAPI EGLImageKHR EGLAPIENTRY eglCreateDRMImageMESA (EGLDisplay dpy, const EGLint *attrib_list)/;"	kind:p	typeref:typename:EGLAPI EGLImageKHR EGLAPIENTRY	signature:(EGLDisplay dpy,const EGLint * attrib_list)
eglCreateFenceSyncNV	SDL_egl.h	/^EGLAPI EGLSyncNV EGLAPIENTRY eglCreateFenceSyncNV (EGLDisplay dpy, EGLenum condition, const EGLi/;"	kind:p	typeref:typename:EGLAPI EGLSyncNV EGLAPIENTRY	signature:(EGLDisplay dpy,EGLenum condition,const EGLint * attrib_list)
eglCreateImage	SDL_egl.h	/^EGLAPI EGLImage EGLAPIENTRY eglCreateImage (EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLC/;"	kind:p	typeref:typename:EGLAPI EGLImage EGLAPIENTRY	signature:(EGLDisplay dpy,EGLContext ctx,EGLenum target,EGLClientBuffer buffer,const EGLAttrib * attrib_list)
eglCreateImageKHR	SDL_egl.h	/^EGLAPI EGLImageKHR EGLAPIENTRY eglCreateImageKHR (EGLDisplay dpy, EGLContext ctx, EGLenum target/;"	kind:p	typeref:typename:EGLAPI EGLImageKHR EGLAPIENTRY	signature:(EGLDisplay dpy,EGLContext ctx,EGLenum target,EGLClientBuffer buffer,const EGLint * attrib_list)
eglCreatePbufferFromClientBuffer	SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePbufferFromClientBuffer (EGLDisplay dpy, EGLenum buftype,/;"	kind:p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLenum buftype,EGLClientBuffer buffer,EGLConfig config,const EGLint * attrib_list)
eglCreatePbufferSurface	SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePbufferSurface (EGLDisplay dpy, EGLConfig config, const E/;"	kind:p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,const EGLint * attrib_list)
eglCreatePixmapSurface	SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePixmapSurface (EGLDisplay dpy, EGLConfig config, EGLNativ/;"	kind:p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,EGLNativePixmapType pixmap,const EGLint * attrib_list)
eglCreatePixmapSurfaceHI	SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePixmapSurfaceHI (EGLDisplay dpy, EGLConfig config, struct/;"	kind:p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,struct EGLClientPixmapHI * pixmap)
eglCreatePlatformPixmapSurface	SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePlatformPixmapSurface (EGLDisplay dpy, EGLConfig config, /;"	kind:p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,void * native_pixmap,const EGLAttrib * attrib_list)
eglCreatePlatformPixmapSurfaceEXT	SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePlatformPixmapSurfaceEXT (EGLDisplay dpy, EGLConfig confi/;"	kind:p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,void * native_pixmap,const EGLint * attrib_list)
eglCreatePlatformWindowSurface	SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePlatformWindowSurface (EGLDisplay dpy, EGLConfig config, /;"	kind:p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,void * native_window,const EGLAttrib * attrib_list)
eglCreatePlatformWindowSurfaceEXT	SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePlatformWindowSurfaceEXT (EGLDisplay dpy, EGLConfig confi/;"	kind:p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,void * native_window,const EGLint * attrib_list)
eglCreateStreamFromFileDescriptorKHR	SDL_egl.h	/^EGLAPI EGLStreamKHR EGLAPIENTRY eglCreateStreamFromFileDescriptorKHR (EGLDisplay dpy, EGLNativeF/;"	kind:p	typeref:typename:EGLAPI EGLStreamKHR EGLAPIENTRY	signature:(EGLDisplay dpy,EGLNativeFileDescriptorKHR file_descriptor)
eglCreateStreamKHR	SDL_egl.h	/^EGLAPI EGLStreamKHR EGLAPIENTRY eglCreateStreamKHR (EGLDisplay dpy, const EGLint *attrib_list);$/;"	kind:p	typeref:typename:EGLAPI EGLStreamKHR EGLAPIENTRY	signature:(EGLDisplay dpy,const EGLint * attrib_list)
eglCreateStreamProducerSurfaceKHR	SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreateStreamProducerSurfaceKHR (EGLDisplay dpy, EGLConfig confi/;"	kind:p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,EGLStreamKHR stream,const EGLint * attrib_list)
eglCreateStreamSyncNV	SDL_egl.h	/^EGLAPI EGLSyncKHR EGLAPIENTRY eglCreateStreamSyncNV (EGLDisplay dpy, EGLStreamKHR stream, EGLenu/;"	kind:p	typeref:typename:EGLAPI EGLSyncKHR EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream,EGLenum type,const EGLint * attrib_list)
eglCreateSync	SDL_egl.h	/^EGLAPI EGLSync EGLAPIENTRY eglCreateSync (EGLDisplay dpy, EGLenum type, const EGLAttrib *attrib_/;"	kind:p	typeref:typename:EGLAPI EGLSync EGLAPIENTRY	signature:(EGLDisplay dpy,EGLenum type,const EGLAttrib * attrib_list)
eglCreateSync64KHR	SDL_egl.h	/^EGLAPI EGLSyncKHR EGLAPIENTRY eglCreateSync64KHR (EGLDisplay dpy, EGLenum type, const EGLAttribK/;"	kind:p	typeref:typename:EGLAPI EGLSyncKHR EGLAPIENTRY	signature:(EGLDisplay dpy,EGLenum type,const EGLAttribKHR * attrib_list)
eglCreateSyncKHR	SDL_egl.h	/^EGLAPI EGLSyncKHR EGLAPIENTRY eglCreateSyncKHR (EGLDisplay dpy, EGLenum type, const EGLint *attr/;"	kind:p	typeref:typename:EGLAPI EGLSyncKHR EGLAPIENTRY	signature:(EGLDisplay dpy,EGLenum type,const EGLint * attrib_list)
eglCreateWindowSurface	SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreateWindowSurface (EGLDisplay dpy, EGLConfig config, EGLNativ/;"	kind:p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,EGLNativeWindowType win,const EGLint * attrib_list)
eglDestroyContext	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroyContext (EGLDisplay dpy, EGLContext ctx);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLContext ctx)
eglDestroyImage	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroyImage (EGLDisplay dpy, EGLImage image);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLImage image)
eglDestroyImageKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroyImageKHR (EGLDisplay dpy, EGLImageKHR image);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLImageKHR image)
eglDestroyStreamKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroyStreamKHR (EGLDisplay dpy, EGLStreamKHR stream);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream)
eglDestroySurface	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroySurface (EGLDisplay dpy, EGLSurface surface);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface)
eglDestroySync	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroySync (EGLDisplay dpy, EGLSync sync);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSync sync)
eglDestroySyncKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroySyncKHR (EGLDisplay dpy, EGLSyncKHR sync);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSyncKHR sync)
eglDestroySyncNV	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroySyncNV (EGLSyncNV sync);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLSyncNV sync)
eglDupNativeFenceFDANDROID	SDL_egl.h	/^EGLAPI EGLint EGLAPIENTRY eglDupNativeFenceFDANDROID (EGLDisplay dpy, EGLSyncKHR sync);$/;"	kind:p	typeref:typename:EGLAPI EGLint EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSyncKHR sync)
eglExportDMABUFImageMESA	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglExportDMABUFImageMESA (EGLDisplay dpy, EGLImageKHR image, int */;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLImageKHR image,int * fds,EGLint * strides,EGLint * offsets)
eglExportDMABUFImageQueryMESA	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglExportDMABUFImageQueryMESA (EGLDisplay dpy, EGLImageKHR image, /;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLImageKHR image,int * fourcc,int * num_planes,EGLuint64KHR * modifiers)
eglExportDRMImageMESA	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglExportDRMImageMESA (EGLDisplay dpy, EGLImageKHR image, EGLint */;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLImageKHR image,EGLint * name,EGLint * handle,EGLint * stride)
eglFenceNV	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglFenceNV (EGLSyncNV sync);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLSyncNV sync)
eglGetConfigAttrib	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetConfigAttrib (EGLDisplay dpy, EGLConfig config, EGLint attri/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig config,EGLint attribute,EGLint * value)
eglGetConfigs	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetConfigs (EGLDisplay dpy, EGLConfig *configs, EGLint config_s/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLConfig * configs,EGLint config_size,EGLint * num_config)
eglGetCurrentContext	SDL_egl.h	/^EGLAPI EGLContext EGLAPIENTRY eglGetCurrentContext (void);$/;"	kind:p	typeref:typename:EGLAPI EGLContext EGLAPIENTRY	signature:(void)
eglGetCurrentDisplay	SDL_egl.h	/^EGLAPI EGLDisplay EGLAPIENTRY eglGetCurrentDisplay (void);$/;"	kind:p	typeref:typename:EGLAPI EGLDisplay EGLAPIENTRY	signature:(void)
eglGetCurrentSurface	SDL_egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglGetCurrentSurface (EGLint readdraw);$/;"	kind:p	typeref:typename:EGLAPI EGLSurface EGLAPIENTRY	signature:(EGLint readdraw)
eglGetDisplay	SDL_egl.h	/^EGLAPI EGLDisplay EGLAPIENTRY eglGetDisplay (EGLNativeDisplayType display_id);$/;"	kind:p	typeref:typename:EGLAPI EGLDisplay EGLAPIENTRY	signature:(EGLNativeDisplayType display_id)
eglGetError	SDL_egl.h	/^EGLAPI EGLint EGLAPIENTRY eglGetError (void);$/;"	kind:p	typeref:typename:EGLAPI EGLint EGLAPIENTRY	signature:(void)
eglGetOutputLayersEXT	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetOutputLayersEXT (EGLDisplay dpy, const EGLAttrib *attrib_lis/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,const EGLAttrib * attrib_list,EGLOutputLayerEXT * layers,EGLint max_layers,EGLint * num_layers)
eglGetOutputPortsEXT	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetOutputPortsEXT (EGLDisplay dpy, const EGLAttrib *attrib_list/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,const EGLAttrib * attrib_list,EGLOutputPortEXT * ports,EGLint max_ports,EGLint * num_ports)
eglGetPlatformDisplay	SDL_egl.h	/^EGLAPI EGLDisplay EGLAPIENTRY eglGetPlatformDisplay (EGLenum platform, void *native_display, con/;"	kind:p	typeref:typename:EGLAPI EGLDisplay EGLAPIENTRY	signature:(EGLenum platform,void * native_display,const EGLAttrib * attrib_list)
eglGetPlatformDisplayEXT	SDL_egl.h	/^EGLAPI EGLDisplay EGLAPIENTRY eglGetPlatformDisplayEXT (EGLenum platform, void *native_display, /;"	kind:p	typeref:typename:EGLAPI EGLDisplay EGLAPIENTRY	signature:(EGLenum platform,void * native_display,const EGLint * attrib_list)
eglGetProcAddress	SDL_egl.h	/^EGLAPI __eglMustCastToProperFunctionPointerType EGLAPIENTRY eglGetProcAddress (const char *procn/;"	kind:p	typeref:typename:EGLAPI __eglMustCastToProperFunctionPointerType EGLAPIENTRY	signature:(const char * procname)
eglGetStreamFileDescriptorKHR	SDL_egl.h	/^EGLAPI EGLNativeFileDescriptorKHR EGLAPIENTRY eglGetStreamFileDescriptorKHR (EGLDisplay dpy, EGL/;"	kind:p	typeref:typename:EGLAPI EGLNativeFileDescriptorKHR EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream)
eglGetSyncAttrib	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetSyncAttrib (EGLDisplay dpy, EGLSync sync, EGLint attribute, /;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSync sync,EGLint attribute,EGLAttrib * value)
eglGetSyncAttribKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetSyncAttribKHR (EGLDisplay dpy, EGLSyncKHR sync, EGLint attri/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSyncKHR sync,EGLint attribute,EGLint * value)
eglGetSyncAttribNV	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetSyncAttribNV (EGLSyncNV sync, EGLint attribute, EGLint *valu/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLSyncNV sync,EGLint attribute,EGLint * value)
eglGetSystemTimeFrequencyNV	SDL_egl.h	/^EGLAPI EGLuint64NV EGLAPIENTRY eglGetSystemTimeFrequencyNV (void);$/;"	kind:p	typeref:typename:EGLAPI EGLuint64NV EGLAPIENTRY	signature:(void)
eglGetSystemTimeNV	SDL_egl.h	/^EGLAPI EGLuint64NV EGLAPIENTRY eglGetSystemTimeNV (void);$/;"	kind:p	typeref:typename:EGLAPI EGLuint64NV EGLAPIENTRY	signature:(void)
eglInitialize	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglInitialize (EGLDisplay dpy, EGLint *major, EGLint *minor);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLint * major,EGLint * minor)
eglLockSurfaceKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglLockSurfaceKHR (EGLDisplay dpy, EGLSurface surface, const EGLin/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,const EGLint * attrib_list)
eglMakeCurrent	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglMakeCurrent (EGLDisplay dpy, EGLSurface draw, EGLSurface read, /;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface draw,EGLSurface read,EGLContext ctx)
eglOutputLayerAttribEXT	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglOutputLayerAttribEXT (EGLDisplay dpy, EGLOutputLayerEXT layer, /;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint attribute,EGLAttrib value)
eglOutputPortAttribEXT	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglOutputPortAttribEXT (EGLDisplay dpy, EGLOutputPortEXT port, EGL/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLOutputPortEXT port,EGLint attribute,EGLAttrib value)
eglPostSubBufferNV	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglPostSubBufferNV (EGLDisplay dpy, EGLSurface surface, EGLint x, /;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint x,EGLint y,EGLint width,EGLint height)
eglQueryAPI	SDL_egl.h	/^EGLAPI EGLenum EGLAPIENTRY eglQueryAPI (void);$/;"	kind:p	typeref:typename:EGLAPI EGLenum EGLAPIENTRY	signature:(void)
eglQueryContext	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryContext (EGLDisplay dpy, EGLContext ctx, EGLint attribute,/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLContext ctx,EGLint attribute,EGLint * value)
eglQueryDeviceAttribEXT	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryDeviceAttribEXT (EGLDeviceEXT device, EGLint attribute, EG/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDeviceEXT device,EGLint attribute,EGLAttrib * value)
eglQueryDeviceStringEXT	SDL_egl.h	/^EGLAPI const char *EGLAPIENTRY eglQueryDeviceStringEXT (EGLDeviceEXT device, EGLint name);$/;"	kind:p	typeref:typename:EGLAPI const char * EGLAPIENTRY	signature:(EGLDeviceEXT device,EGLint name)
eglQueryDevicesEXT	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryDevicesEXT (EGLint max_devices, EGLDeviceEXT *devices, EGL/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLint max_devices,EGLDeviceEXT * devices,EGLint * num_devices)
eglQueryDisplayAttribEXT	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryDisplayAttribEXT (EGLDisplay dpy, EGLint attribute, EGLAtt/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLint attribute,EGLAttrib * value)
eglQueryNativeDisplayNV	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryNativeDisplayNV (EGLDisplay dpy, EGLNativeDisplayType *dis/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLNativeDisplayType * display_id)
eglQueryNativePixmapNV	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryNativePixmapNV (EGLDisplay dpy, EGLSurface surf, EGLNative/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surf,EGLNativePixmapType * pixmap)
eglQueryNativeWindowNV	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryNativeWindowNV (EGLDisplay dpy, EGLSurface surf, EGLNative/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surf,EGLNativeWindowType * window)
eglQueryOutputLayerAttribEXT	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryOutputLayerAttribEXT (EGLDisplay dpy, EGLOutputLayerEXT la/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint attribute,EGLAttrib * value)
eglQueryOutputLayerStringEXT	SDL_egl.h	/^EGLAPI const char *EGLAPIENTRY eglQueryOutputLayerStringEXT (EGLDisplay dpy, EGLOutputLayerEXT l/;"	kind:p	typeref:typename:EGLAPI const char * EGLAPIENTRY	signature:(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint name)
eglQueryOutputPortAttribEXT	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryOutputPortAttribEXT (EGLDisplay dpy, EGLOutputPortEXT port/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLOutputPortEXT port,EGLint attribute,EGLAttrib * value)
eglQueryOutputPortStringEXT	SDL_egl.h	/^EGLAPI const char *EGLAPIENTRY eglQueryOutputPortStringEXT (EGLDisplay dpy, EGLOutputPortEXT por/;"	kind:p	typeref:typename:EGLAPI const char * EGLAPIENTRY	signature:(EGLDisplay dpy,EGLOutputPortEXT port,EGLint name)
eglQueryStreamKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryStreamKHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenum at/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLint * value)
eglQueryStreamTimeKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryStreamTimeKHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenu/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLTimeKHR * value)
eglQueryStreamu64KHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryStreamu64KHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenum/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLuint64KHR * value)
eglQueryString	SDL_egl.h	/^EGLAPI const char *EGLAPIENTRY eglQueryString (EGLDisplay dpy, EGLint name);$/;"	kind:p	typeref:typename:EGLAPI const char * EGLAPIENTRY	signature:(EGLDisplay dpy,EGLint name)
eglQuerySurface	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQuerySurface (EGLDisplay dpy, EGLSurface surface, EGLint attrib/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint attribute,EGLint * value)
eglQuerySurface64KHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQuerySurface64KHR (EGLDisplay dpy, EGLSurface surface, EGLint a/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint attribute,EGLAttribKHR * value)
eglQuerySurfacePointerANGLE	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQuerySurfacePointerANGLE (EGLDisplay dpy, EGLSurface surface, E/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint attribute,void ** value)
eglReleaseTexImage	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglReleaseTexImage (EGLDisplay dpy, EGLSurface surface, EGLint buf/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint buffer)
eglReleaseThread	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglReleaseThread (void);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(void)
eglSetBlobCacheFuncsANDROID	SDL_egl.h	/^EGLAPI void EGLAPIENTRY eglSetBlobCacheFuncsANDROID (EGLDisplay dpy, EGLSetBlobFuncANDROID set, /;"	kind:p	typeref:typename:EGLAPI void EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSetBlobFuncANDROID set,EGLGetBlobFuncANDROID get)
eglSetDamageRegionKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSetDamageRegionKHR (EGLDisplay dpy, EGLSurface surface, EGLint /;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint * rects,EGLint n_rects)
eglSignalSyncKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSignalSyncKHR (EGLDisplay dpy, EGLSyncKHR sync, EGLenum mode);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSyncKHR sync,EGLenum mode)
eglSignalSyncNV	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSignalSyncNV (EGLSyncNV sync, EGLenum mode);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLSyncNV sync,EGLenum mode)
eglStreamAttribKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglStreamAttribKHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenum a/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLint value)
eglStreamConsumerAcquireKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglStreamConsumerAcquireKHR (EGLDisplay dpy, EGLStreamKHR stream);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream)
eglStreamConsumerGLTextureExternalKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglStreamConsumerGLTextureExternalKHR (EGLDisplay dpy, EGLStreamKH/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream)
eglStreamConsumerOutputEXT	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglStreamConsumerOutputEXT (EGLDisplay dpy, EGLStreamKHR stream, E/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream,EGLOutputLayerEXT layer)
eglStreamConsumerReleaseKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglStreamConsumerReleaseKHR (EGLDisplay dpy, EGLStreamKHR stream);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLStreamKHR stream)
eglSurfaceAttrib	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSurfaceAttrib (EGLDisplay dpy, EGLSurface surface, EGLint attri/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint attribute,EGLint value)
eglSwapBuffers	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapBuffers (EGLDisplay dpy, EGLSurface surface);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface)
eglSwapBuffersRegion2NOK	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapBuffersRegion2NOK (EGLDisplay dpy, EGLSurface surface, EGLi/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint numRects,const EGLint * rects)
eglSwapBuffersRegionNOK	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapBuffersRegionNOK (EGLDisplay dpy, EGLSurface surface, EGLin/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint numRects,const EGLint * rects)
eglSwapBuffersWithDamageEXT	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapBuffersWithDamageEXT (EGLDisplay dpy, EGLSurface surface, E/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint * rects,EGLint n_rects)
eglSwapBuffersWithDamageKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapBuffersWithDamageKHR (EGLDisplay dpy, EGLSurface surface, E/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface,EGLint * rects,EGLint n_rects)
eglSwapInterval	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapInterval (EGLDisplay dpy, EGLint interval);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLint interval)
eglTerminate	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglTerminate (EGLDisplay dpy);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy)
eglUnlockSurfaceKHR	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglUnlockSurfaceKHR (EGLDisplay dpy, EGLSurface surface);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSurface surface)
eglWaitClient	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglWaitClient (void);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(void)
eglWaitGL	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglWaitGL (void);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(void)
eglWaitNative	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglWaitNative (EGLint engine);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLint engine)
eglWaitSync	SDL_egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglWaitSync (EGLDisplay dpy, EGLSync sync, EGLint flags);$/;"	kind:p	typeref:typename:EGLAPI EGLBoolean EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSync sync,EGLint flags)
eglWaitSyncKHR	SDL_egl.h	/^EGLAPI EGLint EGLAPIENTRY eglWaitSyncKHR (EGLDisplay dpy, EGLSyncKHR sync, EGLint flags);$/;"	kind:p	typeref:typename:EGLAPI EGLint EGLAPIENTRY	signature:(EGLDisplay dpy,EGLSyncKHR sync,EGLint flags)
enabled	SDL_test_harness.h	/^    int enabled;$/;"	kind:m	struct:SDLTest_TestCaseReference	typeref:typename:int	access:public
end	SDL_haptic.h	/^    Sint16 end;             \/**< Ending strength level. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Sint16	access:public
error	SDL_events.h	/^    float error;$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:float	access:public
event	SDL_events.h	/^    Uint8 event;        \/**< ::SDL_DisplayEventID *\/$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
event	SDL_events.h	/^    Uint8 event;        \/**< ::SDL_WindowEventID *\/$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
event	SDL_syswm.h	/^            DFBEvent event;$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600508	typeref:typename:DFBEvent	access:public
event	SDL_syswm.h	/^            XEvent event;$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600408	typeref:typename:XEvent	access:public
f	SDL_endian.h	/^        float f;$/;"	kind:m	union:SDL_SwapFloat::__anon4be143ec030a	typeref:typename:float	access:public
fade_length	SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
fade_length	SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
fade_length	SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
fade_length	SDL_haptic.h	/^    Uint16 fade_length; \/**< Duration of the fade. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
fade_level	SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
fade_level	SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
fade_level	SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
fade_level	SDL_haptic.h	/^    Uint16 fade_level;  \/**< Level at the end of the fade. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
fd	SDL_rwops.h	/^            int fd;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:int	access:public
file	SDL_events.h	/^    char *file;         \/**< The file name, which should be freed with SDL_free(), is NULL on b/;"	kind:m	struct:SDL_DropEvent	typeref:typename:char *	access:public
fileNameRef	SDL_rwops.h	/^            void *fileNameRef;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:void *	access:public
filename	SDL_assert.h	/^    const char *filename;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:const char *	access:public
filter_index	SDL_audio.h	/^    int filter_index;           \/**< Current audio conversion function *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:int	access:public
filters	SDL_audio.h	/^    SDL_AudioFilter filters[SDL_AUDIOCVT_MAX_FILTERS + 1]; \/**< NULL-terminated list of filter /;"	kind:m	struct:SDL_AudioCVT	typeref:typename:SDL_AudioFilter[]	access:public
fingerId	SDL_events.h	/^    SDL_FingerID fingerId;$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:SDL_FingerID	access:public
flags	SDL_messagebox.h	/^    Uint32 flags;                       \/**< ::SDL_MessageBoxFlags *\/$/;"	kind:m	struct:__anon279331cb0708	typeref:typename:Uint32	access:public
flags	SDL_messagebox.h	/^    Uint32 flags;       \/**< ::SDL_MessageBoxButtonFlags *\/$/;"	kind:m	struct:__anon279331cb0308	typeref:typename:Uint32	access:public
flags	SDL_render.h	/^    Uint32 flags;               \/**< Supported ::SDL_RendererFlags *\/$/;"	kind:m	struct:SDL_RendererInfo	typeref:typename:Uint32	access:public
flags	SDL_surface.h	/^    Uint32 flags;               \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:Uint32	access:public
flags	SDL_test_common.h	/^    Uint32 flags;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:Uint32	access:public
format	SDL_audio.h	/^    SDL_AudioFormat format;     \/**< Audio data format *\/$/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:SDL_AudioFormat	access:public
format	SDL_pixels.h	/^    Uint32 format;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint32	access:public
format	SDL_surface.h	/^    SDL_PixelFormat *format;    \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:SDL_PixelFormat *	access:public
format	SDL_video.h	/^    Uint32 format;              \/**< pixel format *\/$/;"	kind:m	struct:__anonf43722b40108	typeref:typename:Uint32	access:public
fp	SDL_rwops.h	/^            FILE *fp;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380308	typeref:typename:FILE *	access:public
framebuffer	SDL_syswm.h	/^            GLuint framebuffer; \/**< The GL view's Framebuffer Object. It must be bound when re/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08	typeref:typename:GLuint	access:public
freq	SDL_audio.h	/^    int freq;                   \/**< DSP frequency -- samples per second *\/$/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:int	access:public
function	SDL_assert.h	/^    const char *function;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:const char *	access:public
g	SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	kind:m	struct:__anon279331cb0408	typeref:typename:Uint8	access:public
g	SDL_pixels.h	/^    Uint8 g;$/;"	kind:m	struct:SDL_Color	typeref:typename:Uint8	access:public
gestureId	SDL_events.h	/^    SDL_GestureID gestureId;$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:SDL_GestureID	access:public
glAccum	SDL_opengl.h	/^GLAPI void GLAPIENTRY glAccum( GLenum op, GLfloat value );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum op,GLfloat value)
glAccumxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glAccumxOES (GLenum op, GLfixed value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLfixed value)
glActiveProgramEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glActiveProgramEXT (GLuint program);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program)
glActiveShaderProgram	SDL_opengl_glext.h	/^GLAPI void APIENTRY glActiveShaderProgram (GLuint pipeline, GLuint program);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint pipeline,GLuint program)
glActiveShaderProgramEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glActiveShaderProgramEXT (GLuint pipeline, GLuint program);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint pipeline,GLuint program)
glActiveStencilFaceEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glActiveStencilFaceEXT (GLenum face);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face)
glActiveTexture	SDL_opengl.h	/^GLAPI void GLAPIENTRY glActiveTexture( GLenum texture );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum texture)
glActiveTexture	SDL_opengl_glext.h	/^GLAPI void APIENTRY glActiveTexture (GLenum texture);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture)
glActiveTexture	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glActiveTexture (GLenum texture);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum texture)
glActiveTextureARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glActiveTextureARB(GLenum texture);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum texture)
glActiveTextureARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glActiveTextureARB (GLenum texture);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture)
glActiveVaryingNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glActiveVaryingNV (GLuint program, const GLchar *name);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,const GLchar * name)
glAlphaFragmentOp1ATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glAlphaFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
glAlphaFragmentOp2ATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glAlphaFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
glAlphaFragmentOp3ATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glAlphaFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
glAlphaFunc	SDL_opengl.h	/^GLAPI void GLAPIENTRY glAlphaFunc( GLenum func, GLclampf ref );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum func,GLclampf ref)
glAlphaFuncQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glAlphaFuncQCOM (GLenum func, GLclampf ref);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum func,GLclampf ref)
glAlphaFuncxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glAlphaFuncxOES (GLenum func, GLfixed ref);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum func,GLfixed ref)
glApplyTextureEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glApplyTextureEXT (GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glAreProgramsResidentNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glAreProgramsResidentNV (GLsizei n, const GLuint *programs, GLboolean */;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLsizei n,const GLuint * programs,GLboolean * residences)
glAreTexturesResident	SDL_opengl.h	/^GLAPI GLboolean GLAPIENTRY glAreTexturesResident( GLsizei n,$/;"	kind:p	typeref:typename:GLAPI GLboolean GLAPIENTRY	signature:(GLsizei n,const GLuint * textures,GLboolean * residences)
glAreTexturesResidentEXT	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glAreTexturesResidentEXT (GLsizei n, const GLuint *textures, GLboolean /;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLsizei n,const GLuint * textures,GLboolean * residences)
glArrayElement	SDL_opengl.h	/^GLAPI void GLAPIENTRY glArrayElement( GLint i );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint i)
glArrayElementEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glArrayElementEXT (GLint i);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint i)
glArrayObjectATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glArrayObjectATI (GLenum array, GLint size, GLenum type, GLsizei stride, GLu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLint size,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
glAsyncMarkerSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glAsyncMarkerSGIX (GLuint marker);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint marker)
glAttachObjectARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glAttachObjectARB (GLhandleARB containerObj, GLhandleARB obj);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB containerObj,GLhandleARB obj)
glAttachShader	SDL_opengl_glext.h	/^GLAPI void APIENTRY glAttachShader (GLuint program, GLuint shader);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint shader)
glAttachShader	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glAttachShader (GLuint program, GLuint shader);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLuint shader)
glBegin	SDL_opengl.h	/^GLAPI void GLAPIENTRY glBegin( GLenum mode );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glBeginConditionalRender	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginConditionalRender (GLuint id, GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum mode)
glBeginConditionalRenderNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginConditionalRenderNV (GLuint id, GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum mode)
glBeginConditionalRenderNVX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginConditionalRenderNVX (GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glBeginFragmentShaderATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginFragmentShaderATI (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glBeginOcclusionQueryNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginOcclusionQueryNV (GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glBeginPerfMonitorAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginPerfMonitorAMD (GLuint monitor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint monitor)
glBeginPerfMonitorAMD	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glBeginPerfMonitorAMD (GLuint monitor);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint monitor)
glBeginPerfQueryINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginPerfQueryINTEL (GLuint queryHandle);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryHandle)
glBeginQuery	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginQuery (GLenum target, GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id)
glBeginQueryARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginQueryARB (GLenum target, GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id)
glBeginQueryEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glBeginQueryEXT (GLenum target, GLuint id);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLuint id)
glBeginQueryIndexed	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginQueryIndexed (GLenum target, GLuint index, GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint id)
glBeginTransformFeedback	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginTransformFeedback (GLenum primitiveMode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum primitiveMode)
glBeginTransformFeedbackEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginTransformFeedbackEXT (GLenum primitiveMode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum primitiveMode)
glBeginTransformFeedbackNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginTransformFeedbackNV (GLenum primitiveMode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum primitiveMode)
glBeginVertexShaderEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginVertexShaderEXT (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glBeginVideoCaptureNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBeginVideoCaptureNV (GLuint video_capture_slot);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot)
glBindAttribLocation	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindAttribLocation (GLuint program, GLuint index, const GLchar *name);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,const GLchar * name)
glBindAttribLocation	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBindAttribLocation (GLuint program, GLuint index, const GL/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLuint index,const GLchar * name)
glBindAttribLocationARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindAttribLocationARB (GLhandleARB programObj, GLuint index, const GLcharA/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj,GLuint index,const GLcharARB * name)
glBindBuffer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBuffer (GLenum target, GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint buffer)
glBindBuffer	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBindBuffer (GLenum target, GLuint buffer);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLuint buffer)
glBindBufferARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferARB (GLenum target, GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint buffer)
glBindBufferBase	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferBase (GLenum target, GLuint index, GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer)
glBindBufferBaseEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferBaseEXT (GLenum target, GLuint index, GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer)
glBindBufferBaseNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferBaseNV (GLenum target, GLuint index, GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer)
glBindBufferOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferOffsetEXT (GLenum target, GLuint index, GLuint buffer, GLintptr /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
glBindBufferOffsetNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferOffsetNV (GLenum target, GLuint index, GLuint buffer, GLintptr o/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
glBindBufferRange	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offs/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
glBindBufferRangeEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferRangeEXT (GLenum target, GLuint index, GLuint buffer, GLintptr o/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
glBindBufferRangeNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBufferRangeNV (GLenum target, GLuint index, GLuint buffer, GLintptr of/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
glBindBuffersBase	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBuffersBase (GLenum target, GLuint first, GLsizei count, const GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint first,GLsizei count,const GLuint * buffers)
glBindBuffersRange	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindBuffersRange (GLenum target, GLuint first, GLsizei count, const GLuint/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizeiptr * sizes)
glBindFragDataLocation	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindFragDataLocation (GLuint program, GLuint color, const GLchar *name);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint color,const GLchar * name)
glBindFragDataLocationEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindFragDataLocationEXT (GLuint program, GLuint color, const GLchar *name)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint color,const GLchar * name)
glBindFragDataLocationIndexed	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindFragDataLocationIndexed (GLuint program, GLuint colorNumber, GLuint in/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
glBindFragmentShaderATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindFragmentShaderATI (GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glBindFramebuffer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindFramebuffer (GLenum target, GLuint framebuffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint framebuffer)
glBindFramebuffer	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBindFramebuffer (GLenum target, GLuint framebuffer);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLuint framebuffer)
glBindFramebufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindFramebufferEXT (GLenum target, GLuint framebuffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint framebuffer)
glBindImageTexture	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindImageTexture (GLuint unit, GLuint texture, GLint level, GLboolean laye/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)
glBindImageTextureEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindImageTextureEXT (GLuint index, GLuint texture, GLint level, GLboolean /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLint format)
glBindImageTextures	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindImageTextures (GLuint first, GLsizei count, const GLuint *textures);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLuint * textures)
glBindLightParameterEXT	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glBindLightParameterEXT (GLenum light, GLenum value);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum light,GLenum value)
glBindMaterialParameterEXT	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glBindMaterialParameterEXT (GLenum face, GLenum value);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum face,GLenum value)
glBindMultiTextureEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindMultiTextureEXT (GLenum texunit, GLenum target, GLuint texture);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLuint texture)
glBindParameterEXT	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glBindParameterEXT (GLenum value);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum value)
glBindProgramARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindProgramARB (GLenum target, GLuint program);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint program)
glBindProgramNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindProgramNV (GLenum target, GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id)
glBindProgramPipeline	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindProgramPipeline (GLuint pipeline);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint pipeline)
glBindProgramPipelineEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glBindProgramPipelineEXT (GLuint pipeline);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint pipeline)
glBindRenderbuffer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindRenderbuffer (GLenum target, GLuint renderbuffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint renderbuffer)
glBindRenderbuffer	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBindRenderbuffer (GLenum target, GLuint renderbuffer);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLuint renderbuffer)
glBindRenderbufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindRenderbufferEXT (GLenum target, GLuint renderbuffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint renderbuffer)
glBindSampler	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindSampler (GLuint unit, GLuint sampler);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint unit,GLuint sampler)
glBindSamplers	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindSamplers (GLuint first, GLsizei count, const GLuint *samplers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLuint * samplers)
glBindTexGenParameterEXT	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glBindTexGenParameterEXT (GLenum unit, GLenum coord, GLenum value);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum unit,GLenum coord,GLenum value)
glBindTexture	SDL_opengl.h	/^GLAPI void GLAPIENTRY glBindTexture( GLenum target, GLuint texture );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLuint texture)
glBindTexture	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBindTexture (GLenum target, GLuint texture);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLuint texture)
glBindTextureEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindTextureEXT (GLenum target, GLuint texture);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint texture)
glBindTextureUnitParameterEXT	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glBindTextureUnitParameterEXT (GLenum unit, GLenum value);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum unit,GLenum value)
glBindTextures	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindTextures (GLuint first, GLsizei count, const GLuint *textures);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLuint * textures)
glBindTransformFeedback	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindTransformFeedback (GLenum target, GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id)
glBindTransformFeedbackNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindTransformFeedbackNV (GLenum target, GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id)
glBindVertexArray	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVertexArray (GLuint array);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint array)
glBindVertexArrayAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVertexArrayAPPLE (GLuint array);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint array)
glBindVertexArrayOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glBindVertexArrayOES (GLuint array);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint array)
glBindVertexBuffer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVertexBuffer (GLuint bindingindex, GLuint buffer, GLintptr offset, GLs/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
glBindVertexBuffers	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVertexBuffers (GLuint first, GLsizei count, const GLuint *buffers, con/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
glBindVertexShaderEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVertexShaderEXT (GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glBindVideoCaptureStreamBufferNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVideoCaptureStreamBufferNV (GLuint video_capture_slot, GLuint stream, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLintptrARB offset)
glBindVideoCaptureStreamTextureNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBindVideoCaptureStreamTextureNV (GLuint video_capture_slot, GLuint stream,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLenum target,GLuint texture)
glBinormal3bEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3bEXT (GLbyte bx, GLbyte by, GLbyte bz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte bx,GLbyte by,GLbyte bz)
glBinormal3bvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3bvEXT (const GLbyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * v)
glBinormal3dEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3dEXT (GLdouble bx, GLdouble by, GLdouble bz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble bx,GLdouble by,GLdouble bz)
glBinormal3dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3dvEXT (const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glBinormal3fEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3fEXT (GLfloat bx, GLfloat by, GLfloat bz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat bx,GLfloat by,GLfloat bz)
glBinormal3fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3fvEXT (const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glBinormal3iEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3iEXT (GLint bx, GLint by, GLint bz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint bx,GLint by,GLint bz)
glBinormal3ivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3ivEXT (const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glBinormal3sEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3sEXT (GLshort bx, GLshort by, GLshort bz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort bx,GLshort by,GLshort bz)
glBinormal3svEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormal3svEXT (const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glBinormalPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBinormalPointerEXT (GLenum type, GLsizei stride, const void *pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,const void * pointer)
glBitmap	SDL_opengl.h	/^GLAPI void GLAPIENTRY glBitmap( GLsizei width, GLsizei height,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei width,GLsizei height,GLfloat xorig,GLfloat yorig,GLfloat xmove,GLfloat ymove,const GLubyte * bitmap)
glBitmapxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBitmapxOES (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei width,GLsizei height,GLfixed xorig,GLfixed yorig,GLfixed xmove,GLfixed ymove,const GLubyte * bitmap)
glBlendBarrierNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendBarrierNV (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glBlendColor	SDL_opengl.h	/^GLAPI void GLAPIENTRY glBlendColor( GLclampf red, GLclampf green,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
glBlendColor	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
glBlendColor	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBlendColor (GLclampf red, GLclampf green, GLclampf blue, G/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
glBlendColorEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendColorEXT (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
glBlendColorxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendColorxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
glBlendEquation	SDL_opengl.h	/^GLAPI void GLAPIENTRY glBlendEquation( GLenum mode );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glBlendEquation	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquation (GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glBlendEquation	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBlendEquation ( GLenum mode );$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode)
glBlendEquationEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationEXT (GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glBlendEquationIndexedAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationIndexedAMD (GLuint buf, GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum mode)
glBlendEquationSeparate	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum modeRGB,GLenum modeAlpha)
glBlendEquationSeparate	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum modeRGB,GLenum modeAlpha)
glBlendEquationSeparateATI	SDL_opengl.h	/^GLAPI void GLAPIENTRY glBlendEquationSeparateATI( GLenum modeRGB, GLenum modeA );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum modeRGB,GLenum modeA)
glBlendEquationSeparateEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationSeparateEXT (GLenum modeRGB, GLenum modeAlpha);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum modeRGB,GLenum modeAlpha)
glBlendEquationSeparateIndexedAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationSeparateIndexedAMD (GLuint buf, GLenum modeRGB, GLenum modeAl/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
glBlendEquationSeparatei	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
glBlendEquationSeparateiARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationSeparateiARB (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
glBlendEquationi	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationi (GLuint buf, GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum mode)
glBlendEquationiARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendEquationiARB (GLuint buf, GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum mode)
glBlendFunc	SDL_opengl.h	/^GLAPI void GLAPIENTRY glBlendFunc( GLenum sfactor, GLenum dfactor );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum sfactor,GLenum dfactor)
glBlendFunc	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum sfactor,GLenum dfactor)
glBlendFuncIndexedAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncIndexedAMD (GLuint buf, GLenum src, GLenum dst);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum src,GLenum dst)
glBlendFuncSeparate	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlp/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
glBlendFuncSeparate	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBlendFuncSeparate (GLenum srcRGB, GLenum dstRGB, GLenum sr/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
glBlendFuncSeparateEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateEXT (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactor/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
glBlendFuncSeparateINGR	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateINGR (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfacto/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
glBlendFuncSeparateIndexedAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateIndexedAMD (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLe/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
glBlendFuncSeparatei	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncSeparatei (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAl/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
glBlendFuncSeparateiARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateiARB (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum sr/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
glBlendFunci	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFunci (GLuint buf, GLenum src, GLenum dst);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum src,GLenum dst)
glBlendFunciARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendFunciARB (GLuint buf, GLenum src, GLenum dst);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buf,GLenum src,GLenum dst)
glBlendParameteriNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlendParameteriNV (GLenum pname, GLint value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint value)
glBlitFramebuffer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlitFramebuffer (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
glBlitFramebufferANGLE	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glBlitFramebufferANGLE (GLint srcX0, GLint srcY0, GLint srcX1, GLint/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
glBlitFramebufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBlitFramebufferEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
glBlitFramebufferNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glBlitFramebufferNV (GLint srcX0, GLint srcY0, GLint srcX1, GLint sr/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
glBufferAddressRangeNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferAddressRangeNV (GLenum pname, GLuint index, GLuint64EXT address, GLs/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,GLuint64EXT address,GLsizeiptr length)
glBufferData	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferData (GLenum target, GLsizeiptr size, const void *data, GLenum usage/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizeiptr size,const void * data,GLenum usage)
glBufferData	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBufferData (GLenum target, GLsizeiptr size, const GLvoid* /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizeiptr size,const GLvoid * data,GLenum usage)
glBufferDataARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferDataARB (GLenum target, GLsizeiptrARB size, const void *data, GLenum/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizeiptrARB size,const void * data,GLenum usage)
glBufferParameteriAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferParameteriAPPLE (GLenum target, GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glBufferStorage	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferStorage (GLenum target, GLsizeiptr size, const void *data, GLbitfiel/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizeiptr size,const void * data,GLbitfield flags)
glBufferSubData	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const void/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr size,const void * data)
glBufferSubData	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr size,const GLvoid * data)
glBufferSubDataARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, c/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLintptrARB offset,GLsizeiptrARB size,const void * data)
glCallList	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCallList( GLuint list );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint list)
glCallLists	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCallLists( GLsizei n, GLenum type,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei n,GLenum type,const GLvoid * lists)
glCheckFramebufferStatus	SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glCheckFramebufferStatus (GLenum target);$/;"	kind:p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLenum target)
glCheckFramebufferStatus	SDL_opengles2_gl2.h	/^GL_APICALL GLenum       GL_APIENTRY glCheckFramebufferStatus (GLenum target);$/;"	kind:p	typeref:typename:GL_APICALL GLenum GL_APIENTRY	signature:(GLenum target)
glCheckFramebufferStatusEXT	SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glCheckFramebufferStatusEXT (GLenum target);$/;"	kind:p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLenum target)
glCheckNamedFramebufferStatusEXT	SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glCheckNamedFramebufferStatusEXT (GLuint framebuffer, GLenum target);$/;"	kind:p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLuint framebuffer,GLenum target)
glClampColor	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClampColor (GLenum target, GLenum clamp);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum clamp)
glClampColorARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClampColorARB (GLenum target, GLenum clamp);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum clamp)
glClear	SDL_opengl.h	/^GLAPI void GLAPIENTRY glClear( GLbitfield mask );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLbitfield mask)
glClear	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glClear (GLbitfield mask);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLbitfield mask)
glClearAccum	SDL_opengl.h	/^GLAPI void GLAPIENTRY glClearAccum( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
glClearAccumxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearAccumxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
glClearBufferData	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearBufferData (GLenum target, GLenum internalformat, GLenum format, GLen/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data)
glClearBufferSubData	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearBufferSubData (GLenum target, GLenum internalformat, GLintptr offset,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
glClearBufferfi	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearBufferfi (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stenc/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
glClearBufferfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearBufferfv (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum buffer,GLint drawbuffer,const GLfloat * value)
glClearBufferiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearBufferiv (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum buffer,GLint drawbuffer,const GLint * value)
glClearBufferuiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearBufferuiv (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum buffer,GLint drawbuffer,const GLuint * value)
glClearColor	SDL_opengl.h	/^GLAPI void GLAPIENTRY glClearColor( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha /;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
glClearColor	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glClearColor (GLclampf red, GLclampf green, GLclampf blue, G/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
glClearColorIiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearColorIiEXT (GLint red, GLint green, GLint blue, GLint alpha);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint red,GLint green,GLint blue,GLint alpha)
glClearColorIuiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearColorIuiEXT (GLuint red, GLuint green, GLuint blue, GLuint alpha);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint red,GLuint green,GLuint blue,GLuint alpha)
glClearColorxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearColorxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
glClearDepth	SDL_opengl.h	/^GLAPI void GLAPIENTRY glClearDepth( GLclampd depth );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLclampd depth)
glClearDepthdNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearDepthdNV (GLdouble depth);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble depth)
glClearDepthf	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearDepthf (GLfloat d);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat d)
glClearDepthf	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glClearDepthf (GLclampf depth);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLclampf depth)
glClearDepthfOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearDepthfOES (GLclampf depth);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf depth)
glClearDepthxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearDepthxOES (GLfixed depth);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed depth)
glClearIndex	SDL_opengl.h	/^GLAPI void GLAPIENTRY glClearIndex( GLfloat c );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat c)
glClearNamedBufferDataEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearNamedBufferDataEXT (GLuint buffer, GLenum internalformat, GLenum form/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
glClearNamedBufferSubDataEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearNamedBufferSubDataEXT (GLuint buffer, GLenum internalformat, GLsizeip/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum internalformat,GLsizeiptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
glClearStencil	SDL_opengl.h	/^GLAPI void GLAPIENTRY glClearStencil( GLint s );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint s)
glClearStencil	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glClearStencil (GLint s);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint s)
glClearTexImage	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearTexImage (GLuint texture, GLint level, GLenum format, GLenum type, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLint level,GLenum format,GLenum type,const void * data)
glClearTexSubImage	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClearTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffse/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * data)
glClientActiveTexture	SDL_opengl.h	/^GLAPI void GLAPIENTRY glClientActiveTexture( GLenum texture );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum texture)
glClientActiveTexture	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClientActiveTexture (GLenum texture);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture)
glClientActiveTextureARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glClientActiveTextureARB(GLenum texture);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum texture)
glClientActiveTextureARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClientActiveTextureARB (GLenum texture);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture)
glClientActiveVertexStreamATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClientActiveVertexStreamATI (GLenum stream);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream)
glClientAttribDefaultEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClientAttribDefaultEXT (GLbitfield mask);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield mask)
glClientWaitSync	SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	kind:p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLsync sync,GLbitfield flags,GLuint64 timeout)
glClientWaitSyncAPPLE	SDL_opengles2_gl2ext.h	/^GL_APICALL GLenum GL_APIENTRY glClientWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 tim/;"	kind:p	typeref:typename:GL_APICALL GLenum GL_APIENTRY	signature:(GLsync sync,GLbitfield flags,GLuint64 timeout)
glClipPlane	SDL_opengl.h	/^GLAPI void GLAPIENTRY glClipPlane( GLenum plane, const GLdouble *equation );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum plane,const GLdouble * equation)
glClipPlanefOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClipPlanefOES (GLenum plane, const GLfloat *equation);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum plane,const GLfloat * equation)
glClipPlanexOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glClipPlanexOES (GLenum plane, const GLfixed *equation);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum plane,const GLfixed * equation)
glColor3b	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3b( GLbyte red, GLbyte green, GLbyte blue );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLbyte red,GLbyte green,GLbyte blue)
glColor3bv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3bv( const GLbyte *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLbyte * v)
glColor3d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3d( GLdouble red, GLdouble green, GLdouble blue );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble red,GLdouble green,GLdouble blue)
glColor3dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3dv( const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glColor3f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3f( GLfloat red, GLfloat green, GLfloat blue );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue)
glColor3fVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
glColor3fVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor3fVertex3fvSUN (const GLfloat *c, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * c,const GLfloat * v)
glColor3fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3fv( const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glColor3hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
glColor3hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor3hvNV (const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glColor3i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3i( GLint red, GLint green, GLint blue );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint red,GLint green,GLint blue)
glColor3iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3iv( const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glColor3s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3s( GLshort red, GLshort green, GLshort blue );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort red,GLshort green,GLshort blue)
glColor3sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3sv( const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glColor3ub	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3ub( GLubyte red, GLubyte green, GLubyte blue );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLubyte red,GLubyte green,GLubyte blue)
glColor3ubv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3ubv( const GLubyte *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLubyte * v)
glColor3ui	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3ui( GLuint red, GLuint green, GLuint blue );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint red,GLuint green,GLuint blue)
glColor3uiv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3uiv( const GLuint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLuint * v)
glColor3us	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3us( GLushort red, GLushort green, GLushort blue );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLushort red,GLushort green,GLushort blue)
glColor3usv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor3usv( const GLushort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLushort * v)
glColor3xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor3xOES (GLfixed red, GLfixed green, GLfixed blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed red,GLfixed green,GLfixed blue)
glColor3xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor3xvOES (const GLfixed *components);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * components)
glColor4b	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4b( GLbyte red, GLbyte green,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLbyte red,GLbyte green,GLbyte blue,GLbyte alpha)
glColor4bv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4bv( const GLbyte *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLbyte * v)
glColor4d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4d( GLdouble red, GLdouble green,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble red,GLdouble green,GLdouble blue,GLdouble alpha)
glColor4dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4dv( const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glColor4f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4f( GLfloat red, GLfloat green,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
glColor4fNormal3fVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4fNormal3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glColor4fNormal3fVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4fNormal3fVertex3fvSUN (const GLfloat *c, const GLfloat *n, const GLf/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * c,const GLfloat * n,const GLfloat * v)
glColor4fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4fv( const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glColor4hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV red,GLhalfNV green,GLhalfNV blue,GLhalfNV alpha)
glColor4hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4hvNV (const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glColor4i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4i( GLint red, GLint green,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint red,GLint green,GLint blue,GLint alpha)
glColor4iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4iv( const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glColor4s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4s( GLshort red, GLshort green,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort red,GLshort green,GLshort blue,GLshort alpha)
glColor4sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4sv( const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glColor4ub	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4ub( GLubyte red, GLubyte green,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLubyte red,GLubyte green,GLubyte blue,GLubyte alpha)
glColor4ubVertex2fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4ubVertex2fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y)
glColor4ubVertex2fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4ubVertex2fvSUN (const GLubyte *c, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte * c,const GLfloat * v)
glColor4ubVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4ubVertex3fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
glColor4ubVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4ubVertex3fvSUN (const GLubyte *c, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte * c,const GLfloat * v)
glColor4ubv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4ubv( const GLubyte *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLubyte * v)
glColor4ui	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4ui( GLuint red, GLuint green,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint red,GLuint green,GLuint blue,GLuint alpha)
glColor4uiv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4uiv( const GLuint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLuint * v)
glColor4us	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4us( GLushort red, GLushort green,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLushort red,GLushort green,GLushort blue,GLushort alpha)
glColor4usv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColor4usv( const GLushort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLushort * v)
glColor4xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4xOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
glColor4xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColor4xvOES (const GLfixed *components);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * components)
glColorFormatNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride)
glColorFragmentOp1ATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
glColorFragmentOp2ATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
glColorFragmentOp3ATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
glColorMask	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorMask( GLboolean red, GLboolean green, GLboolean blue, GLboolean alp/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
glColorMask	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue,/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
glColorMaskIndexedEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorMaskIndexedEXT (GLuint index, GLboolean r, GLboolean g, GLboolean b, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
glColorMaski	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorMaski (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
glColorMaterial	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorMaterial( GLenum face, GLenum mode );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum mode)
glColorP3ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorP3ui (GLenum type, GLuint color);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint color)
glColorP3uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorP3uiv (GLenum type, const GLuint *color);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * color)
glColorP4ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorP4ui (GLenum type, GLuint color);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint color)
glColorP4uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorP4uiv (GLenum type, const GLuint *color);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * color)
glColorPointer	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorPointer( GLint size, GLenum type,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const GLvoid * ptr)
glColorPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, c/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
glColorPointerListIBM	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorPointerListIBM (GLint size, GLenum type, GLint stride, const void **p/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glColorPointervINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorPointervINTEL (GLint size, GLenum type, const void **pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,const void ** pointer)
glColorSubTable	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorSubTable( GLenum target,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const GLvoid * data)
glColorSubTable	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
glColorSubTableEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorSubTableEXT (GLenum target, GLsizei start, GLsizei count, GLenum form/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
glColorTable	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorTable( GLenum target, GLenum internalformat,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid * table)
glColorTable	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum fo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
glColorTableEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTableEXT (GLenum target, GLenum internalFormat, GLsizei width, GLenum/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalFormat,GLsizei width,GLenum format,GLenum type,const void * table)
glColorTableParameterfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorTableParameterfv(GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glColorTableParameterfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTableParameterfv (GLenum target, GLenum pname, const GLfloat *params)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glColorTableParameterfvSGI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTableParameterfvSGI (GLenum target, GLenum pname, const GLfloat *para/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glColorTableParameteriv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glColorTableParameteriv(GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glColorTableParameteriv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTableParameteriv (GLenum target, GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glColorTableParameterivSGI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTableParameterivSGI (GLenum target, GLenum pname, const GLint *params/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glColorTableSGI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glColorTableSGI (GLenum target, GLenum internalformat, GLsizei width, GLenum/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
glCombinerInputNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerInputNV (GLenum stage, GLenum portion, GLenum variable, GLenum inp/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum portion,GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
glCombinerOutputNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerOutputNV (GLenum stage, GLenum portion, GLenum abOutput, GLenum cd/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum portion,GLenum abOutput,GLenum cdOutput,GLenum sumOutput,GLenum scale,GLenum bias,GLboolean abDotProduct,GLboolean cdDotProduct,GLboolean muxSum)
glCombinerParameterfNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerParameterfNV (GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glCombinerParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerParameterfvNV (GLenum pname, const GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glCombinerParameteriNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerParameteriNV (GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glCombinerParameterivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerParameterivNV (GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * params)
glCombinerStageParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCombinerStageParameterfvNV (GLenum stage, GLenum pname, const GLfloat *par/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum pname,const GLfloat * params)
glCompileShader	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompileShader (GLuint shader);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader)
glCompileShader	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glCompileShader (GLuint shader);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader)
glCompileShaderARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompileShaderARB (GLhandleARB shaderObj);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB shaderObj)
glCompileShaderIncludeARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompileShaderIncludeARB (GLuint shader, GLsizei count, const GLchar *const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader,GLsizei count,const GLchar * const * path,const GLint * length)
glCompressedMultiTexImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
glCompressedMultiTexImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
glCompressedMultiTexImage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
glCompressedMultiTexSubImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint leve/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
glCompressedMultiTexSubImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint leve/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
glCompressedMultiTexSubImage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint leve/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
glCompressedTexImage1D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCompressedTexImage1D( GLenum target, GLint level, GLenum internalformat,/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const GLvoid * data)
glCompressedTexImage1D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
glCompressedTexImage1DARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexImage1DARB (GLenum target, GLint level, GLenum internalformat/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
glCompressedTexImage2D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCompressedTexImage2D( GLenum target, GLint level, GLenum internalformat,/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid * data)
glCompressedTexImage2D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
glCompressedTexImage2D	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glCompressedTexImage2D (GLenum target, GLint level, GLenum i/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid * data)
glCompressedTexImage2DARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexImage2DARB (GLenum target, GLint level, GLenum internalformat/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
glCompressedTexImage3D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCompressedTexImage3D( GLenum target, GLint level, GLenum internalformat,/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
glCompressedTexImage3D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
glCompressedTexImage3DARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexImage3DARB (GLenum target, GLint level, GLenum internalformat/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
glCompressedTexImage3DOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glCompressedTexImage3DOES (GLenum target, GLint level, GLenum intern/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
glCompressedTexSubImage1D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCompressedTexSubImage1D( GLenum target, GLint level, GLint xoffset, GLsi/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const GLvoid * data)
glCompressedTexSubImage1D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsize/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
glCompressedTexSubImage1DARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage1DARB (GLenum target, GLint level, GLint xoffset, GLs/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
glCompressedTexSubImage2D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCompressedTexSubImage2D( GLenum target, GLint level, GLint xoffset, GLin/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid * data)
glCompressedTexSubImage2D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
glCompressedTexSubImage2D	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glCompressedTexSubImage2D (GLenum target, GLint level, GLint/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid * data)
glCompressedTexSubImage2DARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage2DARB (GLenum target, GLint level, GLint xoffset, GLi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
glCompressedTexSubImage3D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCompressedTexSubImage3D( GLenum target, GLint level, GLint xoffset, GLin/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
glCompressedTexSubImage3D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
glCompressedTexSubImage3DARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage3DARB (GLenum target, GLint level, GLint xoffset, GLi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
glCompressedTexSubImage3DOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glCompressedTexSubImage3DOES (GLenum target, GLint level, GLint xoff/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
glCompressedTextureImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTextureImage1DEXT (GLuint texture, GLenum target, GLint level, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
glCompressedTextureImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTextureImage2DEXT (GLuint texture, GLenum target, GLint level, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
glCompressedTextureImage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTextureImage3DEXT (GLuint texture, GLenum target, GLint level, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
glCompressedTextureSubImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
glCompressedTextureSubImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
glCompressedTextureSubImage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
glConvolutionFilter1D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glConvolutionFilter1D( GLenum target,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid * image)
glConvolutionFilter1D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
glConvolutionFilter1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLsizei widt/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
glConvolutionFilter2D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glConvolutionFilter2D( GLenum target,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * image)
glConvolutionFilter2D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
glConvolutionFilter2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLsizei widt/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
glConvolutionParameterf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glConvolutionParameterf( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat params)
glConvolutionParameterf	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterf (GLenum target, GLenum pname, GLfloat params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat params)
glConvolutionParameterfEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterfEXT (GLenum target, GLenum pname, GLfloat params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat params)
glConvolutionParameterfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glConvolutionParameterfv( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glConvolutionParameterfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat *params/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glConvolutionParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterfvEXT (GLenum target, GLenum pname, const GLfloat *par/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glConvolutionParameteri	SDL_opengl.h	/^GLAPI void GLAPIENTRY glConvolutionParameteri( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint params)
glConvolutionParameteri	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameteri (GLenum target, GLenum pname, GLint params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint params)
glConvolutionParameteriEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameteriEXT (GLenum target, GLenum pname, GLint params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint params)
glConvolutionParameteriv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glConvolutionParameteriv( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glConvolutionParameteriv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameteriv (GLenum target, GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glConvolutionParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterivEXT (GLenum target, GLenum pname, const GLint *param/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glConvolutionParameterxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterxOES (GLenum target, GLenum pname, GLfixed param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed param)
glConvolutionParameterxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glConvolutionParameterxvOES (GLenum target, GLenum pname, const GLfixed *par/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfixed * params)
glCopyBufferSubData	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyBufferSubData (GLenum readTarget, GLenum writeTarget, GLintptr readOff/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
glCopyColorSubTable	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyColorSubTable( GLenum target, GLsizei start,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
glCopyColorSubTable	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
glCopyColorSubTableEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyColorSubTableEXT (GLenum target, GLsizei start, GLint x, GLint y, GLsi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
glCopyColorTable	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyColorTable( GLenum target, GLenum internalformat,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
glCopyColorTable	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
glCopyColorTableSGI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyColorTableSGI (GLenum target, GLenum internalformat, GLint x, GLint y,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
glCopyConvolutionFilter1D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyConvolutionFilter1D( GLenum target,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
glCopyConvolutionFilter1D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
glCopyConvolutionFilter1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLint x,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
glCopyConvolutionFilter2D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyConvolutionFilter2D( GLenum target,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyConvolutionFilter2D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyConvolutionFilter2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLint x,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyImageSubData	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyImageSubData (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
glCopyImageSubDataNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyImageSubDataNV (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
glCopyMultiTexImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
glCopyMultiTexImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
glCopyMultiTexSubImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
glCopyMultiTexSubImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyMultiTexSubImage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyPathNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyPathNV (GLuint resultPath, GLuint srcPath);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint resultPath,GLuint srcPath)
glCopyPixels	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyPixels( GLint x, GLint y,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height,GLenum type)
glCopyTexImage1D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyTexImage1D( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
glCopyTexImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTexImage1DEXT (GLenum target, GLint level, GLenum internalformat, GLin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
glCopyTexImage2D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyTexImage2D( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
glCopyTexImage2D	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glCopyTexImage2D (GLenum target, GLint level, GLenum interna/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
glCopyTexImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTexImage2DEXT (GLenum target, GLint level, GLenum internalformat, GLin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
glCopyTexSubImage1D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyTexSubImage1D( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
glCopyTexSubImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLint x, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
glCopyTexSubImage2D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyTexSubImage2D( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTexSubImage2D	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffs/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTexSubImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yof/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTexSubImage3D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCopyTexSubImage3D( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTexSubImage3D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffse/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTexSubImage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yof/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTexSubImage3DOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glCopyTexSubImage3DOES (GLenum target, GLint level, GLint xoffset, G/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTextureImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
glCopyTextureImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
glCopyTextureLevelsAPPLE	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glCopyTextureLevelsAPPLE (GLuint destinationTexture, GLuint sourceTe/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint destinationTexture,GLuint sourceTexture,GLint sourceBaseLevel,GLsizei sourceLevelCount)
glCopyTextureSubImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
glCopyTextureSubImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCopyTextureSubImage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
glCoverFillPathInstancedNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const voi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
glCoverFillPathNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCoverFillPathNV (GLuint path, GLenum coverMode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum coverMode)
glCoverStrokePathInstancedNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const v/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
glCoverStrokePathNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCoverStrokePathNV (GLuint path, GLenum coverMode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum coverMode)
glCoverageMaskNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glCoverageMaskNV (GLboolean mask);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLboolean mask)
glCoverageOperationNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glCoverageOperationNV (GLenum operation);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum operation)
glCreatePerfQueryINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCreatePerfQueryINTEL (GLuint queryId, GLuint *queryHandle);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryId,GLuint * queryHandle)
glCreateProgram	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glCreateProgram (void);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(void)
glCreateProgram	SDL_opengles2_gl2.h	/^GL_APICALL GLuint       GL_APIENTRY glCreateProgram (void);$/;"	kind:p	typeref:typename:GL_APICALL GLuint GL_APIENTRY	signature:(void)
glCreateProgramObjectARB	SDL_opengl_glext.h	/^GLAPI GLhandleARB APIENTRY glCreateProgramObjectARB (void);$/;"	kind:p	typeref:typename:GLAPI GLhandleARB APIENTRY	signature:(void)
glCreateShader	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glCreateShader (GLenum type);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum type)
glCreateShader	SDL_opengles2_gl2.h	/^GL_APICALL GLuint       GL_APIENTRY glCreateShader (GLenum type);$/;"	kind:p	typeref:typename:GL_APICALL GLuint GL_APIENTRY	signature:(GLenum type)
glCreateShaderObjectARB	SDL_opengl_glext.h	/^GLAPI GLhandleARB APIENTRY glCreateShaderObjectARB (GLenum shaderType);$/;"	kind:p	typeref:typename:GLAPI GLhandleARB APIENTRY	signature:(GLenum shaderType)
glCreateShaderProgramEXT	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glCreateShaderProgramEXT (GLenum type, const GLchar *string);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum type,const GLchar * string)
glCreateShaderProgramv	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glCreateShaderProgramv (GLenum type, GLsizei count, const GLchar *const*st/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum type,GLsizei count,const GLchar * const * strings)
glCreateShaderProgramvEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL GLuint GL_APIENTRY glCreateShaderProgramvEXT (GLenum type, GLsizei count, const GLcha/;"	kind:p	typeref:typename:GL_APICALL GLuint GL_APIENTRY	signature:(GLenum type,GLsizei count,const GLchar ** strings)
glCreateSyncFromCLeventARB	SDL_opengl_glext.h	/^GLAPI GLsync APIENTRY glCreateSyncFromCLeventARB (struct _cl_context *context, struct _cl_event /;"	kind:p	typeref:typename:GLAPI GLsync APIENTRY	signature:(struct _cl_context * context,struct _cl_event * event,GLbitfield flags)
glCullFace	SDL_opengl.h	/^GLAPI void GLAPIENTRY glCullFace( GLenum mode );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glCullFace	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glCullFace (GLenum mode);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode)
glCullParameterdvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCullParameterdvEXT (GLenum pname, GLdouble *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLdouble * params)
glCullParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCullParameterfvEXT (GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat * params)
glCurrentPaletteMatrixARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glCurrentPaletteMatrixARB (GLint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint index)
glDebugMessageCallback	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageCallback (GLDEBUGPROC callback, const void *userParam);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLDEBUGPROC callback,const void * userParam)
glDebugMessageCallbackAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageCallbackAMD (GLDEBUGPROCAMD callback, void *userParam);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLDEBUGPROCAMD callback,void * userParam)
glDebugMessageCallbackARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageCallbackARB (GLDEBUGPROCARB callback, const void *userParam);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLDEBUGPROCARB callback,const void * userParam)
glDebugMessageCallbackKHR	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDebugMessageCallbackKHR (GLDEBUGPROCKHR callback, const void *user/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLDEBUGPROCKHR callback,const void * userParam)
glDebugMessageControl	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageControl (GLenum source, GLenum type, GLenum severity, GLsizei /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
glDebugMessageControlARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageControlARB (GLenum source, GLenum type, GLenum severity, GLsiz/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
glDebugMessageControlKHR	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDebugMessageControlKHR (GLenum source, GLenum type, GLenum severit/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
glDebugMessageEnableAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageEnableAMD (GLenum category, GLenum severity, GLsizei count, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum category,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
glDebugMessageInsert	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageInsert (GLenum source, GLenum type, GLuint id, GLenum severity/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
glDebugMessageInsertAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageInsertAMD (GLenum category, GLenum severity, GLuint id, GLsize/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum category,GLenum severity,GLuint id,GLsizei length,const GLchar * buf)
glDebugMessageInsertARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDebugMessageInsertARB (GLenum source, GLenum type, GLuint id, GLenum sever/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
glDebugMessageInsertKHR	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDebugMessageInsertKHR (GLenum source, GLenum type, GLuint id, GLen/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
glDeformSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeformSGIX (GLbitfield mask);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield mask)
glDeformationMap3dSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeformationMap3dSGIX (GLenum target, GLdouble u1, GLdouble u2, GLint ustri/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,GLdouble w1,GLdouble w2,GLint wstride,GLint worder,const GLdouble * points)
glDeformationMap3fSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeformationMap3fSGIX (GLenum target, GLfloat u1, GLfloat u2, GLint ustride/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,GLfloat w1,GLfloat w2,GLint wstride,GLint worder,const GLfloat * points)
glDeleteAsyncMarkersSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteAsyncMarkersSGIX (GLuint marker, GLsizei range);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint marker,GLsizei range)
glDeleteBuffers	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteBuffers (GLsizei n, const GLuint *buffers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * buffers)
glDeleteBuffers	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDeleteBuffers (GLsizei n, const GLuint* buffers);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * buffers)
glDeleteBuffersARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteBuffersARB (GLsizei n, const GLuint *buffers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * buffers)
glDeleteFencesAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteFencesAPPLE (GLsizei n, const GLuint *fences);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * fences)
glDeleteFencesNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteFencesNV (GLsizei n, const GLuint *fences);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * fences)
glDeleteFencesNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDeleteFencesNV (GLsizei n, const GLuint *fences);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * fences)
glDeleteFragmentShaderATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteFragmentShaderATI (GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glDeleteFramebuffers	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteFramebuffers (GLsizei n, const GLuint *framebuffers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * framebuffers)
glDeleteFramebuffers	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDeleteFramebuffers (GLsizei n, const GLuint* framebuffers)/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * framebuffers)
glDeleteFramebuffersEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteFramebuffersEXT (GLsizei n, const GLuint *framebuffers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * framebuffers)
glDeleteLists	SDL_opengl.h	/^GLAPI void GLAPIENTRY glDeleteLists( GLuint list, GLsizei range );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint list,GLsizei range)
glDeleteNamedStringARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteNamedStringARB (GLint namelen, const GLchar *name);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint namelen,const GLchar * name)
glDeleteNamesAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteNamesAMD (GLenum identifier, GLuint num, const GLuint *names);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum identifier,GLuint num,const GLuint * names)
glDeleteObjectARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteObjectARB (GLhandleARB obj);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB obj)
glDeleteOcclusionQueriesNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteOcclusionQueriesNV (GLsizei n, const GLuint *ids);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * ids)
glDeletePathsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeletePathsNV (GLuint path, GLsizei range);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLsizei range)
glDeletePerfMonitorsAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeletePerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * monitors)
glDeletePerfMonitorsAMD	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDeletePerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * monitors)
glDeletePerfQueryINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeletePerfQueryINTEL (GLuint queryHandle);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryHandle)
glDeleteProgram	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteProgram (GLuint program);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program)
glDeleteProgram	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDeleteProgram (GLuint program);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program)
glDeleteProgramPipelines	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteProgramPipelines (GLsizei n, const GLuint *pipelines);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * pipelines)
glDeleteProgramPipelinesEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDeleteProgramPipelinesEXT (GLsizei n, const GLuint *pipelines);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * pipelines)
glDeleteProgramsARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteProgramsARB (GLsizei n, const GLuint *programs);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * programs)
glDeleteProgramsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteProgramsNV (GLsizei n, const GLuint *programs);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * programs)
glDeleteQueries	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteQueries (GLsizei n, const GLuint *ids);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * ids)
glDeleteQueriesARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteQueriesARB (GLsizei n, const GLuint *ids);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * ids)
glDeleteQueriesEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDeleteQueriesEXT (GLsizei n, const GLuint *ids);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * ids)
glDeleteRenderbuffers	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteRenderbuffers (GLsizei n, const GLuint *renderbuffers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * renderbuffers)
glDeleteRenderbuffers	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDeleteRenderbuffers (GLsizei n, const GLuint* renderbuffer/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * renderbuffers)
glDeleteRenderbuffersEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteRenderbuffersEXT (GLsizei n, const GLuint *renderbuffers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * renderbuffers)
glDeleteSamplers	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteSamplers (GLsizei count, const GLuint *samplers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei count,const GLuint * samplers)
glDeleteShader	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteShader (GLuint shader);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader)
glDeleteShader	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDeleteShader (GLuint shader);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader)
glDeleteSync	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteSync (GLsync sync);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsync sync)
glDeleteSyncAPPLE	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDeleteSyncAPPLE (GLsync sync);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsync sync)
glDeleteTextures	SDL_opengl.h	/^GLAPI void GLAPIENTRY glDeleteTextures( GLsizei n, const GLuint *textures);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei n,const GLuint * textures)
glDeleteTextures	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDeleteTextures (GLsizei n, const GLuint* textures);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * textures)
glDeleteTexturesEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteTexturesEXT (GLsizei n, const GLuint *textures);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * textures)
glDeleteTransformFeedbacks	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteTransformFeedbacks (GLsizei n, const GLuint *ids);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * ids)
glDeleteTransformFeedbacksNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteTransformFeedbacksNV (GLsizei n, const GLuint *ids);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * ids)
glDeleteVertexArrays	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteVertexArrays (GLsizei n, const GLuint *arrays);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * arrays)
glDeleteVertexArraysAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteVertexArraysAPPLE (GLsizei n, const GLuint *arrays);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * arrays)
glDeleteVertexArraysOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDeleteVertexArraysOES (GLsizei n, const GLuint *arrays);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * arrays)
glDeleteVertexShaderEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDeleteVertexShaderEXT (GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glDepthBoundsEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthBoundsEXT (GLclampd zmin, GLclampd zmax);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampd zmin,GLclampd zmax)
glDepthBoundsdNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthBoundsdNV (GLdouble zmin, GLdouble zmax);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble zmin,GLdouble zmax)
glDepthFunc	SDL_opengl.h	/^GLAPI void GLAPIENTRY glDepthFunc( GLenum func );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum func)
glDepthFunc	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDepthFunc (GLenum func);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum func)
glDepthMask	SDL_opengl.h	/^GLAPI void GLAPIENTRY glDepthMask( GLboolean flag );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLboolean flag)
glDepthMask	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDepthMask (GLboolean flag);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLboolean flag)
glDepthRange	SDL_opengl.h	/^GLAPI void GLAPIENTRY glDepthRange( GLclampd near_val, GLclampd far_val );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLclampd near_val,GLclampd far_val)
glDepthRangeArrayv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthRangeArrayv (GLuint first, GLsizei count, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLdouble * v)
glDepthRangeIndexed	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthRangeIndexed (GLuint index, GLdouble n, GLdouble f);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble n,GLdouble f)
glDepthRangedNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthRangedNV (GLdouble zNear, GLdouble zFar);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble zNear,GLdouble zFar)
glDepthRangef	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthRangef (GLfloat n, GLfloat f);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat n,GLfloat f)
glDepthRangef	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDepthRangef (GLclampf zNear, GLclampf zFar);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLclampf zNear,GLclampf zFar)
glDepthRangefOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthRangefOES (GLclampf n, GLclampf f);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf n,GLclampf f)
glDepthRangexOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDepthRangexOES (GLfixed n, GLfixed f);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed n,GLfixed f)
glDetachObjectARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDetachObjectARB (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB containerObj,GLhandleARB attachedObj)
glDetachShader	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDetachShader (GLuint program, GLuint shader);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint shader)
glDetachShader	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDetachShader (GLuint program, GLuint shader);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLuint shader)
glDetailTexFuncSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDetailTexFuncSGIS (GLenum target, GLsizei n, const GLfloat *points);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei n,const GLfloat * points)
glDisable	SDL_opengl.h	/^GLAPI void GLAPIENTRY glDisable( GLenum cap );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum cap)
glDisable	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDisable (GLenum cap);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum cap)
glDisableClientState	SDL_opengl.h	/^GLAPI void GLAPIENTRY glDisableClientState( GLenum cap );  \/* 1.1 *\/$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum cap)
glDisableClientStateIndexedEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableClientStateIndexedEXT (GLenum array, GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLuint index)
glDisableClientStateiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableClientStateiEXT (GLenum array, GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLuint index)
glDisableDriverControlQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDisableDriverControlQCOM (GLuint driverControl);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint driverControl)
glDisableIndexedEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableIndexedEXT (GLenum target, GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index)
glDisableVariantClientStateEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableVariantClientStateEXT (GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glDisableVertexArrayAttribEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableVertexArrayAttribEXT (GLuint vaobj, GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint index)
glDisableVertexArrayEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableVertexArrayEXT (GLuint vaobj, GLenum array);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLenum array)
glDisableVertexAttribAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableVertexAttribAPPLE (GLuint index, GLenum pname);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname)
glDisableVertexAttribArray	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableVertexAttribArray (GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index)
glDisableVertexAttribArray	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDisableVertexAttribArray (GLuint index);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index)
glDisableVertexAttribArrayARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisableVertexAttribArrayARB (GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index)
glDisablei	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDisablei (GLenum target, GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index)
glDiscardFramebufferEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDiscardFramebufferEXT (GLenum target, GLsizei numAttachments, cons/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei numAttachments,const GLenum * attachments)
glDispatchCompute	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDispatchCompute (GLuint num_groups_x, GLuint num_groups_y, GLuint num_grou/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)
glDispatchComputeGroupSizeARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDispatchComputeGroupSizeARB (GLuint num_groups_x, GLuint num_groups_y, GLu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z)
glDispatchComputeIndirect	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDispatchComputeIndirect (GLintptr indirect);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLintptr indirect)
glDrawArrays	SDL_opengl.h	/^GLAPI void GLAPIENTRY glDrawArrays( GLenum mode, GLint first, GLsizei count );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode,GLint first,GLsizei count)
glDrawArrays	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDrawArrays (GLenum mode, GLint first, GLsizei count);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,GLint first,GLsizei count)
glDrawArraysEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawArraysEXT (GLenum mode, GLint first, GLsizei count);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint first,GLsizei count)
glDrawArraysIndirect	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawArraysIndirect (GLenum mode, const void *indirect);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const void * indirect)
glDrawArraysInstanced	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawArraysInstanced (GLenum mode, GLint first, GLsizei count, GLsizei inst/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)
glDrawArraysInstancedANGLE	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawArraysInstancedANGLE (GLenum mode, GLint first, GLsizei count,/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
glDrawArraysInstancedARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawArraysInstancedARB (GLenum mode, GLint first, GLsizei count, GLsizei p/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
glDrawArraysInstancedBaseInstance	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawArraysInstancedBaseInstance (GLenum mode, GLint first, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)
glDrawArraysInstancedEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawArraysInstancedEXT (GLenum mode, GLint start, GLsizei count, GLsizei p/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint start,GLsizei count,GLsizei primcount)
glDrawArraysInstancedNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawArraysInstancedNV (GLenum mode, GLint first, GLsizei count, GL/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
glDrawBuffer	SDL_opengl.h	/^GLAPI void GLAPIENTRY glDrawBuffer( GLenum mode );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glDrawBuffers	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawBuffers (GLsizei n, const GLenum *bufs);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLenum * bufs)
glDrawBuffersARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawBuffersARB (GLsizei n, const GLenum *bufs);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLenum * bufs)
glDrawBuffersATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawBuffersATI (GLsizei n, const GLenum *bufs);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLenum * bufs)
glDrawBuffersEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawBuffersEXT (GLsizei n, const GLenum *bufs);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLenum * bufs)
glDrawBuffersIndexedEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawBuffersIndexedEXT (GLint n, const GLenum *location, const GLin/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint n,const GLenum * location,const GLint * indices)
glDrawBuffersNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawBuffersNV (GLsizei n, const GLenum *bufs);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLenum * bufs)
glDrawElementArrayAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementArrayAPPLE (GLenum mode, GLint first, GLsizei count);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint first,GLsizei count)
glDrawElementArrayATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementArrayATI (GLenum mode, GLsizei count);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count)
glDrawElements	SDL_opengl.h	/^GLAPI void GLAPIENTRY glDrawElements( GLenum mode, GLsizei count,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices)
glDrawElements	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glDrawElements (GLenum mode, GLsizei count, GLenum type, con/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices)
glDrawElementsBaseVertex	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsBaseVertex (GLenum mode, GLsizei count, GLenum type, const voi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex)
glDrawElementsIndirect	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsIndirect (GLenum mode, GLenum type, const void *indirect);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLenum type,const void * indirect)
glDrawElementsInstanced	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsInstanced (GLenum mode, GLsizei count, GLenum type, const void/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount)
glDrawElementsInstancedANGLE	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawElementsInstancedANGLE (GLenum mode, GLsizei count, GLenum typ/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
glDrawElementsInstancedARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedARB (GLenum mode, GLsizei count, GLenum type, const v/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
glDrawElementsInstancedBaseInstance	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseInstance (GLenum mode, GLsizei count, GLenum type/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
glDrawElementsInstancedBaseVertex	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseVertex (GLenum mode, GLsizei count, GLenum type, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex)
glDrawElementsInstancedBaseVertexBaseInstance	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseVertexBaseInstance (GLenum mode, GLsizei count, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)
glDrawElementsInstancedEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedEXT (GLenum mode, GLsizei count, GLenum type, const v/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
glDrawElementsInstancedNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glDrawElementsInstancedNV (GLenum mode, GLsizei count, GLenum type, /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices,GLsizei primcount)
glDrawMeshArraysSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawMeshArraysSUN (GLenum mode, GLint first, GLsizei count, GLsizei width)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLint first,GLsizei count,GLsizei width)
glDrawPixels	SDL_opengl.h	/^GLAPI void GLAPIENTRY glDrawPixels( GLsizei width, GLsizei height,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * pixels)
glDrawRangeElementArrayAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, GLint f/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint start,GLuint end,GLint first,GLsizei count)
glDrawRangeElementArrayATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawRangeElementArrayATI (GLenum mode, GLuint start, GLuint end, GLsizei c/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint start,GLuint end,GLsizei count)
glDrawRangeElements	SDL_opengl.h	/^GLAPI void GLAPIENTRY glDrawRangeElements( GLenum mode, GLuint start,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid * indices)
glDrawRangeElements	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
glDrawRangeElementsBaseVertex	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawRangeElementsBaseVertex (GLenum mode, GLuint start, GLuint end, GLsize/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex)
glDrawRangeElementsEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawRangeElementsEXT (GLenum mode, GLuint start, GLuint end, GLsizei count/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
glDrawTextureNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawTextureNV (GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLf/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)
glDrawTransformFeedback	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawTransformFeedback (GLenum mode, GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint id)
glDrawTransformFeedbackInstanced	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackInstanced (GLenum mode, GLuint id, GLsizei instanceco/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint id,GLsizei instancecount)
glDrawTransformFeedbackNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackNV (GLenum mode, GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint id)
glDrawTransformFeedbackStream	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackStream (GLenum mode, GLuint id, GLuint stream);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint id,GLuint stream)
glDrawTransformFeedbackStreamInstanced	SDL_opengl_glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackStreamInstanced (GLenum mode, GLuint id, GLuint strea/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount)
glEGLImageTargetRenderbufferStorageOES	SDL_opengl.h	/^GLAPI void APIENTRY glEGLImageTargetRenderbufferStorageOES (GLenum target, GLeglImageOES image);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLeglImageOES image)
glEGLImageTargetRenderbufferStorageOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glEGLImageTargetRenderbufferStorageOES (GLenum target, GLeglImageOES/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLeglImageOES image)
glEGLImageTargetTexture2DOES	SDL_opengl.h	/^GLAPI void APIENTRY glEGLImageTargetTexture2DOES (GLenum target, GLeglImageOES image);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLeglImageOES image)
glEGLImageTargetTexture2DOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glEGLImageTargetTexture2DOES (GLenum target, GLeglImageOES image);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLeglImageOES image)
glEdgeFlag	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEdgeFlag( GLboolean flag );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLboolean flag)
glEdgeFlagFormatNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEdgeFlagFormatNV (GLsizei stride);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei stride)
glEdgeFlagPointer	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEdgeFlagPointer( GLsizei stride, const GLvoid *ptr );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei stride,const GLvoid * ptr)
glEdgeFlagPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEdgeFlagPointerEXT (GLsizei stride, GLsizei count, const GLboolean *pointe/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei stride,GLsizei count,const GLboolean * pointer)
glEdgeFlagPointerListIBM	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEdgeFlagPointerListIBM (GLint stride, const GLboolean **pointer, GLint ptr/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint stride,const GLboolean ** pointer,GLint ptrstride)
glEdgeFlagv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEdgeFlagv( const GLboolean *flag );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLboolean * flag)
glElementPointerAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glElementPointerAPPLE (GLenum type, const void *pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const void * pointer)
glElementPointerATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glElementPointerATI (GLenum type, const void *pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const void * pointer)
glEnable	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEnable( GLenum cap );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum cap)
glEnable	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glEnable (GLenum cap);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum cap)
glEnableClientState	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEnableClientState( GLenum cap );  \/* 1.1 *\/$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum cap)
glEnableClientStateIndexedEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableClientStateIndexedEXT (GLenum array, GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLuint index)
glEnableClientStateiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableClientStateiEXT (GLenum array, GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLuint index)
glEnableDriverControlQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glEnableDriverControlQCOM (GLuint driverControl);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint driverControl)
glEnableIndexedEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableIndexedEXT (GLenum target, GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index)
glEnableVariantClientStateEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableVariantClientStateEXT (GLuint id);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id)
glEnableVertexArrayAttribEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableVertexArrayAttribEXT (GLuint vaobj, GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint index)
glEnableVertexArrayEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableVertexArrayEXT (GLuint vaobj, GLenum array);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLenum array)
glEnableVertexAttribAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableVertexAttribAPPLE (GLuint index, GLenum pname);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname)
glEnableVertexAttribArray	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableVertexAttribArray (GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index)
glEnableVertexAttribArray	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glEnableVertexAttribArray (GLuint index);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index)
glEnableVertexAttribArrayARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnableVertexAttribArrayARB (GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index)
glEnablei	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEnablei (GLenum target, GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index)
glEnd	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEnd( void );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glEndConditionalRender	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndConditionalRender (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndConditionalRenderNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndConditionalRenderNV (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndConditionalRenderNVX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndConditionalRenderNVX (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndFragmentShaderATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndFragmentShaderATI (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndList	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEndList( void );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glEndOcclusionQueryNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndOcclusionQueryNV (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndPerfMonitorAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndPerfMonitorAMD (GLuint monitor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint monitor)
glEndPerfMonitorAMD	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glEndPerfMonitorAMD (GLuint monitor);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint monitor)
glEndPerfQueryINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndPerfQueryINTEL (GLuint queryHandle);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryHandle)
glEndQuery	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndQuery (GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glEndQueryARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndQueryARB (GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glEndQueryEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glEndQueryEXT (GLenum target);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target)
glEndQueryIndexed	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndQueryIndexed (GLenum target, GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index)
glEndTilingQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glEndTilingQCOM (GLbitfield preserveMask);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLbitfield preserveMask)
glEndTransformFeedback	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndTransformFeedback (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndTransformFeedbackEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndTransformFeedbackEXT (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndTransformFeedbackNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndTransformFeedbackNV (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndVertexShaderEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndVertexShaderEXT (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glEndVideoCaptureNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEndVideoCaptureNV (GLuint video_capture_slot);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot)
glEvalCoord1d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord1d( GLdouble u );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble u)
glEvalCoord1dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord1dv( const GLdouble *u );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * u)
glEvalCoord1f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord1f( GLfloat u );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat u)
glEvalCoord1fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord1fv( const GLfloat *u );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * u)
glEvalCoord1xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEvalCoord1xOES (GLfixed u);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed u)
glEvalCoord1xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEvalCoord1xvOES (const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glEvalCoord2d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord2d( GLdouble u, GLdouble v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble u,GLdouble v)
glEvalCoord2dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord2dv( const GLdouble *u );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * u)
glEvalCoord2f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord2f( GLfloat u, GLfloat v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat u,GLfloat v)
glEvalCoord2fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalCoord2fv( const GLfloat *u );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * u)
glEvalCoord2xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEvalCoord2xOES (GLfixed u, GLfixed v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed u,GLfixed v)
glEvalCoord2xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEvalCoord2xvOES (const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glEvalMapsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glEvalMapsNV (GLenum target, GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum mode)
glEvalMesh1	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalMesh1( GLenum mode, GLint i1, GLint i2 );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode,GLint i1,GLint i2)
glEvalMesh2	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalMesh2( GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2 );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode,GLint i1,GLint i2,GLint j1,GLint j2)
glEvalPoint1	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalPoint1( GLint i );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint i)
glEvalPoint2	SDL_opengl.h	/^GLAPI void GLAPIENTRY glEvalPoint2( GLint i, GLint j );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint i,GLint j)
glExecuteProgramNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glExecuteProgramNV (GLenum target, GLuint id, const GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id,const GLfloat * params)
glExtGetBufferPointervQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetBufferPointervQCOM (GLenum target, GLvoid **params);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLvoid ** params)
glExtGetBuffersQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetBuffersQCOM (GLuint *buffers, GLint maxBuffers, GLint *numBu/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint * buffers,GLint maxBuffers,GLint * numBuffers)
glExtGetFramebuffersQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetFramebuffersQCOM (GLuint *framebuffers, GLint maxFramebuffer/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint * framebuffers,GLint maxFramebuffers,GLint * numFramebuffers)
glExtGetProgramBinarySourceQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetProgramBinarySourceQCOM (GLuint program, GLenum shadertype, /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLenum shadertype,GLchar * source,GLint * length)
glExtGetProgramsQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetProgramsQCOM (GLuint *programs, GLint maxPrograms, GLint *nu/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint * programs,GLint maxPrograms,GLint * numPrograms)
glExtGetRenderbuffersQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetRenderbuffersQCOM (GLuint *renderbuffers, GLint maxRenderbuf/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint * renderbuffers,GLint maxRenderbuffers,GLint * numRenderbuffers)
glExtGetShadersQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetShadersQCOM (GLuint *shaders, GLint maxShaders, GLint *numSh/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint * shaders,GLint maxShaders,GLint * numShaders)
glExtGetTexLevelParameterivQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetTexLevelParameterivQCOM (GLuint texture, GLenum face, GLint /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint texture,GLenum face,GLint level,GLenum pname,GLint * params)
glExtGetTexSubImageQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetTexSubImageQCOM (GLenum target, GLint level, GLint xoffset, /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,GLvoid * texels)
glExtGetTexturesQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtGetTexturesQCOM (GLuint *textures, GLint maxTextures, GLint *nu/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint * textures,GLint maxTextures,GLint * numTextures)
glExtIsProgramBinaryQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glExtIsProgramBinaryQCOM (GLuint program);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint program)
glExtTexObjectStateOverrideiQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glExtTexObjectStateOverrideiQCOM (GLenum target, GLenum pname, GLint/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glExtractComponentEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glExtractComponentEXT (GLuint res, GLuint src, GLuint num);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint res,GLuint src,GLuint num)
glFeedbackBuffer	SDL_opengl.h	/^GLAPI void GLAPIENTRY glFeedbackBuffer( GLsizei size, GLenum type, GLfloat *buffer );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei size,GLenum type,GLfloat * buffer)
glFeedbackBufferxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFeedbackBufferxOES (GLsizei n, GLenum type, const GLfixed *buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLenum type,const GLfixed * buffer)
glFenceSync	SDL_opengl_glext.h	/^GLAPI GLsync APIENTRY glFenceSync (GLenum condition, GLbitfield flags);$/;"	kind:p	typeref:typename:GLAPI GLsync APIENTRY	signature:(GLenum condition,GLbitfield flags)
glFenceSyncAPPLE	SDL_opengles2_gl2ext.h	/^GL_APICALL GLsync GL_APIENTRY glFenceSyncAPPLE (GLenum condition, GLbitfield flags);$/;"	kind:p	typeref:typename:GL_APICALL GLsync GL_APIENTRY	signature:(GLenum condition,GLbitfield flags)
glFinalCombinerInputNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFinalCombinerInputNV (GLenum variable, GLenum input, GLenum mapping, GLenu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
glFinish	SDL_opengl.h	/^GLAPI void GLAPIENTRY glFinish( void );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glFinish	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glFinish (void);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(void)
glFinishAsyncSGIX	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glFinishAsyncSGIX (GLuint *markerp);$/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint * markerp)
glFinishFenceAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFinishFenceAPPLE (GLuint fence);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint fence)
glFinishFenceNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFinishFenceNV (GLuint fence);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint fence)
glFinishFenceNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glFinishFenceNV (GLuint fence);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint fence)
glFinishObjectAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFinishObjectAPPLE (GLenum object, GLint name);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum object,GLint name)
glFinishTextureSUNX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFinishTextureSUNX (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glFlush	SDL_opengl.h	/^GLAPI void GLAPIENTRY glFlush( void );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glFlush	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glFlush (void);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(void)
glFlushMappedBufferRange	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushMappedBufferRange (GLenum target, GLintptr offset, GLsizeiptr length)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr length)
glFlushMappedBufferRangeAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushMappedBufferRangeAPPLE (GLenum target, GLintptr offset, GLsizeiptr si/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr size)
glFlushMappedBufferRangeEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glFlushMappedBufferRangeEXT (GLenum target, GLintptr offset, GLsizei/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr length)
glFlushMappedNamedBufferRangeEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushMappedNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLintptr offset,GLsizeiptr length)
glFlushPixelDataRangeNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushPixelDataRangeNV (GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glFlushRasterSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushRasterSGIX (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glFlushStaticDataIBM	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushStaticDataIBM (GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glFlushVertexArrayRangeAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushVertexArrayRangeAPPLE (GLsizei length, void *pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei length,void * pointer)
glFlushVertexArrayRangeNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFlushVertexArrayRangeNV (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glFogCoordFormatNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordFormatNV (GLenum type, GLsizei stride);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride)
glFogCoordPointer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordPointer (GLenum type, GLsizei stride, const void *pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,const void * pointer)
glFogCoordPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordPointerEXT (GLenum type, GLsizei stride, const void *pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,const void * pointer)
glFogCoordPointerListIBM	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordPointerListIBM (GLenum type, GLint stride, const void **pointer, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glFogCoordd	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordd (GLdouble coord);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble coord)
glFogCoorddEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoorddEXT (GLdouble coord);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble coord)
glFogCoorddv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoorddv (const GLdouble *coord);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * coord)
glFogCoorddvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoorddvEXT (const GLdouble *coord);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * coord)
glFogCoordf	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordf (GLfloat coord);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat coord)
glFogCoordfEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordfEXT (GLfloat coord);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat coord)
glFogCoordfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordfv (const GLfloat *coord);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * coord)
glFogCoordfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordfvEXT (const GLfloat *coord);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * coord)
glFogCoordhNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordhNV (GLhalfNV fog);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV fog)
glFogCoordhvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogCoordhvNV (const GLhalfNV *fog);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * fog)
glFogFuncSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogFuncSGIS (GLsizei n, const GLfloat *points);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLfloat * points)
glFogf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glFogf( GLenum pname, GLfloat param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLfloat param)
glFogfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glFogfv( GLenum pname, const GLfloat *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,const GLfloat * params)
glFogi	SDL_opengl.h	/^GLAPI void GLAPIENTRY glFogi( GLenum pname, GLint param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLint param)
glFogiv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glFogiv( GLenum pname, const GLint *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,const GLint * params)
glFogxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogxOES (GLenum pname, GLfixed param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfixed param)
glFogxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFogxvOES (GLenum pname, const GLfixed *param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfixed * param)
glFragmentColorMaterialSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentColorMaterialSGIX (GLenum face, GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum mode)
glFragmentLightModelfSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightModelfSGIX (GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glFragmentLightModelfvSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightModelfvSGIX (GLenum pname, const GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glFragmentLightModeliSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightModeliSGIX (GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glFragmentLightModelivSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightModelivSGIX (GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * params)
glFragmentLightfSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightfSGIX (GLenum light, GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,GLfloat param)
glFragmentLightfvSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightfvSGIX (GLenum light, GLenum pname, const GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,const GLfloat * params)
glFragmentLightiSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightiSGIX (GLenum light, GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,GLint param)
glFragmentLightivSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentLightivSGIX (GLenum light, GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,const GLint * params)
glFragmentMaterialfSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentMaterialfSGIX (GLenum face, GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,GLfloat param)
glFragmentMaterialfvSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentMaterialfvSGIX (GLenum face, GLenum pname, const GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,const GLfloat * params)
glFragmentMaterialiSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentMaterialiSGIX (GLenum face, GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,GLint param)
glFragmentMaterialivSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFragmentMaterialivSGIX (GLenum face, GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,const GLint * params)
glFrameTerminatorGREMEDY	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFrameTerminatorGREMEDY (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glFrameZoomSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFrameZoomSGIX (GLint factor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint factor)
glFramebufferDrawBufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferDrawBufferEXT (GLuint framebuffer, GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum mode)
glFramebufferDrawBuffersEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferDrawBuffersEXT (GLuint framebuffer, GLsizei n, const GLenum *bu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLsizei n,const GLenum * bufs)
glFramebufferParameteri	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferParameteri (GLenum target, GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glFramebufferReadBufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferReadBufferEXT (GLuint framebuffer, GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum mode)
glFramebufferRenderbuffer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
glFramebufferRenderbuffer	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glFramebufferRenderbuffer (GLenum target, GLenum attachment,/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
glFramebufferRenderbufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferRenderbufferEXT (GLenum target, GLenum attachment, GLenum rende/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
glFramebufferTexture	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture (GLenum target, GLenum attachment, GLuint texture, GLin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level)
glFramebufferTexture1D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture1D (GLenum target, GLenum attachment, GLenum textarget, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glFramebufferTexture1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture1DEXT (GLenum target, GLenum attachment, GLenum textarge/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glFramebufferTexture2D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glFramebufferTexture2D	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glFramebufferTexture2D (GLenum target, GLenum attachment, GL/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glFramebufferTexture2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture2DEXT (GLenum target, GLenum attachment, GLenum textarge/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glFramebufferTexture2DMultisampleEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glFramebufferTexture2DMultisampleEXT (GLenum target, GLenum attachme/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLsizei samples)
glFramebufferTexture2DMultisampleIMG	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glFramebufferTexture2DMultisampleIMG (GLenum target, GLenum attachme/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLsizei samples)
glFramebufferTexture3D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture3D (GLenum target, GLenum attachment, GLenum textarget, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
glFramebufferTexture3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTexture3DEXT (GLenum target, GLenum attachment, GLenum textarge/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
glFramebufferTexture3DOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glFramebufferTexture3DOES (GLenum target, GLenum attachment, GLenum /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
glFramebufferTextureARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureARB (GLenum target, GLenum attachment, GLuint texture, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level)
glFramebufferTextureEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureEXT (GLenum target, GLenum attachment, GLuint texture, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level)
glFramebufferTextureFaceARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureFaceARB (GLenum target, GLenum attachment, GLuint textur/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
glFramebufferTextureFaceEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureFaceEXT (GLenum target, GLenum attachment, GLuint textur/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
glFramebufferTextureLayer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureLayer (GLenum target, GLenum attachment, GLuint texture,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
glFramebufferTextureLayerARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureLayerARB (GLenum target, GLenum attachment, GLuint textu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
glFramebufferTextureLayerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFramebufferTextureLayerEXT (GLenum target, GLenum attachment, GLuint textu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
glFreeObjectBufferATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFreeObjectBufferATI (GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer)
glFrontFace	SDL_opengl.h	/^GLAPI void GLAPIENTRY glFrontFace( GLenum mode );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glFrontFace	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glFrontFace (GLenum mode);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode)
glFrustum	SDL_opengl.h	/^GLAPI void GLAPIENTRY glFrustum( GLdouble left, GLdouble right,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble near_val,GLdouble far_val)
glFrustumfOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFrustumfOES (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloa/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
glFrustumxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glFrustumxOES (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixe/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
glGenAsyncMarkersSGIX	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGenAsyncMarkersSGIX (GLsizei range);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLsizei range)
glGenBuffers	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenBuffers (GLsizei n, GLuint *buffers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * buffers)
glGenBuffers	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGenBuffers (GLsizei n, GLuint* buffers);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * buffers)
glGenBuffersARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenBuffersARB (GLsizei n, GLuint *buffers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * buffers)
glGenFencesAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenFencesAPPLE (GLsizei n, GLuint *fences);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * fences)
glGenFencesNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenFencesNV (GLsizei n, GLuint *fences);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * fences)
glGenFencesNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGenFencesNV (GLsizei n, GLuint *fences);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * fences)
glGenFragmentShadersATI	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGenFragmentShadersATI (GLuint range);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint range)
glGenFramebuffers	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenFramebuffers (GLsizei n, GLuint *framebuffers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * framebuffers)
glGenFramebuffers	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGenFramebuffers (GLsizei n, GLuint* framebuffers);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * framebuffers)
glGenFramebuffersEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenFramebuffersEXT (GLsizei n, GLuint *framebuffers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * framebuffers)
glGenLists	SDL_opengl.h	/^GLAPI GLuint GLAPIENTRY glGenLists( GLsizei range );$/;"	kind:p	typeref:typename:GLAPI GLuint GLAPIENTRY	signature:(GLsizei range)
glGenNamesAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenNamesAMD (GLenum identifier, GLuint num, GLuint *names);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum identifier,GLuint num,GLuint * names)
glGenOcclusionQueriesNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenOcclusionQueriesNV (GLsizei n, GLuint *ids);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * ids)
glGenPathsNV	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGenPathsNV (GLsizei range);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLsizei range)
glGenPerfMonitorsAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenPerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * monitors)
glGenPerfMonitorsAMD	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGenPerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * monitors)
glGenProgramPipelines	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenProgramPipelines (GLsizei n, GLuint *pipelines);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * pipelines)
glGenProgramPipelinesEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGenProgramPipelinesEXT (GLsizei n, GLuint *pipelines);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * pipelines)
glGenProgramsARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenProgramsARB (GLsizei n, GLuint *programs);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * programs)
glGenProgramsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenProgramsNV (GLsizei n, GLuint *programs);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * programs)
glGenQueries	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenQueries (GLsizei n, GLuint *ids);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * ids)
glGenQueriesARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenQueriesARB (GLsizei n, GLuint *ids);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * ids)
glGenQueriesEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGenQueriesEXT (GLsizei n, GLuint *ids);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * ids)
glGenRenderbuffers	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenRenderbuffers (GLsizei n, GLuint *renderbuffers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * renderbuffers)
glGenRenderbuffers	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGenRenderbuffers (GLsizei n, GLuint* renderbuffers);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * renderbuffers)
glGenRenderbuffersEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenRenderbuffersEXT (GLsizei n, GLuint *renderbuffers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * renderbuffers)
glGenSamplers	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenSamplers (GLsizei count, GLuint *samplers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei count,GLuint * samplers)
glGenSymbolsEXT	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGenSymbolsEXT (GLenum datatype, GLenum storagetype, GLenum range, GLuint/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLenum datatype,GLenum storagetype,GLenum range,GLuint components)
glGenTextures	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGenTextures( GLsizei n, GLuint *textures );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei n,GLuint * textures)
glGenTextures	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGenTextures (GLsizei n, GLuint* textures);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * textures)
glGenTexturesEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenTexturesEXT (GLsizei n, GLuint *textures);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * textures)
glGenTransformFeedbacks	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenTransformFeedbacks (GLsizei n, GLuint *ids);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * ids)
glGenTransformFeedbacksNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenTransformFeedbacksNV (GLsizei n, GLuint *ids);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * ids)
glGenVertexArrays	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenVertexArrays (GLsizei n, GLuint *arrays);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * arrays)
glGenVertexArraysAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenVertexArraysAPPLE (GLsizei n, GLuint *arrays);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,GLuint * arrays)
glGenVertexArraysOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGenVertexArraysOES (GLsizei n, GLuint *arrays);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,GLuint * arrays)
glGenVertexShadersEXT	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGenVertexShadersEXT (GLuint range);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint range)
glGenerateMipmap	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenerateMipmap (GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glGenerateMipmap	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGenerateMipmap (GLenum target);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target)
glGenerateMipmapEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenerateMipmapEXT (GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glGenerateMultiTexMipmapEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenerateMultiTexMipmapEXT (GLenum texunit, GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target)
glGenerateTextureMipmapEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGenerateTextureMipmapEXT (GLuint texture, GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target)
glGetActiveAtomicCounterBufferiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveAtomicCounterBufferiv (GLuint program, GLuint bufferIndex, GLenum/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params)
glGetActiveAttrib	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei *l/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
glGetActiveAttrib	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetActiveAttrib (GLuint program, GLuint index, GLsizei buf/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufsize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
glGetActiveAttribARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveAttribARB (GLhandleARB programObj, GLuint index, GLsizei maxLengt/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
glGetActiveSubroutineName	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
glGetActiveSubroutineUniformName	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
glGetActiveSubroutineUniformiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveSubroutineUniformiv (GLuint program, GLenum shadertype, GLuint in/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values)
glGetActiveUniform	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
glGetActiveUniform	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetActiveUniform (GLuint program, GLuint index, GLsizei bu/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufsize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
glGetActiveUniformARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveUniformARB (GLhandleARB programObj, GLuint index, GLsizei maxLeng/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
glGetActiveUniformBlockName	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsiz/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
glGetActiveUniformBlockiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
glGetActiveUniformName	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
glGetActiveUniformsiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint *u/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
glGetActiveVaryingNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetActiveVaryingNV (GLuint program, GLuint index, GLsizei bufSize, GLsizei/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
glGetArrayObjectfvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetArrayObjectfvATI (GLenum array, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLenum pname,GLfloat * params)
glGetArrayObjectivATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetArrayObjectivATI (GLenum array, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum array,GLenum pname,GLint * params)
glGetAttachedObjectsARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetAttachedObjectsARB (GLhandleARB containerObj, GLsizei maxCount, GLsizei/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB containerObj,GLsizei maxCount,GLsizei * count,GLhandleARB * obj)
glGetAttachedShaders	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei *count, GLui/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * shaders)
glGetAttachedShaders	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetAttachedShaders (GLuint program, GLsizei maxcount, GLsi/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLsizei maxcount,GLsizei * count,GLuint * shaders)
glGetAttribLocation	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetAttribLocation (GLuint program, const GLchar *name);$/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,const GLchar * name)
glGetAttribLocation	SDL_opengles2_gl2.h	/^GL_APICALL GLint        GL_APIENTRY glGetAttribLocation (GLuint program, const GLchar* name);$/;"	kind:p	typeref:typename:GL_APICALL GLint GL_APIENTRY	signature:(GLuint program,const GLchar * name)
glGetAttribLocationARB	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetAttribLocationARB (GLhandleARB programObj, const GLcharARB *name);$/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLhandleARB programObj,const GLcharARB * name)
glGetBooleanIndexedvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBooleanIndexedvEXT (GLenum target, GLuint index, GLboolean *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLboolean * data)
glGetBooleani_v	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBooleani_v (GLenum target, GLuint index, GLboolean *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLboolean * data)
glGetBooleanv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetBooleanv( GLenum pname, GLboolean *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLboolean * params)
glGetBooleanv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetBooleanv (GLenum pname, GLboolean* params);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum pname,GLboolean * params)
glGetBufferParameteri64v	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint64 * params)
glGetBufferParameteriv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetBufferParameteriv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetBufferParameteriv (GLenum target, GLenum pname, GLint* /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetBufferParameterivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferParameterivARB (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetBufferParameterui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferParameterui64vNV (GLenum target, GLenum pname, GLuint64EXT *param/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLuint64EXT * params)
glGetBufferPointerv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferPointerv (GLenum target, GLenum pname, void **params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,void ** params)
glGetBufferPointervARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferPointervARB (GLenum target, GLenum pname, void **params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,void ** params)
glGetBufferPointervOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetBufferPointervOES (GLenum target, GLenum pname, GLvoid **params/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLvoid ** params)
glGetBufferSubData	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, void *d/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr size,void * data)
glGetBufferSubDataARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLintptrARB offset,GLsizeiptrARB size,void * data)
glGetClipPlane	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetClipPlane( GLenum plane, GLdouble *equation );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum plane,GLdouble * equation)
glGetClipPlanefOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetClipPlanefOES (GLenum plane, GLfloat *equation);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum plane,GLfloat * equation)
glGetClipPlanexOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetClipPlanexOES (GLenum plane, GLfixed *equation);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum plane,GLfixed * equation)
glGetColorTable	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetColorTable( GLenum target, GLenum format,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum format,GLenum type,GLvoid * table)
glGetColorTable	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTable (GLenum target, GLenum format, GLenum type, void *table);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * table)
glGetColorTableEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableEXT (GLenum target, GLenum format, GLenum type, void *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * data)
glGetColorTableParameterfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetColorTableParameterfv( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetColorTableParameterfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetColorTableParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableParameterfvEXT (GLenum target, GLenum pname, GLfloat *params)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetColorTableParameterfvSGI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableParameterfvSGI (GLenum target, GLenum pname, GLfloat *params)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetColorTableParameteriv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetColorTableParameteriv( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetColorTableParameteriv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetColorTableParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetColorTableParameterivSGI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableParameterivSGI (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetColorTableSGI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetColorTableSGI (GLenum target, GLenum format, GLenum type, void *table);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * table)
glGetCombinerInputParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCombinerInputParameterfvNV (GLenum stage, GLenum portion, GLenum variab/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLfloat * params)
glGetCombinerInputParameterivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCombinerInputParameterivNV (GLenum stage, GLenum portion, GLenum variab/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLint * params)
glGetCombinerOutputParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCombinerOutputParameterfvNV (GLenum stage, GLenum portion, GLenum pname/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum portion,GLenum pname,GLfloat * params)
glGetCombinerOutputParameterivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCombinerOutputParameterivNV (GLenum stage, GLenum portion, GLenum pname/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum portion,GLenum pname,GLint * params)
glGetCombinerStageParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCombinerStageParameterfvNV (GLenum stage, GLenum pname, GLfloat *params/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stage,GLenum pname,GLfloat * params)
glGetCompressedMultiTexImageEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCompressedMultiTexImageEXT (GLenum texunit, GLenum target, GLint lod, v/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint lod,void * img)
glGetCompressedTexImage	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetCompressedTexImage( GLenum target, GLint lod, GLvoid *img );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint lod,GLvoid * img)
glGetCompressedTexImage	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCompressedTexImage (GLenum target, GLint level, void *img);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,void * img)
glGetCompressedTexImageARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCompressedTexImageARB (GLenum target, GLint level, void *img);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,void * img)
glGetCompressedTextureImageEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetCompressedTextureImageEXT (GLuint texture, GLenum target, GLint lod, vo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint lod,void * img)
glGetConvolutionFilter	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetConvolutionFilter( GLenum target, GLenum format,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum format,GLenum type,GLvoid * image)
glGetConvolutionFilter	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, void *ima/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * image)
glGetConvolutionFilterEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionFilterEXT (GLenum target, GLenum format, GLenum type, void */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * image)
glGetConvolutionParameterfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetConvolutionParameterfv( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetConvolutionParameterfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetConvolutionParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterfvEXT (GLenum target, GLenum pname, GLfloat *params/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetConvolutionParameteriv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetConvolutionParameteriv( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetConvolutionParameteriv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetConvolutionParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetConvolutionParameterxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterxvOES (GLenum target, GLenum pname, GLfixed *params/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed * params)
glGetDebugMessageLog	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLog (GLuint count, GLsizei bufSize, GLenum *sources, GLen/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
glGetDebugMessageLogAMD	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLogAMD (GLuint count, GLsizei bufsize, GLenum *categories/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint count,GLsizei bufsize,GLenum * categories,GLuint * severities,GLuint * ids,GLsizei * lengths,GLchar * message)
glGetDebugMessageLogARB	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLogARB (GLuint count, GLsizei bufSize, GLenum *sources, G/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
glGetDebugMessageLogKHR	SDL_opengles2_gl2ext.h	/^GL_APICALL GLuint GL_APIENTRY glGetDebugMessageLogKHR (GLuint count, GLsizei bufsize, GLenum *so/;"	kind:p	typeref:typename:GL_APICALL GLuint GL_APIENTRY	signature:(GLuint count,GLsizei bufsize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
glGetDetailTexFuncSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetDetailTexFuncSGIS (GLenum target, GLfloat *points);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat * points)
glGetDoubleIndexedvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetDoubleIndexedvEXT (GLenum target, GLuint index, GLdouble *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble * data)
glGetDoublei_v	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetDoublei_v (GLenum target, GLuint index, GLdouble *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble * data)
glGetDoublei_vEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetDoublei_vEXT (GLenum pname, GLuint index, GLdouble *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,GLdouble * params)
glGetDoublev	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetDoublev( GLenum pname, GLdouble *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLdouble * params)
glGetDriverControlStringQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetDriverControlStringQCOM (GLuint driverControl, GLsizei bufSize,/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint driverControl,GLsizei bufSize,GLsizei * length,GLchar * driverControlString)
glGetDriverControlsQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetDriverControlsQCOM (GLint *num, GLsizei size, GLuint *driverCon/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint * num,GLsizei size,GLuint * driverControls)
glGetError	SDL_opengl.h	/^GLAPI GLenum GLAPIENTRY glGetError( void );$/;"	kind:p	typeref:typename:GLAPI GLenum GLAPIENTRY	signature:(void)
glGetError	SDL_opengles2_gl2.h	/^GL_APICALL GLenum       GL_APIENTRY glGetError (void);$/;"	kind:p	typeref:typename:GL_APICALL GLenum GL_APIENTRY	signature:(void)
glGetFenceivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFenceivNV (GLuint fence, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint fence,GLenum pname,GLint * params)
glGetFenceivNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetFenceivNV (GLuint fence, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint fence,GLenum pname,GLint * params)
glGetFinalCombinerInputParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFinalCombinerInputParameterfvNV (GLenum variable, GLenum pname, GLfloat/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum variable,GLenum pname,GLfloat * params)
glGetFinalCombinerInputParameterivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFinalCombinerInputParameterivNV (GLenum variable, GLenum pname, GLint */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum variable,GLenum pname,GLint * params)
glGetFirstPerfQueryIdINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFirstPerfQueryIdINTEL (GLuint *queryId);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint * queryId)
glGetFixedvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFixedvOES (GLenum pname, GLfixed *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfixed * params)
glGetFloatIndexedvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFloatIndexedvEXT (GLenum target, GLuint index, GLfloat *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat * data)
glGetFloati_v	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFloati_v (GLenum target, GLuint index, GLfloat *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat * data)
glGetFloati_vEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFloati_vEXT (GLenum pname, GLuint index, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,GLfloat * params)
glGetFloatv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetFloatv( GLenum pname, GLfloat *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLfloat * params)
glGetFloatv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetFloatv (GLenum pname, GLfloat* params);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum pname,GLfloat * params)
glGetFogFuncSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFogFuncSGIS (GLfloat *points);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat * points)
glGetFragDataIndex	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetFragDataIndex (GLuint program, const GLchar *name);$/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,const GLchar * name)
glGetFragDataLocation	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetFragDataLocation (GLuint program, const GLchar *name);$/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,const GLchar * name)
glGetFragDataLocationEXT	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetFragDataLocationEXT (GLuint program, const GLchar *name);$/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,const GLchar * name)
glGetFragmentLightfvSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFragmentLightfvSGIX (GLenum light, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,GLfloat * params)
glGetFragmentLightivSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFragmentLightivSGIX (GLenum light, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,GLint * params)
glGetFragmentMaterialfvSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFragmentMaterialfvSGIX (GLenum face, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,GLfloat * params)
glGetFragmentMaterialivSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFragmentMaterialivSGIX (GLenum face, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,GLint * params)
glGetFramebufferAttachmentParameteriv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLe/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum pname,GLint * params)
glGetFramebufferAttachmentParameteriv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetFramebufferAttachmentParameteriv (GLenum target, GLenum/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum attachment,GLenum pname,GLint * params)
glGetFramebufferAttachmentParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFramebufferAttachmentParameterivEXT (GLenum target, GLenum attachment, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum attachment,GLenum pname,GLint * params)
glGetFramebufferParameteriv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFramebufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetFramebufferParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint *par/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum pname,GLint * params)
glGetGraphicsResetStatusARB	SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glGetGraphicsResetStatusARB (void);$/;"	kind:p	typeref:typename:GLAPI GLenum APIENTRY	signature:(void)
glGetGraphicsResetStatusEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL GLenum GL_APIENTRY glGetGraphicsResetStatusEXT (void);$/;"	kind:p	typeref:typename:GL_APICALL GLenum GL_APIENTRY	signature:(void)
glGetHandleARB	SDL_opengl_glext.h	/^GLAPI GLhandleARB APIENTRY glGetHandleARB (GLenum pname);$/;"	kind:p	typeref:typename:GLAPI GLhandleARB APIENTRY	signature:(GLenum pname)
glGetHistogram	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetHistogram( GLenum target, GLboolean reset,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,GLvoid * values)
glGetHistogram	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
glGetHistogramEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogramEXT (GLenum target, GLboolean reset, GLenum format, GLenum typ/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
glGetHistogramParameterfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetHistogramParameterfv( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetHistogramParameterfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetHistogramParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogramParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetHistogramParameteriv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetHistogramParameteriv( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetHistogramParameteriv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetHistogramParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogramParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetHistogramParameterxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetHistogramParameterxvOES (GLenum target, GLenum pname, GLfixed *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed * params)
glGetImageHandleARB	SDL_opengl_glext.h	/^GLAPI GLuint64 APIENTRY glGetImageHandleARB (GLuint texture, GLint level, GLboolean layered, GLi/;"	kind:p	typeref:typename:GLAPI GLuint64 APIENTRY	signature:(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
glGetImageHandleNV	SDL_opengl_glext.h	/^GLAPI GLuint64 APIENTRY glGetImageHandleNV (GLuint texture, GLint level, GLboolean layered, GLin/;"	kind:p	typeref:typename:GLAPI GLuint64 APIENTRY	signature:(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
glGetImageTransformParameterfvHP	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetImageTransformParameterfvHP (GLenum target, GLenum pname, GLfloat *para/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetImageTransformParameterivHP	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetImageTransformParameterivHP (GLenum target, GLenum pname, GLint *params/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetInfoLogARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInfoLogARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLchar/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * infoLog)
glGetInstrumentsSGIX	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetInstrumentsSGIX (void);$/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(void)
glGetInteger64i_v	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInteger64i_v (GLenum target, GLuint index, GLint64 *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint64 * data)
glGetInteger64v	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInteger64v (GLenum pname, GLint64 *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint64 * data)
glGetInteger64vAPPLE	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetInteger64vAPPLE (GLenum pname, GLint64 *params);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum pname,GLint64 * params)
glGetIntegerIndexedvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetIntegerIndexedvEXT (GLenum target, GLuint index, GLint *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint * data)
glGetIntegeri_v	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetIntegeri_v (GLenum target, GLuint index, GLint *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint * data)
glGetIntegeri_vEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetIntegeri_vEXT (GLenum target, GLuint index, GLint *data);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLuint index,GLint * data)
glGetIntegerui64i_vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetIntegerui64i_vNV (GLenum value, GLuint index, GLuint64EXT *result);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum value,GLuint index,GLuint64EXT * result)
glGetIntegerui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetIntegerui64vNV (GLenum value, GLuint64EXT *result);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum value,GLuint64EXT * result)
glGetIntegerv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetIntegerv( GLenum pname, GLint *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLint * params)
glGetIntegerv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetIntegerv (GLenum pname, GLint* params);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum pname,GLint * params)
glGetInternalformati64v	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInternalformati64v (GLenum target, GLenum internalformat, GLenum pname,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64 * params)
glGetInternalformativ	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint * params)
glGetInvariantBooleanvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInvariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLboolean * data)
glGetInvariantFloatvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInvariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLfloat * data)
glGetInvariantIntegervEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetInvariantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLint * data)
glGetLightfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetLightfv( GLenum light, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum light,GLenum pname,GLfloat * params)
glGetLightiv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetLightiv( GLenum light, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum light,GLenum pname,GLint * params)
glGetLightxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetLightxOES (GLenum light, GLenum pname, GLfixed *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,GLfixed * params)
glGetListParameterfvSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetListParameterfvSGIX (GLuint list, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint list,GLenum pname,GLfloat * params)
glGetListParameterivSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetListParameterivSGIX (GLuint list, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint list,GLenum pname,GLint * params)
glGetLocalConstantBooleanvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetLocalConstantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLboolean * data)
glGetLocalConstantFloatvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetLocalConstantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLfloat * data)
glGetLocalConstantIntegervEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetLocalConstantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLint * data)
glGetMapAttribParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMapAttribParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfl/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum pname,GLfloat * params)
glGetMapAttribParameterivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMapAttribParameterivNV (GLenum target, GLuint index, GLenum pname, GLin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum pname,GLint * params)
glGetMapControlPointsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei u/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLboolean packed,void * points)
glGetMapParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMapParameterfvNV (GLenum target, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetMapParameterivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMapParameterivNV (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetMapdv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMapdv( GLenum target, GLenum query, GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum query,GLdouble * v)
glGetMapfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMapfv( GLenum target, GLenum query, GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum query,GLfloat * v)
glGetMapiv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMapiv( GLenum target, GLenum query, GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum query,GLint * v)
glGetMapxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMapxvOES (GLenum target, GLenum query, GLfixed *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum query,GLfixed * v)
glGetMaterialfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMaterialfv( GLenum face, GLenum pname, GLfloat *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum pname,GLfloat * params)
glGetMaterialiv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMaterialiv( GLenum face, GLenum pname, GLint *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum pname,GLint * params)
glGetMaterialxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMaterialxOES (GLenum face, GLenum pname, GLfixed param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,GLfixed param)
glGetMinmax	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMinmax( GLenum target, GLboolean reset,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum types,GLvoid * values)
glGetMinmax	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, voi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
glGetMinmaxEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMinmaxEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
glGetMinmaxParameterfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMinmaxParameterfv( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetMinmaxParameterfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetMinmaxParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMinmaxParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetMinmaxParameteriv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetMinmaxParameteriv( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetMinmaxParameteriv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetMinmaxParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMinmaxParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetMultiTexEnvfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
glGetMultiTexEnvivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *p/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLint * params)
glGetMultiTexGendvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,GLdouble * params)
glGetMultiTexGenfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,GLfloat * params)
glGetMultiTexGenivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, GLint *pa/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,GLint * params)
glGetMultiTexImageEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexImageEXT (GLenum texunit, GLenum target, GLint level, GLenum fo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
glGetMultiTexLevelParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexLevelParameterfvEXT (GLenum texunit, GLenum target, GLint level/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum pname,GLfloat * params)
glGetMultiTexLevelParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexLevelParameterivEXT (GLenum texunit, GLenum target, GLint level/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLenum pname,GLint * params)
glGetMultiTexParameterIivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLint * params)
glGetMultiTexParameterIuivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLuint * params)
glGetMultiTexParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
glGetMultiTexParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLint * params)
glGetMultisamplefv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultisamplefv (GLenum pname, GLuint index, GLfloat *val);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,GLfloat * val)
glGetMultisamplefvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetMultisamplefvNV (GLenum pname, GLuint index, GLfloat *val);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,GLfloat * val)
glGetNamedBufferParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedBufferParameterivEXT (GLuint buffer, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum pname,GLint * params)
glGetNamedBufferParameterui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedBufferParameterui64vNV (GLuint buffer, GLenum pname, GLuint64EXT */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum pname,GLuint64EXT * params)
glGetNamedBufferPointervEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedBufferPointervEXT (GLuint buffer, GLenum pname, void **params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum pname,void ** params)
glGetNamedBufferSubDataEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
glGetNamedFramebufferAttachmentParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedFramebufferAttachmentParameterivEXT (GLuint framebuffer, GLenum at/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
glGetNamedFramebufferParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum pname,GLint * params)
glGetNamedProgramLocalParameterIivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterIivEXT (GLuint program, GLenum target, GLuint/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLint * params)
glGetNamedProgramLocalParameterIuivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterIuivEXT (GLuint program, GLenum target, GLuin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLuint * params)
glGetNamedProgramLocalParameterdvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterdvEXT (GLuint program, GLenum target, GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLdouble * params)
glGetNamedProgramLocalParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterfvEXT (GLuint program, GLenum target, GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLfloat * params)
glGetNamedProgramStringEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedProgramStringEXT (GLuint program, GLenum target, GLenum pname, voi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLenum pname,void * string)
glGetNamedProgramivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedProgramivEXT (GLuint program, GLenum target, GLenum pname, GLint */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLenum pname,GLint * params)
glGetNamedRenderbufferParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedRenderbufferParameterivEXT (GLuint renderbuffer, GLenum pname, GLi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint renderbuffer,GLenum pname,GLint * params)
glGetNamedStringARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedStringARB (GLint namelen, const GLchar *name, GLsizei bufSize, GLi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint namelen,const GLchar * name,GLsizei bufSize,GLint * stringlen,GLchar * string)
glGetNamedStringivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNamedStringivARB (GLint namelen, const GLchar *name, GLenum pname, GLin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint namelen,const GLchar * name,GLenum pname,GLint * params)
glGetNextPerfQueryIdINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetNextPerfQueryIdINTEL (GLuint queryId, GLuint *nextQueryId);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryId,GLuint * nextQueryId)
glGetObjectBufferfvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectBufferfvATI (GLuint buffer, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum pname,GLfloat * params)
glGetObjectBufferivATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectBufferivATI (GLuint buffer, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum pname,GLint * params)
glGetObjectLabel	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectLabel (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
glGetObjectLabelEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectLabelEXT (GLenum type, GLuint object, GLsizei bufSize, GLsizei *l/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
glGetObjectLabelEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetObjectLabelEXT (GLenum type, GLuint object, GLsizei bufSize, GL/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
glGetObjectLabelKHR	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetObjectLabelKHR (GLenum identifier, GLuint name, GLsizei bufSize/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
glGetObjectParameterfvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectParameterfvARB (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB obj,GLenum pname,GLfloat * params)
glGetObjectParameterivAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectParameterivAPPLE (GLenum objectType, GLuint name, GLenum pname, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum objectType,GLuint name,GLenum pname,GLint * params)
glGetObjectParameterivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectParameterivARB (GLhandleARB obj, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB obj,GLenum pname,GLint * params)
glGetObjectPtrLabel	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetObjectPtrLabel (const void *ptr, GLsizei bufSize, GLsizei *length, GLch/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
glGetObjectPtrLabelKHR	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetObjectPtrLabelKHR (const void *ptr, GLsizei bufSize, GLsizei *l/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
glGetOcclusionQueryivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetOcclusionQueryivNV (GLuint id, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint * params)
glGetOcclusionQueryuivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetOcclusionQueryuivNV (GLuint id, GLenum pname, GLuint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLuint * params)
glGetPathColorGenfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathColorGenfvNV (GLenum color, GLenum pname, GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum color,GLenum pname,GLfloat * value)
glGetPathColorGenivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathColorGenivNV (GLenum color, GLenum pname, GLint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum color,GLenum pname,GLint * value)
glGetPathCommandsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathCommandsNV (GLuint path, GLubyte *commands);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLubyte * commands)
glGetPathCoordsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathCoordsNV (GLuint path, GLfloat *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLfloat * coords)
glGetPathDashArrayNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathDashArrayNV (GLuint path, GLfloat *dashArray);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLfloat * dashArray)
glGetPathLengthNV	SDL_opengl_glext.h	/^GLAPI GLfloat APIENTRY glGetPathLengthNV (GLuint path, GLsizei startSegment, GLsizei numSegments/;"	kind:p	typeref:typename:GLAPI GLfloat APIENTRY	signature:(GLuint path,GLsizei startSegment,GLsizei numSegments)
glGetPathMetricRangeNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathMetricRangeNV (GLbitfield metricQueryMask, GLuint firstPathName, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield metricQueryMask,GLuint firstPathName,GLsizei numPaths,GLsizei stride,GLfloat * metrics)
glGetPathMetricsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathMetricsNV (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pat/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield metricQueryMask,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLsizei stride,GLfloat * metrics)
glGetPathParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathParameterfvNV (GLuint path, GLenum pname, GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum pname,GLfloat * value)
glGetPathParameterivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathParameterivNV (GLuint path, GLenum pname, GLint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum pname,GLint * value)
glGetPathSpacingNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathSpacingNV (GLenum pathListMode, GLsizei numPaths, GLenum pathNameTy/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pathListMode,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLfloat advanceScale,GLfloat kerningScale,GLenum transformType,GLfloat * returnedSpacing)
glGetPathTexGenfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathTexGenfvNV (GLenum texCoordSet, GLenum pname, GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texCoordSet,GLenum pname,GLfloat * value)
glGetPathTexGenivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPathTexGenivNV (GLenum texCoordSet, GLenum pname, GLint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texCoordSet,GLenum pname,GLint * value)
glGetPerfCounterInfoINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfCounterInfoINTEL (GLuint queryId, GLuint counterId, GLuint counterN/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryId,GLuint counterId,GLuint counterNameLength,GLchar * counterName,GLuint counterDescLength,GLchar * counterDesc,GLuint * counterOffset,GLuint * counterDataSize,GLuint * counterTypeEnum,GLuint * counterDataTypeEnum,GLuint64 * rawCounterMaxValue)
glGetPerfMonitorCounterDataAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterDataAMD (GLuint monitor, GLenum pname, GLsizei dataSi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
glGetPerfMonitorCounterDataAMD	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorCounterDataAMD (GLuint monitor, GLenum pname, GLsize/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
glGetPerfMonitorCounterInfoAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterInfoAMD (GLuint group, GLuint counter, GLenum pname, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint group,GLuint counter,GLenum pname,void * data)
glGetPerfMonitorCounterInfoAMD	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorCounterInfoAMD (GLuint group, GLuint counter, GLenum/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint group,GLuint counter,GLenum pname,GLvoid * data)
glGetPerfMonitorCounterStringAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterStringAMD (GLuint group, GLuint counter, GLsizei bufS/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
glGetPerfMonitorCounterStringAMD	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorCounterStringAMD (GLuint group, GLuint counter, GLsi/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
glGetPerfMonitorCountersAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCountersAMD (GLuint group, GLint *numCounters, GLint *maxAct/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei counterSize,GLuint * counters)
glGetPerfMonitorCountersAMD	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorCountersAMD (GLuint group, GLint *numCounters, GLint/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei counterSize,GLuint * counters)
glGetPerfMonitorGroupStringAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfMonitorGroupStringAMD (GLuint group, GLsizei bufSize, GLsizei *leng/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
glGetPerfMonitorGroupStringAMD	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorGroupStringAMD (GLuint group, GLsizei bufSize, GLsiz/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
glGetPerfMonitorGroupsAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfMonitorGroupsAMD (GLint *numGroups, GLsizei groupsSize, GLuint *gro/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
glGetPerfMonitorGroupsAMD	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorGroupsAMD (GLint *numGroups, GLsizei groupsSize, GLu/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
glGetPerfQueryDataINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfQueryDataINTEL (GLuint queryHandle, GLuint flags, GLsizei dataSize,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryHandle,GLuint flags,GLsizei dataSize,GLvoid * data,GLuint * bytesWritten)
glGetPerfQueryIdByNameINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfQueryIdByNameINTEL (GLchar *queryName, GLuint *queryId);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLchar * queryName,GLuint * queryId)
glGetPerfQueryInfoINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPerfQueryInfoINTEL (GLuint queryId, GLuint queryNameLength, GLchar *que/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint queryId,GLuint queryNameLength,GLchar * queryName,GLuint * dataSize,GLuint * noCounters,GLuint * noInstances,GLuint * capsMask)
glGetPixelMapfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetPixelMapfv( GLenum map, GLfloat *values );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum map,GLfloat * values)
glGetPixelMapuiv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetPixelMapuiv( GLenum map, GLuint *values );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum map,GLuint * values)
glGetPixelMapusv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetPixelMapusv( GLenum map, GLushort *values );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum map,GLushort * values)
glGetPixelMapxv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPixelMapxv (GLenum map, GLint size, GLfixed *values);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum map,GLint size,GLfixed * values)
glGetPixelTexGenParameterfvSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPixelTexGenParameterfvSGIS (GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat * params)
glGetPixelTexGenParameterivSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPixelTexGenParameterivSGIS (GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint * params)
glGetPixelTransformParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPixelTransformParameterfvEXT (GLenum target, GLenum pname, GLfloat *par/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetPixelTransformParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPixelTransformParameterivEXT (GLenum target, GLenum pname, GLint *param/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetPointerIndexedvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPointerIndexedvEXT (GLenum target, GLuint index, void **data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,void ** data)
glGetPointeri_vEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPointeri_vEXT (GLenum pname, GLuint index, void **params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,void ** params)
glGetPointerv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetPointerv( GLenum pname, GLvoid **params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLvoid ** params)
glGetPointervEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetPointervEXT (GLenum pname, void **params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,void ** params)
glGetPointervKHR	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetPointervKHR (GLenum pname, GLvoid **params);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum pname,GLvoid ** params)
glGetPolygonStipple	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetPolygonStipple( GLubyte *mask );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLubyte * mask)
glGetProgramBinary	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramBinary (GLuint program, GLsizei bufSize, GLsizei *length, GLenum/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,void * binary)
glGetProgramBinaryOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetProgramBinaryOES (GLuint program, GLsizei bufSize, GLsizei *len/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,GLvoid * binary)
glGetProgramEnvParameterIivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterIivNV (GLenum target, GLuint index, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint * params)
glGetProgramEnvParameterIuivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterIuivNV (GLenum target, GLuint index, GLuint *params)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint * params)
glGetProgramEnvParameterdvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterdvARB (GLenum target, GLuint index, GLdouble *params/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble * params)
glGetProgramEnvParameterfvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterfvARB (GLenum target, GLuint index, GLfloat *params)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat * params)
glGetProgramInfoLog	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *length, GLcha/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
glGetProgramInfoLog	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetProgramInfoLog (GLuint program, GLsizei bufsize, GLsize/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLsizei bufsize,GLsizei * length,GLchar * infolog)
glGetProgramInterfaceiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramInterfaceiv (GLuint program, GLenum programInterface, GLenum pna/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum programInterface,GLenum pname,GLint * params)
glGetProgramLocalParameterIivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterIivNV (GLenum target, GLuint index, GLint *params)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint * params)
glGetProgramLocalParameterIuivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterIuivNV (GLenum target, GLuint index, GLuint *param/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint * params)
glGetProgramLocalParameterdvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterdvARB (GLenum target, GLuint index, GLdouble *para/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble * params)
glGetProgramLocalParameterfvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterfvARB (GLenum target, GLuint index, GLfloat *param/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat * params)
glGetProgramNamedParameterdvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramNamedParameterdvNV (GLuint id, GLsizei len, const GLubyte *name,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLsizei len,const GLubyte * name,GLdouble * params)
glGetProgramNamedParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramNamedParameterfvNV (GLuint id, GLsizei len, const GLubyte *name,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLsizei len,const GLubyte * name,GLfloat * params)
glGetProgramParameterdvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramParameterdvNV (GLenum target, GLuint index, GLenum pname, GLdoub/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum pname,GLdouble * params)
glGetProgramParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloa/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum pname,GLfloat * params)
glGetProgramPipelineInfoLog	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei *leng/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
glGetProgramPipelineInfoLogEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetProgramPipelineInfoLogEXT (GLuint pipeline, GLsizei bufSize, GL/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
glGetProgramPipelineiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint pipeline,GLenum pname,GLint * params)
glGetProgramPipelineivEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetProgramPipelineivEXT (GLuint pipeline, GLenum pname, GLint *par/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint pipeline,GLenum pname,GLint * params)
glGetProgramResourceIndex	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGetProgramResourceIndex (GLuint program, GLenum programInterface, const /;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint program,GLenum programInterface,const GLchar * name)
glGetProgramResourceLocation	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetProgramResourceLocation (GLuint program, GLenum programInterface, cons/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,GLenum programInterface,const GLchar * name)
glGetProgramResourceLocationIndex	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetProgramResourceLocationIndex (GLuint program, GLenum programInterface,/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,GLenum programInterface,const GLchar * name)
glGetProgramResourceName	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramResourceName (GLuint program, GLenum programInterface, GLuint in/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
glGetProgramResourceiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint inde/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLint * params)
glGetProgramStageiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramStageiv (GLuint program, GLenum shadertype, GLenum pname, GLint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum shadertype,GLenum pname,GLint * values)
glGetProgramStringARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramStringARB (GLenum target, GLenum pname, void *string);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,void * string)
glGetProgramStringNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramStringNV (GLuint id, GLenum pname, GLubyte *program);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLubyte * program)
glGetProgramSubroutineParameteruivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramSubroutineParameteruivNV (GLenum target, GLuint index, GLuint *p/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint * param)
glGetProgramiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramiv (GLuint program, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum pname,GLint * params)
glGetProgramiv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetProgramiv (GLuint program, GLenum pname, GLint* params)/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLenum pname,GLint * params)
glGetProgramivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramivARB (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetProgramivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetProgramivNV (GLuint id, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint * params)
glGetQueryIndexediv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryIndexediv (GLenum target, GLuint index, GLenum pname, GLint *param/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum pname,GLint * params)
glGetQueryObjecti64v	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjecti64v (GLuint id, GLenum pname, GLint64 *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint64 * params)
glGetQueryObjecti64vEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjecti64vEXT (GLuint id, GLenum pname, GLint64 *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint64 * params)
glGetQueryObjecti64vEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetQueryObjecti64vEXT (GLuint id, GLenum pname, GLint64 *params);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint id,GLenum pname,GLint64 * params)
glGetQueryObjectiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjectiv (GLuint id, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint * params)
glGetQueryObjectivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjectivARB (GLuint id, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint * params)
glGetQueryObjectivEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetQueryObjectivEXT (GLuint id, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint id,GLenum pname,GLint * params)
glGetQueryObjectui64v	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjectui64v (GLuint id, GLenum pname, GLuint64 *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLuint64 * params)
glGetQueryObjectui64vEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjectui64vEXT (GLuint id, GLenum pname, GLuint64 *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLuint64 * params)
glGetQueryObjectui64vEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetQueryObjectui64vEXT (GLuint id, GLenum pname, GLuint64 *params)/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint id,GLenum pname,GLuint64 * params)
glGetQueryObjectuiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLuint * params)
glGetQueryObjectuivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryObjectuivARB (GLuint id, GLenum pname, GLuint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLuint * params)
glGetQueryObjectuivEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetQueryObjectuivEXT (GLuint id, GLenum pname, GLuint *params);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint id,GLenum pname,GLuint * params)
glGetQueryiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryiv (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetQueryivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetQueryivARB (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetQueryivEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetQueryivEXT (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetRenderbufferParameteriv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetRenderbufferParameteriv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetRenderbufferParameteriv (GLenum target, GLenum pname, G/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetRenderbufferParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetRenderbufferParameterivEXT (GLenum target, GLenum pname, GLint *params)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetSamplerParameterIiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSamplerParameterIiv (GLuint sampler, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,GLint * params)
glGetSamplerParameterIuiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSamplerParameterIuiv (GLuint sampler, GLenum pname, GLuint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,GLuint * params)
glGetSamplerParameterfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSamplerParameterfv (GLuint sampler, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,GLfloat * params)
glGetSamplerParameteriv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSamplerParameteriv (GLuint sampler, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,GLint * params)
glGetSeparableFilter	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetSeparableFilter( GLenum target, GLenum format,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum format,GLenum type,GLvoid * row,GLvoid * column,GLvoid * span)
glGetSeparableFilter	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSeparableFilter (GLenum target, GLenum format, GLenum type, void *row, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
glGetSeparableFilterEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSeparableFilterEXT (GLenum target, GLenum format, GLenum type, void *ro/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
glGetShaderInfoLog	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
glGetShaderInfoLog	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetShaderInfoLog (GLuint shader, GLsizei bufsize, GLsizei*/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader,GLsizei bufsize,GLsizei * length,GLchar * infolog)
glGetShaderPrecisionFormat	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
glGetShaderPrecisionFormat	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetShaderPrecisionFormat (GLenum shadertype, GLenum precis/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
glGetShaderSource	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source)
glGetShaderSource	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetShaderSource (GLuint shader, GLsizei bufsize, GLsizei* /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader,GLsizei bufsize,GLsizei * length,GLchar * source)
glGetShaderSourceARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetShaderSourceARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * source)
glGetShaderiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetShaderiv (GLuint shader, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader,GLenum pname,GLint * params)
glGetShaderiv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetShaderiv (GLuint shader, GLenum pname, GLint* params);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader,GLenum pname,GLint * params)
glGetSharpenTexFuncSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSharpenTexFuncSGIS (GLenum target, GLfloat *points);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat * points)
glGetString	SDL_opengl.h	/^GLAPI const GLubyte * GLAPIENTRY glGetString( GLenum name );$/;"	kind:p	typeref:typename:GLAPI const GLubyte * GLAPIENTRY	signature:(GLenum name)
glGetString	SDL_opengles2_gl2.h	/^GL_APICALL const GLubyte* GL_APIENTRY glGetString (GLenum name);$/;"	kind:p	typeref:typename:GL_APICALL const GLubyte * GL_APIENTRY	signature:(GLenum name)
glGetStringi	SDL_opengl_glext.h	/^GLAPI const GLubyte *APIENTRY glGetStringi (GLenum name, GLuint index);$/;"	kind:p	typeref:typename:GLAPI const GLubyte * APIENTRY	signature:(GLenum name,GLuint index)
glGetSubroutineIndex	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGetSubroutineIndex (GLuint program, GLenum shadertype, const GLchar *nam/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint program,GLenum shadertype,const GLchar * name)
glGetSubroutineUniformLocation	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetSubroutineUniformLocation (GLuint program, GLenum shadertype, const GL/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,GLenum shadertype,const GLchar * name)
glGetSynciv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
glGetSyncivAPPLE	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetSyncivAPPLE (GLsync sync, GLenum pname, GLsizei bufSize, GLsize/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
glGetTexBumpParameterfvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexBumpParameterfvATI (GLenum pname, GLfloat *param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat * param)
glGetTexBumpParameterivATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexBumpParameterivATI (GLenum pname, GLint *param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint * param)
glGetTexEnvfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexEnvfv( GLenum target, GLenum pname, GLfloat *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetTexEnviv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexEnviv( GLenum target, GLenum pname, GLint *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetTexEnvxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexEnvxvOES (GLenum target, GLenum pname, GLfixed *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed * params)
glGetTexFilterFuncSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexFilterFuncSGIS (GLenum target, GLenum filter, GLfloat *weights);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum filter,GLfloat * weights)
glGetTexGendv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexGendv( GLenum coord, GLenum pname, GLdouble *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,GLdouble * params)
glGetTexGenfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexGenfv( GLenum coord, GLenum pname, GLfloat *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,GLfloat * params)
glGetTexGeniv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexGeniv( GLenum coord, GLenum pname, GLint *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,GLint * params)
glGetTexGenxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexGenxvOES (GLenum coord, GLenum pname, GLfixed *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum coord,GLenum pname,GLfixed * params)
glGetTexImage	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexImage( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum format,GLenum type,GLvoid * pixels)
glGetTexLevelParameterfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexLevelParameterfv( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum pname,GLfloat * params)
glGetTexLevelParameteriv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexLevelParameteriv( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLenum pname,GLint * params)
glGetTexLevelParameterxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexLevelParameterxvOES (GLenum target, GLint level, GLenum pname, GLfix/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum pname,GLfixed * params)
glGetTexParameterIiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexParameterIiv (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetTexParameterIivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexParameterIivEXT (GLenum target, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetTexParameterIuiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexParameterIuiv (GLenum target, GLenum pname, GLuint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLuint * params)
glGetTexParameterIuivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexParameterIuivEXT (GLenum target, GLenum pname, GLuint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLuint * params)
glGetTexParameterPointervAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexParameterPointervAPPLE (GLenum target, GLenum pname, void **params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,void ** params)
glGetTexParameterfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexParameterfv( GLenum target,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetTexParameterfv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetTexParameterfv (GLenum target, GLenum pname, GLfloat* p/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLfloat * params)
glGetTexParameteriv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glGetTexParameteriv( GLenum target,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetTexParameteriv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint* par/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLint * params)
glGetTexParameterxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTexParameterxvOES (GLenum target, GLenum pname, GLfixed *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed * params)
glGetTextureHandleARB	SDL_opengl_glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureHandleARB (GLuint texture);$/;"	kind:p	typeref:typename:GLAPI GLuint64 APIENTRY	signature:(GLuint texture)
glGetTextureHandleNV	SDL_opengl_glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureHandleNV (GLuint texture);$/;"	kind:p	typeref:typename:GLAPI GLuint64 APIENTRY	signature:(GLuint texture)
glGetTextureImageEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureImageEXT (GLuint texture, GLenum target, GLint level, GLenum for/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
glGetTextureLevelParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureLevelParameterfvEXT (GLuint texture, GLenum target, GLint level,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum pname,GLfloat * params)
glGetTextureLevelParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureLevelParameterivEXT (GLuint texture, GLenum target, GLint level,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLenum pname,GLint * params)
glGetTextureParameterIivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,GLint * params)
glGetTextureParameterIuivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,GLuint * params)
glGetTextureParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, GLf/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,GLfloat * params)
glGetTextureParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, GLi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,GLint * params)
glGetTextureSamplerHandleARB	SDL_opengl_glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureSamplerHandleARB (GLuint texture, GLuint sampler);$/;"	kind:p	typeref:typename:GLAPI GLuint64 APIENTRY	signature:(GLuint texture,GLuint sampler)
glGetTextureSamplerHandleNV	SDL_opengl_glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureSamplerHandleNV (GLuint texture, GLuint sampler);$/;"	kind:p	typeref:typename:GLAPI GLuint64 APIENTRY	signature:(GLuint texture,GLuint sampler)
glGetTrackMatrixivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTrackMatrixivNV (GLenum target, GLuint address, GLenum pname, GLint *pa/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint address,GLenum pname,GLint * params)
glGetTransformFeedbackVarying	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTransformFeedbackVarying (GLuint program, GLuint index, GLsizei bufSize/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
glGetTransformFeedbackVaryingEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTransformFeedbackVaryingEXT (GLuint program, GLuint index, GLsizei bufS/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
glGetTransformFeedbackVaryingNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetTransformFeedbackVaryingNV (GLuint program, GLuint index, GLint *locati/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint index,GLint * location)
glGetTranslatedShaderSourceANGLE	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetTranslatedShaderSourceANGLE (GLuint shader, GLsizei bufsize, GL/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader,GLsizei bufsize,GLsizei * length,GLchar * source)
glGetUniformBlockIndex	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glGetUniformBlockIndex (GLuint program, const GLchar *uniformBlockName);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLuint program,const GLchar * uniformBlockName)
glGetUniformBufferSizeEXT	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetUniformBufferSizeEXT (GLuint program, GLint location);$/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,GLint location)
glGetUniformIndices	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar *con/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
glGetUniformLocation	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetUniformLocation (GLuint program, const GLchar *name);$/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,const GLchar * name)
glGetUniformLocation	SDL_opengles2_gl2.h	/^GL_APICALL GLint        GL_APIENTRY glGetUniformLocation (GLuint program, const GLchar* name);$/;"	kind:p	typeref:typename:GL_APICALL GLint GL_APIENTRY	signature:(GLuint program,const GLchar * name)
glGetUniformLocationARB	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetUniformLocationARB (GLhandleARB programObj, const GLcharARB *name);$/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLhandleARB programObj,const GLcharARB * name)
glGetUniformOffsetEXT	SDL_opengl_glext.h	/^GLAPI GLintptr APIENTRY glGetUniformOffsetEXT (GLuint program, GLint location);$/;"	kind:p	typeref:typename:GLAPI GLintptr APIENTRY	signature:(GLuint program,GLint location)
glGetUniformSubroutineuiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformSubroutineuiv (GLenum shadertype, GLint location, GLuint *params/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum shadertype,GLint location,GLuint * params)
glGetUniformdv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformdv (GLuint program, GLint location, GLdouble *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble * params)
glGetUniformfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformfv (GLuint program, GLint location, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat * params)
glGetUniformfv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetUniformfv (GLuint program, GLint location, GLfloat* par/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLfloat * params)
glGetUniformfvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformfvARB (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj,GLint location,GLfloat * params)
glGetUniformi64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformi64vNV (GLuint program, GLint location, GLint64EXT *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint64EXT * params)
glGetUniformiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformiv (GLuint program, GLint location, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint * params)
glGetUniformiv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetUniformiv (GLuint program, GLint location, GLint* param/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLint * params)
glGetUniformivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformivARB (GLhandleARB programObj, GLint location, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj,GLint location,GLint * params)
glGetUniformui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformui64vNV (GLuint program, GLint location, GLuint64EXT *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64EXT * params)
glGetUniformuiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformuiv (GLuint program, GLint location, GLuint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint * params)
glGetUniformuivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetUniformuivEXT (GLuint program, GLint location, GLuint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint * params)
glGetVariantArrayObjectfvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVariantArrayObjectfvATI (GLuint id, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLfloat * params)
glGetVariantArrayObjectivATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVariantArrayObjectivATI (GLuint id, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum pname,GLint * params)
glGetVariantBooleanvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLboolean * data)
glGetVariantFloatvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLfloat * data)
glGetVariantIntegervEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVariantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,GLint * data)
glGetVariantPointervEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVariantPointervEXT (GLuint id, GLenum value, void **data);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum value,void ** data)
glGetVaryingLocationNV	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glGetVaryingLocationNV (GLuint program, const GLchar *name);$/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint program,const GLchar * name)
glGetVertexArrayIntegeri_vEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexArrayIntegeri_vEXT (GLuint vaobj, GLuint index, GLenum pname, GLi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
glGetVertexArrayIntegervEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexArrayIntegervEXT (GLuint vaobj, GLenum pname, GLint *param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLenum pname,GLint * param)
glGetVertexArrayPointeri_vEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexArrayPointeri_vEXT (GLuint vaobj, GLuint index, GLenum pname, voi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint index,GLenum pname,void ** param)
glGetVertexArrayPointervEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexArrayPointervEXT (GLuint vaobj, GLenum pname, void **param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLenum pname,void ** param)
glGetVertexAttribArrayObjectfvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribArrayObjectfvATI (GLuint index, GLenum pname, GLfloat *para/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLfloat * params)
glGetVertexAttribArrayObjectivATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribArrayObjectivATI (GLuint index, GLenum pname, GLint *params/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVertexAttribIiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribIiv (GLuint index, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVertexAttribIivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVertexAttribIuiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribIuiv (GLuint index, GLenum pname, GLuint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLuint * params)
glGetVertexAttribIuivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLuint * params)
glGetVertexAttribLdv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribLdv (GLuint index, GLenum pname, GLdouble *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLdouble * params)
glGetVertexAttribLdvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribLdvEXT (GLuint index, GLenum pname, GLdouble *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLdouble * params)
glGetVertexAttribLi64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribLi64vNV (GLuint index, GLenum pname, GLint64EXT *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint64EXT * params)
glGetVertexAttribLui64vARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribLui64vARB (GLuint index, GLenum pname, GLuint64EXT *params)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLuint64EXT * params)
glGetVertexAttribLui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribLui64vNV (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLuint64EXT * params)
glGetVertexAttribPointerv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribPointerv (GLuint index, GLenum pname, void **pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,void ** pointer)
glGetVertexAttribPointerv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetVertexAttribPointerv (GLuint index, GLenum pname, GLvoi/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index,GLenum pname,GLvoid ** pointer)
glGetVertexAttribPointervARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribPointervARB (GLuint index, GLenum pname, void **pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,void ** pointer)
glGetVertexAttribPointervNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribPointervNV (GLuint index, GLenum pname, void **pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,void ** pointer)
glGetVertexAttribdv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLdouble * params)
glGetVertexAttribdvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribdvARB (GLuint index, GLenum pname, GLdouble *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLdouble * params)
glGetVertexAttribdvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribdvNV (GLuint index, GLenum pname, GLdouble *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLdouble * params)
glGetVertexAttribfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLfloat * params)
glGetVertexAttribfv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat* pa/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index,GLenum pname,GLfloat * params)
glGetVertexAttribfvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribfvARB (GLuint index, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLfloat * params)
glGetVertexAttribfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribfvNV (GLuint index, GLenum pname, GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLfloat * params)
glGetVertexAttribiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVertexAttribiv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glGetVertexAttribiv (GLuint index, GLenum pname, GLint* para/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVertexAttribivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribivARB (GLuint index, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVertexAttribivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVertexAttribivNV (GLuint index, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint * params)
glGetVideoCaptureStreamdvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamdvNV (GLuint video_capture_slot, GLuint stream, GLenu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum pname,GLdouble * params)
glGetVideoCaptureStreamfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamfvNV (GLuint video_capture_slot, GLuint stream, GLenu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum pname,GLfloat * params)
glGetVideoCaptureStreamivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamivNV (GLuint video_capture_slot, GLuint stream, GLenu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum pname,GLint * params)
glGetVideoCaptureivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoCaptureivNV (GLuint video_capture_slot, GLenum pname, GLint *param/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLenum pname,GLint * params)
glGetVideoi64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoi64vNV (GLuint video_slot, GLenum pname, GLint64EXT *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_slot,GLenum pname,GLint64EXT * params)
glGetVideoivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoivNV (GLuint video_slot, GLenum pname, GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_slot,GLenum pname,GLint * params)
glGetVideoui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideoui64vNV (GLuint video_slot, GLenum pname, GLuint64EXT *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_slot,GLenum pname,GLuint64EXT * params)
glGetVideouivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetVideouivNV (GLuint video_slot, GLenum pname, GLuint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_slot,GLenum pname,GLuint * params)
glGetnColorTableARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnColorTableARB (GLenum target, GLenum format, GLenum type, GLsizei bufS/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * table)
glGetnCompressedTexImageARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnCompressedTexImageARB (GLenum target, GLint lod, GLsizei bufSize, void/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint lod,GLsizei bufSize,void * img)
glGetnConvolutionFilterARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnConvolutionFilterARB (GLenum target, GLenum format, GLenum type, GLsiz/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * image)
glGetnHistogramARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnHistogramARB (GLenum target, GLboolean reset, GLenum format, GLenum ty/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
glGetnMapdvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnMapdvARB (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum query,GLsizei bufSize,GLdouble * v)
glGetnMapfvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum query,GLsizei bufSize,GLfloat * v)
glGetnMapivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum query,GLsizei bufSize,GLint * v)
glGetnMinmaxARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
glGetnPixelMapfvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat *values);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum map,GLsizei bufSize,GLfloat * values)
glGetnPixelMapuivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint *values);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum map,GLsizei bufSize,GLuint * values)
glGetnPixelMapusvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnPixelMapusvARB (GLenum map, GLsizei bufSize, GLushort *values);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum map,GLsizei bufSize,GLushort * values)
glGetnPolygonStippleARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnPolygonStippleARB (GLsizei bufSize, GLubyte *pattern);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei bufSize,GLubyte * pattern)
glGetnSeparableFilterARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnSeparableFilterARB (GLenum target, GLenum format, GLenum type, GLsizei/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void * row,GLsizei columnBufSize,void * column,void * span)
glGetnTexImageARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnTexImageARB (GLenum target, GLint level, GLenum format, GLenum type, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * img)
glGetnUniformdvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnUniformdvARB (GLuint program, GLint location, GLsizei bufSize, GLdoubl/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
glGetnUniformfvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnUniformfvARB (GLuint program, GLint location, GLsizei bufSize, GLfloat/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
glGetnUniformfvEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetnUniformfvEXT (GLuint program, GLint location, GLsizei bufSize,/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
glGetnUniformivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnUniformivARB (GLuint program, GLint location, GLsizei bufSize, GLint */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei bufSize,GLint * params)
glGetnUniformivEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glGetnUniformivEXT (GLuint program, GLint location, GLsizei bufSize,/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei bufSize,GLint * params)
glGetnUniformuivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGetnUniformuivARB (GLuint program, GLint location, GLsizei bufSize, GLuint/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
glGlobalAlphaFactorbSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorbSUN (GLbyte factor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte factor)
glGlobalAlphaFactordSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactordSUN (GLdouble factor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble factor)
glGlobalAlphaFactorfSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorfSUN (GLfloat factor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat factor)
glGlobalAlphaFactoriSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactoriSUN (GLint factor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint factor)
glGlobalAlphaFactorsSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorsSUN (GLshort factor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort factor)
glGlobalAlphaFactorubSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorubSUN (GLubyte factor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte factor)
glGlobalAlphaFactoruiSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactoruiSUN (GLuint factor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint factor)
glGlobalAlphaFactorusSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorusSUN (GLushort factor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLushort factor)
glHint	SDL_opengl.h	/^GLAPI void GLAPIENTRY glHint( GLenum target, GLenum mode );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum mode)
glHint	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glHint (GLenum target, GLenum mode);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum mode)
glHintPGI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glHintPGI (GLenum target, GLint mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint mode)
glHistogram	SDL_opengl.h	/^GLAPI void GLAPIENTRY glHistogram( GLenum target, GLsizei width,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
glHistogram	SDL_opengl_glext.h	/^GLAPI void APIENTRY glHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
glHistogramEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glHistogramEXT (GLenum target, GLsizei width, GLenum internalformat, GLboole/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
glIglooInterfaceSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glIglooInterfaceSGIX (GLenum pname, const void *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const void * params)
glImageTransformParameterfHP	SDL_opengl_glext.h	/^GLAPI void APIENTRY glImageTransformParameterfHP (GLenum target, GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat param)
glImageTransformParameterfvHP	SDL_opengl_glext.h	/^GLAPI void APIENTRY glImageTransformParameterfvHP (GLenum target, GLenum pname, const GLfloat *p/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glImageTransformParameteriHP	SDL_opengl_glext.h	/^GLAPI void APIENTRY glImageTransformParameteriHP (GLenum target, GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glImageTransformParameterivHP	SDL_opengl_glext.h	/^GLAPI void APIENTRY glImageTransformParameterivHP (GLenum target, GLenum pname, const GLint *par/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glImportSyncEXT	SDL_opengl_glext.h	/^GLAPI GLsync APIENTRY glImportSyncEXT (GLenum external_sync_type, GLintptr external_sync, GLbitf/;"	kind:p	typeref:typename:GLAPI GLsync APIENTRY	signature:(GLenum external_sync_type,GLintptr external_sync,GLbitfield flags)
glIndexFormatNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexFormatNV (GLenum type, GLsizei stride);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride)
glIndexFuncEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexFuncEXT (GLenum func, GLclampf ref);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum func,GLclampf ref)
glIndexMask	SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexMask( GLuint mask );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint mask)
glIndexMaterialEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexMaterialEXT (GLenum face, GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum mode)
glIndexPointer	SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexPointer( GLenum type, GLsizei stride,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum type,GLsizei stride,const GLvoid * ptr)
glIndexPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexPointerEXT (GLenum type, GLsizei stride, GLsizei count, const void *p/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
glIndexPointerListIBM	SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexPointerListIBM (GLenum type, GLint stride, const void **pointer, GLin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glIndexd	SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexd( GLdouble c );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble c)
glIndexdv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexdv( const GLdouble *c );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * c)
glIndexf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexf( GLfloat c );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat c)
glIndexfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexfv( const GLfloat *c );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * c)
glIndexi	SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexi( GLint c );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint c)
glIndexiv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexiv( const GLint *c );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * c)
glIndexs	SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexs( GLshort c );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort c)
glIndexsv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexsv( const GLshort *c );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * c)
glIndexub	SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexub( GLubyte c );  \/* 1.1 *\/$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLubyte c)
glIndexubv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glIndexubv( const GLubyte *c );  \/* 1.1 *\/$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLubyte * c)
glIndexxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexxOES (GLfixed component);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed component)
glIndexxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glIndexxvOES (const GLfixed *component);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * component)
glInitNames	SDL_opengl.h	/^GLAPI void GLAPIENTRY glInitNames( void );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glInsertComponentEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glInsertComponentEXT (GLuint res, GLuint src, GLuint num);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint res,GLuint src,GLuint num)
glInsertEventMarkerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glInsertEventMarkerEXT (GLsizei length, const GLchar *marker);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei length,const GLchar * marker)
glInsertEventMarkerEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glInsertEventMarkerEXT (GLsizei length, const GLchar *marker);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei length,const GLchar * marker)
glInstrumentsBufferSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glInstrumentsBufferSGIX (GLsizei size, GLint *buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei size,GLint * buffer)
glInterleavedArrays	SDL_opengl.h	/^GLAPI void GLAPIENTRY glInterleavedArrays( GLenum format, GLsizei stride,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum format,GLsizei stride,const GLvoid * pointer)
glInterpolatePathsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glInterpolatePathsNV (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint resultPath,GLuint pathA,GLuint pathB,GLfloat weight)
glInvalidateBufferData	SDL_opengl_glext.h	/^GLAPI void APIENTRY glInvalidateBufferData (GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer)
glInvalidateBufferSubData	SDL_opengl_glext.h	/^GLAPI void APIENTRY glInvalidateBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr length/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLintptr offset,GLsizeiptr length)
glInvalidateFramebuffer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glInvalidateFramebuffer (GLenum target, GLsizei numAttachments, const GLenum/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei numAttachments,const GLenum * attachments)
glInvalidateSubFramebuffer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glInvalidateSubFramebuffer (GLenum target, GLsizei numAttachments, const GLe/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
glInvalidateTexImage	SDL_opengl_glext.h	/^GLAPI void APIENTRY glInvalidateTexImage (GLuint texture, GLint level);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLint level)
glInvalidateTexSubImage	SDL_opengl_glext.h	/^GLAPI void APIENTRY glInvalidateTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint y/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)
glIsAsyncMarkerSGIX	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsAsyncMarkerSGIX (GLuint marker);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint marker)
glIsBuffer	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsBuffer (GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint buffer)
glIsBuffer	SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsBuffer (GLuint buffer);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint buffer)
glIsBufferARB	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsBufferARB (GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint buffer)
glIsBufferResidentNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsBufferResidentNV (GLenum target);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum target)
glIsEnabled	SDL_opengl.h	/^GLAPI GLboolean GLAPIENTRY glIsEnabled( GLenum cap );$/;"	kind:p	typeref:typename:GLAPI GLboolean GLAPIENTRY	signature:(GLenum cap)
glIsEnabled	SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsEnabled (GLenum cap);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLenum cap)
glIsEnabledIndexedEXT	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsEnabledIndexedEXT (GLenum target, GLuint index);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum target,GLuint index)
glIsEnabledi	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsEnabledi (GLenum target, GLuint index);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum target,GLuint index)
glIsFenceAPPLE	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsFenceAPPLE (GLuint fence);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint fence)
glIsFenceNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsFenceNV (GLuint fence);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint fence)
glIsFenceNV	SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glIsFenceNV (GLuint fence);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint fence)
glIsFramebuffer	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsFramebuffer (GLuint framebuffer);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint framebuffer)
glIsFramebuffer	SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsFramebuffer (GLuint framebuffer);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint framebuffer)
glIsFramebufferEXT	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsFramebufferEXT (GLuint framebuffer);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint framebuffer)
glIsImageHandleResidentARB	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsImageHandleResidentARB (GLuint64 handle);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint64 handle)
glIsImageHandleResidentNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsImageHandleResidentNV (GLuint64 handle);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint64 handle)
glIsList	SDL_opengl.h	/^GLAPI GLboolean GLAPIENTRY glIsList( GLuint list );$/;"	kind:p	typeref:typename:GLAPI GLboolean GLAPIENTRY	signature:(GLuint list)
glIsNameAMD	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsNameAMD (GLenum identifier, GLuint name);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum identifier,GLuint name)
glIsNamedBufferResidentNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsNamedBufferResidentNV (GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint buffer)
glIsNamedStringARB	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsNamedStringARB (GLint namelen, const GLchar *name);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLint namelen,const GLchar * name)
glIsObjectBufferATI	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsObjectBufferATI (GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint buffer)
glIsOcclusionQueryNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsOcclusionQueryNV (GLuint id);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id)
glIsPathNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsPathNV (GLuint path);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint path)
glIsPointInFillPathNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsPointInFillPathNV (GLuint path, GLuint mask, GLfloat x, GLfloat y);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint path,GLuint mask,GLfloat x,GLfloat y)
glIsPointInStrokePathNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsPointInStrokePathNV (GLuint path, GLfloat x, GLfloat y);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint path,GLfloat x,GLfloat y)
glIsProgram	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsProgram (GLuint program);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint program)
glIsProgram	SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsProgram (GLuint program);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint program)
glIsProgramARB	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsProgramARB (GLuint program);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint program)
glIsProgramNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsProgramNV (GLuint id);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id)
glIsProgramPipeline	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsProgramPipeline (GLuint pipeline);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint pipeline)
glIsProgramPipelineEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glIsProgramPipelineEXT (GLuint pipeline);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint pipeline)
glIsQuery	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsQuery (GLuint id);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id)
glIsQueryARB	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsQueryARB (GLuint id);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id)
glIsQueryEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glIsQueryEXT (GLuint id);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint id)
glIsRenderbuffer	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsRenderbuffer (GLuint renderbuffer);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint renderbuffer)
glIsRenderbuffer	SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsRenderbuffer (GLuint renderbuffer);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint renderbuffer)
glIsRenderbufferEXT	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsRenderbufferEXT (GLuint renderbuffer);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint renderbuffer)
glIsSampler	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsSampler (GLuint sampler);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint sampler)
glIsShader	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsShader (GLuint shader);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint shader)
glIsShader	SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsShader (GLuint shader);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint shader)
glIsSync	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsSync (GLsync sync);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLsync sync)
glIsSyncAPPLE	SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glIsSyncAPPLE (GLsync sync);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLsync sync)
glIsTexture	SDL_opengl.h	/^GLAPI GLboolean GLAPIENTRY glIsTexture( GLuint texture );$/;"	kind:p	typeref:typename:GLAPI GLboolean GLAPIENTRY	signature:(GLuint texture)
glIsTexture	SDL_opengles2_gl2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsTexture (GLuint texture);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint texture)
glIsTextureEXT	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsTextureEXT (GLuint texture);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint texture)
glIsTextureHandleResidentARB	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsTextureHandleResidentARB (GLuint64 handle);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint64 handle)
glIsTextureHandleResidentNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsTextureHandleResidentNV (GLuint64 handle);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint64 handle)
glIsTransformFeedback	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsTransformFeedback (GLuint id);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id)
glIsTransformFeedbackNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsTransformFeedbackNV (GLuint id);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id)
glIsVariantEnabledEXT	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsVariantEnabledEXT (GLuint id, GLenum cap);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint id,GLenum cap)
glIsVertexArray	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsVertexArray (GLuint array);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint array)
glIsVertexArrayAPPLE	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsVertexArrayAPPLE (GLuint array);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint array)
glIsVertexArrayOES	SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glIsVertexArrayOES (GLuint array);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint array)
glIsVertexAttribEnabledAPPLE	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glIsVertexAttribEnabledAPPLE (GLuint index, GLenum pname);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint index,GLenum pname)
glLabelObjectEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLabelObjectEXT (GLenum type, GLuint object, GLsizei length, const GLchar */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint object,GLsizei length,const GLchar * label)
glLabelObjectEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glLabelObjectEXT (GLenum type, GLuint object, GLsizei length, const /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum type,GLuint object,GLsizei length,const GLchar * label)
glLightEnviSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLightEnviSGIX (GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glLightModelf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightModelf( GLenum pname, GLfloat param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLfloat param)
glLightModelfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightModelfv( GLenum pname, const GLfloat *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,const GLfloat * params)
glLightModeli	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightModeli( GLenum pname, GLint param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLint param)
glLightModeliv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightModeliv( GLenum pname, const GLint *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,const GLint * params)
glLightModelxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLightModelxOES (GLenum pname, GLfixed param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfixed param)
glLightModelxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLightModelxvOES (GLenum pname, const GLfixed *param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfixed * param)
glLightf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightf( GLenum light, GLenum pname, GLfloat param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum light,GLenum pname,GLfloat param)
glLightfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightfv( GLenum light, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum light,GLenum pname,const GLfloat * params)
glLighti	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLighti( GLenum light, GLenum pname, GLint param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum light,GLenum pname,GLint param)
glLightiv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLightiv( GLenum light, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum light,GLenum pname,const GLint * params)
glLightxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLightxOES (GLenum light, GLenum pname, GLfixed param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,GLfixed param)
glLightxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLightxvOES (GLenum light, GLenum pname, const GLfixed *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum light,GLenum pname,const GLfixed * params)
glLineStipple	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLineStipple( GLint factor, GLushort pattern );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint factor,GLushort pattern)
glLineWidth	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLineWidth( GLfloat width );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat width)
glLineWidth	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glLineWidth (GLfloat width);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLfloat width)
glLineWidthxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLineWidthxOES (GLfixed width);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed width)
glLinkProgram	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLinkProgram (GLuint program);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program)
glLinkProgram	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glLinkProgram (GLuint program);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program)
glLinkProgramARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLinkProgramARB (GLhandleARB programObj);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj)
glListBase	SDL_opengl.h	/^GLAPI void GLAPIENTRY glListBase( GLuint base );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint base)
glListParameterfSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glListParameterfSGIX (GLuint list, GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint list,GLenum pname,GLfloat param)
glListParameterfvSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glListParameterfvSGIX (GLuint list, GLenum pname, const GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint list,GLenum pname,const GLfloat * params)
glListParameteriSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glListParameteriSGIX (GLuint list, GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint list,GLenum pname,GLint param)
glListParameterivSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glListParameterivSGIX (GLuint list, GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint list,GLenum pname,const GLint * params)
glLoadIdentity	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLoadIdentity( void );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glLoadIdentityDeformationMapSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadIdentityDeformationMapSGIX (GLbitfield mask);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield mask)
glLoadMatrixd	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLoadMatrixd( const GLdouble *m );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * m)
glLoadMatrixf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLoadMatrixf( const GLfloat *m );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * m)
glLoadMatrixxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadMatrixxOES (const GLfixed *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * m)
glLoadName	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLoadName( GLuint name );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint name)
glLoadProgramNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadProgramNV (GLenum target, GLuint id, GLsizei len, const GLubyte *progr/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id,GLsizei len,const GLubyte * program)
glLoadTransposeMatrixd	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLoadTransposeMatrixd( const GLdouble m[16] );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble m[16])
glLoadTransposeMatrixd	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixd (const GLdouble *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * m)
glLoadTransposeMatrixdARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixdARB (const GLdouble *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * m)
glLoadTransposeMatrixf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLoadTransposeMatrixf( const GLfloat m[16] );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat m[16])
glLoadTransposeMatrixf	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixf (const GLfloat *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * m)
glLoadTransposeMatrixfARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixfARB (const GLfloat *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * m)
glLoadTransposeMatrixxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixxOES (const GLfixed *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * m)
glLockArraysEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glLockArraysEXT (GLint first, GLsizei count);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint first,GLsizei count)
glLogicOp	SDL_opengl.h	/^GLAPI void GLAPIENTRY glLogicOp( GLenum opcode );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum opcode)
glMakeBufferNonResidentNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeBufferNonResidentNV (GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glMakeBufferResidentNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeBufferResidentNV (GLenum target, GLenum access);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum access)
glMakeImageHandleNonResidentARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeImageHandleNonResidentARB (GLuint64 handle);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle)
glMakeImageHandleNonResidentNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeImageHandleNonResidentNV (GLuint64 handle);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle)
glMakeImageHandleResidentARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeImageHandleResidentARB (GLuint64 handle, GLenum access);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle,GLenum access)
glMakeImageHandleResidentNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeImageHandleResidentNV (GLuint64 handle, GLenum access);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle,GLenum access)
glMakeNamedBufferNonResidentNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeNamedBufferNonResidentNV (GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer)
glMakeNamedBufferResidentNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeNamedBufferResidentNV (GLuint buffer, GLenum access);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLenum access)
glMakeTextureHandleNonResidentARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeTextureHandleNonResidentARB (GLuint64 handle);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle)
glMakeTextureHandleNonResidentNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeTextureHandleNonResidentNV (GLuint64 handle);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle)
glMakeTextureHandleResidentARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeTextureHandleResidentARB (GLuint64 handle);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle)
glMakeTextureHandleResidentNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMakeTextureHandleResidentNV (GLuint64 handle);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint64 handle)
glMap1d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMap1d( GLenum target, GLdouble u1, GLdouble u2,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points)
glMap1f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMap1f( GLenum target, GLfloat u1, GLfloat u2,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points)
glMap1xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMap1xOES (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfixed u1,GLfixed u2,GLint stride,GLint order,GLfixed points)
glMap2d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMap2d( GLenum target,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points)
glMap2f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMap2f( GLenum target,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points)
glMap2xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMap2xOES (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uord/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfixed u1,GLfixed u2,GLint ustride,GLint uorder,GLfixed v1,GLfixed v2,GLint vstride,GLint vorder,GLfixed points)
glMapBuffer	SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapBuffer (GLenum target, GLenum access);$/;"	kind:p	typeref:typename:GLAPI void * APIENTRY	signature:(GLenum target,GLenum access)
glMapBufferARB	SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapBufferARB (GLenum target, GLenum access);$/;"	kind:p	typeref:typename:GLAPI void * APIENTRY	signature:(GLenum target,GLenum access)
glMapBufferOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void* GL_APIENTRY glMapBufferOES (GLenum target, GLenum access);$/;"	kind:p	typeref:typename:GL_APICALL void * GL_APIENTRY	signature:(GLenum target,GLenum access)
glMapBufferRange	SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapBufferRange (GLenum target, GLintptr offset, GLsizeiptr length, GLbitf/;"	kind:p	typeref:typename:GLAPI void * APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
glMapBufferRangeEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void* GL_APIENTRY glMapBufferRangeEXT (GLenum target, GLintptr offset, GLsizeiptr len/;"	kind:p	typeref:typename:GL_APICALL void * GL_APIENTRY	signature:(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
glMapControlPointsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustr/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLint uorder,GLint vorder,GLboolean packed,const void * points)
glMapGrid1d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMapGrid1d( GLint un, GLdouble u1, GLdouble u2 );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint un,GLdouble u1,GLdouble u2)
glMapGrid1f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMapGrid1f( GLint un, GLfloat u1, GLfloat u2 );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint un,GLfloat u1,GLfloat u2)
glMapGrid1xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapGrid1xOES (GLint n, GLfixed u1, GLfixed u2);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint n,GLfixed u1,GLfixed u2)
glMapGrid2d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMapGrid2d( GLint un, GLdouble u1, GLdouble u2,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint un,GLdouble u1,GLdouble u2,GLint vn,GLdouble v1,GLdouble v2)
glMapGrid2f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMapGrid2f( GLint un, GLfloat u1, GLfloat u2,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint un,GLfloat u1,GLfloat u2,GLint vn,GLfloat v1,GLfloat v2)
glMapGrid2xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapGrid2xOES (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint n,GLfixed u1,GLfixed u2,GLfixed v1,GLfixed v2)
glMapNamedBufferEXT	SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapNamedBufferEXT (GLuint buffer, GLenum access);$/;"	kind:p	typeref:typename:GLAPI void * APIENTRY	signature:(GLuint buffer,GLenum access)
glMapNamedBufferRangeEXT	SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length/;"	kind:p	typeref:typename:GLAPI void * APIENTRY	signature:(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
glMapObjectBufferATI	SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapObjectBufferATI (GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void * APIENTRY	signature:(GLuint buffer)
glMapParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapParameterfvNV (GLenum target, GLenum pname, const GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glMapParameterivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapParameterivNV (GLenum target, GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glMapTexture2DINTEL	SDL_opengl_glext.h	/^GLAPI void *APIENTRY glMapTexture2DINTEL (GLuint texture, GLint level, GLbitfield access, GLint /;"	kind:p	typeref:typename:GLAPI void * APIENTRY	signature:(GLuint texture,GLint level,GLbitfield access,GLint * stride,GLenum * layout)
glMapVertexAttrib1dAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapVertexAttrib1dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points)
glMapVertexAttrib1fAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapVertexAttrib1fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points)
glMapVertexAttrib2dAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapVertexAttrib2dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points)
glMapVertexAttrib2fAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMapVertexAttrib2fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points)
glMaterialf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMaterialf( GLenum face, GLenum pname, GLfloat param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum pname,GLfloat param)
glMaterialfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMaterialfv( GLenum face, GLenum pname, const GLfloat *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum pname,const GLfloat * params)
glMateriali	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMateriali( GLenum face, GLenum pname, GLint param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum pname,GLint param)
glMaterialiv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMaterialiv( GLenum face, GLenum pname, const GLint *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum pname,const GLint * params)
glMaterialxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMaterialxOES (GLenum face, GLenum pname, GLfixed param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,GLfixed param)
glMaterialxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMaterialxvOES (GLenum face, GLenum pname, const GLfixed *param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum pname,const GLfixed * param)
glMatrixFrustumEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixFrustumEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bot/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
glMatrixIndexPointerARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixIndexPointerARB (GLint size, GLenum type, GLsizei stride, const void/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const void * pointer)
glMatrixIndexubvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixIndexubvARB (GLint size, const GLubyte *indices);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLubyte * indices)
glMatrixIndexuivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixIndexuivARB (GLint size, const GLuint *indices);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLuint * indices)
glMatrixIndexusvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixIndexusvARB (GLint size, const GLushort *indices);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLushort * indices)
glMatrixLoadIdentityEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixLoadIdentityEXT (GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glMatrixLoadTransposedEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixLoadTransposedEXT (GLenum mode, const GLdouble *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLdouble * m)
glMatrixLoadTransposefEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixLoadTransposefEXT (GLenum mode, const GLfloat *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLfloat * m)
glMatrixLoaddEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixLoaddEXT (GLenum mode, const GLdouble *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLdouble * m)
glMatrixLoadfEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixLoadfEXT (GLenum mode, const GLfloat *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLfloat * m)
glMatrixMode	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMatrixMode( GLenum mode );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glMatrixMultTransposedEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixMultTransposedEXT (GLenum mode, const GLdouble *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLdouble * m)
glMatrixMultTransposefEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixMultTransposefEXT (GLenum mode, const GLfloat *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLfloat * m)
glMatrixMultdEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixMultdEXT (GLenum mode, const GLdouble *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLdouble * m)
glMatrixMultfEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixMultfEXT (GLenum mode, const GLfloat *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLfloat * m)
glMatrixOrthoEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixOrthoEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble botto/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
glMatrixPopEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixPopEXT (GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glMatrixPushEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixPushEXT (GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glMatrixRotatedEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixRotatedEXT (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLd/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
glMatrixRotatefEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixRotatefEXT (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloa/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
glMatrixScaledEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixScaledEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
glMatrixScalefEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixScalefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
glMatrixTranslatedEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixTranslatedEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
glMatrixTranslatefEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMatrixTranslatefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
glMemoryBarrier	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMemoryBarrier (GLbitfield barriers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield barriers)
glMemoryBarrierEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMemoryBarrierEXT (GLbitfield barriers);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield barriers)
glMinSampleShading	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMinSampleShading (GLfloat value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat value)
glMinSampleShadingARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMinSampleShadingARB (GLfloat value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat value)
glMinmax	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMinmax( GLenum target, GLenum internalformat,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLboolean sink)
glMinmax	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMinmax (GLenum target, GLenum internalformat, GLboolean sink);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLboolean sink)
glMinmaxEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMinmaxEXT (GLenum target, GLenum internalformat, GLboolean sink);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLboolean sink)
glMultMatrixd	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultMatrixd( const GLdouble *m );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * m)
glMultMatrixf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultMatrixf( const GLfloat *m );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * m)
glMultMatrixxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultMatrixxOES (const GLfixed *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * m)
glMultTransposeMatrixd	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultTransposeMatrixd( const GLdouble m[16] );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble m[16])
glMultTransposeMatrixd	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixd (const GLdouble *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * m)
glMultTransposeMatrixdARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixdARB (const GLdouble *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * m)
glMultTransposeMatrixf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultTransposeMatrixf( const GLfloat m[16] );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat m[16])
glMultTransposeMatrixf	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixf (const GLfloat *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * m)
glMultTransposeMatrixfARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixfARB (const GLfloat *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * m)
glMultTransposeMatrixxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixxOES (const GLfixed *m);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * m)
glMultiDrawArrays	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawArrays (GLenum mode, const GLint *first, const GLsizei *count, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
glMultiDrawArraysEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawArraysEXT (GLenum mode, const GLint *first, const GLsizei *count,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
glMultiDrawArraysEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glMultiDrawArraysEXT (GLenum mode, const GLint *first, const GLsizei/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
glMultiDrawArraysIndirect	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirect (GLenum mode, const void *indirect, GLsizei drawco/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const void * indirect,GLsizei drawcount,GLsizei stride)
glMultiDrawArraysIndirectAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectAMD (GLenum mode, const void *indirect, GLsizei pri/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const void * indirect,GLsizei primcount,GLsizei stride)
glMultiDrawArraysIndirectBindlessNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectBindlessNV (GLenum mode, const void *indirect, GLsi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
glMultiDrawArraysIndirectCountARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectCountARB (GLenum mode, GLintptr indirect, GLintptr /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
glMultiDrawElementArrayAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementArrayAPPLE (GLenum mode, const GLint *first, const GLsizei/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
glMultiDrawElements	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElements (GLenum mode, const GLsizei *count, GLenum type, const v/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount)
glMultiDrawElementsBaseVertex	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementsBaseVertex (GLenum mode, const GLsizei *count, GLenum typ/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount,const GLint * basevertex)
glMultiDrawElementsEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementsEXT (GLenum mode, const GLsizei *count, GLenum type, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount)
glMultiDrawElementsEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glMultiDrawElementsEXT (GLenum mode, const GLsizei *count, GLenum ty/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode,const GLsizei * count,GLenum type,const GLvoid ** indices,GLsizei primcount)
glMultiDrawElementsIndirect	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirect (GLenum mode, GLenum type, const void *indirect,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLenum type,const void * indirect,GLsizei drawcount,GLsizei stride)
glMultiDrawElementsIndirectAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectAMD (GLenum mode, GLenum type, const void *indire/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLenum type,const void * indirect,GLsizei primcount,GLsizei stride)
glMultiDrawElementsIndirectBindlessNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectBindlessNV (GLenum mode, GLenum type, const void /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLenum type,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
glMultiDrawElementsIndirectCountARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectCountARB (GLenum mode, GLenum type, GLintptr indi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLenum type,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
glMultiDrawRangeElementArrayAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode,GLuint start,GLuint end,const GLint * first,const GLsizei * count,GLsizei primcount)
glMultiModeDrawArraysIBM	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiModeDrawArraysIBM (const GLenum *mode, const GLint *first, const GLsi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLenum * mode,const GLint * first,const GLsizei * count,GLsizei primcount,GLint modestride)
glMultiModeDrawElementsIBM	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiModeDrawElementsIBM (const GLenum *mode, const GLsizei *count, GLenum/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLenum * mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount,GLint modestride)
glMultiTexBufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexBufferEXT (GLenum texunit, GLenum target, GLenum internalformat, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum internalformat,GLuint buffer)
glMultiTexCoord1bOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1bOES (GLenum texture, GLbyte s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLbyte s)
glMultiTexCoord1bvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1bvOES (GLenum texture, const GLbyte *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLbyte * coords)
glMultiTexCoord1d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1d( GLenum target, GLdouble s );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s)
glMultiTexCoord1d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1d (GLenum target, GLdouble s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s)
glMultiTexCoord1dARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1dARB(GLenum target, GLdouble s);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s)
glMultiTexCoord1dARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1dARB (GLenum target, GLdouble s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s)
glMultiTexCoord1dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1dv( GLenum target, const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord1dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1dv (GLenum target, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord1dvARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1dvARB(GLenum target, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord1dvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1dvARB (GLenum target, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord1f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1f( GLenum target, GLfloat s );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s)
glMultiTexCoord1f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1f (GLenum target, GLfloat s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s)
glMultiTexCoord1fARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1fARB(GLenum target, GLfloat s);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s)
glMultiTexCoord1fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1fARB (GLenum target, GLfloat s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s)
glMultiTexCoord1fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1fv( GLenum target, const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord1fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1fv (GLenum target, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord1fvARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1fvARB(GLenum target, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord1fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1fvARB (GLenum target, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord1hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1hNV (GLenum target, GLhalfNV s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLhalfNV s)
glMultiTexCoord1hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1hvNV (GLenum target, const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLhalfNV * v)
glMultiTexCoord1i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1i( GLenum target, GLint s );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s)
glMultiTexCoord1i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1i (GLenum target, GLint s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s)
glMultiTexCoord1iARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1iARB(GLenum target, GLint s);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s)
glMultiTexCoord1iARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1iARB (GLenum target, GLint s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s)
glMultiTexCoord1iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1iv( GLenum target, const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord1iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1iv (GLenum target, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord1ivARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1ivARB(GLenum target, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord1ivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1ivARB (GLenum target, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord1s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1s( GLenum target, GLshort s );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s)
glMultiTexCoord1s	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1s (GLenum target, GLshort s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s)
glMultiTexCoord1sARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1sARB(GLenum target, GLshort s);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s)
glMultiTexCoord1sARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1sARB (GLenum target, GLshort s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s)
glMultiTexCoord1sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1sv( GLenum target, const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord1sv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1sv (GLenum target, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord1svARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord1svARB(GLenum target, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord1svARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1svARB (GLenum target, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord1xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1xOES (GLenum texture, GLfixed s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLfixed s)
glMultiTexCoord1xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord1xvOES (GLenum texture, const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLfixed * coords)
glMultiTexCoord2bOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2bOES (GLenum texture, GLbyte s, GLbyte t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLbyte s,GLbyte t)
glMultiTexCoord2bvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2bvOES (GLenum texture, const GLbyte *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLbyte * coords)
glMultiTexCoord2d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2d( GLenum target, GLdouble s, GLdouble t );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s,GLdouble t)
glMultiTexCoord2d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s,GLdouble t)
glMultiTexCoord2dARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s,GLdouble t)
glMultiTexCoord2dARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2dARB (GLenum target, GLdouble s, GLdouble t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s,GLdouble t)
glMultiTexCoord2dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2dv( GLenum target, const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord2dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2dv (GLenum target, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord2dvARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2dvARB(GLenum target, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord2dvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2dvARB (GLenum target, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord2f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2f( GLenum target, GLfloat s, GLfloat t );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s,GLfloat t)
glMultiTexCoord2f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s,GLfloat t)
glMultiTexCoord2fARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s,GLfloat t)
glMultiTexCoord2fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2fARB (GLenum target, GLfloat s, GLfloat t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s,GLfloat t)
glMultiTexCoord2fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2fv( GLenum target, const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord2fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2fv (GLenum target, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord2fvARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2fvARB(GLenum target, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord2fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2fvARB (GLenum target, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord2hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2hNV (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLhalfNV s,GLhalfNV t)
glMultiTexCoord2hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2hvNV (GLenum target, const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLhalfNV * v)
glMultiTexCoord2i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2i( GLenum target, GLint s, GLint t );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s,GLint t)
glMultiTexCoord2i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2i (GLenum target, GLint s, GLint t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s,GLint t)
glMultiTexCoord2iARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2iARB(GLenum target, GLint s, GLint t);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s,GLint t)
glMultiTexCoord2iARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2iARB (GLenum target, GLint s, GLint t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s,GLint t)
glMultiTexCoord2iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2iv( GLenum target, const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord2iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2iv (GLenum target, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord2ivARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2ivARB(GLenum target, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord2ivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2ivARB (GLenum target, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord2s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2s( GLenum target, GLshort s, GLshort t );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s,GLshort t)
glMultiTexCoord2s	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2s (GLenum target, GLshort s, GLshort t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s,GLshort t)
glMultiTexCoord2sARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s,GLshort t)
glMultiTexCoord2sARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2sARB (GLenum target, GLshort s, GLshort t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s,GLshort t)
glMultiTexCoord2sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2sv( GLenum target, const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord2sv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2sv (GLenum target, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord2svARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord2svARB(GLenum target, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord2svARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2svARB (GLenum target, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord2xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2xOES (GLenum texture, GLfixed s, GLfixed t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLfixed s,GLfixed t)
glMultiTexCoord2xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord2xvOES (GLenum texture, const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLfixed * coords)
glMultiTexCoord3bOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3bOES (GLenum texture, GLbyte s, GLbyte t, GLbyte r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLbyte s,GLbyte t,GLbyte r)
glMultiTexCoord3bvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3bvOES (GLenum texture, const GLbyte *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLbyte * coords)
glMultiTexCoord3d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3d( GLenum target, GLdouble s, GLdouble t, GLdouble r );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r)
glMultiTexCoord3d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r)
glMultiTexCoord3dARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r)
glMultiTexCoord3dARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r)
glMultiTexCoord3dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3dv( GLenum target, const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord3dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3dv (GLenum target, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord3dvARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3dvARB(GLenum target, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord3dvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3dvARB (GLenum target, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord3f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3f( GLenum target, GLfloat s, GLfloat t, GLfloat r );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r)
glMultiTexCoord3f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r)
glMultiTexCoord3fARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r)
glMultiTexCoord3fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r)
glMultiTexCoord3fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3fv( GLenum target, const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord3fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3fv (GLenum target, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord3fvARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3fvARB(GLenum target, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord3fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3fvARB (GLenum target, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord3hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r)
glMultiTexCoord3hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3hvNV (GLenum target, const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLhalfNV * v)
glMultiTexCoord3i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3i( GLenum target, GLint s, GLint t, GLint r );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r)
glMultiTexCoord3i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r)
glMultiTexCoord3iARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r)
glMultiTexCoord3iARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3iARB (GLenum target, GLint s, GLint t, GLint r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r)
glMultiTexCoord3iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3iv( GLenum target, const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord3iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3iv (GLenum target, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord3ivARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3ivARB(GLenum target, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord3ivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3ivARB (GLenum target, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord3s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3s( GLenum target, GLshort s, GLshort t, GLshort r );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r)
glMultiTexCoord3s	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r)
glMultiTexCoord3sARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r)
glMultiTexCoord3sARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3sARB (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r)
glMultiTexCoord3sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3sv( GLenum target, const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord3sv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3sv (GLenum target, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord3svARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord3svARB(GLenum target, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord3svARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3svARB (GLenum target, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord3xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3xOES (GLenum texture, GLfixed s, GLfixed t, GLfixed r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLfixed s,GLfixed t,GLfixed r)
glMultiTexCoord3xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord3xvOES (GLenum texture, const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLfixed * coords)
glMultiTexCoord4bOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4bOES (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLbyte s,GLbyte t,GLbyte r,GLbyte q)
glMultiTexCoord4bvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4bvOES (GLenum texture, const GLbyte *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLbyte * coords)
glMultiTexCoord4d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4d( GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdo/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
glMultiTexCoord4d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdoub/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
glMultiTexCoord4dARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GL/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
glMultiTexCoord4dARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLd/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
glMultiTexCoord4dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4dv( GLenum target, const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord4dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4dv (GLenum target, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord4dvARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4dvARB(GLenum target, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord4dvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4dvARB (GLenum target, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLdouble * v)
glMultiTexCoord4f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4f( GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
glMultiTexCoord4f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
glMultiTexCoord4fARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLflo/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
glMultiTexCoord4fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloa/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
glMultiTexCoord4fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4fv( GLenum target, const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord4fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4fv (GLenum target, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord4fvARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4fvARB(GLenum target, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord4fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4fvARB (GLenum target, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLfloat * v)
glMultiTexCoord4hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLha/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
glMultiTexCoord4hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4hvNV (GLenum target, const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLhalfNV * v)
glMultiTexCoord4i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4i( GLenum target, GLint s, GLint t, GLint r, GLint q );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r,GLint q)
glMultiTexCoord4i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4i (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r,GLint q)
glMultiTexCoord4iARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r,GLint q)
glMultiTexCoord4iARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4iARB (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint s,GLint t,GLint r,GLint q)
glMultiTexCoord4iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4iv( GLenum target, const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord4iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4iv (GLenum target, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord4ivARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4ivARB(GLenum target, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord4ivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4ivARB (GLenum target, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLint * v)
glMultiTexCoord4s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4s( GLenum target, GLshort s, GLshort t, GLshort r, GLshort/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
glMultiTexCoord4s	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
glMultiTexCoord4sARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLsho/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
glMultiTexCoord4sARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4sARB (GLenum target, GLshort s, GLshort t, GLshort r, GLshor/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
glMultiTexCoord4sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4sv( GLenum target, const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord4sv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4sv (GLenum target, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord4svARB	SDL_opengl.h	/^GLAPI void GLAPIENTRY glMultiTexCoord4svARB(GLenum target, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord4svARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4svARB (GLenum target, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,const GLshort * v)
glMultiTexCoord4xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4xOES (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfix/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLfixed s,GLfixed t,GLfixed r,GLfixed q)
glMultiTexCoord4xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoord4xvOES (GLenum texture, const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,const GLfixed * coords)
glMultiTexCoordP1ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP1ui (GLenum texture, GLenum type, GLuint coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,GLuint coords)
glMultiTexCoordP1uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP1uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,const GLuint * coords)
glMultiTexCoordP2ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP2ui (GLenum texture, GLenum type, GLuint coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,GLuint coords)
glMultiTexCoordP2uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP2uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,const GLuint * coords)
glMultiTexCoordP3ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP3ui (GLenum texture, GLenum type, GLuint coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,GLuint coords)
glMultiTexCoordP3uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP3uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,const GLuint * coords)
glMultiTexCoordP4ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP4ui (GLenum texture, GLenum type, GLuint coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,GLuint coords)
glMultiTexCoordP4uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordP4uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texture,GLenum type,const GLuint * coords)
glMultiTexCoordPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexCoordPointerEXT (GLenum texunit, GLint size, GLenum type, GLsizei /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLint size,GLenum type,GLsizei stride,const void * pointer)
glMultiTexEnvfEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexEnvfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat para/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
glMultiTexEnvfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLflo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
glMultiTexEnviEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexEnviEXT (GLenum texunit, GLenum target, GLenum pname, GLint param)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLint param)
glMultiTexEnvivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
glMultiTexGendEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexGendEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble para/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,GLdouble param)
glMultiTexGendvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLdoub/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,const GLdouble * params)
glMultiTexGenfEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexGenfEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat param/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,GLfloat param)
glMultiTexGenfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLfloa/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,const GLfloat * params)
glMultiTexGeniEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexGeniEXT (GLenum texunit, GLenum coord, GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,GLint param)
glMultiTexGenivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, const GLint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum coord,GLenum pname,const GLint * params)
glMultiTexImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint inte/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
glMultiTexImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint inte/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
glMultiTexImage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint inte/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
glMultiTexParameterIivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
glMultiTexParameterIuivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, con/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,const GLuint * params)
glMultiTexParameterfEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexParameterfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloa/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
glMultiTexParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
glMultiTexParameteriEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexParameteriEXT (GLenum texunit, GLenum target, GLenum pname, GLint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,GLint param)
glMultiTexParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
glMultiTexRenderbufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexRenderbufferEXT (GLenum texunit, GLenum target, GLuint renderbuffe/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLuint renderbuffer)
glMultiTexSubImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint x/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
glMultiTexSubImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint x/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
glMultiTexSubImage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint x/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
glNamedBufferDataEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedBufferDataEXT (GLuint buffer, GLsizeiptr size, const void *data, GLen/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
glNamedBufferStorageEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedBufferStorageEXT (GLuint buffer, GLsizeiptr size, const void *data, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
glNamedBufferSubDataEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
glNamedCopyBufferSubDataEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedCopyBufferSubDataEXT (GLuint readBuffer, GLuint writeBuffer, GLintptr/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
glNamedFramebufferParameteriEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferParameteriEXT (GLuint framebuffer, GLenum pname, GLint par/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum pname,GLint param)
glNamedFramebufferRenderbufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferRenderbufferEXT (GLuint framebuffer, GLenum attachment, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
glNamedFramebufferTexture1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferTexture1DEXT (GLuint framebuffer, GLenum attachment, GLenu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glNamedFramebufferTexture2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferTexture2DEXT (GLuint framebuffer, GLenum attachment, GLenu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
glNamedFramebufferTexture3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferTexture3DEXT (GLuint framebuffer, GLenum attachment, GLenu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
glNamedFramebufferTextureEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferTextureEXT (GLuint framebuffer, GLenum attachment, GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
glNamedFramebufferTextureFaceEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferTextureFaceEXT (GLuint framebuffer, GLenum attachment, GLu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLenum face)
glNamedFramebufferTextureLayerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedFramebufferTextureLayerEXT (GLuint framebuffer, GLenum attachment, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
glNamedProgramLocalParameter4dEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4dEXT (GLuint program, GLenum target, GLuint ind/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glNamedProgramLocalParameter4dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4dvEXT (GLuint program, GLenum target, GLuint in/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,const GLdouble * params)
glNamedProgramLocalParameter4fEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4fEXT (GLuint program, GLenum target, GLuint ind/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glNamedProgramLocalParameter4fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4fvEXT (GLuint program, GLenum target, GLuint in/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,const GLfloat * params)
glNamedProgramLocalParameterI4iEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4iEXT (GLuint program, GLenum target, GLuint in/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
glNamedProgramLocalParameterI4ivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4ivEXT (GLuint program, GLenum target, GLuint i/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,const GLint * params)
glNamedProgramLocalParameterI4uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4uiEXT (GLuint program, GLenum target, GLuint i/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
glNamedProgramLocalParameterI4uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4uivEXT (GLuint program, GLenum target, GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,const GLuint * params)
glNamedProgramLocalParameters4fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameters4fvEXT (GLuint program, GLenum target, GLuint i/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLsizei count,const GLfloat * params)
glNamedProgramLocalParametersI4ivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParametersI4ivEXT (GLuint program, GLenum target, GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLsizei count,const GLint * params)
glNamedProgramLocalParametersI4uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParametersI4uivEXT (GLuint program, GLenum target, GLuint/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLuint index,GLsizei count,const GLuint * params)
glNamedProgramStringEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedProgramStringEXT (GLuint program, GLenum target, GLenum format, GLsiz/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum target,GLenum format,GLsizei len,const void * string)
glNamedRenderbufferStorageEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageEXT (GLuint renderbuffer, GLenum internalformat, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
glNamedRenderbufferStorageMultisampleCoverageEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleCoverageEXT (GLuint renderbuffer, GLsiz/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint renderbuffer,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
glNamedRenderbufferStorageMultisampleEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleEXT (GLuint renderbuffer, GLsizei sampl/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glNamedStringARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNamedStringARB (GLenum type, GLint namelen, const GLchar *name, GLint stri/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLint namelen,const GLchar * name,GLint stringlen,const GLchar * string)
glNewList	SDL_opengl.h	/^GLAPI void GLAPIENTRY glNewList( GLuint list, GLenum mode );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint list,GLenum mode)
glNewObjectBufferATI	SDL_opengl_glext.h	/^GLAPI GLuint APIENTRY glNewObjectBufferATI (GLsizei size, const void *pointer, GLenum usage);$/;"	kind:p	typeref:typename:GLAPI GLuint APIENTRY	signature:(GLsizei size,const void * pointer,GLenum usage)
glNormal3b	SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3b( GLbyte nx, GLbyte ny, GLbyte nz );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLbyte nx,GLbyte ny,GLbyte nz)
glNormal3bv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3bv( const GLbyte *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLbyte * v)
glNormal3d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3d( GLdouble nx, GLdouble ny, GLdouble nz );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble nx,GLdouble ny,GLdouble nz)
glNormal3dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3dv( const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glNormal3f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3f( GLfloat nx, GLfloat ny, GLfloat nz );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat nx,GLfloat ny,GLfloat nz)
glNormal3fVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormal3fVertex3fSUN (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloa/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glNormal3fVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormal3fVertex3fvSUN (const GLfloat *n, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * n,const GLfloat * v)
glNormal3fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3fv( const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glNormal3hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormal3hNV (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV nx,GLhalfNV ny,GLhalfNV nz)
glNormal3hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormal3hvNV (const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glNormal3i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3i( GLint nx, GLint ny, GLint nz );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint nx,GLint ny,GLint nz)
glNormal3iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3iv( const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glNormal3s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3s( GLshort nx, GLshort ny, GLshort nz );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort nx,GLshort ny,GLshort nz)
glNormal3sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormal3sv( const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glNormal3xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormal3xOES (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed nx,GLfixed ny,GLfixed nz)
glNormal3xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormal3xvOES (const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glNormalFormatNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalFormatNV (GLenum type, GLsizei stride);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride)
glNormalP3ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalP3ui (GLenum type, GLuint coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint coords)
glNormalP3uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalP3uiv (GLenum type, const GLuint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * coords)
glNormalPointer	SDL_opengl.h	/^GLAPI void GLAPIENTRY glNormalPointer( GLenum type, GLsizei stride,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum type,GLsizei stride,const GLvoid * ptr)
glNormalPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalPointerEXT (GLenum type, GLsizei stride, GLsizei count, const void */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
glNormalPointerListIBM	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalPointerListIBM (GLenum type, GLint stride, const void **pointer, GLi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glNormalPointervINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalPointervINTEL (GLenum type, const void **pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const void ** pointer)
glNormalStream3bATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3bATI (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLbyte nx,GLbyte ny,GLbyte nz)
glNormalStream3bvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3bvATI (GLenum stream, const GLbyte *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLbyte * coords)
glNormalStream3dATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3dATI (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLdouble nx,GLdouble ny,GLdouble nz)
glNormalStream3dvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3dvATI (GLenum stream, const GLdouble *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLdouble * coords)
glNormalStream3fATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3fATI (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLfloat nx,GLfloat ny,GLfloat nz)
glNormalStream3fvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3fvATI (GLenum stream, const GLfloat *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLfloat * coords)
glNormalStream3iATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3iATI (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLint nx,GLint ny,GLint nz)
glNormalStream3ivATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3ivATI (GLenum stream, const GLint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLint * coords)
glNormalStream3sATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3sATI (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLshort nx,GLshort ny,GLshort nz)
glNormalStream3svATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glNormalStream3svATI (GLenum stream, const GLshort *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLshort * coords)
glObjectLabel	SDL_opengl_glext.h	/^GLAPI void APIENTRY glObjectLabel (GLenum identifier, GLuint name, GLsizei length, const GLchar /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
glObjectLabelKHR	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glObjectLabelKHR (GLenum identifier, GLuint name, GLsizei length, co/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
glObjectPtrLabel	SDL_opengl_glext.h	/^GLAPI void APIENTRY glObjectPtrLabel (const void *ptr, GLsizei length, const GLchar *label);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const void * ptr,GLsizei length,const GLchar * label)
glObjectPtrLabelKHR	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glObjectPtrLabelKHR (const void *ptr, GLsizei length, const GLchar */;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(const void * ptr,GLsizei length,const GLchar * label)
glObjectPurgeableAPPLE	SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glObjectPurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);$/;"	kind:p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLenum objectType,GLuint name,GLenum option)
glObjectUnpurgeableAPPLE	SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glObjectUnpurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);$/;"	kind:p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLenum objectType,GLuint name,GLenum option)
glOrtho	SDL_opengl.h	/^GLAPI void GLAPIENTRY glOrtho( GLdouble left, GLdouble right,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble near_val,GLdouble far_val)
glOrthofOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glOrthofOES (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
glOrthoxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glOrthoxOES (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
glPNTrianglesfATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPNTrianglesfATI (GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glPNTrianglesiATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPNTrianglesiATI (GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glPassTexCoordATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPassTexCoordATI (GLuint dst, GLuint coord, GLenum swizzle);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint dst,GLuint coord,GLenum swizzle)
glPassThrough	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPassThrough( GLfloat token );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat token)
glPassThroughxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPassThroughxOES (GLfixed token);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed token)
glPatchParameterfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPatchParameterfv (GLenum pname, const GLfloat *values);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * values)
glPatchParameteri	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPatchParameteri (GLenum pname, GLint value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint value)
glPathColorGenNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathColorGenNV (GLenum color, GLenum genMode, GLenum colorFormat, const GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum color,GLenum genMode,GLenum colorFormat,const GLfloat * coeffs)
glPathCommandsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathCommandsNV (GLuint path, GLsizei numCommands, const GLubyte *commands,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
glPathCoordsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathCoordsNV (GLuint path, GLsizei numCoords, GLenum coordType, const void/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLsizei numCoords,GLenum coordType,const void * coords)
glPathCoverDepthFuncNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathCoverDepthFuncNV (GLenum func);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum func)
glPathDashArrayNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathDashArrayNV (GLuint path, GLsizei dashCount, const GLfloat *dashArray)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLsizei dashCount,const GLfloat * dashArray)
glPathFogGenNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathFogGenNV (GLenum genMode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum genMode)
glPathGlyphRangeNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathGlyphRangeNV (GLuint firstPathName, GLenum fontTarget, const void *fon/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint firstGlyph,GLsizei numGlyphs,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
glPathGlyphsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathGlyphsNV (GLuint firstPathName, GLenum fontTarget, const void *fontNam/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLsizei numGlyphs,GLenum type,const void * charcodes,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
glPathParameterfNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathParameterfNV (GLuint path, GLenum pname, GLfloat value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum pname,GLfloat value)
glPathParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathParameterfvNV (GLuint path, GLenum pname, const GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum pname,const GLfloat * value)
glPathParameteriNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathParameteriNV (GLuint path, GLenum pname, GLint value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum pname,GLint value)
glPathParameterivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathParameterivNV (GLuint path, GLenum pname, const GLint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum pname,const GLint * value)
glPathStencilDepthOffsetNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathStencilDepthOffsetNV (GLfloat factor, GLfloat units);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat factor,GLfloat units)
glPathStencilFuncNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathStencilFuncNV (GLenum func, GLint ref, GLuint mask);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum func,GLint ref,GLuint mask)
glPathStringNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathStringNV (GLuint path, GLenum format, GLsizei length, const void *path/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum format,GLsizei length,const void * pathString)
glPathSubCommandsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathSubCommandsNV (GLuint path, GLsizei commandStart, GLsizei commandsToDe/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLsizei commandStart,GLsizei commandsToDelete,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
glPathSubCoordsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathSubCoordsNV (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLsizei coordStart,GLsizei numCoords,GLenum coordType,const void * coords)
glPathTexGenNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPathTexGenNV (GLenum texCoordSet, GLenum genMode, GLint components, const /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum texCoordSet,GLenum genMode,GLint components,const GLfloat * coeffs)
glPauseTransformFeedback	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPauseTransformFeedback (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glPauseTransformFeedbackNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPauseTransformFeedbackNV (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glPixelDataRangeNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelDataRangeNV (GLenum target, GLsizei length, const void *pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei length,const void * pointer)
glPixelMapfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelMapfv( GLenum map, GLsizei mapsize,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum map,GLsizei mapsize,const GLfloat * values)
glPixelMapuiv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelMapuiv( GLenum map, GLsizei mapsize,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum map,GLsizei mapsize,const GLuint * values)
glPixelMapusv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelMapusv( GLenum map, GLsizei mapsize,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum map,GLsizei mapsize,const GLushort * values)
glPixelMapx	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelMapx (GLenum map, GLint size, const GLfixed *values);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum map,GLint size,const GLfixed * values)
glPixelStoref	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelStoref( GLenum pname, GLfloat param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLfloat param)
glPixelStorei	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelStorei( GLenum pname, GLint param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLint param)
glPixelStorei	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glPixelStorei (GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum pname,GLint param)
glPixelStorex	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelStorex (GLenum pname, GLfixed param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfixed param)
glPixelTexGenParameterfSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTexGenParameterfSGIS (GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glPixelTexGenParameterfvSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTexGenParameterfvSGIS (GLenum pname, const GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glPixelTexGenParameteriSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTexGenParameteriSGIS (GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glPixelTexGenParameterivSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTexGenParameterivSGIS (GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * params)
glPixelTexGenSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTexGenSGIX (GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glPixelTransferf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelTransferf( GLenum pname, GLfloat param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLfloat param)
glPixelTransferi	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelTransferi( GLenum pname, GLint param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum pname,GLint param)
glPixelTransferxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTransferxOES (GLenum pname, GLfixed param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfixed param)
glPixelTransformParameterfEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTransformParameterfEXT (GLenum target, GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfloat param)
glPixelTransformParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTransformParameterfvEXT (GLenum target, GLenum pname, const GLfloat */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glPixelTransformParameteriEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTransformParameteriEXT (GLenum target, GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glPixelTransformParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelTransformParameterivEXT (GLenum target, GLenum pname, const GLint *pa/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glPixelZoom	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPixelZoom( GLfloat xfactor, GLfloat yfactor );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat xfactor,GLfloat yfactor)
glPixelZoomxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPixelZoomxOES (GLfixed xfactor, GLfixed yfactor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed xfactor,GLfixed yfactor)
glPointAlongPathNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glPointAlongPathNV (GLuint path, GLsizei startSegment, GLsizei numSegme/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint path,GLsizei startSegment,GLsizei numSegments,GLfloat distance,GLfloat * x,GLfloat * y,GLfloat * tangentX,GLfloat * tangentY)
glPointParameterf	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterf (GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glPointParameterfARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfARB (GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glPointParameterfEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfEXT (GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glPointParameterfSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfSGIS (GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glPointParameterfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfv (GLenum pname, const GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glPointParameterfvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfvARB (GLenum pname, const GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glPointParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfvEXT (GLenum pname, const GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glPointParameterfvSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterfvSGIS (GLenum pname, const GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glPointParameteri	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameteri (GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glPointParameteriNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameteriNV (GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glPointParameteriv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameteriv (GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * params)
glPointParameterivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterivNV (GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * params)
glPointParameterxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointParameterxvOES (GLenum pname, const GLfixed *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfixed * params)
glPointSize	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPointSize( GLfloat size );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat size)
glPointSizexOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPointSizexOES (GLfixed size);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed size)
glPollAsyncSGIX	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glPollAsyncSGIX (GLuint *markerp);$/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLuint * markerp)
glPollInstrumentsSGIX	SDL_opengl_glext.h	/^GLAPI GLint APIENTRY glPollInstrumentsSGIX (GLint *marker_p);$/;"	kind:p	typeref:typename:GLAPI GLint APIENTRY	signature:(GLint * marker_p)
glPolygonMode	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPolygonMode( GLenum face, GLenum mode );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum face,GLenum mode)
glPolygonOffset	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPolygonOffset( GLfloat factor, GLfloat units );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat factor,GLfloat units)
glPolygonOffset	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glPolygonOffset (GLfloat factor, GLfloat units);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLfloat factor,GLfloat units)
glPolygonOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPolygonOffsetEXT (GLfloat factor, GLfloat bias);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat factor,GLfloat bias)
glPolygonOffsetxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPolygonOffsetxOES (GLfixed factor, GLfixed units);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed factor,GLfixed units)
glPolygonStipple	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPolygonStipple( const GLubyte *mask );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLubyte * mask)
glPopAttrib	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPopAttrib( void );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glPopClientAttrib	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPopClientAttrib( void );  \/* 1.1 *\/$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glPopDebugGroup	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPopDebugGroup (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glPopDebugGroupKHR	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glPopDebugGroupKHR (void);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(void)
glPopGroupMarkerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPopGroupMarkerEXT (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glPopGroupMarkerEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glPopGroupMarkerEXT (void);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(void)
glPopMatrix	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPopMatrix( void );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glPopName	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPopName( void );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glPresentFrameDualFillNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPresentFrameDualFillNV (GLuint video_slot, GLuint64EXT minPresentTime, GLu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLenum target1,GLuint fill1,GLenum target2,GLuint fill2,GLenum target3,GLuint fill3)
glPresentFrameKeyedNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPresentFrameKeyedNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLuint key0,GLenum target1,GLuint fill1,GLuint key1)
glPrimitiveRestartIndex	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPrimitiveRestartIndex (GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index)
glPrimitiveRestartIndexNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPrimitiveRestartIndexNV (GLuint index);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index)
glPrimitiveRestartNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPrimitiveRestartNV (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glPrioritizeTextures	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPrioritizeTextures( GLsizei n,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei n,const GLuint * textures,const GLclampf * priorities)
glPrioritizeTexturesEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPrioritizeTexturesEXT (GLsizei n, const GLuint *textures, const GLclampf */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * textures,const GLclampf * priorities)
glPrioritizeTexturesxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPrioritizeTexturesxOES (GLsizei n, const GLuint *textures, const GLfixed */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * textures,const GLfixed * priorities)
glProgramBinary	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramBinary (GLuint program, GLenum binaryFormat, const void *binary, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum binaryFormat,const void * binary,GLsizei length)
glProgramBinaryOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramBinaryOES (GLuint program, GLenum binaryFormat, const GLvoi/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLenum binaryFormat,const GLvoid * binary,GLint length)
glProgramBufferParametersIivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramBufferParametersIivNV (GLenum target, GLuint bindingIndex, GLuint w/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLint * params)
glProgramBufferParametersIuivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramBufferParametersIuivNV (GLenum target, GLuint bindingIndex, GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLuint * params)
glProgramBufferParametersfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramBufferParametersfvNV (GLenum target, GLuint bindingIndex, GLuint wo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLfloat * params)
glProgramEnvParameter4dARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdoubl/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glProgramEnvParameter4dvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4dvARB (GLenum target, GLuint index, const GLdouble *pa/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLdouble * params)
glProgramEnvParameter4fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glProgramEnvParameter4fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4fvARB (GLenum target, GLuint index, const GLfloat *par/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLfloat * params)
glProgramEnvParameterI4iNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
glProgramEnvParameterI4ivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4ivNV (GLenum target, GLuint index, const GLint *param/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLint * params)
glProgramEnvParameterI4uiNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
glProgramEnvParameterI4uivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4uivNV (GLenum target, GLuint index, const GLuint *par/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLuint * params)
glProgramEnvParameters4fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParameters4fvEXT (GLenum target, GLuint index, GLsizei count, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
glProgramEnvParametersI4ivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParametersI4ivNV (GLenum target, GLuint index, GLsizei count, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLint * params)
glProgramEnvParametersI4uivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramEnvParametersI4uivNV (GLenum target, GLuint index, GLsizei count, c/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLuint * params)
glProgramLocalParameter4dARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdou/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glProgramLocalParameter4dvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4dvARB (GLenum target, GLuint index, const GLdouble */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLdouble * params)
glProgramLocalParameter4fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloa/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glProgramLocalParameter4fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4fvARB (GLenum target, GLuint index, const GLfloat *p/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLfloat * params)
glProgramLocalParameterI4iNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
glProgramLocalParameterI4ivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4ivNV (GLenum target, GLuint index, const GLint *par/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLint * params)
glProgramLocalParameterI4uiNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
glProgramLocalParameterI4uivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4uivNV (GLenum target, GLuint index, const GLuint *p/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLuint * params)
glProgramLocalParameters4fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParameters4fvEXT (GLenum target, GLuint index, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
glProgramLocalParametersI4ivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParametersI4ivNV (GLenum target, GLuint index, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLint * params)
glProgramLocalParametersI4uivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramLocalParametersI4uivNV (GLenum target, GLuint index, GLsizei count,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLuint * params)
glProgramNamedParameter4dNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4dNV (GLuint id, GLsizei len, const GLubyte *name, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLsizei len,const GLubyte * name,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glProgramNamedParameter4dvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4dvNV (GLuint id, GLsizei len, const GLubyte *name, c/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLsizei len,const GLubyte * name,const GLdouble * v)
glProgramNamedParameter4fNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4fNV (GLuint id, GLsizei len, const GLubyte *name, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLsizei len,const GLubyte * name,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glProgramNamedParameter4fvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4fvNV (GLuint id, GLsizei len, const GLubyte *name, c/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLsizei len,const GLubyte * name,const GLfloat * v)
glProgramParameter4dNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameter4dNV (GLenum target, GLuint index, GLdouble x, GLdouble y,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glProgramParameter4dvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameter4dvNV (GLenum target, GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLdouble * v)
glProgramParameter4fNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameter4fNV (GLenum target, GLuint index, GLfloat x, GLfloat y, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glProgramParameter4fvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameter4fvNV (GLenum target, GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,const GLfloat * v)
glProgramParameteri	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameteri (GLuint program, GLenum pname, GLint value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum pname,GLint value)
glProgramParameteriARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameteriARB (GLuint program, GLenum pname, GLint value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum pname,GLint value)
glProgramParameteriEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameteriEXT (GLuint program, GLenum pname, GLint value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLenum pname,GLint value)
glProgramParameteriEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramParameteriEXT (GLuint program, GLenum pname, GLint value);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLenum pname,GLint value)
glProgramParameters4dvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameters4dvNV (GLenum target, GLuint index, GLsizei count, const /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLdouble * v)
glProgramParameters4fvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramParameters4fvNV (GLenum target, GLuint index, GLsizei count, const /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint index,GLsizei count,const GLfloat * v)
glProgramStringARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramStringARB (GLenum target, GLenum format, GLsizei len, const void *s/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum format,GLsizei len,const void * string)
glProgramSubroutineParametersuivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramSubroutineParametersuivNV (GLenum target, GLsizei count, const GLui/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei count,const GLuint * params)
glProgramUniform1d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1d (GLuint program, GLint location, GLdouble v0);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble v0)
glProgramUniform1dEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1dEXT (GLuint program, GLint location, GLdouble x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble x)
glProgramUniform1dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1dv (GLuint program, GLint location, GLsizei count, const GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform1dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1dvEXT (GLuint program, GLint location, GLsizei count, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform1f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1f (GLuint program, GLint location, GLfloat v0);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0)
glProgramUniform1fEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1fEXT (GLuint program, GLint location, GLfloat v0);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0)
glProgramUniform1fEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform1fEXT (GLuint program, GLint location, GLfloat x);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLfloat x)
glProgramUniform1fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1fv (GLuint program, GLint location, GLsizei count, const GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform1fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei count, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform1fvEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform1i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1i (GLuint program, GLint location, GLint v0);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0)
glProgramUniform1i64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1i64NV (GLuint program, GLint location, GLint64EXT x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint64EXT x)
glProgramUniform1i64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1i64vNV (GLuint program, GLint location, GLsizei count, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
glProgramUniform1iEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1iEXT (GLuint program, GLint location, GLint v0);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0)
glProgramUniform1iEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform1iEXT (GLuint program, GLint location, GLint x);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLint x)
glProgramUniform1iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1iv (GLuint program, GLint location, GLsizei count, const GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform1ivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei count, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform1ivEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform1ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1ui (GLuint program, GLint location, GLuint v0);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0)
glProgramUniform1ui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1ui64NV (GLuint program, GLint location, GLuint64EXT x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64EXT x)
glProgramUniform1ui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1ui64vNV (GLuint program, GLint location, GLsizei count, con/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
glProgramUniform1uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1uiEXT (GLuint program, GLint location, GLuint v0);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0)
glProgramUniform1uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, const G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform1uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform1uivEXT (GLuint program, GLint location, GLsizei count, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform2d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2d (GLuint program, GLint location, GLdouble v0, GLdouble v1/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble v0,GLdouble v1)
glProgramUniform2dEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2dEXT (GLuint program, GLint location, GLdouble x, GLdouble /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble x,GLdouble y)
glProgramUniform2dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2dv (GLuint program, GLint location, GLsizei count, const GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform2dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2dvEXT (GLuint program, GLint location, GLsizei count, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform2f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2f (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0,GLfloat v1)
glProgramUniform2fEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0,GLfloat v1)
glProgramUniform2fEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform2fEXT (GLuint program, GLint location, GLfloat x, GL/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLfloat x,GLfloat y)
glProgramUniform2fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2fv (GLuint program, GLint location, GLsizei count, const GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform2fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei count, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform2fvEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform2i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2i (GLuint program, GLint location, GLint v0, GLint v1);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0,GLint v1)
glProgramUniform2i64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2i64NV (GLuint program, GLint location, GLint64EXT x, GLint6/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint64EXT x,GLint64EXT y)
glProgramUniform2i64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2i64vNV (GLuint program, GLint location, GLsizei count, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
glProgramUniform2iEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2iEXT (GLuint program, GLint location, GLint v0, GLint v1);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0,GLint v1)
glProgramUniform2iEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform2iEXT (GLuint program, GLint location, GLint x, GLin/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLint x,GLint y)
glProgramUniform2iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2iv (GLuint program, GLint location, GLsizei count, const GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform2ivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei count, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform2ivEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform2ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2ui (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0,GLuint v1)
glProgramUniform2ui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2ui64NV (GLuint program, GLint location, GLuint64EXT x, GLui/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y)
glProgramUniform2ui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2ui64vNV (GLuint program, GLint location, GLsizei count, con/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
glProgramUniform2uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0,GLuint v1)
glProgramUniform2uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, const G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform2uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform2uivEXT (GLuint program, GLint location, GLsizei count, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform3d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3d (GLuint program, GLint location, GLdouble v0, GLdouble v1/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2)
glProgramUniform3dEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3dEXT (GLuint program, GLint location, GLdouble x, GLdouble /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z)
glProgramUniform3dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3dv (GLuint program, GLint location, GLsizei count, const GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform3dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3dvEXT (GLuint program, GLint location, GLsizei count, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform3f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3f (GLuint program, GLint location, GLfloat v0, GLfloat v1, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
glProgramUniform3fEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
glProgramUniform3fEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform3fEXT (GLuint program, GLint location, GLfloat x, GL/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLfloat x,GLfloat y,GLfloat z)
glProgramUniform3fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3fv (GLuint program, GLint location, GLsizei count, const GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform3fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei count, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform3fvEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform3i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3i (GLuint program, GLint location, GLint v0, GLint v1, GLin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
glProgramUniform3i64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3i64NV (GLuint program, GLint location, GLint64EXT x, GLint6/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
glProgramUniform3i64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3i64vNV (GLuint program, GLint location, GLsizei count, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
glProgramUniform3iEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3iEXT (GLuint program, GLint location, GLint v0, GLint v1, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
glProgramUniform3iEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform3iEXT (GLuint program, GLint location, GLint x, GLin/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLint x,GLint y,GLint z)
glProgramUniform3iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3iv (GLuint program, GLint location, GLsizei count, const GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform3ivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei count, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform3ivEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform3ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3ui (GLuint program, GLint location, GLuint v0, GLuint v1, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
glProgramUniform3ui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3ui64NV (GLuint program, GLint location, GLuint64EXT x, GLui/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
glProgramUniform3ui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3ui64vNV (GLuint program, GLint location, GLsizei count, con/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
glProgramUniform3uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
glProgramUniform3uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, const G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform3uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform3uivEXT (GLuint program, GLint location, GLsizei count, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform4d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4d (GLuint program, GLint location, GLdouble v0, GLdouble v1/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)
glProgramUniform4dEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4dEXT (GLuint program, GLint location, GLdouble x, GLdouble /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glProgramUniform4dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4dv (GLuint program, GLint location, GLsizei count, const GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform4dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4dvEXT (GLuint program, GLint location, GLsizei count, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLdouble * value)
glProgramUniform4f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4f (GLuint program, GLint location, GLfloat v0, GLfloat v1, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
glProgramUniform4fEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
glProgramUniform4fEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform4fEXT (GLuint program, GLint location, GLfloat x, GL/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glProgramUniform4fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4fv (GLuint program, GLint location, GLsizei count, const GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform4fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei count, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform4fvEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLfloat * value)
glProgramUniform4i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4i (GLuint program, GLint location, GLint v0, GLint v1, GLin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
glProgramUniform4i64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4i64NV (GLuint program, GLint location, GLint64EXT x, GLint6/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
glProgramUniform4i64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4i64vNV (GLuint program, GLint location, GLsizei count, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
glProgramUniform4iEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4iEXT (GLuint program, GLint location, GLint v0, GLint v1, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
glProgramUniform4iEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform4iEXT (GLuint program, GLint location, GLint x, GLin/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLint x,GLint y,GLint z,GLint w)
glProgramUniform4iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4iv (GLuint program, GLint location, GLsizei count, const GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform4ivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei count, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform4ivEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLint * value)
glProgramUniform4ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4ui (GLuint program, GLint location, GLuint v0, GLuint v1, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
glProgramUniform4ui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4ui64NV (GLuint program, GLint location, GLuint64EXT x, GLui/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
glProgramUniform4ui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4ui64vNV (GLuint program, GLint location, GLsizei count, con/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
glProgramUniform4uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
glProgramUniform4uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, const G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniform4uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniform4uivEXT (GLuint program, GLint location, GLsizei count, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint * value)
glProgramUniformHandleui64ARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64ARB (GLuint program, GLint location, GLuint64 valu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64 value)
glProgramUniformHandleui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64NV (GLuint program, GLint location, GLuint64 value/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64 value)
glProgramUniformHandleui64vARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64vARB (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
glProgramUniformHandleui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64vNV (GLuint program, GLint location, GLsizei count/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
glProgramUniformMatrix2dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2dv (GLuint program, GLint location, GLsizei count, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix2dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2dvEXT (GLuint program, GLint location, GLsizei count,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix2fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix2fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsizei count,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix2fvEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsize/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix2x3dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3dv (GLuint program, GLint location, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix2x3dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3dvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix2x3fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix2x3fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3fvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix2x4dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4dv (GLuint program, GLint location, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix2x4dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4dvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix2x4fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix2x4fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4fvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3dv (GLuint program, GLint location, GLsizei count, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix3dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3dvEXT (GLuint program, GLint location, GLsizei count,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix3fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsizei count,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3fvEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsize/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3x2dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2dv (GLuint program, GLint location, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix3x2dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2dvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix3x2fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3x2fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2fvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3x4dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4dv (GLuint program, GLint location, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix3x4dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4dvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix3x4fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix3x4fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4fvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4dv (GLuint program, GLint location, GLsizei count, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix4dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4dvEXT (GLuint program, GLint location, GLsizei count,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix4fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsizei count,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4fvEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsize/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4x2dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2dv (GLuint program, GLint location, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix4x2dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2dvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix4x2fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4x2fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2fvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4x3dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3dv (GLuint program, GLint location, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix4x3dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3dvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glProgramUniformMatrix4x3fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformMatrix4x3fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3fvEXT (GLuint program, GLint location, GLsizei coun/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glProgramUniformui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformui64NV (GLuint program, GLint location, GLuint64EXT value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint64EXT value)
glProgramUniformui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramUniformui64vNV (GLuint program, GLint location, GLsizei count, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
glProgramVertexLimitNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProgramVertexLimitNV (GLenum target, GLint limit);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint limit)
glProvokingVertex	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProvokingVertex (GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glProvokingVertexEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glProvokingVertexEXT (GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glPushAttrib	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPushAttrib( GLbitfield mask );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLbitfield mask)
glPushClientAttrib	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPushClientAttrib( GLbitfield mask );  \/* 1.1 *\/$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLbitfield mask)
glPushClientAttribDefaultEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPushClientAttribDefaultEXT (GLbitfield mask);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbitfield mask)
glPushDebugGroup	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPushDebugGroup (GLenum source, GLuint id, GLsizei length, const GLchar *me/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum source,GLuint id,GLsizei length,const GLchar * message)
glPushDebugGroupKHR	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glPushDebugGroupKHR (GLenum source, GLuint id, GLsizei length, const/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum source,GLuint id,GLsizei length,const GLchar * message)
glPushGroupMarkerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glPushGroupMarkerEXT (GLsizei length, const GLchar *marker);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei length,const GLchar * marker)
glPushGroupMarkerEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glPushGroupMarkerEXT (GLsizei length, const GLchar *marker);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei length,const GLchar * marker)
glPushMatrix	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPushMatrix( void );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(void)
glPushName	SDL_opengl.h	/^GLAPI void GLAPIENTRY glPushName( GLuint name );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint name)
glQueryCounter	SDL_opengl_glext.h	/^GLAPI void APIENTRY glQueryCounter (GLuint id, GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum target)
glQueryCounterEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glQueryCounterEXT (GLuint id, GLenum target);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint id,GLenum target)
glQueryMatrixxOES	SDL_opengl_glext.h	/^GLAPI GLbitfield APIENTRY glQueryMatrixxOES (GLfixed *mantissa, GLint *exponent);$/;"	kind:p	typeref:typename:GLAPI GLbitfield APIENTRY	signature:(GLfixed * mantissa,GLint * exponent)
glQueryObjectParameteruiAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glQueryObjectParameteruiAMD (GLenum target, GLuint id, GLenum pname, GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint id,GLenum pname,GLuint param)
glRasterPos2d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2d( GLdouble x, GLdouble y );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y)
glRasterPos2dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2dv( const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glRasterPos2f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2f( GLfloat x, GLfloat y );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y)
glRasterPos2fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2fv( const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glRasterPos2i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2i( GLint x, GLint y );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y)
glRasterPos2iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2iv( const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glRasterPos2s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2s( GLshort x, GLshort y );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x,GLshort y)
glRasterPos2sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos2sv( const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glRasterPos2xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRasterPos2xOES (GLfixed x, GLfixed y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y)
glRasterPos2xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRasterPos2xvOES (const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glRasterPos3d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3d( GLdouble x, GLdouble y, GLdouble z );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glRasterPos3dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3dv( const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glRasterPos3f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3f( GLfloat x, GLfloat y, GLfloat z );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glRasterPos3fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3fv( const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glRasterPos3i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3i( GLint x, GLint y, GLint z );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLint z)
glRasterPos3iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3iv( const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glRasterPos3s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3s( GLshort x, GLshort y, GLshort z );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x,GLshort y,GLshort z)
glRasterPos3sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos3sv( const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glRasterPos3xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRasterPos3xOES (GLfixed x, GLfixed y, GLfixed z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y,GLfixed z)
glRasterPos3xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRasterPos3xvOES (const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glRasterPos4d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4d( GLdouble x, GLdouble y, GLdouble z, GLdouble w );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glRasterPos4dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4dv( const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glRasterPos4f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4f( GLfloat x, GLfloat y, GLfloat z, GLfloat w );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glRasterPos4fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4fv( const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glRasterPos4i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4i( GLint x, GLint y, GLint z, GLint w );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLint z,GLint w)
glRasterPos4iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4iv( const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glRasterPos4s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4s( GLshort x, GLshort y, GLshort z, GLshort w );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x,GLshort y,GLshort z,GLshort w)
glRasterPos4sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRasterPos4sv( const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glRasterPos4xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRasterPos4xOES (GLfixed x, GLfixed y, GLfixed z, GLfixed w);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y,GLfixed z,GLfixed w)
glRasterPos4xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRasterPos4xvOES (const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glReadBuffer	SDL_opengl.h	/^GLAPI void GLAPIENTRY glReadBuffer( GLenum mode );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glReadBufferIndexedEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glReadBufferIndexedEXT (GLenum src, GLint index);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum src,GLint index)
glReadBufferNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glReadBufferNV (GLenum mode);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum mode)
glReadInstrumentsSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReadInstrumentsSGIX (GLint marker);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint marker)
glReadPixels	SDL_opengl.h	/^GLAPI void GLAPIENTRY glReadPixels( GLint x, GLint y,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLvoid * pixels)
glReadPixels	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei heigh/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLvoid * pixels)
glReadnPixelsARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReadnPixelsARB (GLint x, GLint y, GLsizei width, GLsizei height, GLenum fo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
glReadnPixelsEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glReadnPixelsEXT (GLint x, GLint y, GLsizei width, GLsizei height, G/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,GLvoid * data)
glRectd	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRectd( GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2 );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x1,GLdouble y1,GLdouble x2,GLdouble y2)
glRectdv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRectdv( const GLdouble *v1, const GLdouble *v2 );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v1,const GLdouble * v2)
glRectf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRectf( GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2 );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x1,GLfloat y1,GLfloat x2,GLfloat y2)
glRectfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRectfv( const GLfloat *v1, const GLfloat *v2 );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v1,const GLfloat * v2)
glRecti	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRecti( GLint x1, GLint y1, GLint x2, GLint y2 );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x1,GLint y1,GLint x2,GLint y2)
glRectiv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRectiv( const GLint *v1, const GLint *v2 );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v1,const GLint * v2)
glRects	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRects( GLshort x1, GLshort y1, GLshort x2, GLshort y2 );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x1,GLshort y1,GLshort x2,GLshort y2)
glRectsv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRectsv( const GLshort *v1, const GLshort *v2 );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v1,const GLshort * v2)
glRectxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRectxOES (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x1,GLfixed y1,GLfixed x2,GLfixed y2)
glRectxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRectxvOES (const GLfixed *v1, const GLfixed *v2);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * v1,const GLfixed * v2)
glReferencePlaneSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReferencePlaneSGIX (const GLdouble *equation);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * equation)
glReleaseShaderCompiler	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReleaseShaderCompiler (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glReleaseShaderCompiler	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glReleaseShaderCompiler (void);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(void)
glRenderMode	SDL_opengl.h	/^GLAPI GLint GLAPIENTRY glRenderMode( GLenum mode );$/;"	kind:p	typeref:typename:GLAPI GLint GLAPIENTRY	signature:(GLenum mode)
glRenderbufferStorage	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorage	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glRenderbufferStorage (GLenum target, GLenum internalformat,/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRenderbufferStorageEXT (GLenum target, GLenum internalformat, GLsizei widt/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisample	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisample (GLenum target, GLsizei samples, GLenum int/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleANGLE	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleANGLE (GLenum target, GLsizei sample/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleAPPLE	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleAPPLE (GLenum target, GLsizei sample/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleCoverageNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisampleCoverageNV (GLenum target, GLsizei coverageS/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisampleEXT (GLenum target, GLsizei samples, GLenum /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleEXT (GLenum target, GLsizei samples,/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleIMG	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleIMG (GLenum target, GLsizei samples,/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glRenderbufferStorageMultisampleNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleNV ( GLenum target, GLsizei samples,/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
glReplacementCodePointerSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodePointerSUN (GLenum type, GLsizei stride, const void **point/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,const void ** pointer)
glReplacementCodeubSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeubSUN (GLubyte code);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte code)
glReplacementCodeubvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeubvSUN (const GLubyte *code);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte * code)
glReplacementCodeuiColor3fVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfl/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiColor3fVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor3fVertex3fvSUN (const GLuint *rc, const GLfloat *c, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * c,const GLfloat * v)
glReplacementCodeuiColor4fNormal3fVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiColor4fNormal3fVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fvSUN (const GLuint *rc, const GLfl/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
glReplacementCodeuiColor4ubVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4ubVertex3fSUN (GLuint rc, GLubyte r, GLubyte g, GLu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiColor4ubVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4ubVertex3fvSUN (const GLuint *rc, const GLubyte *c,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLubyte * c,const GLfloat * v)
glReplacementCodeuiNormal3fVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiNormal3fVertex3fSUN (GLuint rc, GLfloat nx, GLfloat ny, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiNormal3fVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *n,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * n,const GLfloat * v)
glReplacementCodeuiSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiSUN (GLuint code);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint code)
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN (const GLuint *rc, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfl/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN (const GLuint *rc, const G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * tc,const GLfloat * n,const GLfloat * v)
glReplacementCodeuiTexCoord2fVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiTexCoord2fVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fVertex3fvSUN (const GLuint *rc, const GLfloat */;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * tc,const GLfloat * v)
glReplacementCodeuiVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiVertex3fSUN (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint rc,GLfloat x,GLfloat y,GLfloat z)
glReplacementCodeuiVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuiVertex3fvSUN (const GLuint *rc, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * rc,const GLfloat * v)
glReplacementCodeuivSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeuivSUN (const GLuint *code);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * code)
glReplacementCodeusSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeusSUN (GLushort code);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLushort code)
glReplacementCodeusvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glReplacementCodeusvSUN (const GLushort *code);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLushort * code)
glRequestResidentProgramsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRequestResidentProgramsNV (GLsizei n, const GLuint *programs);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei n,const GLuint * programs)
glResetHistogram	SDL_opengl.h	/^GLAPI void GLAPIENTRY glResetHistogram( GLenum target );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target)
glResetHistogram	SDL_opengl_glext.h	/^GLAPI void APIENTRY glResetHistogram (GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glResetHistogramEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glResetHistogramEXT (GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glResetMinmax	SDL_opengl.h	/^GLAPI void GLAPIENTRY glResetMinmax( GLenum target );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target)
glResetMinmax	SDL_opengl_glext.h	/^GLAPI void APIENTRY glResetMinmax (GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glResetMinmaxEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glResetMinmaxEXT (GLenum target);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target)
glResizeBuffersMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glResizeBuffersMESA (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glResolveMultisampleFramebufferAPPLE	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glResolveMultisampleFramebufferAPPLE (void);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(void)
glResumeTransformFeedback	SDL_opengl_glext.h	/^GLAPI void APIENTRY glResumeTransformFeedback (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glResumeTransformFeedbackNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glResumeTransformFeedbackNV (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glRotated	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRotated( GLdouble angle,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
glRotatef	SDL_opengl.h	/^GLAPI void GLAPIENTRY glRotatef( GLfloat angle,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
glRotatexOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glRotatexOES (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed angle,GLfixed x,GLfixed y,GLfixed z)
glSampleCoverage	SDL_opengl.h	/^GLAPI void GLAPIENTRY glSampleCoverage( GLclampf value, GLboolean invert );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLclampf value,GLboolean invert)
glSampleCoverage	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleCoverage (GLfloat value, GLboolean invert);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat value,GLboolean invert)
glSampleCoverage	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glSampleCoverage (GLclampf value, GLboolean invert);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLclampf value,GLboolean invert)
glSampleCoverageARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleCoverageARB (GLfloat value, GLboolean invert);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat value,GLboolean invert)
glSampleCoverageOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleCoverageOES (GLfixed value, GLboolean invert);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed value,GLboolean invert)
glSampleMapATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleMapATI (GLuint dst, GLuint interp, GLenum swizzle);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint dst,GLuint interp,GLenum swizzle)
glSampleMaskEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleMaskEXT (GLclampf value, GLboolean invert);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf value,GLboolean invert)
glSampleMaskIndexedNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleMaskIndexedNV (GLuint index, GLbitfield mask);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLbitfield mask)
glSampleMaskSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleMaskSGIS (GLclampf value, GLboolean invert);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLclampf value,GLboolean invert)
glSampleMaski	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSampleMaski (GLuint maskNumber, GLbitfield mask);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint maskNumber,GLbitfield mask)
glSamplePatternEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplePatternEXT (GLenum pattern);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pattern)
glSamplePatternSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplePatternSGIS (GLenum pattern);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pattern)
glSamplerParameterIiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplerParameterIiv (GLuint sampler, GLenum pname, const GLint *param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,const GLint * param)
glSamplerParameterIuiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplerParameterIuiv (GLuint sampler, GLenum pname, const GLuint *param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,const GLuint * param)
glSamplerParameterf	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplerParameterf (GLuint sampler, GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,GLfloat param)
glSamplerParameterfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplerParameterfv (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,const GLfloat * param)
glSamplerParameteri	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplerParameteri (GLuint sampler, GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,GLint param)
glSamplerParameteriv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSamplerParameteriv (GLuint sampler, GLenum pname, const GLint *param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint sampler,GLenum pname,const GLint * param)
glScaled	SDL_opengl.h	/^GLAPI void GLAPIENTRY glScaled( GLdouble x, GLdouble y, GLdouble z );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glScalef	SDL_opengl.h	/^GLAPI void GLAPIENTRY glScalef( GLfloat x, GLfloat y, GLfloat z );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glScalexOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glScalexOES (GLfixed x, GLfixed y, GLfixed z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y,GLfixed z)
glScissor	SDL_opengl.h	/^GLAPI void GLAPIENTRY glScissor( GLint x, GLint y, GLsizei width, GLsizei height);$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height)
glScissor	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height)
glScissorArrayv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glScissorArrayv (GLuint first, GLsizei count, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLint * v)
glScissorIndexed	SDL_opengl_glext.h	/^GLAPI void APIENTRY glScissorIndexed (GLuint index, GLint left, GLint bottom, GLsizei width, GLs/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
glScissorIndexedv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glScissorIndexedv (GLuint index, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glSecondaryColor3b	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte red,GLbyte green,GLbyte blue)
glSecondaryColor3bEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3bEXT (GLbyte red, GLbyte green, GLbyte blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte red,GLbyte green,GLbyte blue)
glSecondaryColor3bv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3bv (const GLbyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * v)
glSecondaryColor3bvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3bvEXT (const GLbyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * v)
glSecondaryColor3d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble red,GLdouble green,GLdouble blue)
glSecondaryColor3dEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3dEXT (GLdouble red, GLdouble green, GLdouble blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble red,GLdouble green,GLdouble blue)
glSecondaryColor3dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3dv (const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glSecondaryColor3dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3dvEXT (const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glSecondaryColor3f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue)
glSecondaryColor3fEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3fEXT (GLfloat red, GLfloat green, GLfloat blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat red,GLfloat green,GLfloat blue)
glSecondaryColor3fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3fv (const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glSecondaryColor3fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3fvEXT (const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glSecondaryColor3hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
glSecondaryColor3hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3hvNV (const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glSecondaryColor3i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3i (GLint red, GLint green, GLint blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint red,GLint green,GLint blue)
glSecondaryColor3iEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3iEXT (GLint red, GLint green, GLint blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint red,GLint green,GLint blue)
glSecondaryColor3iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3iv (const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glSecondaryColor3ivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3ivEXT (const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glSecondaryColor3s	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3s (GLshort red, GLshort green, GLshort blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort red,GLshort green,GLshort blue)
glSecondaryColor3sEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3sEXT (GLshort red, GLshort green, GLshort blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort red,GLshort green,GLshort blue)
glSecondaryColor3sv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3sv (const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glSecondaryColor3svEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3svEXT (const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glSecondaryColor3ub	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte red,GLubyte green,GLubyte blue)
glSecondaryColor3ubEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3ubEXT (GLubyte red, GLubyte green, GLubyte blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLubyte red,GLubyte green,GLubyte blue)
glSecondaryColor3ubv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3ubv (const GLubyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte * v)
glSecondaryColor3ubvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3ubvEXT (const GLubyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLubyte * v)
glSecondaryColor3ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3ui (GLuint red, GLuint green, GLuint blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint red,GLuint green,GLuint blue)
glSecondaryColor3uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3uiEXT (GLuint red, GLuint green, GLuint blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint red,GLuint green,GLuint blue)
glSecondaryColor3uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3uiv (const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * v)
glSecondaryColor3uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3uivEXT (const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLuint * v)
glSecondaryColor3us	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3us (GLushort red, GLushort green, GLushort blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLushort red,GLushort green,GLushort blue)
glSecondaryColor3usEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3usEXT (GLushort red, GLushort green, GLushort blue);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLushort red,GLushort green,GLushort blue)
glSecondaryColor3usv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3usv (const GLushort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLushort * v)
glSecondaryColor3usvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColor3usvEXT (const GLushort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLushort * v)
glSecondaryColorFormatNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColorFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride)
glSecondaryColorP3ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColorP3ui (GLenum type, GLuint color);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint color)
glSecondaryColorP3uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColorP3uiv (GLenum type, const GLuint *color);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * color)
glSecondaryColorPointer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, const void/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const void * pointer)
glSecondaryColorPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColorPointerEXT (GLint size, GLenum type, GLsizei stride, const v/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const void * pointer)
glSecondaryColorPointerListIBM	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSecondaryColorPointerListIBM (GLint size, GLenum type, GLint stride, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glSelectBuffer	SDL_opengl.h	/^GLAPI void GLAPIENTRY glSelectBuffer( GLsizei size, GLuint *buffer );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLsizei size,GLuint * buffer)
glSelectPerfMonitorCountersAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSelectPerfMonitorCountersAMD (GLuint monitor, GLboolean enable, GLuint gro/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * counterList)
glSelectPerfMonitorCountersAMD	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glSelectPerfMonitorCountersAMD (GLuint monitor, GLboolean enable, GL/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * countersList)
glSeparableFilter2D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glSeparableFilter2D( GLenum target,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * row,const GLvoid * column)
glSeparableFilter2D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
glSeparableFilter2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSeparableFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
glSetFenceAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSetFenceAPPLE (GLuint fence);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint fence)
glSetFenceNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSetFenceNV (GLuint fence, GLenum condition);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint fence,GLenum condition)
glSetFenceNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glSetFenceNV (GLuint fence, GLenum condition);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint fence,GLenum condition)
glSetFragmentShaderConstantATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSetFragmentShaderConstantATI (GLuint dst, const GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint dst,const GLfloat * value)
glSetInvariantEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSetInvariantEXT (GLuint id, GLenum type, const void *addr);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum type,const void * addr)
glSetLocalConstantEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSetLocalConstantEXT (GLuint id, GLenum type, const void *addr);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum type,const void * addr)
glSetMultisamplefvAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSetMultisamplefvAMD (GLenum pname, GLuint index, const GLfloat *val);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLuint index,const GLfloat * val)
glShadeModel	SDL_opengl.h	/^GLAPI void GLAPIENTRY glShadeModel( GLenum mode );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum mode)
glShaderBinary	SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryformat, c/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei count,const GLuint * shaders,GLenum binaryformat,const void * binary,GLsizei length)
glShaderBinary	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glShaderBinary (GLsizei n, const GLuint* shaders, GLenum bin/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsizei n,const GLuint * shaders,GLenum binaryformat,const GLvoid * binary,GLsizei length)
glShaderOp1EXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderOp1EXT (GLenum op, GLuint res, GLuint arg1);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint res,GLuint arg1)
glShaderOp2EXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderOp2EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint res,GLuint arg1,GLuint arg2)
glShaderOp3EXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderOp3EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum op,GLuint res,GLuint arg1,GLuint arg2,GLuint arg3)
glShaderSource	SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderSource (GLuint shader, GLsizei count, const GLchar *const*string, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
glShaderSource	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glShaderSource (GLuint shader, GLsizei count, const GLchar* /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
glShaderSourceARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderSourceARB (GLhandleARB shaderObj, GLsizei count, const GLcharARB **s/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB shaderObj,GLsizei count,const GLcharARB ** string,const GLint * length)
glShaderStorageBlockBinding	SDL_opengl_glext.h	/^GLAPI void APIENTRY glShaderStorageBlockBinding (GLuint program, GLuint storageBlockIndex, GLuin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)
glSharpenTexFuncSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSharpenTexFuncSGIS (GLenum target, GLsizei n, const GLfloat *points);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei n,const GLfloat * points)
glSpriteParameterfSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSpriteParameterfSGIX (GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glSpriteParameterfvSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSpriteParameterfvSGIX (GLenum pname, const GLfloat *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * params)
glSpriteParameteriSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSpriteParameteriSGIX (GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glSpriteParameterivSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSpriteParameterivSGIX (GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * params)
glStartInstrumentsSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStartInstrumentsSGIX (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glStartTilingQCOM	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glStartTilingQCOM (GLuint x, GLuint y, GLuint width, GLuint height, /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint x,GLuint y,GLuint width,GLuint height,GLbitfield preserveMask)
glStencilClearTagEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilClearTagEXT (GLsizei stencilTagBits, GLuint stencilClearTag);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei stencilTagBits,GLuint stencilClearTag)
glStencilFillPathInstancedNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const v/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum transformType,const GLfloat * transformValues)
glStencilFillPathNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilFillPathNV (GLuint path, GLenum fillMode, GLuint mask);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLenum fillMode,GLuint mask)
glStencilFunc	SDL_opengl.h	/^GLAPI void GLAPIENTRY glStencilFunc( GLenum func, GLint ref, GLuint mask );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum func,GLint ref,GLuint mask)
glStencilFunc	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum func,GLint ref,GLuint mask)
glStencilFuncSeparate	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum func,GLint ref,GLuint mask)
glStencilFuncSeparate	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum face,GLenum func,GLint ref,GLuint mask)
glStencilFuncSeparateATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilFuncSeparateATI (GLenum frontfunc, GLenum backfunc, GLint ref, GLui/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)
glStencilMask	SDL_opengl.h	/^GLAPI void GLAPIENTRY glStencilMask( GLuint mask );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLuint mask)
glStencilMask	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glStencilMask (GLuint mask);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint mask)
glStencilMaskSeparate	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilMaskSeparate (GLenum face, GLuint mask);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLuint mask)
glStencilMaskSeparate	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glStencilMaskSeparate (GLenum face, GLuint mask);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum face,GLuint mask)
glStencilOp	SDL_opengl.h	/^GLAPI void GLAPIENTRY glStencilOp( GLenum fail, GLenum zfail, GLenum zpass );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum fail,GLenum zfail,GLenum zpass)
glStencilOp	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum fail,GLenum zfail,GLenum zpass)
glStencilOpSeparate	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
glStencilOpSeparate	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glStencilOpSeparate (GLenum face, GLenum fail, GLenum zfail,/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum face,GLenum fail,GLenum zfail,GLenum zpass)
glStencilOpSeparateATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilOpSeparateATI (GLenum face, GLenum sfail, GLenum dpfail, GLenum dpp/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
glStencilOpValueAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilOpValueAMD (GLenum face, GLuint value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLuint value)
glStencilStrokePathInstancedNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLint reference,GLuint mask,GLenum transformType,const GLfloat * transformValues)
glStencilStrokePathNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStencilStrokePathNV (GLuint path, GLint reference, GLuint mask);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint path,GLint reference,GLuint mask)
glStopInstrumentsSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStopInstrumentsSGIX (GLint marker);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint marker)
glStringMarkerGREMEDY	SDL_opengl_glext.h	/^GLAPI void APIENTRY glStringMarkerGREMEDY (GLsizei len, const void *string);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei len,const void * string)
glSwizzleEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSwizzleEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
glSyncTextureINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glSyncTextureINTEL (GLuint texture);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture)
glTagSampleBufferSGIX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTagSampleBufferSGIX (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glTangent3bEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3bEXT (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte tx,GLbyte ty,GLbyte tz)
glTangent3bvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3bvEXT (const GLbyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * v)
glTangent3dEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3dEXT (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble tx,GLdouble ty,GLdouble tz)
glTangent3dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3dvEXT (const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glTangent3fEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3fEXT (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat tx,GLfloat ty,GLfloat tz)
glTangent3fvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3fvEXT (const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glTangent3iEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3iEXT (GLint tx, GLint ty, GLint tz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint tx,GLint ty,GLint tz)
glTangent3ivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3ivEXT (const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glTangent3sEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3sEXT (GLshort tx, GLshort ty, GLshort tz);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort tx,GLshort ty,GLshort tz)
glTangent3svEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangent3svEXT (const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glTangentPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTangentPointerEXT (GLenum type, GLsizei stride, const void *pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLsizei stride,const void * pointer)
glTbufferMask3DFX	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTbufferMask3DFX (GLuint mask);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint mask)
glTessellationFactorAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTessellationFactorAMD (GLfloat factor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat factor)
glTessellationModeAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTessellationModeAMD (GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glTestFenceAPPLE	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glTestFenceAPPLE (GLuint fence);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint fence)
glTestFenceNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glTestFenceNV (GLuint fence);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint fence)
glTestFenceNV	SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glTestFenceNV (GLuint fence);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLuint fence)
glTestObjectAPPLE	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glTestObjectAPPLE (GLenum object, GLuint name);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum object,GLuint name)
glTexBuffer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexBuffer (GLenum target, GLenum internalformat, GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLuint buffer)
glTexBufferARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexBufferARB (GLenum target, GLenum internalformat, GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLuint buffer)
glTexBufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexBufferEXT (GLenum target, GLenum internalformat, GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLuint buffer)
glTexBufferRange	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexBufferRange (GLenum target, GLenum internalformat, GLuint buffer, GLint/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
glTexBumpParameterfvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexBumpParameterfvATI (GLenum pname, const GLfloat *param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLfloat * param)
glTexBumpParameterivATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexBumpParameterivATI (GLenum pname, const GLint *param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,const GLint * param)
glTexCoord1bOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord1bOES (GLbyte s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte s)
glTexCoord1bvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord1bvOES (const GLbyte *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glTexCoord1d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1d( GLdouble s );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble s)
glTexCoord1dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1dv( const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glTexCoord1f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1f( GLfloat s );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat s)
glTexCoord1fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1fv( const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glTexCoord1hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord1hNV (GLhalfNV s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV s)
glTexCoord1hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord1hvNV (const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glTexCoord1i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1i( GLint s );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint s)
glTexCoord1iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1iv( const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glTexCoord1s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1s( GLshort s );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort s)
glTexCoord1sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord1sv( const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glTexCoord1xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord1xOES (GLfixed s);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed s)
glTexCoord1xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord1xvOES (const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glTexCoord2bOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2bOES (GLbyte s, GLbyte t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte s,GLbyte t)
glTexCoord2bvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2bvOES (const GLbyte *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glTexCoord2d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2d( GLdouble s, GLdouble t );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble s,GLdouble t)
glTexCoord2dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2dv( const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glTexCoord2f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2f( GLfloat s, GLfloat t );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat s,GLfloat t)
glTexCoord2fColor3fVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fColor3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
glTexCoord2fColor3fVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fColor3fVertex3fvSUN (const GLfloat *tc, const GLfloat *c, const /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLfloat * c,const GLfloat * v)
glTexCoord2fColor4fNormal3fVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLf/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glTexCoord2fColor4fNormal3fVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4fNormal3fVertex3fvSUN (const GLfloat *tc, const GLfloat *c/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
glTexCoord2fColor4ubVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4ubVertex3fSUN (GLfloat s, GLfloat t, GLubyte r, GLubyte g,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
glTexCoord2fColor4ubVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4ubVertex3fvSUN (const GLfloat *tc, const GLubyte *c, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLubyte * c,const GLfloat * v)
glTexCoord2fNormal3fVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat nx, GLfloat n/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
glTexCoord2fNormal3fVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fNormal3fVertex3fvSUN (const GLfloat *tc, const GLfloat *n, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLfloat * n,const GLfloat * v)
glTexCoord2fVertex3fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fVertex3fSUN (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
glTexCoord2fVertex3fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2fVertex3fvSUN (const GLfloat *tc, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLfloat * v)
glTexCoord2fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2fv( const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glTexCoord2hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2hNV (GLhalfNV s, GLhalfNV t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV s,GLhalfNV t)
glTexCoord2hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2hvNV (const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glTexCoord2i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2i( GLint s, GLint t );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint s,GLint t)
glTexCoord2iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2iv( const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glTexCoord2s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2s( GLshort s, GLshort t );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort s,GLshort t)
glTexCoord2sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord2sv( const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glTexCoord2xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2xOES (GLfixed s, GLfixed t);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed s,GLfixed t)
glTexCoord2xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord2xvOES (const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glTexCoord3bOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord3bOES (GLbyte s, GLbyte t, GLbyte r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte s,GLbyte t,GLbyte r)
glTexCoord3bvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord3bvOES (const GLbyte *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glTexCoord3d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3d( GLdouble s, GLdouble t, GLdouble r );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble s,GLdouble t,GLdouble r)
glTexCoord3dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3dv( const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glTexCoord3f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3f( GLfloat s, GLfloat t, GLfloat r );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat s,GLfloat t,GLfloat r)
glTexCoord3fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3fv( const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glTexCoord3hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord3hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV s,GLhalfNV t,GLhalfNV r)
glTexCoord3hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord3hvNV (const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glTexCoord3i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3i( GLint s, GLint t, GLint r );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint s,GLint t,GLint r)
glTexCoord3iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3iv( const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glTexCoord3s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3s( GLshort s, GLshort t, GLshort r );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort s,GLshort t,GLshort r)
glTexCoord3sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord3sv( const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glTexCoord3xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord3xOES (GLfixed s, GLfixed t, GLfixed r);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed s,GLfixed t,GLfixed r)
glTexCoord3xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord3xvOES (const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glTexCoord4bOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4bOES (GLbyte s, GLbyte t, GLbyte r, GLbyte q);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte s,GLbyte t,GLbyte r,GLbyte q)
glTexCoord4bvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4bvOES (const GLbyte *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glTexCoord4d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4d( GLdouble s, GLdouble t, GLdouble r, GLdouble q );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble s,GLdouble t,GLdouble r,GLdouble q)
glTexCoord4dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4dv( const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glTexCoord4f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4f( GLfloat s, GLfloat t, GLfloat r, GLfloat q );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat s,GLfloat t,GLfloat r,GLfloat q)
glTexCoord4fColor4fNormal3fVertex4fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4fColor4fNormal3fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLf/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glTexCoord4fColor4fNormal3fVertex4fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4fColor4fNormal3fVertex4fvSUN (const GLfloat *tc, const GLfloat *c/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
glTexCoord4fVertex4fSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glTexCoord4fVertex4fvSUN	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4fVertex4fvSUN (const GLfloat *tc, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * tc,const GLfloat * v)
glTexCoord4fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4fv( const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glTexCoord4hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
glTexCoord4hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4hvNV (const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glTexCoord4i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4i( GLint s, GLint t, GLint r, GLint q );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint s,GLint t,GLint r,GLint q)
glTexCoord4iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4iv( const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glTexCoord4s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4s( GLshort s, GLshort t, GLshort r, GLshort q );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort s,GLshort t,GLshort r,GLshort q)
glTexCoord4sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoord4sv( const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glTexCoord4xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4xOES (GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed s,GLfixed t,GLfixed r,GLfixed q)
glTexCoord4xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoord4xvOES (const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glTexCoordFormatNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride)
glTexCoordP1ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP1ui (GLenum type, GLuint coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint coords)
glTexCoordP1uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP1uiv (GLenum type, const GLuint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * coords)
glTexCoordP2ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP2ui (GLenum type, GLuint coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint coords)
glTexCoordP2uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP2uiv (GLenum type, const GLuint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * coords)
glTexCoordP3ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP3ui (GLenum type, GLuint coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint coords)
glTexCoordP3uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP3uiv (GLenum type, const GLuint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * coords)
glTexCoordP4ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP4ui (GLenum type, GLuint coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint coords)
glTexCoordP4uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordP4uiv (GLenum type, const GLuint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * coords)
glTexCoordPointer	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexCoordPointer( GLint size, GLenum type,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const GLvoid * ptr)
glTexCoordPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
glTexCoordPointerListIBM	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordPointerListIBM (GLint size, GLenum type, GLint stride, const void /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glTexCoordPointervINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexCoordPointervINTEL (GLint size, GLenum type, const void **pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,const void ** pointer)
glTexEnvf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexEnvf( GLenum target, GLenum pname, GLfloat param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat param)
glTexEnvfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexEnvfv( GLenum target, GLenum pname, const GLfloat *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glTexEnvi	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexEnvi( GLenum target, GLenum pname, GLint param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glTexEnviv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexEnviv( GLenum target, GLenum pname, const GLint *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glTexEnvxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexEnvxOES (GLenum target, GLenum pname, GLfixed param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed param)
glTexEnvxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexEnvxvOES (GLenum target, GLenum pname, const GLfixed *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfixed * params)
glTexFilterFuncSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexFilterFuncSGIS (GLenum target, GLenum filter, GLsizei n, const GLfloat /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum filter,GLsizei n,const GLfloat * weights)
glTexGend	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexGend( GLenum coord, GLenum pname, GLdouble param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,GLdouble param)
glTexGendv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexGendv( GLenum coord, GLenum pname, const GLdouble *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,const GLdouble * params)
glTexGenf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexGenf( GLenum coord, GLenum pname, GLfloat param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,GLfloat param)
glTexGenfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexGenfv( GLenum coord, GLenum pname, const GLfloat *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,const GLfloat * params)
glTexGeni	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexGeni( GLenum coord, GLenum pname, GLint param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,GLint param)
glTexGeniv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexGeniv( GLenum coord, GLenum pname, const GLint *params );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum coord,GLenum pname,const GLint * params)
glTexGenxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexGenxOES (GLenum coord, GLenum pname, GLfixed param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum coord,GLenum pname,GLfixed param)
glTexGenxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexGenxvOES (GLenum coord, GLenum pname, const GLfixed *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum coord,GLenum pname,const GLfixed * params)
glTexImage1D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexImage1D( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
glTexImage2D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexImage2D( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
glTexImage2D	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalform/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
glTexImage2DMultisample	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage2DMultisample (GLenum target, GLsizei samples, GLenum internalform/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
glTexImage2DMultisampleCoverageNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage2DMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
glTexImage3D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexImage3D( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
glTexImage3D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei widt/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
glTexImage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage3DEXT (GLenum target, GLint level, GLenum internalformat, GLsizei /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
glTexImage3DMultisample	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage3DMultisample (GLenum target, GLsizei samples, GLenum internalform/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
glTexImage3DMultisampleCoverageNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage3DMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
glTexImage3DOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTexImage3DOES (GLenum target, GLint level, GLenum internalformat, /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
glTexImage4DSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexImage4DSGIS (GLenum target, GLint level, GLenum internalformat, GLsizei/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLint border,GLenum format,GLenum type,const void * pixels)
glTexPageCommitmentARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexPageCommitmentARB (GLenum target, GLint level, GLint xoffset, GLint yof/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean resident)
glTexParameterIiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexParameterIiv (GLenum target, GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glTexParameterIivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexParameterIivEXT (GLenum target, GLenum pname, const GLint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glTexParameterIuiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexParameterIuiv (GLenum target, GLenum pname, const GLuint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLuint * params)
glTexParameterIuivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexParameterIuivEXT (GLenum target, GLenum pname, const GLuint *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLuint * params)
glTexParameterf	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexParameterf( GLenum target, GLenum pname, GLfloat param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLfloat param)
glTexParameterf	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glTexParameterf (GLenum target, GLenum pname, GLfloat param)/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLfloat param)
glTexParameterfv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexParameterfv( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glTexParameterfv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,const GLfloat * params)
glTexParameteri	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexParameteri( GLenum target, GLenum pname, GLint param );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glTexParameteri	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glTexParameteri (GLenum target, GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,GLint param)
glTexParameteriv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexParameteriv( GLenum target, GLenum pname,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glTexParameteriv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint* /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLenum pname,const GLint * params)
glTexParameterxOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexParameterxOES (GLenum target, GLenum pname, GLfixed param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,GLfixed param)
glTexParameterxvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexParameterxvOES (GLenum target, GLenum pname, const GLfixed *params);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum pname,const GLfixed * params)
glTexRenderbufferNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexRenderbufferNV (GLenum target, GLuint renderbuffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint renderbuffer)
glTexStorage1D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexStorage1D (GLenum target, GLsizei levels, GLenum internalformat, GLsize/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
glTexStorage1DEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTexStorage1DEXT (GLenum target, GLsizei levels, GLenum internalfor/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
glTexStorage2D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexStorage2D (GLenum target, GLsizei levels, GLenum internalformat, GLsize/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
glTexStorage2DEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTexStorage2DEXT (GLenum target, GLsizei levels, GLenum internalfor/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
glTexStorage2DMultisample	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexStorage2DMultisample (GLenum target, GLsizei samples, GLenum internalfo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
glTexStorage3D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexStorage3D (GLenum target, GLsizei levels, GLenum internalformat, GLsize/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
glTexStorage3DEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTexStorage3DEXT (GLenum target, GLsizei levels, GLenum internalfor/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
glTexStorage3DMultisample	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexStorage3DMultisample (GLenum target, GLsizei samples, GLenum internalfo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
glTexStorageSparseAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexStorageSparseAMD (GLenum target, GLenum internalFormat, GLsizei width, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
glTexSubImage1D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexSubImage1D( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const GLvoid * pixels)
glTexSubImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLsizei width/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
glTexSubImage2D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexSubImage2D( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * pixels)
glTexSubImage2D	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glTexSubImage2D (GLenum target, GLint level, GLint xoffset, /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * pixels)
glTexSubImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
glTexSubImage3D	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTexSubImage3D( GLenum target, GLint level,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid * pixels)
glTexSubImage3D	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
glTexSubImage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
glTexSubImage3DOES	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTexSubImage3DOES (GLenum target, GLint level, GLint xoffset, GLint/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid * pixels)
glTexSubImage4DSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexSubImage4DSGIS (GLenum target, GLint level, GLint xoffset, GLint yoffse/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint woffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLenum format,GLenum type,const void * pixels)
glTextureBarrierNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureBarrierNV (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glTextureBufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureBufferEXT (GLuint texture, GLenum target, GLenum internalformat, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer)
glTextureBufferRangeEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureBufferRangeEXT (GLuint texture, GLenum target, GLenum internalforma/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
glTextureColorMaskSGIS	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureColorMaskSGIS (GLboolean red, GLboolean green, GLboolean blue, GLbo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
glTextureImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLint inter/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
glTextureImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLint inter/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
glTextureImage2DMultisampleCoverageNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage2DMultisampleCoverageNV (GLuint texture, GLenum target, GLsize/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
glTextureImage2DMultisampleNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage2DMultisampleNV (GLuint texture, GLenum target, GLsizei sample/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
glTextureImage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLint inter/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
glTextureImage3DMultisampleCoverageNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage3DMultisampleCoverageNV (GLuint texture, GLenum target, GLsize/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
glTextureImage3DMultisampleNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureImage3DMultisampleNV (GLuint texture, GLenum target, GLsizei sample/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
glTextureLightEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureLightEXT (GLenum pname);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname)
glTextureMaterialEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureMaterialEXT (GLenum face, GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum face,GLenum mode)
glTextureNormalEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureNormalEXT (GLenum mode);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum mode)
glTexturePageCommitmentEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTexturePageCommitmentEXT (GLuint texture, GLint level, GLint xoffset, GLin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean resident)
glTextureParameterIivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, const/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,const GLint * params)
glTextureParameterIuivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,const GLuint * params)
glTextureParameterfEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureParameterfEXT (GLuint texture, GLenum target, GLenum pname, GLfloat/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,GLfloat param)
glTextureParameterfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, const /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,const GLfloat * params)
glTextureParameteriEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureParameteriEXT (GLuint texture, GLenum target, GLenum pname, GLint p/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,GLint param)
glTextureParameterivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, const /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum pname,const GLint * params)
glTextureRangeAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureRangeAPPLE (GLenum target, GLsizei length, const void *pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLsizei length,const void * pointer)
glTextureRenderbufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureRenderbufferEXT (GLuint texture, GLenum target, GLuint renderbuffer/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLuint renderbuffer)
glTextureStorage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureStorage1DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
glTextureStorage1DEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTextureStorage1DEXT (GLuint texture, GLenum target, GLsizei levels/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
glTextureStorage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureStorage2DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
glTextureStorage2DEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTextureStorage2DEXT (GLuint texture, GLenum target, GLsizei levels/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
glTextureStorage2DMultisampleEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureStorage2DMultisampleEXT (GLuint texture, GLenum target, GLsizei sam/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
glTextureStorage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureStorage3DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
glTextureStorage3DEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glTextureStorage3DEXT (GLuint texture, GLenum target, GLsizei levels/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
glTextureStorage3DMultisampleEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureStorage3DMultisampleEXT (GLuint texture, GLenum target, GLsizei sam/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
glTextureStorageSparseAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureStorageSparseAMD (GLuint texture, GLenum target, GLenum internalFor/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
glTextureSubImage1DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
glTextureSubImage2DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
glTextureSubImage3DEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
glTextureView	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTextureView (GLuint texture, GLenum target, GLuint origtexture, GLenum int/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
glTrackMatrixNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTrackMatrixNV (GLenum target, GLuint address, GLenum matrix, GLenum transf/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum target,GLuint address,GLenum matrix,GLenum transform)
glTransformFeedbackAttribsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTransformFeedbackAttribsNV (GLuint count, const GLint *attribs, GLenum buf/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint count,const GLint * attribs,GLenum bufferMode)
glTransformFeedbackStreamAttribsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTransformFeedbackStreamAttribsNV (GLsizei count, const GLint *attribs, GLs/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei count,const GLint * attribs,GLsizei nbuffers,const GLint * bufstreams,GLenum bufferMode)
glTransformFeedbackVaryings	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTransformFeedbackVaryings (GLuint program, GLsizei count, const GLchar *co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
glTransformFeedbackVaryingsEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTransformFeedbackVaryingsEXT (GLuint program, GLsizei count, const GLchar /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
glTransformFeedbackVaryingsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTransformFeedbackVaryingsNV (GLuint program, GLsizei count, const GLint *l/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLsizei count,const GLint * locations,GLenum bufferMode)
glTransformPathNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTransformPathNV (GLuint resultPath, GLuint srcPath, GLenum transformType, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint resultPath,GLuint srcPath,GLenum transformType,const GLfloat * transformValues)
glTranslated	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTranslated( GLdouble x, GLdouble y, GLdouble z );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glTranslatef	SDL_opengl.h	/^GLAPI void GLAPIENTRY glTranslatef( GLfloat x, GLfloat y, GLfloat z );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glTranslatexOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glTranslatexOES (GLfixed x, GLfixed y, GLfixed z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y,GLfixed z)
glUniform1d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1d (GLint location, GLdouble x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLdouble x)
glUniform1dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1dv (GLint location, GLsizei count, const GLdouble *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLdouble * value)
glUniform1f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1f (GLint location, GLfloat v0);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0)
glUniform1f	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform1f (GLint location, GLfloat x);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLfloat x)
glUniform1fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1fARB (GLint location, GLfloat v0);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0)
glUniform1fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1fv (GLint location, GLsizei count, const GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform1fv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform1fv (GLint location, GLsizei count, const GLfloat* /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * v)
glUniform1fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform1i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1i (GLint location, GLint v0);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0)
glUniform1i	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform1i (GLint location, GLint x);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLint x)
glUniform1i64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1i64NV (GLint location, GLint64EXT x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint64EXT x)
glUniform1i64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint64EXT * value)
glUniform1iARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1iARB (GLint location, GLint v0);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0)
glUniform1iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1iv (GLint location, GLsizei count, const GLint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform1iv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform1iv (GLint location, GLsizei count, const GLint* v)/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLint * v)
glUniform1ivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1ivARB (GLint location, GLsizei count, const GLint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform1ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1ui (GLint location, GLuint v0);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0)
glUniform1ui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1ui64NV (GLint location, GLuint64EXT x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64EXT x)
glUniform1ui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64EXT * value)
glUniform1uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1uiEXT (GLint location, GLuint v0);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0)
glUniform1uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1uiv (GLint location, GLsizei count, const GLuint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform1uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform1uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform2d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2d (GLint location, GLdouble x, GLdouble y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLdouble x,GLdouble y)
glUniform2dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2dv (GLint location, GLsizei count, const GLdouble *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLdouble * value)
glUniform2f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2f (GLint location, GLfloat v0, GLfloat v1);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0,GLfloat v1)
glUniform2f	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform2f (GLint location, GLfloat x, GLfloat y);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLfloat x,GLfloat y)
glUniform2fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2fARB (GLint location, GLfloat v0, GLfloat v1);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0,GLfloat v1)
glUniform2fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2fv (GLint location, GLsizei count, const GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform2fv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform2fv (GLint location, GLsizei count, const GLfloat* /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * v)
glUniform2fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform2i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2i (GLint location, GLint v0, GLint v1);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0,GLint v1)
glUniform2i	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform2i (GLint location, GLint x, GLint y);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLint x,GLint y)
glUniform2i64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2i64NV (GLint location, GLint64EXT x, GLint64EXT y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint64EXT x,GLint64EXT y)
glUniform2i64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint64EXT * value)
glUniform2iARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2iARB (GLint location, GLint v0, GLint v1);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0,GLint v1)
glUniform2iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2iv (GLint location, GLsizei count, const GLint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform2iv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform2iv (GLint location, GLsizei count, const GLint* v)/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLint * v)
glUniform2ivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2ivARB (GLint location, GLsizei count, const GLint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform2ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2ui (GLint location, GLuint v0, GLuint v1);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0,GLuint v1)
glUniform2ui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64EXT x,GLuint64EXT y)
glUniform2ui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64EXT * value)
glUniform2uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2uiEXT (GLint location, GLuint v0, GLuint v1);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0,GLuint v1)
glUniform2uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2uiv (GLint location, GLsizei count, const GLuint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform2uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform2uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform3d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3d (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLdouble x,GLdouble y,GLdouble z)
glUniform3dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3dv (GLint location, GLsizei count, const GLdouble *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLdouble * value)
glUniform3f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
glUniform3f	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform3f (GLint location, GLfloat x, GLfloat y, GLfloat z/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLfloat x,GLfloat y,GLfloat z)
glUniform3fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
glUniform3fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3fv (GLint location, GLsizei count, const GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform3fv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform3fv (GLint location, GLsizei count, const GLfloat* /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * v)
glUniform3fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform3i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0,GLint v1,GLint v2)
glUniform3i	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform3i (GLint location, GLint x, GLint y, GLint z);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLint x,GLint y,GLint z)
glUniform3i64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
glUniform3i64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint64EXT * value)
glUniform3iARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3iARB (GLint location, GLint v0, GLint v1, GLint v2);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0,GLint v1,GLint v2)
glUniform3iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3iv (GLint location, GLsizei count, const GLint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform3iv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform3iv (GLint location, GLsizei count, const GLint* v)/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLint * v)
glUniform3ivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3ivARB (GLint location, GLsizei count, const GLint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform3ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3ui (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0,GLuint v1,GLuint v2)
glUniform3ui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
glUniform3ui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64EXT * value)
glUniform3uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0,GLuint v1,GLuint v2)
glUniform3uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3uiv (GLint location, GLsizei count, const GLuint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform3uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform3uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform4d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4d (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glUniform4dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4dv (GLint location, GLsizei count, const GLdouble *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLdouble * value)
glUniform4f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
glUniform4f	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform4f (GLint location, GLfloat x, GLfloat y, GLfloat z/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glUniform4fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
glUniform4fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4fv (GLint location, GLsizei count, const GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform4fv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform4fv (GLint location, GLsizei count, const GLfloat* /;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * v)
glUniform4fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLfloat * value)
glUniform4i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
glUniform4i	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform4i (GLint location, GLint x, GLint y, GLint z, GLin/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLint x,GLint y,GLint z,GLint w)
glUniform4i64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, G/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
glUniform4i64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint64EXT * value)
glUniform4iARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4iARB (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
glUniform4iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4iv (GLint location, GLsizei count, const GLint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform4iv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniform4iv (GLint location, GLsizei count, const GLint* v)/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,const GLint * v)
glUniform4ivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4ivARB (GLint location, GLsizei count, const GLint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLint * value)
glUniform4ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4ui (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
glUniform4ui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
glUniform4ui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64EXT * value)
glUniform4uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
glUniform4uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4uiv (GLint location, GLsizei count, const GLuint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniform4uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniform4uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint * value)
glUniformBlockBinding	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint unif/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
glUniformBufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformBufferEXT (GLuint program, GLint location, GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program,GLint location,GLuint buffer)
glUniformHandleui64ARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformHandleui64ARB (GLint location, GLuint64 value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64 value)
glUniformHandleui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformHandleui64NV (GLint location, GLuint64 value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64 value)
glUniformHandleui64vARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformHandleui64vARB (GLint location, GLsizei count, const GLuint64 *valu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64 * value)
glUniformHandleui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformHandleui64vNV (GLint location, GLsizei count, const GLuint64 *value/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64 * value)
glUniformMatrix2dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2dv (GLint location, GLsizei count, GLboolean transpose, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix2fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix2fv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniformMatrix2fv (GLint location, GLsizei count, GLboolean/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix2fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2fvARB (GLint location, GLsizei count, GLboolean transpose, c/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix2x3dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2x3dv (GLint location, GLsizei count, GLboolean transpose, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix2x3fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix2x4dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2x4dv (GLint location, GLsizei count, GLboolean transpose, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix2x4fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix3dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3dv (GLint location, GLsizei count, GLboolean transpose, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix3fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix3fv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniformMatrix3fv (GLint location, GLsizei count, GLboolean/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix3fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3fvARB (GLint location, GLsizei count, GLboolean transpose, c/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix3x2dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3x2dv (GLint location, GLsizei count, GLboolean transpose, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix3x2fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix3x4dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3x4dv (GLint location, GLsizei count, GLboolean transpose, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix3x4fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix4dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4dv (GLint location, GLsizei count, GLboolean transpose, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix4fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, cons/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix4fv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUniformMatrix4fv (GLint location, GLsizei count, GLboolean/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix4fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4fvARB (GLint location, GLsizei count, GLboolean transpose, c/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix4x2dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4x2dv (GLint location, GLsizei count, GLboolean transpose, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix4x2fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformMatrix4x3dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4x3dv (GLint location, GLsizei count, GLboolean transpose, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
glUniformMatrix4x3fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, co/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
glUniformSubroutinesuiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformSubroutinesuiv (GLenum shadertype, GLsizei count, const GLuint *ind/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum shadertype,GLsizei count,const GLuint * indices)
glUniformui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformui64NV (GLint location, GLuint64EXT value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLuint64EXT value)
glUniformui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUniformui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint location,GLsizei count,const GLuint64EXT * value)
glUnlockArraysEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUnlockArraysEXT (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glUnmapBuffer	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glUnmapBuffer (GLenum target);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum target)
glUnmapBufferARB	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glUnmapBufferARB (GLenum target);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLenum target)
glUnmapBufferOES	SDL_opengles2_gl2ext.h	/^GL_APICALL GLboolean GL_APIENTRY glUnmapBufferOES (GLenum target);$/;"	kind:p	typeref:typename:GL_APICALL GLboolean GL_APIENTRY	signature:(GLenum target)
glUnmapNamedBufferEXT	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glUnmapNamedBufferEXT (GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLuint buffer)
glUnmapObjectBufferATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUnmapObjectBufferATI (GLuint buffer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer)
glUnmapTexture2DINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUnmapTexture2DINTEL (GLuint texture, GLint level);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint texture,GLint level)
glUpdateObjectBufferATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUpdateObjectBufferATI (GLuint buffer, GLuint offset, GLsizei size, const v/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint buffer,GLuint offset,GLsizei size,const void * pointer,GLenum preserve)
glUseProgram	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUseProgram (GLuint program);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program)
glUseProgram	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glUseProgram (GLuint program);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program)
glUseProgramObjectARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUseProgramObjectARB (GLhandleARB programObj);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj)
glUseProgramStages	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint pipeline,GLbitfield stages,GLuint program)
glUseProgramStagesEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glUseProgramStagesEXT (GLuint pipeline, GLbitfield stages, GLuint pr/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint pipeline,GLbitfield stages,GLuint program)
glUseShaderProgramEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glUseShaderProgramEXT (GLenum type, GLuint program);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint program)
glVDPAUFiniNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUFiniNV (void);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(void)
glVDPAUGetSurfaceivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUGetSurfaceivNV (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLvdpauSurfaceNV surface,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
glVDPAUInitNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUInitNV (const void *vdpDevice, const void *getProcAddress);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const void * vdpDevice,const void * getProcAddress)
glVDPAUIsSurfaceNV	SDL_opengl_glext.h	/^GLAPI GLboolean APIENTRY glVDPAUIsSurfaceNV (GLvdpauSurfaceNV surface);$/;"	kind:p	typeref:typename:GLAPI GLboolean APIENTRY	signature:(GLvdpauSurfaceNV surface)
glVDPAUMapSurfacesNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUMapSurfacesNV (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei numSurfaces,const GLvdpauSurfaceNV * surfaces)
glVDPAURegisterOutputSurfaceNV	SDL_opengl_glext.h	/^GLAPI GLvdpauSurfaceNV APIENTRY glVDPAURegisterOutputSurfaceNV (const void *vdpSurface, GLenum t/;"	kind:p	typeref:typename:GLAPI GLvdpauSurfaceNV APIENTRY	signature:(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
glVDPAURegisterVideoSurfaceNV	SDL_opengl_glext.h	/^GLAPI GLvdpauSurfaceNV APIENTRY glVDPAURegisterVideoSurfaceNV (const void *vdpSurface, GLenum ta/;"	kind:p	typeref:typename:GLAPI GLvdpauSurfaceNV APIENTRY	signature:(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
glVDPAUSurfaceAccessNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUSurfaceAccessNV (GLvdpauSurfaceNV surface, GLenum access);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLvdpauSurfaceNV surface,GLenum access)
glVDPAUUnmapSurfacesNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUUnmapSurfacesNV (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei numSurface,const GLvdpauSurfaceNV * surfaces)
glVDPAUUnregisterSurfaceNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVDPAUUnregisterSurfaceNV (GLvdpauSurfaceNV surface);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLvdpauSurfaceNV surface)
glValidateProgram	SDL_opengl_glext.h	/^GLAPI void APIENTRY glValidateProgram (GLuint program);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint program)
glValidateProgram	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glValidateProgram (GLuint program);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint program)
glValidateProgramARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glValidateProgramARB (GLhandleARB programObj);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhandleARB programObj)
glValidateProgramPipeline	SDL_opengl_glext.h	/^GLAPI void APIENTRY glValidateProgramPipeline (GLuint pipeline);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint pipeline)
glValidateProgramPipelineEXT	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glValidateProgramPipelineEXT (GLuint pipeline);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint pipeline)
glVariantArrayObjectATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantArrayObjectATI (GLuint id, GLenum type, GLsizei stride, GLuint buff/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
glVariantPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantPointerEXT (GLuint id, GLenum type, GLuint stride, const void *addr/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,GLenum type,GLuint stride,const void * addr)
glVariantbvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantbvEXT (GLuint id, const GLbyte *addr);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLbyte * addr)
glVariantdvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantdvEXT (GLuint id, const GLdouble *addr);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLdouble * addr)
glVariantfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantfvEXT (GLuint id, const GLfloat *addr);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLfloat * addr)
glVariantivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantivEXT (GLuint id, const GLint *addr);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLint * addr)
glVariantsvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantsvEXT (GLuint id, const GLshort *addr);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLshort * addr)
glVariantubvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantubvEXT (GLuint id, const GLubyte *addr);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLubyte * addr)
glVariantuivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantuivEXT (GLuint id, const GLuint *addr);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLuint * addr)
glVariantusvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVariantusvEXT (GLuint id, const GLushort *addr);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint id,const GLushort * addr)
glVertex2bOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex2bOES (GLbyte x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte x)
glVertex2bvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex2bvOES (const GLbyte *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glVertex2d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2d( GLdouble x, GLdouble y );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y)
glVertex2dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2dv( const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glVertex2f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2f( GLfloat x, GLfloat y );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y)
glVertex2fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2fv( const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glVertex2hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex2hNV (GLhalfNV x, GLhalfNV y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV x,GLhalfNV y)
glVertex2hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex2hvNV (const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glVertex2i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2i( GLint x, GLint y );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y)
glVertex2iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2iv( const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glVertex2s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2s( GLshort x, GLshort y );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x,GLshort y)
glVertex2sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex2sv( const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glVertex2xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex2xOES (GLfixed x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x)
glVertex2xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex2xvOES (const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glVertex3bOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex3bOES (GLbyte x, GLbyte y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte x,GLbyte y)
glVertex3bvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex3bvOES (const GLbyte *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glVertex3d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3d( GLdouble x, GLdouble y, GLdouble z );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glVertex3dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3dv( const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glVertex3f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3f( GLfloat x, GLfloat y, GLfloat z );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glVertex3fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3fv( const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glVertex3hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex3hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV x,GLhalfNV y,GLhalfNV z)
glVertex3hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex3hvNV (const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glVertex3i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3i( GLint x, GLint y, GLint z );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLint z)
glVertex3iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3iv( const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glVertex3s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3s( GLshort x, GLshort y, GLshort z );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x,GLshort y,GLshort z)
glVertex3sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex3sv( const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glVertex3xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex3xOES (GLfixed x, GLfixed y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y)
glVertex3xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex3xvOES (const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glVertex4bOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex4bOES (GLbyte x, GLbyte y, GLbyte z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLbyte x,GLbyte y,GLbyte z)
glVertex4bvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex4bvOES (const GLbyte *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLbyte * coords)
glVertex4d	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4d( GLdouble x, GLdouble y, GLdouble z, GLdouble w );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertex4dv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4dv( const GLdouble *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLdouble * v)
glVertex4f	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4f( GLfloat x, GLfloat y, GLfloat z, GLfloat w );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glVertex4fv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4fv( const GLfloat *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLfloat * v)
glVertex4hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex4hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
glVertex4hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex4hvNV (const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * v)
glVertex4i	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4i( GLint x, GLint y, GLint z, GLint w );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLint z,GLint w)
glVertex4iv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4iv( const GLint *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLint * v)
glVertex4s	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4s( GLshort x, GLshort y, GLshort z, GLshort w );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLshort x,GLshort y,GLshort z,GLshort w)
glVertex4sv	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertex4sv( const GLshort *v );$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(const GLshort * v)
glVertex4xOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex4xOES (GLfixed x, GLfixed y, GLfixed z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfixed x,GLfixed y,GLfixed z)
glVertex4xvOES	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertex4xvOES (const GLfixed *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfixed * coords)
glVertexArrayBindVertexBufferEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayBindVertexBufferEXT (GLuint vaobj, GLuint bindingindex, GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
glVertexArrayColorOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayColorOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayEdgeFlagOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayEdgeFlagOffsetEXT (GLuint vaobj, GLuint buffer, GLsizei stride,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLsizei stride,GLintptr offset)
glVertexArrayFogCoordOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayFogCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GL/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayIndexOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayIndexOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsiz/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayMultiTexCoordOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayMultiTexCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLenum tex/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLenum texunit,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayNormalOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayNormalOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayParameteriAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayParameteriAPPLE (GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glVertexArrayRangeAPPLE	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayRangeAPPLE (GLsizei length, void *pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei length,void * pointer)
glVertexArrayRangeNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayRangeNV (GLsizei length, const void *pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsizei length,const void * pointer)
glVertexArraySecondaryColorOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArraySecondaryColorOffsetEXT (GLuint vaobj, GLuint buffer, GLint siz/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayTexCoordOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayTexCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLe/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayVertexAttribBindingEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribBindingEXT (GLuint vaobj, GLuint attribindex, GLuin/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
glVertexArrayVertexAttribDivisorEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribDivisorEXT (GLuint vaobj, GLuint index, GLuint divi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint index,GLuint divisor)
glVertexArrayVertexAttribFormatEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribFormatEXT (GLuint vaobj, GLuint attribindex, GLint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
glVertexArrayVertexAttribIFormatEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribIFormatEXT (GLuint vaobj, GLuint attribindex, GLint/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
glVertexArrayVertexAttribIOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribIOffsetEXT (GLuint vaobj, GLuint buffer, GLuint ind/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayVertexAttribLFormatEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribLFormatEXT (GLuint vaobj, GLuint attribindex, GLint/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
glVertexArrayVertexAttribLOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribLOffsetEXT (GLuint vaobj, GLuint buffer, GLuint ind/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexArrayVertexAttribOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribOffsetEXT (GLuint vaobj, GLuint buffer, GLuint inde/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLintptr offset)
glVertexArrayVertexBindingDivisorEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexBindingDivisorEXT (GLuint vaobj, GLuint bindingindex, GLu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint bindingindex,GLuint divisor)
glVertexArrayVertexOffsetEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexArrayVertexOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenu/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
glVertexAttrib1d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1d (GLuint index, GLdouble x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x)
glVertexAttrib1dARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1dARB (GLuint index, GLdouble x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x)
glVertexAttrib1dNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1dNV (GLuint index, GLdouble x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x)
glVertexAttrib1dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1dv (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib1dvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1dvARB (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib1dvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1dvNV (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib1f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1f (GLuint index, GLfloat x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x)
glVertexAttrib1f	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib1f (GLuint indx, GLfloat x);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,GLfloat x)
glVertexAttrib1fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1fARB (GLuint index, GLfloat x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x)
glVertexAttrib1fNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1fNV (GLuint index, GLfloat x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x)
glVertexAttrib1fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1fv (GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib1fv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib1fv (GLuint indx, const GLfloat* values);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,const GLfloat * values)
glVertexAttrib1fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1fvARB (GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib1fvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1fvNV (GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib1hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1hNV (GLuint index, GLhalfNV x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLhalfNV x)
glVertexAttrib1hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1hvNV (GLuint index, const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLhalfNV * v)
glVertexAttrib1s	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1s (GLuint index, GLshort x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x)
glVertexAttrib1sARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1sARB (GLuint index, GLshort x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x)
glVertexAttrib1sNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1sNV (GLuint index, GLshort x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x)
glVertexAttrib1sv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1sv (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib1svARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1svARB (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib1svNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib1svNV (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib2d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y)
glVertexAttrib2dARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2dARB (GLuint index, GLdouble x, GLdouble y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y)
glVertexAttrib2dNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2dNV (GLuint index, GLdouble x, GLdouble y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y)
glVertexAttrib2dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2dv (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib2dvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2dvARB (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib2dvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2dvNV (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib2f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y)
glVertexAttrib2f	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib2f (GLuint indx, GLfloat x, GLfloat y);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,GLfloat x,GLfloat y)
glVertexAttrib2fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2fARB (GLuint index, GLfloat x, GLfloat y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y)
glVertexAttrib2fNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2fNV (GLuint index, GLfloat x, GLfloat y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y)
glVertexAttrib2fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2fv (GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib2fv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib2fv (GLuint indx, const GLfloat* values);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,const GLfloat * values)
glVertexAttrib2fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2fvARB (GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib2fvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2fvNV (GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib2hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2hNV (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLhalfNV x,GLhalfNV y)
glVertexAttrib2hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2hvNV (GLuint index, const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLhalfNV * v)
glVertexAttrib2s	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2s (GLuint index, GLshort x, GLshort y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y)
glVertexAttrib2sARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2sARB (GLuint index, GLshort x, GLshort y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y)
glVertexAttrib2sNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2sNV (GLuint index, GLshort x, GLshort y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y)
glVertexAttrib2sv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2sv (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib2svARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2svARB (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib2svNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib2svNV (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib3d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z)
glVertexAttrib3dARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z)
glVertexAttrib3dNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z)
glVertexAttrib3dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3dv (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib3dvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3dvARB (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib3dvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3dvNV (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib3f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat z)
glVertexAttrib3f	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib3f (GLuint indx, GLfloat x, GLfloat y, GLfloat/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,GLfloat x,GLfloat y,GLfloat z)
glVertexAttrib3fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat z)
glVertexAttrib3fNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat z)
glVertexAttrib3fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3fv (GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib3fv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib3fv (GLuint indx, const GLfloat* values);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,const GLfloat * values)
glVertexAttrib3fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3fvARB (GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib3fvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3fvNV (GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib3hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z)
glVertexAttrib3hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3hvNV (GLuint index, const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLhalfNV * v)
glVertexAttrib3s	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y,GLshort z)
glVertexAttrib3sARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3sARB (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y,GLshort z)
glVertexAttrib3sNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3sNV (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y,GLshort z)
glVertexAttrib3sv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3sv (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib3svARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3svARB (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib3svNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib3svNV (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib4Nbv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nbv (GLuint index, const GLbyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLbyte * v)
glVertexAttrib4NbvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NbvARB (GLuint index, const GLbyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLbyte * v)
glVertexAttrib4Niv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Niv (GLuint index, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttrib4NivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NivARB (GLuint index, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttrib4Nsv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nsv (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib4NsvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NsvARB (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib4Nub	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
glVertexAttrib4NubARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NubARB (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyt/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
glVertexAttrib4Nubv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nubv (GLuint index, const GLubyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttrib4NubvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NubvARB (GLuint index, const GLubyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttrib4Nuiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nuiv (GLuint index, const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttrib4NuivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NuivARB (GLuint index, const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttrib4Nusv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nusv (GLuint index, const GLushort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLushort * v)
glVertexAttrib4NusvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4NusvARB (GLuint index, const GLushort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLushort * v)
glVertexAttrib4bv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4bv (GLuint index, const GLbyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLbyte * v)
glVertexAttrib4bvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4bvARB (GLuint index, const GLbyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLbyte * v)
glVertexAttrib4d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertexAttrib4dARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdou/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertexAttrib4dNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdoub/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertexAttrib4dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4dv (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib4dvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4dvARB (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib4dvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4dvNV (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttrib4f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glVertexAttrib4f	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib4f (GLuint indx, GLfloat x, GLfloat y, GLfloat/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glVertexAttrib4fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glVertexAttrib4fNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glVertexAttrib4fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4fv (GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib4fv	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib4fv (GLuint indx, const GLfloat* values);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,const GLfloat * values)
glVertexAttrib4fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4fvARB (GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib4fvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4fvNV (GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glVertexAttrib4hNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalf/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
glVertexAttrib4hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4hvNV (GLuint index, const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLhalfNV * v)
glVertexAttrib4iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4iv (GLuint index, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttrib4ivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4ivARB (GLuint index, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttrib4s	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
glVertexAttrib4sARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4sARB (GLuint index, GLshort x, GLshort y, GLshort z, GLshort /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
glVertexAttrib4sNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4sNV (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
glVertexAttrib4sv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4sv (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib4svARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4svARB (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib4svNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4svNV (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttrib4ubNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubNV (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
glVertexAttrib4ubv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubv (GLuint index, const GLubyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttrib4ubvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubvARB (GLuint index, const GLubyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttrib4ubvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubvNV (GLuint index, const GLubyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttrib4uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4uiv (GLuint index, const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttrib4uivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4uivARB (GLuint index, const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttrib4usv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4usv (GLuint index, const GLushort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLushort * v)
glVertexAttrib4usvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttrib4usvARB (GLuint index, const GLushort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLushort * v)
glVertexAttribArrayObjectATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribArrayObjectATI (GLuint index, GLint size, GLenum type, GLboole/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLuint buffer,GLuint offset)
glVertexAttribBinding	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribBinding (GLuint attribindex, GLuint bindingindex);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint attribindex,GLuint bindingindex)
glVertexAttribDivisor	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribDivisor (GLuint index, GLuint divisor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint divisor)
glVertexAttribDivisorANGLE	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glVertexAttribDivisorANGLE (GLuint index, GLuint divisor);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index,GLuint divisor)
glVertexAttribDivisorARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribDivisorARB (GLuint index, GLuint divisor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint divisor)
glVertexAttribDivisorNV	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glVertexAttribDivisorNV (GLuint index, GLuint divisor);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint index,GLuint divisor)
glVertexAttribFormat	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribFormat (GLuint attribindex, GLint size, GLenum type, GLboolean/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
glVertexAttribFormatNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribFormatNV (GLuint index, GLint size, GLenum type, GLboolean nor/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride)
glVertexAttribI1i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1i (GLuint index, GLint x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x)
glVertexAttribI1iEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1iEXT (GLuint index, GLint x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x)
glVertexAttribI1iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1iv (GLuint index, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI1ivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1ivEXT (GLuint index, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI1ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1ui (GLuint index, GLuint x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x)
glVertexAttribI1uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1uiEXT (GLuint index, GLuint x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x)
glVertexAttribI1uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1uiv (GLuint index, const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI1uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI1uivEXT (GLuint index, const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI2i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2i (GLuint index, GLint x, GLint y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x,GLint y)
glVertexAttribI2iEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2iEXT (GLuint index, GLint x, GLint y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x,GLint y)
glVertexAttribI2iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2iv (GLuint index, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI2ivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2ivEXT (GLuint index, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI2ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2ui (GLuint index, GLuint x, GLuint y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x,GLuint y)
glVertexAttribI2uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x,GLuint y)
glVertexAttribI2uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2uiv (GLuint index, const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI2uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI2uivEXT (GLuint index, const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI3i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3i (GLuint index, GLint x, GLint y, GLint z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x,GLint y,GLint z)
glVertexAttribI3iEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x,GLint y,GLint z)
glVertexAttribI3iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3iv (GLuint index, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI3ivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3ivEXT (GLuint index, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI3ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3ui (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x,GLuint y,GLuint z)
glVertexAttribI3uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x,GLuint y,GLuint z)
glVertexAttribI3uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3uiv (GLuint index, const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI3uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI3uivEXT (GLuint index, const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI4bv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4bv (GLuint index, const GLbyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLbyte * v)
glVertexAttribI4bvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4bvEXT (GLuint index, const GLbyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLbyte * v)
glVertexAttribI4i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4i (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x,GLint y,GLint z,GLint w)
glVertexAttribI4iEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint x,GLint y,GLint z,GLint w)
glVertexAttribI4iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4iv (GLuint index, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI4ivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4ivEXT (GLuint index, const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint * v)
glVertexAttribI4sv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4sv (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttribI4svEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4svEXT (GLuint index, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLshort * v)
glVertexAttribI4ubv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4ubv (GLuint index, const GLubyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttribI4ubvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4ubvEXT (GLuint index, const GLubyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLubyte * v)
glVertexAttribI4ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4ui (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
glVertexAttribI4uiEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
glVertexAttribI4uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4uiv (GLuint index, const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI4uivEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4uivEXT (GLuint index, const GLuint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint * v)
glVertexAttribI4usv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4usv (GLuint index, const GLushort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLushort * v)
glVertexAttribI4usvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribI4usvEXT (GLuint index, const GLushort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLushort * v)
glVertexAttribIFormat	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribIFormat (GLuint attribindex, GLint size, GLenum type, GLuint r/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
glVertexAttribIFormatNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribIFormatNV (GLuint index, GLint size, GLenum type, GLsizei stri/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLsizei stride)
glVertexAttribIPointer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribIPointer (GLuint index, GLint size, GLenum type, GLsizei strid/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
glVertexAttribIPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei st/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
glVertexAttribL1d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1d (GLuint index, GLdouble x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x)
glVertexAttribL1dEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1dEXT (GLuint index, GLdouble x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x)
glVertexAttribL1dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1dv (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL1dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1dvEXT (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL1i64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1i64NV (GLuint index, GLint64EXT x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint64EXT x)
glVertexAttribL1i64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1i64vNV (GLuint index, const GLint64EXT *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint64EXT * v)
glVertexAttribL1ui64ARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64ARB (GLuint index, GLuint64EXT x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint64EXT x)
glVertexAttribL1ui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64NV (GLuint index, GLuint64EXT x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint64EXT x)
glVertexAttribL1ui64vARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64vARB (GLuint index, const GLuint64EXT *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint64EXT * v)
glVertexAttribL1ui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint64EXT * v)
glVertexAttribL2d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2d (GLuint index, GLdouble x, GLdouble y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y)
glVertexAttribL2dEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2dEXT (GLuint index, GLdouble x, GLdouble y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y)
glVertexAttribL2dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2dv (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL2dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2dvEXT (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL2i64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2i64NV (GLuint index, GLint64EXT x, GLint64EXT y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint64EXT x,GLint64EXT y)
glVertexAttribL2i64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2i64vNV (GLuint index, const GLint64EXT *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint64EXT * v)
glVertexAttribL2ui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint64EXT x,GLuint64EXT y)
glVertexAttribL2ui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL2ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint64EXT * v)
glVertexAttribL3d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z)
glVertexAttribL3dEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z)
glVertexAttribL3dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3dv (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL3dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3dvEXT (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL3i64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z)
glVertexAttribL3i64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3i64vNV (GLuint index, const GLint64EXT *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint64EXT * v)
glVertexAttribL3ui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
glVertexAttribL3ui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL3ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint64EXT * v)
glVertexAttribL4d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdoubl/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertexAttribL4dEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertexAttribL4dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4dv (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL4dvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4dvEXT (GLuint index, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLdouble * v)
glVertexAttribL4i64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
glVertexAttribL4i64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4i64vNV (GLuint index, const GLint64EXT *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLint64EXT * v)
glVertexAttribL4ui64NV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
glVertexAttribL4ui64vNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribL4ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLuint64EXT * v)
glVertexAttribLFormat	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribLFormat (GLuint attribindex, GLint size, GLenum type, GLuint r/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
glVertexAttribLFormatNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribLFormatNV (GLuint index, GLint size, GLenum type, GLsizei stri/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLsizei stride)
glVertexAttribLPointer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribLPointer (GLuint index, GLint size, GLenum type, GLsizei strid/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
glVertexAttribLPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribLPointerEXT (GLuint index, GLint size, GLenum type, GLsizei st/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
glVertexAttribP1ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP1ui (GLuint index, GLenum type, GLboolean normalized, GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,GLuint value)
glVertexAttribP1uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP1uiv (GLuint index, GLenum type, GLboolean normalized, const /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
glVertexAttribP2ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP2ui (GLuint index, GLenum type, GLboolean normalized, GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,GLuint value)
glVertexAttribP2uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP2uiv (GLuint index, GLenum type, GLboolean normalized, const /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
glVertexAttribP3ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP3ui (GLuint index, GLenum type, GLboolean normalized, GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,GLuint value)
glVertexAttribP3uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP3uiv (GLuint index, GLenum type, GLboolean normalized, const /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
glVertexAttribP4ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP4ui (GLuint index, GLenum type, GLboolean normalized, GLuint /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,GLuint value)
glVertexAttribP4uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribP4uiv (GLuint index, GLenum type, GLboolean normalized, const /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
glVertexAttribParameteriAMD	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribParameteriAMD (GLuint index, GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLenum pname,GLint param)
glVertexAttribPointer	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean norm/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
glVertexAttribPointer	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttribPointer (GLuint indx, GLint size, GLenum type,/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLuint indx,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const GLvoid * ptr)
glVertexAttribPointerARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribPointerARB (GLuint index, GLint size, GLenum type, GLboolean n/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
glVertexAttribPointerNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribPointerNV (GLuint index, GLint fsize, GLenum type, GLsizei str/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLint fsize,GLenum type,GLsizei stride,const void * pointer)
glVertexAttribs1dvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs1dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLdouble * v)
glVertexAttribs1fvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs1fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLfloat * v)
glVertexAttribs1hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs1hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei n,const GLhalfNV * v)
glVertexAttribs1svNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs1svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLshort * v)
glVertexAttribs2dvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs2dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLdouble * v)
glVertexAttribs2fvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs2fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLfloat * v)
glVertexAttribs2hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs2hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei n,const GLhalfNV * v)
glVertexAttribs2svNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs2svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLshort * v)
glVertexAttribs3dvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs3dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLdouble * v)
glVertexAttribs3fvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs3fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLfloat * v)
glVertexAttribs3hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs3hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei n,const GLhalfNV * v)
glVertexAttribs3svNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs3svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLshort * v)
glVertexAttribs4dvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs4dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLdouble * v)
glVertexAttribs4fvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs4fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLfloat * v)
glVertexAttribs4hvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs4hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei n,const GLhalfNV * v)
glVertexAttribs4svNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs4svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLshort * v)
glVertexAttribs4ubvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexAttribs4ubvNV (GLuint index, GLsizei count, const GLubyte *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLsizei count,const GLubyte * v)
glVertexBindingDivisor	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexBindingDivisor (GLuint bindingindex, GLuint divisor);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint bindingindex,GLuint divisor)
glVertexBlendARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexBlendARB (GLint count);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint count)
glVertexBlendEnvfATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexBlendEnvfATI (GLenum pname, GLfloat param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLfloat param)
glVertexBlendEnviATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexBlendEnviATI (GLenum pname, GLint param);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum pname,GLint param)
glVertexFormatNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride)
glVertexP2ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexP2ui (GLenum type, GLuint value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint value)
glVertexP2uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexP2uiv (GLenum type, const GLuint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * value)
glVertexP3ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexP3ui (GLenum type, GLuint value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint value)
glVertexP3uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexP3uiv (GLenum type, const GLuint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * value)
glVertexP4ui	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexP4ui (GLenum type, GLuint value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,GLuint value)
glVertexP4uiv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexP4uiv (GLenum type, const GLuint *value);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum type,const GLuint * value)
glVertexPointer	SDL_opengl.h	/^GLAPI void GLAPIENTRY glVertexPointer( GLint size, GLenum type,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const GLvoid * ptr)
glVertexPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, /;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
glVertexPointerListIBM	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexPointerListIBM (GLint size, GLenum type, GLint stride, const void **/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
glVertexPointervINTEL	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexPointervINTEL (GLint size, GLenum type, const void **pointer);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,const void ** pointer)
glVertexStream1dATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1dATI (GLenum stream, GLdouble x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLdouble x)
glVertexStream1dvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1dvATI (GLenum stream, const GLdouble *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLdouble * coords)
glVertexStream1fATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1fATI (GLenum stream, GLfloat x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLfloat x)
glVertexStream1fvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1fvATI (GLenum stream, const GLfloat *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLfloat * coords)
glVertexStream1iATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1iATI (GLenum stream, GLint x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLint x)
glVertexStream1ivATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1ivATI (GLenum stream, const GLint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLint * coords)
glVertexStream1sATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1sATI (GLenum stream, GLshort x);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLshort x)
glVertexStream1svATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream1svATI (GLenum stream, const GLshort *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLshort * coords)
glVertexStream2dATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2dATI (GLenum stream, GLdouble x, GLdouble y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLdouble x,GLdouble y)
glVertexStream2dvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2dvATI (GLenum stream, const GLdouble *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLdouble * coords)
glVertexStream2fATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2fATI (GLenum stream, GLfloat x, GLfloat y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLfloat x,GLfloat y)
glVertexStream2fvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2fvATI (GLenum stream, const GLfloat *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLfloat * coords)
glVertexStream2iATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2iATI (GLenum stream, GLint x, GLint y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLint x,GLint y)
glVertexStream2ivATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2ivATI (GLenum stream, const GLint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLint * coords)
glVertexStream2sATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2sATI (GLenum stream, GLshort x, GLshort y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLshort x,GLshort y)
glVertexStream2svATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream2svATI (GLenum stream, const GLshort *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLshort * coords)
glVertexStream3dATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLdouble x,GLdouble y,GLdouble z)
glVertexStream3dvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3dvATI (GLenum stream, const GLdouble *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLdouble * coords)
glVertexStream3fATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLfloat x,GLfloat y,GLfloat z)
glVertexStream3fvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3fvATI (GLenum stream, const GLfloat *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLfloat * coords)
glVertexStream3iATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3iATI (GLenum stream, GLint x, GLint y, GLint z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLint x,GLint y,GLint z)
glVertexStream3ivATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3ivATI (GLenum stream, const GLint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLint * coords)
glVertexStream3sATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLshort x,GLshort y,GLshort z)
glVertexStream3svATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream3svATI (GLenum stream, const GLshort *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLshort * coords)
glVertexStream4dATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdo/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glVertexStream4dvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4dvATI (GLenum stream, const GLdouble *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLdouble * coords)
glVertexStream4fATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glVertexStream4fvATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4fvATI (GLenum stream, const GLfloat *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLfloat * coords)
glVertexStream4iATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4iATI (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLint x,GLint y,GLint z,GLint w)
glVertexStream4ivATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4ivATI (GLenum stream, const GLint *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLint * coords)
glVertexStream4sATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4sATI (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,GLshort x,GLshort y,GLshort z,GLshort w)
glVertexStream4svATI	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexStream4svATI (GLenum stream, const GLshort *coords);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLenum stream,const GLshort * coords)
glVertexWeightPointerEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexWeightPointerEXT (GLint size, GLenum type, GLsizei stride, const voi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const void * pointer)
glVertexWeightfEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexWeightfEXT (GLfloat weight);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat weight)
glVertexWeightfvEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexWeightfvEXT (const GLfloat *weight);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * weight)
glVertexWeighthNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexWeighthNV (GLhalfNV weight);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLhalfNV weight)
glVertexWeighthvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVertexWeighthvNV (const GLhalfNV *weight);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLhalfNV * weight)
glVideoCaptureNV	SDL_opengl_glext.h	/^GLAPI GLenum APIENTRY glVideoCaptureNV (GLuint video_capture_slot, GLuint *sequence_num, GLuint6/;"	kind:p	typeref:typename:GLAPI GLenum APIENTRY	signature:(GLuint video_capture_slot,GLuint * sequence_num,GLuint64EXT * capture_time)
glVideoCaptureStreamParameterdvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterdvNV (GLuint video_capture_slot, GLuint stream,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLdouble * params)
glVideoCaptureStreamParameterfvNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterfvNV (GLuint video_capture_slot, GLuint stream,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLfloat * params)
glVideoCaptureStreamParameterivNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterivNV (GLuint video_capture_slot, GLuint stream,/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLint * params)
glViewport	SDL_opengl.h	/^GLAPI void GLAPIENTRY glViewport( GLint x, GLint y,$/;"	kind:p	typeref:typename:GLAPI void GLAPIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height)
glViewport	SDL_opengles2_gl2.h	/^GL_APICALL void         GL_APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height)/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLint x,GLint y,GLsizei width,GLsizei height)
glViewportArrayv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glViewportArrayv (GLuint first, GLsizei count, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint first,GLsizei count,const GLfloat * v)
glViewportIndexedf	SDL_opengl_glext.h	/^GLAPI void APIENTRY glViewportIndexedf (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
glViewportIndexedfv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glViewportIndexedfv (GLuint index, const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint index,const GLfloat * v)
glWaitSync	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLsync sync,GLbitfield flags,GLuint64 timeout)
glWaitSyncAPPLE	SDL_opengles2_gl2ext.h	/^GL_APICALL void GL_APIENTRY glWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	kind:p	typeref:typename:GL_APICALL void GL_APIENTRY	signature:(GLsync sync,GLbitfield flags,GLuint64 timeout)
glWeightPathsNV	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightPathsNV (GLuint resultPath, GLsizei numPaths, const GLuint *paths, c/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint resultPath,GLsizei numPaths,const GLuint * paths,const GLfloat * weights)
glWeightPointerARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightPointerARB (GLint size, GLenum type, GLsizei stride, const void *poi/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,GLenum type,GLsizei stride,const void * pointer)
glWeightbvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightbvARB (GLint size, const GLbyte *weights);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLbyte * weights)
glWeightdvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightdvARB (GLint size, const GLdouble *weights);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLdouble * weights)
glWeightfvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightfvARB (GLint size, const GLfloat *weights);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLfloat * weights)
glWeightivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightivARB (GLint size, const GLint *weights);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLint * weights)
glWeightsvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightsvARB (GLint size, const GLshort *weights);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLshort * weights)
glWeightubvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightubvARB (GLint size, const GLubyte *weights);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLubyte * weights)
glWeightuivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightuivARB (GLint size, const GLuint *weights);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLuint * weights)
glWeightusvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWeightusvARB (GLint size, const GLushort *weights);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint size,const GLushort * weights)
glWindowPos2d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2d (GLdouble x, GLdouble y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y)
glWindowPos2dARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2dARB (GLdouble x, GLdouble y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y)
glWindowPos2dMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2dMESA (GLdouble x, GLdouble y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y)
glWindowPos2dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2dv (const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos2dvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2dvARB (const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos2dvMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2dvMESA (const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos2f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2f (GLfloat x, GLfloat y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y)
glWindowPos2fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2fARB (GLfloat x, GLfloat y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y)
glWindowPos2fMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2fMESA (GLfloat x, GLfloat y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y)
glWindowPos2fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2fv (const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos2fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2fvARB (const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos2fvMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2fvMESA (const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos2i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2i (GLint x, GLint y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y)
glWindowPos2iARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2iARB (GLint x, GLint y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y)
glWindowPos2iMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2iMESA (GLint x, GLint y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y)
glWindowPos2iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2iv (const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos2ivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2ivARB (const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos2ivMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2ivMESA (const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos2s	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2s (GLshort x, GLshort y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y)
glWindowPos2sARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2sARB (GLshort x, GLshort y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y)
glWindowPos2sMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2sMESA (GLshort x, GLshort y);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y)
glWindowPos2sv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2sv (const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWindowPos2svARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2svARB (const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWindowPos2svMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos2svMESA (const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWindowPos3d	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3d (GLdouble x, GLdouble y, GLdouble z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glWindowPos3dARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3dARB (GLdouble x, GLdouble y, GLdouble z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glWindowPos3dMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3dMESA (GLdouble x, GLdouble y, GLdouble z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z)
glWindowPos3dv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3dv (const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos3dvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3dvARB (const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos3dvMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3dvMESA (const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos3f	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3f (GLfloat x, GLfloat y, GLfloat z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glWindowPos3fARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3fARB (GLfloat x, GLfloat y, GLfloat z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glWindowPos3fMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3fMESA (GLfloat x, GLfloat y, GLfloat z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z)
glWindowPos3fv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3fv (const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos3fvARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3fvARB (const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos3fvMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3fvMESA (const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos3i	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3i (GLint x, GLint y, GLint z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y,GLint z)
glWindowPos3iARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3iARB (GLint x, GLint y, GLint z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y,GLint z)
glWindowPos3iMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3iMESA (GLint x, GLint y, GLint z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y,GLint z)
glWindowPos3iv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3iv (const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos3ivARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3ivARB (const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos3ivMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3ivMESA (const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos3s	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3s (GLshort x, GLshort y, GLshort z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y,GLshort z)
glWindowPos3sARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3sARB (GLshort x, GLshort y, GLshort z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y,GLshort z)
glWindowPos3sMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3sMESA (GLshort x, GLshort y, GLshort z);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y,GLshort z)
glWindowPos3sv	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3sv (const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWindowPos3svARB	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3svARB (const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWindowPos3svMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos3svMESA (const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWindowPos4dMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4dMESA (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
glWindowPos4dvMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4dvMESA (const GLdouble *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLdouble * v)
glWindowPos4fMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4fMESA (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
glWindowPos4fvMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4fvMESA (const GLfloat *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLfloat * v)
glWindowPos4iMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4iMESA (GLint x, GLint y, GLint z, GLint w);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLint x,GLint y,GLint z,GLint w)
glWindowPos4ivMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4ivMESA (const GLint *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLint * v)
glWindowPos4sMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4sMESA (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLshort x,GLshort y,GLshort z,GLshort w)
glWindowPos4svMESA	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWindowPos4svMESA (const GLshort *v);$/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(const GLshort * v)
glWriteMaskEXT	SDL_opengl_glext.h	/^GLAPI void APIENTRY glWriteMaskEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ/;"	kind:p	typeref:typename:GLAPI void APIENTRY	signature:(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
gl_accelerated	SDL_test_common.h	/^    int gl_accelerated;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_accum_alpha_size	SDL_test_common.h	/^    int gl_accum_alpha_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_accum_blue_size	SDL_test_common.h	/^    int gl_accum_blue_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_accum_green_size	SDL_test_common.h	/^    int gl_accum_green_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_accum_red_size	SDL_test_common.h	/^    int gl_accum_red_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_alpha_size	SDL_test_common.h	/^    int gl_alpha_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_blue_size	SDL_test_common.h	/^    int gl_blue_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_buffer_size	SDL_test_common.h	/^    int gl_buffer_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_debug	SDL_test_common.h	/^    int gl_debug;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_depth_size	SDL_test_common.h	/^    int gl_depth_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_double_buffer	SDL_test_common.h	/^    int gl_double_buffer;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_green_size	SDL_test_common.h	/^    int gl_green_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_major_version	SDL_test_common.h	/^    int gl_major_version;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_minor_version	SDL_test_common.h	/^    int gl_minor_version;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_multisamplebuffers	SDL_test_common.h	/^    int gl_multisamplebuffers;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_multisamplesamples	SDL_test_common.h	/^    int gl_multisamplesamples;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_profile_mask	SDL_test_common.h	/^    int gl_profile_mask;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_red_size	SDL_test_common.h	/^    int gl_red_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_retained_backing	SDL_test_common.h	/^    int gl_retained_backing;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_stencil_size	SDL_test_common.h	/^    int gl_stencil_size;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
gl_stereo	SDL_test_common.h	/^    int gl_stereo;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
h	SDL_rect.h	/^    int w, h;$/;"	kind:m	struct:SDL_Rect	typeref:typename:int	access:public
h	SDL_surface.h	/^    int w, h;                   \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:int	access:public
h	SDL_video.h	/^    int h;                      \/**< height, in screen coordinates *\/$/;"	kind:m	struct:__anonf43722b40108	typeref:typename:int	access:public
hat	SDL_events.h	/^    Uint8 hat;          \/**< The joystick hat index *\/$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
hat	SDL_gamecontroller.h	/^            int hat;$/;"	kind:m	struct:SDL_GameControllerButtonBind::__anon3012f99b020a::__anon3012f99b0308	typeref:typename:int	access:public
hat	SDL_gamecontroller.h	/^        } hat;$/;"	kind:m	union:SDL_GameControllerButtonBind::__anon3012f99b020a	typeref:struct:SDL_GameControllerButtonBind::__anon3012f99b020a::__anon3012f99b0308	access:public
hat_mask	SDL_gamecontroller.h	/^            int hat_mask;$/;"	kind:m	struct:SDL_GameControllerButtonBind::__anon3012f99b020a::__anon3012f99b0308	typeref:typename:int	access:public
hdc	SDL_syswm.h	/^            HDC hdc;                    \/**< The window device context *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600a08	typeref:typename:HDC	access:public
height	SDL_test_images.h	/^  int height;$/;"	kind:m	struct:SDLTest_SurfaceImage_s	typeref:typename:int	access:public
here	SDL_rwops.h	/^            Uint8 *here;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380408	typeref:typename:Uint8 *	access:public
hi	SDL_endian.h	/^    Uint32 hi, lo;$/;"	kind:l	function:SDL_Swap64	typeref:typename:Uint32	file:
hidden	SDL_rwops.h	/^    } hidden;$/;"	kind:m	struct:SDL_RWops	typeref:union:SDL_RWops::__anone1c38f38010a	access:public
hinstance	SDL_syswm.h	/^            HINSTANCE hinstance;        \/**< The instance handle *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600a08	typeref:typename:HINSTANCE	access:public
hwnd	SDL_syswm.h	/^            HWND hwnd;                  \/**< The window for the message *\/$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308	typeref:typename:HWND	access:public
i	SDL_test_md5.h	/^    MD5UINT4  i[2];     \/* number of _bits_ handled mod 2^64 *\/$/;"	kind:m	struct:__anon0f7cec620108	typeref:typename:MD5UINT4[2]	access:public
iHeight	SDL_egl.h	/^    EGLint iHeight;$/;"	kind:m	struct:EGLClientPixmapHI	typeref:typename:EGLint	access:public
iStride	SDL_egl.h	/^    EGLint iStride;$/;"	kind:m	struct:EGLClientPixmapHI	typeref:typename:EGLint	access:public
iWidth	SDL_egl.h	/^    EGLint iWidth;$/;"	kind:m	struct:EGLClientPixmapHI	typeref:typename:EGLint	access:public
id	SDL_touch.h	/^    SDL_FingerID id;$/;"	kind:m	struct:SDL_Finger	typeref:typename:SDL_FingerID	access:public
in	SDL_test_md5.h	/^    unsigned char in[64];   \/* input buffer *\/$/;"	kind:m	struct:__anon0f7cec620108	typeref:typename:unsigned char[64]	access:public
info	SDL_syswm.h	/^    } info;$/;"	kind:m	struct:SDL_SysWMinfo	typeref:union:SDL_SysWMinfo::__anon33b43c60090a	access:public
inputStreamRef	SDL_rwops.h	/^            void *inputStreamRef;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:void *	access:public
int16_t	SDL_config.h	/^typedef signed __int16 int16_t;$/;"	kind:t	typeref:typename:signed __int16
int16_t	SDL_config.h	/^typedef signed short int16_t;$/;"	kind:t	typeref:typename:signed short
int32_t	SDL_config.h	/^typedef signed __int32 int32_t;$/;"	kind:t	typeref:typename:signed __int32
int32_t	SDL_config.h	/^typedef signed int int32_t;$/;"	kind:t	typeref:typename:signed int
int32_t	SDL_opengl_glext.h	/^typedef __int32 int32_t;$/;"	kind:t	typeref:typename:__int32
int32_t	SDL_opengl_glext.h	/^typedef long int int32_t;$/;"	kind:t	typeref:typename:long int
int64_t	SDL_config.h	/^typedef signed __int64 int64_t;$/;"	kind:t	typeref:typename:signed __int64
int64_t	SDL_config.h	/^typedef signed long long int64_t;$/;"	kind:t	typeref:typename:signed long long
int64_t	SDL_opengl_glext.h	/^typedef __int64 int64_t;$/;"	kind:t	typeref:typename:__int64
int64_t	SDL_opengl_glext.h	/^typedef long int int64_t;$/;"	kind:t	typeref:typename:long int
int64_t	SDL_opengl_glext.h	/^typedef long long int int64_t;$/;"	kind:t	typeref:typename:long long int
int8_t	SDL_config.h	/^typedef signed __int8 int8_t;$/;"	kind:t	typeref:typename:signed __int8
int8_t	SDL_config.h	/^typedef signed char int8_t;$/;"	kind:t	typeref:typename:signed char
interval	SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
interval	SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
interval	SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
interval	SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
interval	SDL_haptic.h	/^    Uint16 interval;    \/**< How soon it can be triggered again after button. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
iscapture	SDL_events.h	/^    Uint8 iscapture;    \/**< zero if an output device, non-zero if a capture device. *\/$/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
jaxis	SDL_events.h	/^    SDL_JoyAxisEvent jaxis;         \/**< Joystick axis event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_JoyAxisEvent	access:public
jball	SDL_events.h	/^    SDL_JoyBallEvent jball;         \/**< Joystick ball event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_JoyBallEvent	access:public
jbutton	SDL_events.h	/^    SDL_JoyButtonEvent jbutton;     \/**< Joystick button event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_JoyButtonEvent	access:public
jdevice	SDL_events.h	/^    SDL_JoyDeviceEvent jdevice;     \/**< Joystick device change event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_JoyDeviceEvent	access:public
jhat	SDL_events.h	/^    SDL_JoyHatEvent jhat;           \/**< Joystick hat event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_JoyHatEvent	access:public
key	SDL_events.h	/^    SDL_KeyboardEvent key;          \/**< Keyboard event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_KeyboardEvent	access:public
keysym	SDL_events.h	/^    SDL_Keysym keysym;  \/**< The key that was pressed or released *\/$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:SDL_Keysym	access:public
khronos_boolean_enum_t	SDL_egl.h	/^} khronos_boolean_enum_t;$/;"	kind:t	typeref:enum:__anon3733ce750103
khronos_boolean_enum_t	SDL_opengles2_khrplatform.h	/^} khronos_boolean_enum_t;$/;"	kind:t	typeref:enum:__anon5a19c0550103
khronos_float_t	SDL_egl.h	/^typedef          float         khronos_float_t;$/;"	kind:t	typeref:typename:float
khronos_float_t	SDL_opengles2_khrplatform.h	/^typedef          float         khronos_float_t;$/;"	kind:t	typeref:typename:float
khronos_int16_t	SDL_egl.h	/^typedef signed   short int     khronos_int16_t;$/;"	kind:t	typeref:typename:signed short int
khronos_int16_t	SDL_opengles2_khrplatform.h	/^typedef signed   short int     khronos_int16_t;$/;"	kind:t	typeref:typename:signed short int
khronos_int32_t	SDL_egl.h	/^typedef __int32                 khronos_int32_t;$/;"	kind:t	typeref:typename:__int32
khronos_int32_t	SDL_egl.h	/^typedef int                     khronos_int32_t;$/;"	kind:t	typeref:typename:int
khronos_int32_t	SDL_egl.h	/^typedef int32_t                 khronos_int32_t;$/;"	kind:t	typeref:typename:int32_t
khronos_int32_t	SDL_opengles2_khrplatform.h	/^typedef __int32                 khronos_int32_t;$/;"	kind:t	typeref:typename:__int32
khronos_int32_t	SDL_opengles2_khrplatform.h	/^typedef int                     khronos_int32_t;$/;"	kind:t	typeref:typename:int
khronos_int32_t	SDL_opengles2_khrplatform.h	/^typedef int32_t                 khronos_int32_t;$/;"	kind:t	typeref:typename:int32_t
khronos_int64_t	SDL_egl.h	/^typedef __int64                 khronos_int64_t;$/;"	kind:t	typeref:typename:__int64
khronos_int64_t	SDL_egl.h	/^typedef int64_t                 khronos_int64_t;$/;"	kind:t	typeref:typename:int64_t
khronos_int64_t	SDL_egl.h	/^typedef long int                khronos_int64_t;$/;"	kind:t	typeref:typename:long int
khronos_int64_t	SDL_egl.h	/^typedef long long int           khronos_int64_t;$/;"	kind:t	typeref:typename:long long int
khronos_int64_t	SDL_opengles2_khrplatform.h	/^typedef __int64                 khronos_int64_t;$/;"	kind:t	typeref:typename:__int64
khronos_int64_t	SDL_opengles2_khrplatform.h	/^typedef int64_t                 khronos_int64_t;$/;"	kind:t	typeref:typename:int64_t
khronos_int64_t	SDL_opengles2_khrplatform.h	/^typedef long int                khronos_int64_t;$/;"	kind:t	typeref:typename:long int
khronos_int64_t	SDL_opengles2_khrplatform.h	/^typedef long long int           khronos_int64_t;$/;"	kind:t	typeref:typename:long long int
khronos_int8_t	SDL_egl.h	/^typedef signed   char          khronos_int8_t;$/;"	kind:t	typeref:typename:signed char
khronos_int8_t	SDL_opengles2_khrplatform.h	/^typedef signed   char          khronos_int8_t;$/;"	kind:t	typeref:typename:signed char
khronos_intptr_t	SDL_egl.h	/^typedef signed   long  int     khronos_intptr_t;$/;"	kind:t	typeref:typename:signed long int
khronos_intptr_t	SDL_egl.h	/^typedef signed   long long int khronos_intptr_t;$/;"	kind:t	typeref:typename:signed long long int
khronos_intptr_t	SDL_opengles2_khrplatform.h	/^typedef signed   long  int     khronos_intptr_t;$/;"	kind:t	typeref:typename:signed long int
khronos_intptr_t	SDL_opengles2_khrplatform.h	/^typedef signed   long long int khronos_intptr_t;$/;"	kind:t	typeref:typename:signed long long int
khronos_ssize_t	SDL_egl.h	/^typedef signed   long  int     khronos_ssize_t;$/;"	kind:t	typeref:typename:signed long int
khronos_ssize_t	SDL_egl.h	/^typedef signed   long long int khronos_ssize_t;$/;"	kind:t	typeref:typename:signed long long int
khronos_ssize_t	SDL_opengles2_khrplatform.h	/^typedef signed   long  int     khronos_ssize_t;$/;"	kind:t	typeref:typename:signed long int
khronos_ssize_t	SDL_opengles2_khrplatform.h	/^typedef signed   long long int khronos_ssize_t;$/;"	kind:t	typeref:typename:signed long long int
khronos_stime_nanoseconds_t	SDL_egl.h	/^typedef khronos_int64_t        khronos_stime_nanoseconds_t;$/;"	kind:t	typeref:typename:khronos_int64_t
khronos_stime_nanoseconds_t	SDL_opengles2_khrplatform.h	/^typedef khronos_int64_t        khronos_stime_nanoseconds_t;$/;"	kind:t	typeref:typename:khronos_int64_t
khronos_uint16_t	SDL_egl.h	/^typedef unsigned short int     khronos_uint16_t;$/;"	kind:t	typeref:typename:unsigned short int
khronos_uint16_t	SDL_opengles2_khrplatform.h	/^typedef unsigned short int     khronos_uint16_t;$/;"	kind:t	typeref:typename:unsigned short int
khronos_uint32_t	SDL_egl.h	/^typedef uint32_t                khronos_uint32_t;$/;"	kind:t	typeref:typename:uint32_t
khronos_uint32_t	SDL_egl.h	/^typedef unsigned __int32        khronos_uint32_t;$/;"	kind:t	typeref:typename:unsigned __int32
khronos_uint32_t	SDL_egl.h	/^typedef unsigned int            khronos_uint32_t;$/;"	kind:t	typeref:typename:unsigned int
khronos_uint32_t	SDL_opengles2_khrplatform.h	/^typedef uint32_t                khronos_uint32_t;$/;"	kind:t	typeref:typename:uint32_t
khronos_uint32_t	SDL_opengles2_khrplatform.h	/^typedef unsigned __int32        khronos_uint32_t;$/;"	kind:t	typeref:typename:unsigned __int32
khronos_uint32_t	SDL_opengles2_khrplatform.h	/^typedef unsigned int            khronos_uint32_t;$/;"	kind:t	typeref:typename:unsigned int
khronos_uint64_t	SDL_egl.h	/^typedef uint64_t                khronos_uint64_t;$/;"	kind:t	typeref:typename:uint64_t
khronos_uint64_t	SDL_egl.h	/^typedef unsigned __int64        khronos_uint64_t;$/;"	kind:t	typeref:typename:unsigned __int64
khronos_uint64_t	SDL_egl.h	/^typedef unsigned long int       khronos_uint64_t;$/;"	kind:t	typeref:typename:unsigned long int
khronos_uint64_t	SDL_egl.h	/^typedef unsigned long long int  khronos_uint64_t;$/;"	kind:t	typeref:typename:unsigned long long int
khronos_uint64_t	SDL_opengles2_khrplatform.h	/^typedef uint64_t                khronos_uint64_t;$/;"	kind:t	typeref:typename:uint64_t
khronos_uint64_t	SDL_opengles2_khrplatform.h	/^typedef unsigned __int64        khronos_uint64_t;$/;"	kind:t	typeref:typename:unsigned __int64
khronos_uint64_t	SDL_opengles2_khrplatform.h	/^typedef unsigned long int       khronos_uint64_t;$/;"	kind:t	typeref:typename:unsigned long int
khronos_uint64_t	SDL_opengles2_khrplatform.h	/^typedef unsigned long long int  khronos_uint64_t;$/;"	kind:t	typeref:typename:unsigned long long int
khronos_uint8_t	SDL_egl.h	/^typedef unsigned char          khronos_uint8_t;$/;"	kind:t	typeref:typename:unsigned char
khronos_uint8_t	SDL_opengles2_khrplatform.h	/^typedef unsigned char          khronos_uint8_t;$/;"	kind:t	typeref:typename:unsigned char
khronos_uintptr_t	SDL_egl.h	/^typedef unsigned long  int     khronos_uintptr_t;$/;"	kind:t	typeref:typename:unsigned long int
khronos_uintptr_t	SDL_egl.h	/^typedef unsigned long long int khronos_uintptr_t;$/;"	kind:t	typeref:typename:unsigned long long int
khronos_uintptr_t	SDL_opengles2_khrplatform.h	/^typedef unsigned long  int     khronos_uintptr_t;$/;"	kind:t	typeref:typename:unsigned long int
khronos_uintptr_t	SDL_opengles2_khrplatform.h	/^typedef unsigned long long int khronos_uintptr_t;$/;"	kind:t	typeref:typename:unsigned long long int
khronos_usize_t	SDL_egl.h	/^typedef unsigned long  int     khronos_usize_t;$/;"	kind:t	typeref:typename:unsigned long int
khronos_usize_t	SDL_egl.h	/^typedef unsigned long long int khronos_usize_t;$/;"	kind:t	typeref:typename:unsigned long long int
khronos_usize_t	SDL_opengles2_khrplatform.h	/^typedef unsigned long  int     khronos_usize_t;$/;"	kind:t	typeref:typename:unsigned long int
khronos_usize_t	SDL_opengles2_khrplatform.h	/^typedef unsigned long long int khronos_usize_t;$/;"	kind:t	typeref:typename:unsigned long long int
khronos_utime_nanoseconds_t	SDL_egl.h	/^typedef khronos_uint64_t       khronos_utime_nanoseconds_t;$/;"	kind:t	typeref:typename:khronos_uint64_t
khronos_utime_nanoseconds_t	SDL_opengles2_khrplatform.h	/^typedef khronos_uint64_t       khronos_utime_nanoseconds_t;$/;"	kind:t	typeref:typename:khronos_uint64_t
lParam	SDL_syswm.h	/^            LPARAM lParam;              \/**< LONG message parameter *\/$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308	typeref:typename:LPARAM	access:public
large_magnitude	SDL_haptic.h	/^    Uint16 large_magnitude; \/**< Control of the large controller motor. *\/$/;"	kind:m	struct:SDL_HapticLeftRight	typeref:typename:Uint16	access:public
left_coeff	SDL_haptic.h	/^    Sint16 left_coeff[3];   \/**< How fast to increase the force towards the negative side. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Sint16[3]	access:public
left_sat	SDL_haptic.h	/^    Uint16 left_sat[3];     \/**< Level when joystick is to the negative side; max 0xFFFF. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16[3]	access:public
leftright	SDL_haptic.h	/^    SDL_HapticLeftRight leftright;  \/**< Left\/Right effect. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:SDL_HapticLeftRight	access:public
len	SDL_audio.h	/^    int len;                    \/**< Length of original audio buffer *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:int	access:public
len_cvt	SDL_audio.h	/^    int len_cvt;                \/**< Length of converted audio buffer *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:int	access:public
len_mult	SDL_audio.h	/^    int len_mult;               \/**< buffer must be len*len_mult big *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:int	access:public
len_ratio	SDL_audio.h	/^    double len_ratio;           \/**< Given len, final size is len*len_ratio *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:double	access:public
length	SDL_events.h	/^    Sint32 length;                              \/**< The length of selected editing text *\/$/;"	kind:m	struct:SDL_TextEditingEvent	typeref:typename:Sint32	access:public
length	SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect in milliseconds. *\/$/;"	kind:m	struct:SDL_HapticLeftRight	typeref:typename:Uint32	access:public
length	SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint32	access:public
length	SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint32	access:public
length	SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint32	access:public
length	SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint32	access:public
length	SDL_haptic.h	/^    Uint32 length;      \/**< Duration of the effect. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint32	access:public
level	SDL_haptic.h	/^    Sint16 level;           \/**< Strength of the constant effect. *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Sint16	access:public
linenum	SDL_assert.h	/^    int linenum;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:int	access:public
lo	SDL_endian.h	/^    Uint32 hi, lo;$/;"	kind:l	function:SDL_Swap64	typeref:typename:Uint32	file:
lock_data	SDL_surface.h	/^    void *lock_data;            \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:void *	access:public
locked	SDL_surface.h	/^    int locked;                 \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:int	access:public
logical_h	SDL_test_common.h	/^    int logical_h;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
logical_w	SDL_test_common.h	/^    int logical_w;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
magnitude	SDL_haptic.h	/^    Sint16 magnitude;   \/**< Peak value; if negative, equivalent to 180 degrees extra phase shi/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Sint16	access:public
main	SDL_main.h	/^#define main /;"	kind:d
major	SDL_version.h	/^    Uint8 major;        \/**< major version *\/$/;"	kind:m	struct:SDL_version	typeref:typename:Uint8	access:public
map	SDL_surface.h	/^    struct SDL_BlitMap *map;    \/**< Private *\/$/;"	kind:m	struct:SDL_Surface	typeref:struct:SDL_BlitMap *	access:public
max_texture_height	SDL_render.h	/^    int max_texture_height;     \/**< The maximum texture height *\/$/;"	kind:m	struct:SDL_RendererInfo	typeref:typename:int	access:public
max_texture_width	SDL_render.h	/^    int max_texture_width;      \/**< The maximum texture width *\/$/;"	kind:m	struct:SDL_RendererInfo	typeref:typename:int	access:public
mem	SDL_rwops.h	/^        } mem;$/;"	kind:m	union:SDL_RWops::__anone1c38f38010a	typeref:struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380408	access:public
message	SDL_messagebox.h	/^    const char *message;                \/**< UTF-8 message text *\/$/;"	kind:m	struct:__anon279331cb0708	typeref:typename:const char *	access:public
mgesture	SDL_events.h	/^    SDL_MultiGestureEvent mgesture; \/**< Gesture event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_MultiGestureEvent	access:public
minor	SDL_version.h	/^    Uint8 minor;        \/**< minor version *\/$/;"	kind:m	struct:SDL_version	typeref:typename:Uint8	access:public
mir	SDL_syswm.h	/^        } mir;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601108	access:public
mod	SDL_keyboard.h	/^    Uint16 mod;                 \/**< current key modifiers *\/$/;"	kind:m	struct:SDL_Keysym	typeref:typename:Uint16	access:public
mode	SDL_shape.h	/^    WindowShapeMode mode;$/;"	kind:m	struct:SDL_WindowShapeMode	typeref:typename:WindowShapeMode	access:public
motion	SDL_events.h	/^    SDL_MouseMotionEvent motion;    \/**< Mouse motion event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_MouseMotionEvent	access:public
msg	SDL_events.h	/^    SDL_SysWMmsg *msg;  \/**< driver dependent data, defined in SDL_syswm.h *\/$/;"	kind:m	struct:SDL_SysWMEvent	typeref:typename:SDL_SysWMmsg *	access:public
msg	SDL_syswm.h	/^            UINT msg;                   \/**< The type of message *\/$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308	typeref:typename:UINT	access:public
msg	SDL_syswm.h	/^    } msg;$/;"	kind:m	struct:SDL_SysWMmsg	typeref:union:SDL_SysWMmsg::__anon33b43c60020a	access:public
name	SDL_render.h	/^    const char *name;           \/**< The name of the renderer *\/$/;"	kind:m	struct:SDL_RendererInfo	typeref:typename:const char *	access:public
name	SDL_test_harness.h	/^    char *name;$/;"	kind:m	struct:SDLTest_TestCaseReference	typeref:typename:char *	access:public
name	SDL_test_harness.h	/^    char *name;$/;"	kind:m	struct:SDLTest_TestSuiteReference	typeref:typename:char *	access:public
ncolors	SDL_pixels.h	/^    int ncolors;$/;"	kind:m	struct:SDL_Palette	typeref:typename:int	access:public
needed	SDL_audio.h	/^    int needed;                 \/**< Set to 1 if conversion possible *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:int	access:public
next	SDL_assert.h	/^    const struct SDL_AssertData *next;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:const struct SDL_AssertData *	access:public
next	SDL_pixels.h	/^    struct SDL_PixelFormat *next;$/;"	kind:m	struct:SDL_PixelFormat	typeref:struct:SDL_PixelFormat *	access:public
numFingers	SDL_events.h	/^    Uint16 numFingers;$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:Uint16	access:public
numFingers	SDL_events.h	/^    Uint32 numFingers;$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:Uint32	access:public
num_texture_formats	SDL_render.h	/^    Uint32 num_texture_formats; \/**< The number of available texture formats *\/$/;"	kind:m	struct:SDL_RendererInfo	typeref:typename:Uint32	access:public
num_windows	SDL_test_common.h	/^    int num_windows;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
numbuttons	SDL_messagebox.h	/^    int numbuttons;$/;"	kind:m	struct:__anon279331cb0708	typeref:typename:int	access:public
offset	SDL_haptic.h	/^    Sint16 offset;      \/**< Mean value of the wave. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Sint16	access:public
offset	SDL_rwops.h	/^            long offset;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:long	access:public
pData	SDL_egl.h	/^    void  *pData;$/;"	kind:m	struct:EGLClientPixmapHI	typeref:typename:void *	access:public
padding	SDL_audio.h	/^    Uint16 padding;             \/**< Necessary for some compile environments *\/$/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
padding	SDL_events.h	/^    Uint16 padding;$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:Uint16	access:public
padding	SDL_events.h	/^    Uint8 padding[56];$/;"	kind:m	union:SDL_Event	typeref:typename:Uint8[56]	access:public
padding	SDL_pixels.h	/^    Uint8 padding[2];$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:Uint8[2]	access:public
padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
padding1	SDL_events.h	/^    Uint8 padding1;$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
padding2	SDL_events.h	/^    Uint8 padding2;$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint8	access:public
padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint8	access:public
padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint8	access:public
padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint8	access:public
padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Uint8	access:public
padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
padding3	SDL_events.h	/^    Uint8 padding3;$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint8	access:public
padding4	SDL_events.h	/^    Uint16 padding4;$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint16	access:public
padding4	SDL_events.h	/^    Uint16 padding4;$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint16	access:public
palette	SDL_pixels.h	/^    SDL_Palette *palette;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:SDL_Palette *	access:public
parameters	SDL_shape.h	/^    SDL_WindowShapeParams parameters;$/;"	kind:m	struct:SDL_WindowShapeMode	typeref:typename:SDL_WindowShapeParams	access:public
patch	SDL_version.h	/^    Uint8 patch;        \/**< update version *\/$/;"	kind:m	struct:SDL_version	typeref:typename:Uint8	access:public
period	SDL_haptic.h	/^    Uint16 period;          \/**< Sample periods. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
period	SDL_haptic.h	/^    Uint16 period;      \/**< Period of the wave. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
periodic	SDL_haptic.h	/^    SDL_HapticPeriodic periodic;    \/**< Periodic effect. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:SDL_HapticPeriodic	access:public
pfnSDL_CurrentBeginThread	SDL_thread.h	/^typedef int (*pfnSDL_CurrentBeginThread)(void (*func)(void *), void *, unsigned, void * \/*arg*\//;"	kind:t	typeref:typename:int (*)(void (* func)(void *),void *,unsigned,void *)
pfnSDL_CurrentBeginThread	SDL_thread.h	/^typedef uintptr_t(__cdecl * pfnSDL_CurrentBeginThread)$/;"	kind:t	typeref:typename:uintptr_t (__cdecl *)(void *,unsigned,unsigned (__stdcall * func)(void *),void *,unsigned,unsigned *)
pfnSDL_CurrentEndThread	SDL_thread.h	/^typedef void (*pfnSDL_CurrentEndThread)(void);$/;"	kind:t	typeref:typename:void (*)(void)
pfnSDL_CurrentEndThread	SDL_thread.h	/^typedef void (__cdecl * pfnSDL_CurrentEndThread) (unsigned code);$/;"	kind:t	typeref:typename:void (__cdecl *)(unsigned code)
phase	SDL_haptic.h	/^    Uint16 phase;       \/**< Positive phase shift given by hundredth of a degree. *\/$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
pitch	SDL_surface.h	/^    int pitch;                  \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:int	access:public
pixel_data	SDL_test_images.h	/^  const char *pixel_data;$/;"	kind:m	struct:SDLTest_SurfaceImage_s	typeref:typename:const char *	access:public
pixels	SDL_surface.h	/^    void *pixels;               \/**< Read-write *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:void *	access:public
position	SDL_rwops.h	/^            long position;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:long	access:public
pressure	SDL_events.h	/^    float pressure;     \/**< Normalized in the range 0...1 *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
pressure	SDL_touch.h	/^    float pressure;$/;"	kind:m	struct:SDL_Finger	typeref:typename:float	access:public
quit	SDL_events.h	/^    SDL_QuitEvent quit;             \/**< Quit request event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_QuitEvent	access:public
r	SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	kind:m	struct:__anon279331cb0408	typeref:typename:Uint8	access:public
r	SDL_pixels.h	/^    Uint8 r;$/;"	kind:m	struct:SDL_Color	typeref:typename:Uint8	access:public
ramp	SDL_haptic.h	/^    SDL_HapticRamp ramp;            \/**< Ramp effect. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:SDL_HapticRamp	access:public
rate_incr	SDL_audio.h	/^    double rate_incr;           \/**< Rate conversion increment *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:double	access:public
readMethod	SDL_rwops.h	/^            void *readMethod;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:void *	access:public
readableByteChannelRef	SDL_rwops.h	/^            void *readableByteChannelRef;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:void *	access:public
refcount	SDL_pixels.h	/^    int refcount;$/;"	kind:m	struct:SDL_Palette	typeref:typename:int	access:public
refcount	SDL_pixels.h	/^    int refcount;$/;"	kind:m	struct:SDL_PixelFormat	typeref:typename:int	access:public
refcount	SDL_surface.h	/^    int refcount;               \/**< Read-mostly *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:int	access:public
refresh_rate	SDL_test_common.h	/^    int refresh_rate;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
refresh_rate	SDL_video.h	/^    int refresh_rate;           \/**< refresh rate (or zero for unspecified) *\/$/;"	kind:m	struct:__anonf43722b40108	typeref:typename:int	access:public
render_flags	SDL_test_common.h	/^    Uint32 render_flags;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:Uint32	access:public
renderdriver	SDL_test_common.h	/^    const char *renderdriver;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:const char *	access:public
renderers	SDL_test_common.h	/^    SDL_Renderer **renderers;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:SDL_Renderer **	access:public
repeat	SDL_events.h	/^    Uint8 repeat;       \/**< Non-zero if this is a key repeat *\/$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
resolveFramebuffer	SDL_syswm.h	/^            GLuint resolveFramebuffer; \/**< The Framebuffer Object which holds the resolve colo/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08	typeref:typename:GLuint	access:public
result	SDL_endian.h	/^    Uint32 result;$/;"	kind:l	function:SDL_Swap32	typeref:typename:Uint32	file:
right_coeff	SDL_haptic.h	/^    Sint16 right_coeff[3];  \/**< How fast to increase the force towards the positive side. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Sint16[3]	access:public
right_sat	SDL_haptic.h	/^    Uint16 right_sat[3];    \/**< Level when joystick is to the positive side; max 0xFFFF. *\/$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16[3]	access:public
s	SDL_endian.h	/^        } s;$/;"	kind:m	union:SDL_Swap64::__anon4be143ec010a	typeref:struct:SDL_Swap64::__anon4be143ec010a::__anon4be143ec0208	access:public
samples	SDL_audio.h	/^    Uint16 samples;             \/**< Audio buffer size in sample FRAMES (total samples divided /;"	kind:m	struct:SDL_AudioSpec	typeref:typename:Uint16	access:public
samples	SDL_haptic.h	/^    Uint16 samples;         \/**< Amount of samples. *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
scale	SDL_test_common.h	/^    float scale;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:float	access:public
scancode	SDL_keyboard.h	/^    SDL_Scancode scancode;      \/**< SDL physical key code - see ::SDL_Scancode for details *\/$/;"	kind:m	struct:SDL_Keysym	typeref:typename:SDL_Scancode	access:public
sensor	SDL_events.h	/^    SDL_SensorEvent sensor;         \/**< Sensor event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_SensorEvent	access:public
shell_surface	SDL_syswm.h	/^            struct wl_shell_surface *shell_surface; \/**< Wayland shell_surface (window manager /;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601008	typeref:struct:wl_shell_surface *	access:public
silence	SDL_audio.h	/^    Uint8 silence;              \/**< Audio buffer silence value (calculated) *\/$/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:Uint8	access:public
size	SDL_audio.h	/^    Uint32 size;                \/**< Audio buffer size in bytes (calculated) *\/$/;"	kind:m	struct:SDL_AudioSpec	typeref:typename:Uint32	access:public
size	SDL_rwops.h	/^            long size;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380208	typeref:typename:long	access:public
size_t	SDL_config.h	/^typedef unsigned int size_t;$/;"	kind:t	typeref:typename:unsigned int
size_t	SDL_rwops.h	/^    size_t (SDLCALL * read) (struct SDL_RWops * context, void *ptr,$/;"	kind:p	struct:SDL_RWops	access:public	signature:(SDLCALL * read)
size_t	SDL_rwops.h	/^    size_t (SDLCALL * write) (struct SDL_RWops * context, const void *ptr,$/;"	kind:p	struct:SDL_RWops	access:public	signature:(SDLCALL * write)
skip_renderer	SDL_test_common.h	/^    SDL_bool skip_renderer;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:SDL_bool	access:public
small_magnitude	SDL_haptic.h	/^    Uint16 small_magnitude; \/**< Control of the small controller motor. *\/$/;"	kind:m	struct:SDL_HapticLeftRight	typeref:typename:Uint16	access:public
src_format	SDL_audio.h	/^    SDL_AudioFormat src_format; \/**< Source audio format *\/$/;"	kind:m	struct:SDL_AudioCVT	typeref:typename:SDL_AudioFormat	access:public
start	SDL_events.h	/^    Sint32 start;                               \/**< The start cursor of selected editing text /;"	kind:m	struct:SDL_TextEditingEvent	typeref:typename:Sint32	access:public
start	SDL_haptic.h	/^    Sint16 start;           \/**< Beginning strength level. *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Sint16	access:public
state	SDL_events.h	/^    Uint32 state;       \/**< The current button state *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
state	SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint8	access:public
state	SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:Uint8	access:public
state	SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint8	access:public
state	SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint8	access:public
stdio	SDL_rwops.h	/^        } stdio;$/;"	kind:m	union:SDL_RWops::__anone1c38f38010a	typeref:struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380308	access:public
stop	SDL_rwops.h	/^            Uint8 *stop;$/;"	kind:m	struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380408	typeref:typename:Uint8 *	access:public
subsystem	SDL_syswm.h	/^    SDL_SYSWM_TYPE subsystem;$/;"	kind:m	struct:SDL_SysWMinfo	typeref:typename:SDL_SYSWM_TYPE	access:public
subsystem	SDL_syswm.h	/^    SDL_SYSWM_TYPE subsystem;$/;"	kind:m	struct:SDL_SysWMmsg	typeref:typename:SDL_SYSWM_TYPE	access:public
surface	SDL_syswm.h	/^            EGLSurface surface;$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601208	typeref:typename:EGLSurface	access:public
surface	SDL_syswm.h	/^            IDirectFBSurface *surface;  \/**< The directfb client surface *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600d08	typeref:typename:IDirectFBSurface *	access:public
surface	SDL_syswm.h	/^            struct MirSurface *surface;  \/**< Mir surface *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601108	typeref:struct:MirSurface *	access:public
surface	SDL_syswm.h	/^            struct wl_surface *surface;            \/**< Wayland surface *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601008	typeref:struct:wl_surface *	access:public
swapper	SDL_endian.h	/^    } swapper;$/;"	kind:l	function:SDL_SwapFloat	typeref:union:SDL_SwapFloat::__anon4be143ec030a	file:
sym	SDL_keyboard.h	/^    SDL_Keycode sym;            \/**< SDL virtual key code - see ::SDL_Keycode for details *\/$/;"	kind:m	struct:SDL_Keysym	typeref:typename:SDL_Keycode	access:public
syswm	SDL_events.h	/^    SDL_SysWMEvent syswm;           \/**< System dependent window event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_SysWMEvent	access:public
targets	SDL_test_common.h	/^    SDL_Texture **targets;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:SDL_Texture **	access:public
testCase	SDL_test_harness.h	/^    SDLTest_TestCaseFp testCase;$/;"	kind:m	struct:SDLTest_TestCaseReference	typeref:typename:SDLTest_TestCaseFp	access:public
testCases	SDL_test_harness.h	/^    const SDLTest_TestCaseReference **testCases;$/;"	kind:m	struct:SDLTest_TestSuiteReference	typeref:typename:const SDLTest_TestCaseReference **	access:public
testSetUp	SDL_test_harness.h	/^    SDLTest_TestCaseSetUpFp testSetUp;$/;"	kind:m	struct:SDLTest_TestSuiteReference	typeref:typename:SDLTest_TestCaseSetUpFp	access:public
testTearDown	SDL_test_harness.h	/^    SDLTest_TestCaseTearDownFp testTearDown;$/;"	kind:m	struct:SDLTest_TestSuiteReference	typeref:typename:SDLTest_TestCaseTearDownFp	access:public
text	SDL_events.h	/^    SDL_TextInputEvent text;        \/**< Text input event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_TextInputEvent	access:public
text	SDL_events.h	/^    char text[SDL_TEXTEDITINGEVENT_TEXT_SIZE];  \/**< The editing text *\/$/;"	kind:m	struct:SDL_TextEditingEvent	typeref:typename:char[]	access:public
text	SDL_events.h	/^    char text[SDL_TEXTINPUTEVENT_TEXT_SIZE];  \/**< The input text *\/$/;"	kind:m	struct:SDL_TextInputEvent	typeref:typename:char[]	access:public
text	SDL_messagebox.h	/^    const char * text;  \/**< The UTF-8 button text *\/$/;"	kind:m	struct:__anon279331cb0308	typeref:typename:const char *	access:public
texture_formats	SDL_render.h	/^    Uint32 texture_formats[16]; \/**< The available texture formats *\/$/;"	kind:m	struct:SDL_RendererInfo	typeref:typename:Uint32[16]	access:public
tfinger	SDL_events.h	/^    SDL_TouchFingerEvent tfinger;   \/**< Touch finger event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_TouchFingerEvent	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;                           \/**< In milliseconds, populated using SDL_GetTi/;"	kind:m	struct:SDL_TextEditingEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;                         \/**< In milliseconds, populated using SDL_GetTick/;"	kind:m	struct:SDL_TextInputEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_CommonEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_ControllerDeviceEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_DropEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_JoyDeviceEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_OSEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_QuitEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_SensorEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_SysWMEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_UserEvent	typeref:typename:Uint32	access:public
timestamp	SDL_events.h	/^    Uint32 timestamp;   \/**< In milliseconds, populated using SDL_GetTicks() *\/$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint32	access:public
title	SDL_messagebox.h	/^    const char *title;                  \/**< UTF-8 title *\/$/;"	kind:m	struct:__anon279331cb0708	typeref:typename:const char *	access:public
touchId	SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:SDL_TouchID	access:public
touchId	SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:SDL_TouchID	access:public
touchId	SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:SDL_TouchID	access:public
trigger_count	SDL_assert.h	/^    unsigned int trigger_count;$/;"	kind:m	struct:SDL_AssertData	typeref:typename:unsigned int	access:public
type	SDL_events.h	/^    Uint32 type;                                \/**< ::SDL_TEXTEDITING *\/$/;"	kind:m	struct:SDL_TextEditingEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;                              \/**< ::SDL_TEXTINPUT *\/$/;"	kind:m	struct:SDL_TextInputEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;                    \/**< Event type, shared with all events *\/$/;"	kind:m	union:SDL_Event	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_AUDIODEVICEADDED, or ::SDL_AUDIODEVICEREMOVED *\/$/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERAXISMOTION *\/$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP *\/$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERDEVICEADDED, ::SDL_CONTROLLERDEVICEREMOVED, or ::S/;"	kind:m	struct:SDL_ControllerDeviceEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DISPLAYEVENT *\/$/;"	kind:m	struct:SDL_DisplayEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DOLLARGESTURE or ::SDL_DOLLARRECORD *\/$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DROPBEGIN or ::SDL_DROPFILE or ::SDL_DROPTEXT or ::SDL_DROPC/;"	kind:m	struct:SDL_DropEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYAXISMOTION *\/$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYBALLMOTION *\/$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP *\/$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED *\/$/;"	kind:m	struct:SDL_JoyDeviceEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYHATMOTION *\/$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_KEYDOWN or ::SDL_KEYUP *\/$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEMOTION *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEWHEEL *\/$/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MULTIGESTURE *\/$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_QUIT *\/$/;"	kind:m	struct:SDL_OSEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_QUIT *\/$/;"	kind:m	struct:SDL_QuitEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_SENSORUPDATE *\/$/;"	kind:m	struct:SDL_SensorEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_SYSWMEVENT *\/$/;"	kind:m	struct:SDL_SysWMEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_USEREVENT through ::SDL_LASTEVENT-1 *\/$/;"	kind:m	struct:SDL_UserEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;        \/**< ::SDL_WINDOWEVENT *\/$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint32	access:public
type	SDL_events.h	/^    Uint32 type;$/;"	kind:m	struct:SDL_CommonEvent	typeref:typename:Uint32	access:public
type	SDL_haptic.h	/^    Uint16 type;                    \/**< Effect type. *\/$/;"	kind:m	union:SDL_HapticEffect	typeref:typename:Uint16	access:public
type	SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_CONSTANT *\/$/;"	kind:m	struct:SDL_HapticConstant	typeref:typename:Uint16	access:public
type	SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_CUSTOM *\/$/;"	kind:m	struct:SDL_HapticCustom	typeref:typename:Uint16	access:public
type	SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_LEFTRIGHT *\/$/;"	kind:m	struct:SDL_HapticLeftRight	typeref:typename:Uint16	access:public
type	SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_RAMP *\/$/;"	kind:m	struct:SDL_HapticRamp	typeref:typename:Uint16	access:public
type	SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_SPRING, ::SDL_HAPTIC_DAMPER,$/;"	kind:m	struct:SDL_HapticCondition	typeref:typename:Uint16	access:public
type	SDL_haptic.h	/^    Uint16 type;        \/**< ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT,$/;"	kind:m	struct:SDL_HapticPeriodic	typeref:typename:Uint16	access:public
type	SDL_haptic.h	/^    Uint8 type;         \/**< The type of encoding. *\/$/;"	kind:m	struct:SDL_HapticDirection	typeref:typename:Uint8	access:public
type	SDL_rwops.h	/^    Uint32 type;$/;"	kind:m	struct:SDL_RWops	typeref:typename:Uint32	access:public
u	SDL_endian.h	/^        Uint64 u;$/;"	kind:m	union:SDL_Swap64::__anon4be143ec010a	typeref:typename:Uint64	access:public
u0	SDL_stdinc.h	/^    int u0, u1, u2;$/;"	kind:l	function:SDL_memset4	typeref:typename:int	file:
u1	SDL_stdinc.h	/^    int u0, u1, u2;$/;"	kind:l	function:SDL_memset4	typeref:typename:int	file:
u2	SDL_stdinc.h	/^    int u0, u1, u2;$/;"	kind:l	function:SDL_memset4	typeref:typename:int	file:
ui32	SDL_endian.h	/^        Uint32 ui32;$/;"	kind:m	union:SDL_SwapFloat::__anon4be143ec030a	typeref:typename:Uint32	access:public
uikit	SDL_syswm.h	/^        } uikit;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08	access:public
uikit	SDL_syswm.h	/^        } uikit;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600708	access:public
uint16_t	SDL_config.h	/^typedef unsigned __int16 uint16_t;$/;"	kind:t	typeref:typename:unsigned __int16
uint16_t	SDL_config.h	/^typedef unsigned short uint16_t;$/;"	kind:t	typeref:typename:unsigned short
uint32_t	SDL_config.h	/^typedef unsigned __int32 uint32_t;$/;"	kind:t	typeref:typename:unsigned __int32
uint32_t	SDL_config.h	/^typedef unsigned int uint32_t;$/;"	kind:t	typeref:typename:unsigned int
uint64_t	SDL_config.h	/^typedef unsigned __int64 uint64_t;$/;"	kind:t	typeref:typename:unsigned __int64
uint64_t	SDL_config.h	/^typedef unsigned long long uint64_t;$/;"	kind:t	typeref:typename:unsigned long long
uint64_t	SDL_opengl_glext.h	/^typedef unsigned __int64 uint64_t;$/;"	kind:t	typeref:typename:unsigned __int64
uint64_t	SDL_opengl_glext.h	/^typedef unsigned long int uint64_t;$/;"	kind:t	typeref:typename:unsigned long int
uint64_t	SDL_opengl_glext.h	/^typedef unsigned long long int uint64_t;$/;"	kind:t	typeref:typename:unsigned long long int
uint8_t	SDL_config.h	/^typedef unsigned __int8 uint8_t;$/;"	kind:t	typeref:typename:unsigned __int8
uint8_t	SDL_config.h	/^typedef unsigned char uint8_t;$/;"	kind:t	typeref:typename:unsigned char
uintptr_t	SDL_config.h	/^typedef unsigned __int64 uintptr_t;$/;"	kind:t	typeref:typename:unsigned __int64
uintptr_t	SDL_config.h	/^typedef unsigned int uintptr_t;$/;"	kind:t	typeref:typename:unsigned int
unknown	SDL_rwops.h	/^        } unknown;$/;"	kind:m	union:SDL_RWops::__anone1c38f38010a	typeref:struct:SDL_RWops::__anone1c38f38010a::__anone1c38f380508	access:public
unused	SDL_keyboard.h	/^    Uint32 unused;$/;"	kind:m	struct:SDL_Keysym	typeref:typename:Uint32	access:public
user	SDL_events.h	/^    SDL_UserEvent user;             \/**< Custom event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_UserEvent	access:public
userdata	SDL_audio.h	/^    void *userdata;             \/**< Userdata passed to callback (ignored for NULL callbacks). /;"	kind:m	struct:SDL_AudioSpec	typeref:typename:void *	access:public
userdata	SDL_surface.h	/^    void *userdata;             \/**< Read-write *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:void *	access:public
v	SDL_endian.h	/^    } v;$/;"	kind:l	function:SDL_Swap64	typeref:union:SDL_Swap64::__anon4be143ec010a	file:
value	SDL_atomic.h	/^typedef struct { int value; } SDL_atomic_t;$/;"	kind:m	struct:__anon82acb21a0108	typeref:typename:int	access:public
value	SDL_events.h	/^    Sint16 value;       \/**< The axis value (range: -32768 to 32767) *\/$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:Sint16	access:public
value	SDL_events.h	/^    Sint16 value;       \/**< The axis value (range: -32768 to 32767) *\/$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:Sint16	access:public
value	SDL_events.h	/^    Uint8 value;        \/**< The hat position value.$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:Uint8	access:public
value	SDL_gamecontroller.h	/^    } value;$/;"	kind:m	struct:SDL_GameControllerButtonBind	typeref:union:SDL_GameControllerButtonBind::__anon3012f99b020a	access:public
verbose	SDL_test_common.h	/^    Uint32 verbose;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:Uint32	access:public
version	SDL_pixels.h	/^    Uint32 version;$/;"	kind:m	struct:SDL_Palette	typeref:typename:Uint32	access:public
version	SDL_syswm.h	/^    SDL_version version;$/;"	kind:m	struct:SDL_SysWMinfo	typeref:typename:SDL_version	access:public
version	SDL_syswm.h	/^    SDL_version version;$/;"	kind:m	struct:SDL_SysWMmsg	typeref:typename:SDL_version	access:public
videodriver	SDL_test_common.h	/^    const char *videodriver;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:const char *	access:public
vivante	SDL_syswm.h	/^        } vivante;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601308	access:public
vivante	SDL_syswm.h	/^        } vivante;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600808	access:public
w	SDL_rect.h	/^    int w, h;$/;"	kind:m	struct:SDL_Rect	typeref:typename:int	access:public
w	SDL_surface.h	/^    int w, h;                   \/**< Read-only *\/$/;"	kind:m	struct:SDL_Surface	typeref:typename:int	access:public
w	SDL_video.h	/^    int w;                      \/**< width, in screen coordinates *\/$/;"	kind:m	struct:__anonf43722b40108	typeref:typename:int	access:public
wParam	SDL_syswm.h	/^            WPARAM wParam;              \/**< WORD message parameter *\/$/;"	kind:m	struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308	typeref:typename:WPARAM	access:public
wheel	SDL_events.h	/^    SDL_MouseWheelEvent wheel;      \/**< Mouse wheel event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_MouseWheelEvent	access:public
which	SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	kind:m	struct:SDL_ControllerAxisEvent	typeref:typename:SDL_JoystickID	access:public
which	SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	kind:m	struct:SDL_ControllerButtonEvent	typeref:typename:SDL_JoystickID	access:public
which	SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	kind:m	struct:SDL_JoyAxisEvent	typeref:typename:SDL_JoystickID	access:public
which	SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:SDL_JoystickID	access:public
which	SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	kind:m	struct:SDL_JoyButtonEvent	typeref:typename:SDL_JoystickID	access:public
which	SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	kind:m	struct:SDL_JoyHatEvent	typeref:typename:SDL_JoystickID	access:public
which	SDL_events.h	/^    Sint32 which;       \/**< The instance ID of the sensor *\/$/;"	kind:m	struct:SDL_SensorEvent	typeref:typename:Sint32	access:public
which	SDL_events.h	/^    Sint32 which;       \/**< The joystick device index for the ADDED event, instance id for the/;"	kind:m	struct:SDL_ControllerDeviceEvent	typeref:typename:Sint32	access:public
which	SDL_events.h	/^    Sint32 which;       \/**< The joystick device index for the ADDED event, instance id for the/;"	kind:m	struct:SDL_JoyDeviceEvent	typeref:typename:Sint32	access:public
which	SDL_events.h	/^    Uint32 which;       \/**< The audio device index for the ADDED event (valid until next SDL_G/;"	kind:m	struct:SDL_AudioDeviceEvent	typeref:typename:Uint32	access:public
which	SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
which	SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
which	SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
width	SDL_test_images.h	/^  int width;$/;"	kind:m	struct:SDLTest_SurfaceImage_s	typeref:typename:int	access:public
win	SDL_syswm.h	/^        } win;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600a08	access:public
win	SDL_syswm.h	/^        } win;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600308	access:public
window	SDL_events.h	/^    SDL_WindowEvent window;         \/**< Window event data *\/$/;"	kind:m	union:SDL_Event	typeref:typename:SDL_WindowEvent	access:public
window	SDL_messagebox.h	/^    SDL_Window *window;                 \/**< Parent window, can be NULL *\/$/;"	kind:m	struct:__anon279331cb0708	typeref:typename:SDL_Window *	access:public
window	SDL_syswm.h	/^            ANativeWindow *window;$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601208	typeref:typename:ANativeWindow *	access:public
window	SDL_syswm.h	/^            EGLNativeWindowType window;$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601308	typeref:typename:EGLNativeWindowType	access:public
window	SDL_syswm.h	/^            HWND window;                \/**< The window handle *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600a08	typeref:typename:HWND	access:public
window	SDL_syswm.h	/^            IDirectFBWindow *window;    \/**< The directfb window handle *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600d08	typeref:typename:IDirectFBWindow *	access:public
window	SDL_syswm.h	/^            IInspectable * window;      \/**< The WinRT CoreWindow *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600b08	typeref:typename:IInspectable *	access:public
window	SDL_syswm.h	/^            NSWindow __unsafe_unretained *window; \/**< The Cocoa window *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600e08	typeref:typename:NSWindow __unsafe_unretained *	access:public
window	SDL_syswm.h	/^            UIWindow __unsafe_unretained *window; \/**< The UIKit window *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600f08	typeref:typename:UIWindow __unsafe_unretained *	access:public
window	SDL_syswm.h	/^            Window window;              \/**< The X11 window *\/$/;"	kind:m	struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600c08	typeref:typename:Window	access:public
windowID	SDL_events.h	/^    Uint32 windowID;                            \/**< The window with keyboard focus, if any *\/$/;"	kind:m	struct:SDL_TextEditingEvent	typeref:typename:Uint32	access:public
windowID	SDL_events.h	/^    Uint32 windowID;                          \/**< The window with keyboard focus, if any *\/$/;"	kind:m	struct:SDL_TextInputEvent	typeref:typename:Uint32	access:public
windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The associated window *\/$/;"	kind:m	struct:SDL_WindowEvent	typeref:typename:Uint32	access:public
windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The associated window if any *\/$/;"	kind:m	struct:SDL_UserEvent	typeref:typename:Uint32	access:public
windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The window that was dropped on, if any *\/$/;"	kind:m	struct:SDL_DropEvent	typeref:typename:Uint32	access:public
windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The window with keyboard focus, if any *\/$/;"	kind:m	struct:SDL_KeyboardEvent	typeref:typename:Uint32	access:public
windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Uint32	access:public
windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Uint32	access:public
windowID	SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Uint32	access:public
window_flags	SDL_test_common.h	/^    Uint32 window_flags;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:Uint32	access:public
window_h	SDL_test_common.h	/^    int window_h;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
window_icon	SDL_test_common.h	/^    const char *window_icon;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:const char *	access:public
window_maxH	SDL_test_common.h	/^    int window_maxH;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
window_maxW	SDL_test_common.h	/^    int window_maxW;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
window_minH	SDL_test_common.h	/^    int window_minH;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
window_minW	SDL_test_common.h	/^    int window_minW;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
window_title	SDL_test_common.h	/^    const char *window_title;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:const char *	access:public
window_w	SDL_test_common.h	/^    int window_w;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
window_x	SDL_test_common.h	/^    int window_x;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
window_y	SDL_test_common.h	/^    int window_y;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:int	access:public
windows	SDL_test_common.h	/^    SDL_Window **windows;$/;"	kind:m	struct:__anoncae410850108	typeref:typename:SDL_Window **	access:public
winrt	SDL_syswm.h	/^        } winrt;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600b08	access:public
wl	SDL_syswm.h	/^        } wl;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c601008	access:public
x	SDL_events.h	/^    Sint32 x;           \/**< The amount scrolled horizontally, positive to the right and negati/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Sint32	access:public
x	SDL_events.h	/^    Sint32 x;           \/**< X coordinate, relative to window *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Sint32	access:public
x	SDL_events.h	/^    Sint32 x;           \/**< X coordinate, relative to window *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
x	SDL_events.h	/^    float x;            \/**< Normalized center of gesture *\/$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:float	access:public
x	SDL_events.h	/^    float x;            \/**< Normalized in the range 0...1 *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
x	SDL_events.h	/^    float x;$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
x	SDL_rect.h	/^    int x, y;$/;"	kind:m	struct:SDL_Rect	typeref:typename:int	access:public
x	SDL_rect.h	/^    int x;$/;"	kind:m	struct:SDL_Point	typeref:typename:int	access:public
x	SDL_test_random.h	/^    unsigned int x;$/;"	kind:m	struct:__anon6ec27efd0108	typeref:typename:unsigned int	access:public
x	SDL_touch.h	/^    float x;$/;"	kind:m	struct:SDL_Finger	typeref:typename:float	access:public
x11	SDL_syswm.h	/^        } x11;$/;"	kind:m	union:SDL_SysWMinfo::__anon33b43c60090a	typeref:struct:SDL_SysWMinfo::__anon33b43c60090a::__anon33b43c600c08	access:public
x11	SDL_syswm.h	/^        } x11;$/;"	kind:m	union:SDL_SysWMmsg::__anon33b43c60020a	typeref:struct:SDL_SysWMmsg::__anon33b43c60020a::__anon33b43c600408	access:public
xrel	SDL_events.h	/^    Sint16 xrel;        \/**< The relative motion in the X direction *\/$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Sint16	access:public
xrel	SDL_events.h	/^    Sint32 xrel;        \/**< The relative motion in the X direction *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
y	SDL_events.h	/^    Sint32 y;           \/**< The amount scrolled vertically, positive away from the user and ne/;"	kind:m	struct:SDL_MouseWheelEvent	typeref:typename:Sint32	access:public
y	SDL_events.h	/^    Sint32 y;           \/**< Y coordinate, relative to window *\/$/;"	kind:m	struct:SDL_MouseButtonEvent	typeref:typename:Sint32	access:public
y	SDL_events.h	/^    Sint32 y;           \/**< Y coordinate, relative to window *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
y	SDL_events.h	/^    float y;            \/**< Normalized center of gesture *\/$/;"	kind:m	struct:SDL_DollarGestureEvent	typeref:typename:float	access:public
y	SDL_events.h	/^    float y;            \/**< Normalized in the range 0...1 *\/$/;"	kind:m	struct:SDL_TouchFingerEvent	typeref:typename:float	access:public
y	SDL_events.h	/^    float y;$/;"	kind:m	struct:SDL_MultiGestureEvent	typeref:typename:float	access:public
y	SDL_rect.h	/^    int x, y;$/;"	kind:m	struct:SDL_Rect	typeref:typename:int	access:public
y	SDL_rect.h	/^    int y;$/;"	kind:m	struct:SDL_Point	typeref:typename:int	access:public
y	SDL_touch.h	/^    float y;$/;"	kind:m	struct:SDL_Finger	typeref:typename:float	access:public
yrel	SDL_events.h	/^    Sint16 yrel;        \/**< The relative motion in the Y direction *\/$/;"	kind:m	struct:SDL_JoyBallEvent	typeref:typename:Sint16	access:public
yrel	SDL_events.h	/^    Sint32 yrel;        \/**< The relative motion in the Y direction *\/$/;"	kind:m	struct:SDL_MouseMotionEvent	typeref:typename:Sint32	access:public
